c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 3 (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1))) -- ((open 3))
c{0: 4 (((break-unless)) ((at-bottom? boolean))) -- ((open 3))
c{0: 5 (((screen-full? boolean)) <- ((greater-or-equal)) ((app-height integer) (space 1)) ((screen-height integer) (space 1))) -- ((open 5) (open 3))
c{0: 6 (((break-unless)) ((screen-full? boolean))) -- ((open 5) (open 3))
c{0: 7 (((cursor-to-next-line)) ((screen terminal-address))) -- ((open 5) (open 3))
c{0: 8 (((cursor-up)) ((screen terminal-address))) -- ((open 5) (open 3))
c{0: 9 (((reply))) -- ((open 5) (open 3))
c{0: 10 (((printed-height integer) (space 1)) <- ((add)) ((printed-height integer) (space 1)) ((1 literal))) -- ((close 10) (open 5) (open 3))
c{0: 11 (((grow-max? boolean)) <- ((greater-than)) ((printed-height integer) (space 1)) ((app-height integer) (space 1))) -- ((open 11) (close 10) (open 5) (open 3))
c{0: 12 (((break-unless)) ((grow-max? boolean))) -- ((open 11) (close 10) (open 5) (open 3))
c{0: 13 (((app-height integer) (space 1)) <- ((copy)) ((printed-height integer) (space 1))) -- ((open 11) (close 10) (open 5) (open 3))
c{0: 14 (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal))) -- ((close 14) (close 14) (open 11) (close 10) (open 5) (open 3))
c{0: 15 (((cursor-to-next-line)) ((screen terminal-address))) -- ((close 14) (close 14) (open 11) (close 10) (open 5) (open 3))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 3 ✓ (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1)))
c{1: 4 X (((break-unless)) ((at-bottom? boolean))) => (((jump-unless)) ((at-bottom? boolean)) ((9 offset)))
c{1: 5 ✓ (((screen-full? boolean)) <- ((greater-or-equal)) ((app-height integer) (space 1)) ((screen-height integer) (space 1)))
c{1: 6 X (((break-unless)) ((screen-full? boolean))) => (((jump-unless)) ((screen-full? boolean)) ((3 offset)))
c{1: 7 ✓ (((cursor-to-next-line)) ((screen terminal-address)))
c{1: 8 ✓ (((cursor-up)) ((screen terminal-address)))
c{1: 9 ✓ (((reply)))
c{1: 10 ✓ (((printed-height integer) (space 1)) <- ((add)) ((printed-height integer) (space 1)) ((1 literal)))
c{1: 11 ✓ (((grow-max? boolean)) <- ((greater-than)) ((printed-height integer) (space 1)) ((app-height integer) (space 1)))
c{1: 12 X (((break-unless)) ((grow-max? boolean))) => (((jump-unless)) ((grow-max? boolean)) ((1 offset)))
c{1: 13 ✓ (((app-height integer) (space 1)) <- ((copy)) ((printed-height integer) (space 1)))
c{1: 14 ✓ (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal)))
c{1: 15 ✓ (((cursor-to-next-line)) ((screen terminal-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 3 (((target-row integer)) <- ((next-input))) -- nil
c{0: 4 (((below-target? boolean)) <- ((greater-than)) ((cursor-row integer) (space 1)) ((target-row integer))) -- ((open 4))
c{0: 5 (((break-unless)) ((below-target? boolean))) -- ((open 4))
c{0: 6 (((up)) ((0 space-address)) ((screen terminal-address))) -- ((open 4))
c{0: 7 (((loop))) -- ((open 4))
c{0: 8 (((above-target? boolean)) <- ((less-than)) ((cursor-row integer) (space 1)) ((target-row integer))) -- ((open 8) (close 8) (open 4))
c{0: 9 (((break-unless)) ((above-target? boolean))) -- ((open 8) (close 8) (open 4))
c{0: 10 (((down)) ((0 space-address)) ((screen terminal-address))) -- ((open 8) (close 8) (open 4))
c{0: 11 (((loop))) -- ((open 8) (close 8) (open 4))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 3 ✓ (((target-row integer)) <- ((next-input)))
c{1: 4 ✓ (((below-target? boolean)) <- ((greater-than)) ((cursor-row integer) (space 1)) ((target-row integer)))
c{1: 5 X (((break-unless)) ((below-target? boolean))) => (((jump-unless)) ((below-target? boolean)) ((2 offset)))
c{1: 6 ✓ (((up)) ((0 space-address)) ((screen terminal-address)))
c{1: 7 X (((loop))) => (((jump)) ((-4 offset)))
c{1: 8 ✓ (((above-target? boolean)) <- ((less-than)) ((cursor-row integer) (space 1)) ((target-row integer)))
c{1: 9 X (((break-unless)) ((above-target? boolean))) => (((jump-unless)) ((above-target? boolean)) ((2 offset)))
c{1: 10 ✓ (((down)) ((0 space-address)) ((screen terminal-address)))
c{1: 11 X (((loop))) => (((jump)) ((-4 offset)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((x string-address)) <- ((next-input))) -- nil
c{0: 2 (((screen-height integer)) <- ((next-input))) -- nil
c{0: 3 (((s stream-address)) <- ((init-stream)) ((x string-address))) -- nil
c{0: 4 (((traces instruction-trace-address-array-address)) <- ((parse-traces)) ((s stream-address))) -- nil
c{0: 5 (((0 space-address) (names screen-state)) <- ((screen-state)) ((traces instruction-trace-address-array-address)) ((screen-height integer))) -- nil
c{0: 6 (((cursor-mode))) -- nil
c{0: 7 (((print-traces-collapsed)) ((0 space-address) (screen-state)) ((nil literal) (terminal))) -- nil
c{0: 8 (((quit? boolean)) <- ((process-key)) ((0 space-address) (screen-state)) ((nil literal) (keyboard)) ((nil literal) (terminal))) -- ((open 8))
c{0: 9 (((break-if)) ((quit? boolean))) -- ((open 8))
c{0: 10 (((loop))) -- ((open 8))
c{0: 11 (((to-bottom)) ((0 space-address) (screen-state)) ((nil literal) (terminal))) -- ((close 11) (open 8))
c{0: 12 (((retro-mode))) -- ((close 11) (open 8))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((x string-address)) <- ((next-input)))
c{1: 2 ✓ (((screen-height integer)) <- ((next-input)))
c{1: 3 ✓ (((s stream-address)) <- ((init-stream)) ((x string-address)))
c{1: 4 ✓ (((traces instruction-trace-address-array-address)) <- ((parse-traces)) ((s stream-address)))
c{1: 5 ✓ (((0 space-address) (names screen-state)) <- ((screen-state)) ((traces instruction-trace-address-array-address)) ((screen-height integer)))
c{1: 6 ✓ (((cursor-mode)))
c{1: 7 ✓ (((print-traces-collapsed)) ((0 space-address) (screen-state)) ((nil literal) (terminal)))
c{1: 8 ✓ (((quit? boolean)) <- ((process-key)) ((0 space-address) (screen-state)) ((nil literal) (keyboard)) ((nil literal) (terminal)))
c{1: 9 X (((break-if)) ((quit? boolean))) => (((jump-if)) ((quit? boolean)) ((1 offset)))
c{1: 10 X (((loop))) => (((jump)) ((-3 offset)))
c{1: 11 ✓ (((to-bottom)) ((0 space-address) (screen-state)) ((nil literal) (terminal)))
c{1: 12 ✓ (((retro-mode)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((n integer) (screen)) <- ((next-input))) -- nil
c{0: 3 (((has-expanded? boolean)) <- ((greater-or-equal)) ((expanded-index integer) (space 1)) ((0 literal))) -- ((open 3))
c{0: 4 (((break-if)) ((has-expanded? boolean))) -- ((open 3))
c{0: 5 (((reply)) ((n integer) (index))) -- ((open 3))
c{0: 6 (((above-expanded? boolean)) <- ((lesser-or-equal)) ((cursor-row integer) (space 1) (screen)) ((expanded-index integer) (space 1))) -- ((open 6) (close 6) (open 3))
c{0: 7 (((break-unless)) ((above-expanded? boolean))) -- ((open 6) (close 6) (open 3))
c{0: 8 (((reply)) ((n integer) (index))) -- ((open 6) (close 6) (open 3))
c{0: 9 (((k integer) (index)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1))) -- ((close 9) (open 6) (close 6) (open 3))
c{0: 10 (((result integer) (index)) <- ((subtract)) ((n integer) (screen)) ((k integer) (index))) -- ((close 9) (open 6) (close 6) (open 3))
c{0: 11 (((reply)) ((result integer) (index))) -- ((close 9) (open 6) (close 6) (open 3))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((n integer) (screen)) <- ((next-input)))
c{1: 3 ✓ (((has-expanded? boolean)) <- ((greater-or-equal)) ((expanded-index integer) (space 1)) ((0 literal)))
c{1: 4 X (((break-if)) ((has-expanded? boolean))) => (((jump-if)) ((has-expanded? boolean)) ((1 offset)))
c{1: 5 ✓ (((reply)) ((n integer) (index)))
c{1: 6 ✓ (((above-expanded? boolean)) <- ((lesser-or-equal)) ((cursor-row integer) (space 1) (screen)) ((expanded-index integer) (space 1)))
c{1: 7 X (((break-unless)) ((above-expanded? boolean))) => (((jump-unless)) ((above-expanded? boolean)) ((1 offset)))
c{1: 8 ✓ (((reply)) ((n integer) (index)))
c{1: 9 ✓ (((k integer) (index)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1)))
c{1: 10 ✓ (((result integer) (index)) <- ((subtract)) ((n integer) (screen)) ((k integer) (index)))
c{1: 11 ✓ (((reply)) ((result integer) (index)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 3 (((no-expanded? boolean)) <- ((less-than)) ((expanded-index integer) (space 1)) ((0 literal))) -- ((open 3))
c{0: 4 (((break-if)) ((no-expanded? boolean))) -- ((open 3))
c{0: 5 (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1))) -- ((open 3))
c{0: 6 (((break-unless)) ((at-expanded? boolean))) -- ((open 3))
c{0: 7 (((n integer)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1))) -- ((open 3))
c{0: 8 (((n integer)) <- ((add)) ((n integer)) ((1 literal))) -- ((open 3))
c{0: 9 (((i integer)) <- ((copy)) ((0 literal))) -- ((open 3))
c{0: 10 (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((n integer))) -- ((open 10) (open 3))
c{0: 11 (((break-if)) ((done? boolean))) -- ((open 10) (open 3))
c{0: 12 (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal))) -- ((open 10) (open 3))
c{0: 13 (((cursor-down)) ((screen terminal-address))) -- ((open 10) (open 3))
c{0: 14 (((i integer)) <- ((add)) ((i integer)) ((1 literal))) -- ((open 10) (open 3))
c{0: 15 (((loop))) -- ((open 10) (open 3))
c{0: 16 (((reply))) -- ((close 16) (open 10) (open 3))
c{0: 17 (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1))) -- ((open 17) (close 17) (close 16) (open 10) (open 3))
c{0: 18 (((break-if)) ((at-bottom? boolean))) -- ((open 17) (close 17) (close 16) (open 10) (open 3))
c{0: 19 (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal))) -- ((open 17) (close 17) (close 16) (open 10) (open 3))
c{0: 20 (((cursor-down)) ((screen terminal-address))) -- ((open 17) (close 17) (close 16) (open 10) (open 3))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 3 ✓ (((no-expanded? boolean)) <- ((less-than)) ((expanded-index integer) (space 1)) ((0 literal)))
c{1: 4 X (((break-if)) ((no-expanded? boolean))) => (((jump-if)) ((no-expanded? boolean)) ((12 offset)))
c{1: 5 ✓ (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1)))
c{1: 6 X (((break-unless)) ((at-expanded? boolean))) => (((jump-unless)) ((at-expanded? boolean)) ((10 offset)))
c{1: 7 ✓ (((n integer)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1)))
c{1: 8 ✓ (((n integer)) <- ((add)) ((n integer)) ((1 literal)))
c{1: 9 ✓ (((i integer)) <- ((copy)) ((0 literal)))
c{1: 10 ✓ (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((n integer)))
c{1: 11 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((4 offset)))
c{1: 12 ✓ (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal)))
c{1: 13 ✓ (((cursor-down)) ((screen terminal-address)))
c{1: 14 ✓ (((i integer)) <- ((add)) ((i integer)) ((1 literal)))
c{1: 15 X (((loop))) => (((jump)) ((-6 offset)))
c{1: 16 ✓ (((reply)))
c{1: 17 ✓ (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1)))
c{1: 18 X (((break-if)) ((at-bottom? boolean))) => (((jump-if)) ((at-bottom? boolean)) ((2 offset)))
c{1: 19 ✓ (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal)))
c{1: 20 ✓ (((cursor-down)) ((screen terminal-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((traces instruction-trace-address-array-address)) <- ((next-input))) -- nil
c{0: 2 (((index integer)) <- ((next-input))) -- nil
c{0: 3 (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (deref)) ((index integer))) -- nil
c{0: 4 (((tr-children trace-address-array-address)) <- ((get)) ((tr instruction-trace-address) (deref)) ((children offset))) -- nil
c{0: 5 (((n integer)) <- ((length)) ((tr-children instruction-trace-address-array-address) (deref))) -- nil
c{0: 6 (((reply)) ((n integer))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((traces instruction-trace-address-array-address)) <- ((next-input)))
c{1: 2 ✓ (((index integer)) <- ((next-input)))
c{1: 3 ✓ (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (deref)) ((index integer)))
c{1: 4 ✓ (((tr-children trace-address-array-address)) <- ((get)) ((tr instruction-trace-address) (deref)) ((children offset)))
c{1: 5 ✓ (((n integer)) <- ((length)) ((tr-children instruction-trace-address-array-address) (deref)))
c{1: 6 ✓ (((reply)) ((n integer)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((x string-address)) <- ((new)) schedule: main
run: main 0: (((1 integer)) <- ((copy)) ((1 literal)))
run: main 0: 1 => ((1 integer))
mem: ((1 integer)): 1 <= 1
run: main 1: (((2 integer)) <- ((copy)) ((3 literal)))
run: main 1: 3 => ((2 integer))
mem: ((2 integer)): 2 <= 3) -- nil
c{0: 2 (((n integer)) <- ((length)) ((x string-address) (deref))) -- nil
c{0: 3 ((($print)) ((p3  literal))) -- nil
c{0: 4 ((($print)) ((n integer))) -- nil
c{0: 5 ((($print)) ((
 literal))) -- nil
c{0: 6 (((s stream-address)) <- ((init-stream)) ((x string-address))) -- nil
c{0: 7 (((traces instruction-trace-address-array-address)) <- ((parse-traces)) ((s stream-address))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((x string-address)) <- ((new)) schedule: main
run: main 0: (((1 integer)) <- ((copy)) ((1 literal)))
run: main 0: 1 => ((1 integer))
mem: ((1 integer)): 1 <= 1
run: main 1: (((2 integer)) <- ((copy)) ((3 literal)))
run: main 1: 3 => ((2 integer))
mem: ((2 integer)): 2 <= 3)
c{1: 2 ✓ (((n integer)) <- ((length)) ((x string-address) (deref)))
c{1: 3 ✓ ((($print)) ((p3  literal)))
c{1: 4 ✓ ((($print)) ((n integer)))
c{1: 5 ✓ ((($print)) ((
 literal)))
c{1: 6 ✓ (((s stream-address)) <- ((init-stream)) ((x string-address)))
c{1: 7 ✓ (((traces instruction-trace-address-array-address)) <- ((parse-traces)) ((s stream-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((in trace-address)) <- ((next-input))) -- nil
c{0: 2 (((buf string-address)) <- ((get)) ((in trace-address) (deref)) ((contents offset))) -- nil
c{0: 3 (((result instruction-trace-address)) <- ((new)) ((instruction-trace literal))) -- nil
c{0: 4 (((f1 string-address)) ((rest string-address)) <- ((split-first)) ((buf string-address)) ((  literal))) -- nil
c{0: 5 (((cs string-address-array-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((call-stack offset))) -- nil
c{0: 6 (((cs string-address-array-address-address) (deref)) <- ((split)) ((f1 string-address)) ((/ literal))) -- nil
c{0: 7 (((p string-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((pc offset))) -- nil
c{0: 8 (((delim string-address)) <- ((new)) : ) -- nil
c{0: 9 (((p string-address-address) (deref)) ((rest string-address)) <- ((split-first-at-substring)) ((rest string-address)) ((delim string-address))) -- nil
c{0: 10 (((inst string-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((instruction offset))) -- nil
c{0: 11 (((inst string-address-address) (deref)) <- ((copy)) ((rest string-address))) -- nil
c{0: 12 (((reply)) ((result instruction-trace-address))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((in trace-address)) <- ((next-input)))
c{1: 2 ✓ (((buf string-address)) <- ((get)) ((in trace-address) (deref)) ((contents offset)))
c{1: 3 ✓ (((result instruction-trace-address)) <- ((new)) ((instruction-trace literal)))
c{1: 4 ✓ (((f1 string-address)) ((rest string-address)) <- ((split-first)) ((buf string-address)) ((  literal)))
c{1: 5 ✓ (((cs string-address-array-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((call-stack offset)))
c{1: 6 ✓ (((cs string-address-array-address-address) (deref)) <- ((split)) ((f1 string-address)) ((/ literal)))
c{1: 7 ✓ (((p string-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((pc offset)))
c{1: 8 ✓ (((delim string-address)) <- ((new)) : )
c{1: 9 ✓ (((p string-address-address) (deref)) ((rest string-address)) <- ((split-first-at-substring)) ((rest string-address)) ((delim string-address)))
c{1: 10 ✓ (((inst string-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((instruction offset)))
c{1: 11 ✓ (((inst string-address-address) (deref)) <- ((copy)) ((rest string-address)))
c{1: 12 ✓ (((reply)) ((result instruction-trace-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((in string-address)) <- ((next-input))) -- nil
c{0: 2 (((result trace-address)) <- ((new)) ((trace literal))) -- nil
c{0: 3 (((delim string-address)) <- ((new)) : ) -- nil
c{0: 4 (((first string-address)) ((rest string-address)) <- ((split-first-at-substring)) ((in string-address)) ((delim string-address))) -- nil
c{0: 5 (((l string-address-address)) <- ((get-address)) ((result trace-address) (deref)) ((label offset))) -- nil
c{0: 6 (((l string-address-address) (deref)) <- ((copy)) ((first string-address))) -- nil
c{0: 7 (((c string-address-address)) <- ((get-address)) ((result trace-address) (deref)) ((contents offset))) -- nil
c{0: 8 (((c string-address-address) (deref)) <- ((copy)) ((rest string-address))) -- nil
c{0: 9 (((reply)) ((result trace-address))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((in string-address)) <- ((next-input)))
c{1: 2 ✓ (((result trace-address)) <- ((new)) ((trace literal)))
c{1: 3 ✓ (((delim string-address)) <- ((new)) : )
c{1: 4 ✓ (((first string-address)) ((rest string-address)) <- ((split-first-at-substring)) ((in string-address)) ((delim string-address)))
c{1: 5 ✓ (((l string-address-address)) <- ((get-address)) ((result trace-address) (deref)) ((label offset)))
c{1: 6 ✓ (((l string-address-address) (deref)) <- ((copy)) ((first string-address)))
c{1: 7 ✓ (((c string-address-address)) <- ((get-address)) ((result trace-address) (deref)) ((contents offset)))
c{1: 8 ✓ (((c string-address-address) (deref)) <- ((copy)) ((rest string-address)))
c{1: 9 ✓ (((reply)) ((result trace-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((in stream-address)) <- ((next-input))) -- nil
c{0: 2 (((result buffer-address)) <- ((init-buffer)) ((30 literal))) -- nil
c{0: 3 (((curr-tail instruction-trace-address)) <- ((copy)) ((nil literal))) -- nil
c{0: 4 (((ch buffer-address)) <- ((init-buffer)) ((5 literal))) -- nil
c{0: 5 (((run string-address) (const)) <- ((new)) run) -- nil
c{0: 6 next-line -- ((open 6))
c{0: 7 (((done? boolean)) <- ((end-of-stream?)) ((in stream-address))) -- ((open 6))
c{0: 8 (((break-if)) ((done? boolean))) -- ((open 6))
c{0: 9 (((line string-address)) <- ((read-line)) ((in stream-address))) -- ((open 6))
c{0: 10 (((f trace-address)) <- ((parse-trace)) ((line string-address))) -- ((open 6))
c{0: 11 (((l string-address)) <- ((get)) ((f trace-address) (deref)) ((label offset))) -- ((open 6))
c{0: 12 (((inst? boolean)) <- ((string-equal)) ((l string-address)) ((run string-address) (const))) -- ((open 12) (open 6))
c{0: 13 (((break-unless)) ((inst? boolean))) -- ((open 12) (open 6))
c{0: 14 (((break-unless)) ((curr-tail instruction-trace-address))) -- ((open 14) (open 12) (open 6))
c{0: 15 (((c trace-address-array-address-address)) <- ((get-address)) ((curr-tail instruction-trace-address) (deref)) ((children offset))) -- ((open 14) (open 12) (open 6))
c{0: 16 (((c trace-address-array-address-address) (deref)) <- ((to-array)) ((ch buffer-address))) -- ((open 14) (open 12) (open 6))
c{0: 17 (((ch buffer-address)) <- ((init-buffer)) ((5 literal))) -- ((open 14) (open 12) (open 6))
c{0: 18 (((curr-tail instruction-trace-address)) <- ((parse-instruction-trace)) ((f trace-address))) -- ((close 18) (open 14) (open 12) (open 6))
c{0: 19 (((result buffer-address)) <- ((append)) ((result buffer-address)) ((curr-tail instruction-trace-address))) -- ((close 18) (open 14) (open 12) (open 6))
c{0: 20 (((jump)) ((next-line offset))) -- ((close 18) (open 14) (open 12) (open 6))
c{0: 21 (((loop-unless)) ((curr-tail instruction-trace-address))) -- ((close 21) (close 18) (open 14) (open 12) (open 6))
c{0: 22 (((ch buffer-address)) <- ((append)) ((ch buffer-address)) ((f trace-address))) -- ((close 21) (close 18) (open 14) (open 12) (open 6))
c{0: 23 (((loop))) -- ((close 21) (close 18) (open 14) (open 12) (open 6))
c{0: 24 (((break-unless)) ((curr-tail instruction-trace-address))) -- ((open 24) (close 24) (close 21) (close 18) (open 14) (open 12) (open 6))
c{0: 25 (((c trace-address-array-address-address)) <- ((get-address)) ((curr-tail instruction-trace-address) (deref)) ((children offset))) -- ((open 24) (close 24) (close 21) (close 18) (open 14) (open 12) (open 6))
c{0: 26 (((c trace-address-array-address-address) (deref)) <- ((to-array)) ((ch buffer-address))) -- ((open 24) (close 24) (close 21) (close 18) (open 14) (open 12) (open 6))
c{0: 27 (((s instruction-trace-address-array-address)) <- ((to-array)) ((result buffer-address))) -- ((close 27) (open 24) (close 24) (close 21) (close 18) (open 14) (open 12) (open 6))
c{0: 28 (((reply)) ((s instruction-trace-address-array-address))) -- ((close 27) (open 24) (close 24) (close 21) (close 18) (open 14) (open 12) (open 6))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((in stream-address)) <- ((next-input)))
c{1: 2 ✓ (((result buffer-address)) <- ((init-buffer)) ((30 literal)))
c{1: 3 ✓ (((curr-tail instruction-trace-address)) <- ((copy)) ((nil literal)))
c{1: 4 ✓ (((ch buffer-address)) <- ((init-buffer)) ((5 literal)))
c{1: 5 ✓ (((run string-address) (const)) <- ((new)) run)
c{1: 7 ✓ (((done? boolean)) <- ((end-of-stream?)) ((in stream-address)))
c{1: 8 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((15 offset)))
c{1: 9 ✓ (((line string-address)) <- ((read-line)) ((in stream-address)))
c{1: 10 ✓ (((f trace-address)) <- ((parse-trace)) ((line string-address)))
c{1: 11 ✓ (((l string-address)) <- ((get)) ((f trace-address) (deref)) ((label offset)))
c{1: 12 ✓ (((inst? boolean)) <- ((string-equal)) ((l string-address)) ((run string-address) (const)))
c{1: 13 X (((break-unless)) ((inst? boolean))) => (((jump-unless)) ((inst? boolean)) ((7 offset)))
c{1: 14 X (((break-unless)) ((curr-tail instruction-trace-address))) => (((jump-unless)) ((curr-tail instruction-trace-address)) ((3 offset)))
c{1: 15 ✓ (((c trace-address-array-address-address)) <- ((get-address)) ((curr-tail instruction-trace-address) (deref)) ((children offset)))
c{1: 16 ✓ (((c trace-address-array-address-address) (deref)) <- ((to-array)) ((ch buffer-address)))
c{1: 17 ✓ (((ch buffer-address)) <- ((init-buffer)) ((5 literal)))
c{1: 18 ✓ (((curr-tail instruction-trace-address)) <- ((parse-instruction-trace)) ((f trace-address)))
c{1: 19 ✓ (((result buffer-address)) <- ((append)) ((result buffer-address)) ((curr-tail instruction-trace-address)))
c{1: 20 ✓ (((jump)) ((next-line offset)))
c{1: 21 X (((loop-unless)) ((curr-tail instruction-trace-address))) => (((jump-unless)) ((curr-tail instruction-trace-address)) ((-16 offset)))
c{1: 22 ✓ (((ch buffer-address)) <- ((append)) ((ch buffer-address)) ((f trace-address)))
c{1: 23 X (((loop))) => (((jump)) ((-18 offset)))
c{1: 24 X (((break-unless)) ((curr-tail instruction-trace-address))) => (((jump-unless)) ((curr-tail instruction-trace-address)) ((2 offset)))
c{1: 25 ✓ (((c trace-address-array-address-address)) <- ((get-address)) ((curr-tail instruction-trace-address) (deref)) ((children offset)))
c{1: 26 ✓ (((c trace-address-array-address-address) (deref)) <- ((to-array)) ((ch buffer-address)))
c{1: 27 ✓ (((s instruction-trace-address-array-address)) <- ((to-array)) ((result buffer-address)))
c{1: 28 ✓ (((reply)) ((s instruction-trace-address-array-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 2 (((x instruction-trace-address)) <- ((next-input))) -- nil
c{0: 3 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 4 (((clear-line)) ((screen terminal-address))) -- nil
c{0: 5 (((print-character)) ((screen terminal-address)) ((- literal))) -- nil
c{0: 6 (((print-character)) ((screen terminal-address)) ((  literal))) -- nil
c{0: 7 (((c string-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((call-stack offset))) -- nil
c{0: 8 (((i integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 9 (((len integer)) <- ((length)) ((c string-address-array-address) (deref))) -- nil
c{0: 10 (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer))) -- ((open 10))
c{0: 11 (((break-if)) ((done? boolean))) -- ((open 10))
c{0: 12 (((s string-address)) <- ((index)) ((c string-address-array-address) (deref)) ((i integer))) -- ((open 10))
c{0: 13 (((print-string)) ((screen terminal-address)) ((s string-address))) -- ((open 10))
c{0: 14 (((print-character)) ((screen terminal-address)) ((/ literal))) -- ((open 10))
c{0: 15 (((i integer)) <- ((add)) ((i integer)) ((1 literal))) -- ((open 10))
c{0: 16 (((loop))) -- ((open 10))
c{0: 17 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((close 17) (open 10))
c{0: 18 (((p string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((pc offset))) -- ((close 17) (open 10))
c{0: 19 (((print-string)) ((screen terminal-address)) ((p string-address))) -- ((close 17) (open 10))
c{0: 20 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((close 17) (open 10))
c{0: 21 (((print-character)) ((screen terminal-address)) ((: literal))) -- ((close 17) (open 10))
c{0: 22 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((close 17) (open 10))
c{0: 23 (((i string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((instruction offset))) -- ((close 17) (open 10))
c{0: 24 (((print-string)) ((screen terminal-address)) ((i string-address))) -- ((close 17) (open 10))
c{0: 25 (((add-line)) ((0 space-address) (screen-state)) ((screen terminal-address))) -- ((close 17) (open 10))
c{0: 26 (((ch trace-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((children offset))) -- ((close 17) (open 10))
c{0: 27 (((i integer)) <- ((copy)) ((0 literal))) -- ((close 17) (open 10))
c{0: 28 (((break-if)) ((ch trace-address-array-address))) -- ((open 28) (close 17) (open 10))
c{0: 29 (((reply))) -- ((open 28) (close 17) (open 10))
c{0: 30 (((len integer)) <- ((length)) ((ch trace-address-array-address) (deref))) -- ((close 30) (open 28) (close 17) (open 10))
c{0: 31 (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 32 (((break-if)) ((done? boolean))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 33 (((screen-done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((screen-height integer) (space 1))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 34 (((break-if)) ((screen-done? boolean))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 35 (((t trace-address)) <- ((index)) ((ch trace-address-array-address) (deref)) ((i integer))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 36 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 37 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 38 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 39 (((print-trace)) ((screen terminal-address)) ((t trace-address))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 40 (((add-line)) ((0 space-address) (screen-state)) ((screen terminal-address))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 41 (((i integer)) <- ((add)) ((i integer)) ((1 literal))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 42 (((loop))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 2 ✓ (((x instruction-trace-address)) <- ((next-input)))
c{1: 3 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 4 ✓ (((clear-line)) ((screen terminal-address)))
c{1: 5 ✓ (((print-character)) ((screen terminal-address)) ((- literal)))
c{1: 6 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 7 ✓ (((c string-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((call-stack offset)))
c{1: 8 ✓ (((i integer)) <- ((copy)) ((0 literal)))
c{1: 9 ✓ (((len integer)) <- ((length)) ((c string-address-array-address) (deref)))
c{1: 10 ✓ (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer)))
c{1: 11 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((5 offset)))
c{1: 12 ✓ (((s string-address)) <- ((index)) ((c string-address-array-address) (deref)) ((i integer)))
c{1: 13 ✓ (((print-string)) ((screen terminal-address)) ((s string-address)))
c{1: 14 ✓ (((print-character)) ((screen terminal-address)) ((/ literal)))
c{1: 15 ✓ (((i integer)) <- ((add)) ((i integer)) ((1 literal)))
c{1: 16 X (((loop))) => (((jump)) ((-7 offset)))
c{1: 17 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 18 ✓ (((p string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((pc offset)))
c{1: 19 ✓ (((print-string)) ((screen terminal-address)) ((p string-address)))
c{1: 20 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 21 ✓ (((print-character)) ((screen terminal-address)) ((: literal)))
c{1: 22 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 23 ✓ (((i string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((instruction offset)))
c{1: 24 ✓ (((print-string)) ((screen terminal-address)) ((i string-address)))
c{1: 25 ✓ (((add-line)) ((0 space-address) (screen-state)) ((screen terminal-address)))
c{1: 26 ✓ (((ch trace-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((children offset)))
c{1: 27 ✓ (((i integer)) <- ((copy)) ((0 literal)))
c{1: 28 X (((break-if)) ((ch trace-address-array-address))) => (((jump-if)) ((ch trace-address-array-address)) ((1 offset)))
c{1: 29 ✓ (((reply)))
c{1: 30 ✓ (((len integer)) <- ((length)) ((ch trace-address-array-address) (deref)))
c{1: 31 ✓ (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer)))
c{1: 32 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((10 offset)))
c{1: 33 ✓ (((screen-done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((screen-height integer) (space 1)))
c{1: 34 X (((break-if)) ((screen-done? boolean))) => (((jump-if)) ((screen-done? boolean)) ((8 offset)))
c{1: 35 ✓ (((t trace-address)) <- ((index)) ((ch trace-address-array-address) (deref)) ((i integer)))
c{1: 36 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 37 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 38 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 39 ✓ (((print-trace)) ((screen terminal-address)) ((t trace-address)))
c{1: 40 ✓ (((add-line)) ((0 space-address) (screen-state)) ((screen terminal-address)))
c{1: 41 ✓ (((i integer)) <- ((add)) ((i integer)) ((1 literal)))
c{1: 42 X (((loop))) => (((jump)) ((-12 offset)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((screen terminal)) <- ((next-input))) -- nil
c{0: 2 (((x instruction-trace-address)) <- ((next-input))) -- nil
c{0: 3 (((screen-state space-address)) <- ((next-input))) -- nil
c{0: 4 (((clear-line)) ((screen terminal-address))) -- nil
c{0: 5 (((print-character)) ((screen terminal-address)) ((+ literal))) -- nil
c{0: 6 (((print-character)) ((screen terminal-address)) ((  literal))) -- nil
c{0: 7 (((c string-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((call-stack offset))) -- nil
c{0: 8 (((i integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 9 (((len integer)) <- ((length)) ((c string-address-array-address) (deref))) -- nil
c{0: 10 (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer))) -- ((open 10))
c{0: 11 (((break-if)) ((done? boolean))) -- ((open 10))
c{0: 12 (((s string-address)) <- ((index)) ((c string-address-array-address) (deref)) ((i integer))) -- ((open 10))
c{0: 13 (((print-string)) ((screen terminal-address)) ((s string-address))) -- ((open 10))
c{0: 14 (((print-character)) ((screen terminal-address)) ((/ literal))) -- ((open 10))
c{0: 15 (((i integer)) <- ((add)) ((i integer)) ((1 literal))) -- ((open 10))
c{0: 16 (((loop))) -- ((open 10))
c{0: 17 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((close 17) (open 10))
c{0: 18 (((p string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((pc offset))) -- ((close 17) (open 10))
c{0: 19 (((print-string)) ((screen terminal-address)) ((p string-address))) -- ((close 17) (open 10))
c{0: 20 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((close 17) (open 10))
c{0: 21 (((print-character)) ((screen terminal-address)) ((: literal))) -- ((close 17) (open 10))
c{0: 22 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((close 17) (open 10))
c{0: 23 (((i string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((instruction offset))) -- ((close 17) (open 10))
c{0: 24 (((print-string)) ((screen terminal-address)) ((i string-address))) -- ((close 17) (open 10))
c{0: 25 (((add-line)) ((screen-state space-address)) ((screen terminal-address))) -- ((close 17) (open 10))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((screen terminal)) <- ((next-input)))
c{1: 2 ✓ (((x instruction-trace-address)) <- ((next-input)))
c{1: 3 ✓ (((screen-state space-address)) <- ((next-input)))
c{1: 4 ✓ (((clear-line)) ((screen terminal-address)))
c{1: 5 ✓ (((print-character)) ((screen terminal-address)) ((+ literal)))
c{1: 6 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 7 ✓ (((c string-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((call-stack offset)))
c{1: 8 ✓ (((i integer)) <- ((copy)) ((0 literal)))
c{1: 9 ✓ (((len integer)) <- ((length)) ((c string-address-array-address) (deref)))
c{1: 10 ✓ (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer)))
c{1: 11 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((5 offset)))
c{1: 12 ✓ (((s string-address)) <- ((index)) ((c string-address-array-address) (deref)) ((i integer)))
c{1: 13 ✓ (((print-string)) ((screen terminal-address)) ((s string-address)))
c{1: 14 ✓ (((print-character)) ((screen terminal-address)) ((/ literal)))
c{1: 15 ✓ (((i integer)) <- ((add)) ((i integer)) ((1 literal)))
c{1: 16 X (((loop))) => (((jump)) ((-7 offset)))
c{1: 17 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 18 ✓ (((p string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((pc offset)))
c{1: 19 ✓ (((print-string)) ((screen terminal-address)) ((p string-address)))
c{1: 20 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 21 ✓ (((print-character)) ((screen terminal-address)) ((: literal)))
c{1: 22 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 23 ✓ (((i string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((instruction offset)))
c{1: 24 ✓ (((print-string)) ((screen terminal-address)) ((i string-address)))
c{1: 25 ✓ (((add-line)) ((screen-state space-address)) ((screen terminal-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 2 (((x trace-address)) <- ((next-input))) -- nil
c{0: 3 (((l string-address)) <- ((get)) ((x trace-address) (deref)) ((label offset))) -- nil
c{0: 4 (((clear-line)) ((screen terminal-address))) -- nil
c{0: 5 (((print-string)) ((screen terminal-address)) ((l string-address))) -- nil
c{0: 6 (((print-character)) ((screen terminal-address)) ((  literal))) -- nil
c{0: 7 (((print-character)) ((screen terminal-address)) ((: literal))) -- nil
c{0: 8 (((print-character)) ((screen terminal-address)) ((  literal))) -- nil
c{0: 9 (((c string-address)) <- ((get)) ((x trace-address) (deref)) ((contents offset))) -- nil
c{0: 10 (((print-string)) ((screen terminal-address)) ((c string-address))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 2 ✓ (((x trace-address)) <- ((next-input)))
c{1: 3 ✓ (((l string-address)) <- ((get)) ((x trace-address) (deref)) ((label offset)))
c{1: 4 ✓ (((clear-line)) ((screen terminal-address)))
c{1: 5 ✓ (((print-string)) ((screen terminal-address)) ((l string-address)))
c{1: 6 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 7 ✓ (((print-character)) ((screen terminal-address)) ((: literal)))
c{1: 8 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 9 ✓ (((c string-address)) <- ((get)) ((x trace-address) (deref)) ((contents offset)))
c{1: 10 ✓ (((print-string)) ((screen terminal-address)) ((c string-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 3 (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((0 literal) (from))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 3 ✓ (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((0 literal) (from)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 3 (((trace-index integer)) <- ((next-input))) -- nil
c{0: 4 (((len integer)) <- ((length)) ((traces instruction-trace-address-array-address) (space 1) (deref))) -- nil
c{0: 5 (((height integer)) <- ((min)) ((len integer)) ((screen-height integer) (space 1))) -- nil
c{0: 6 (((trace-done? boolean)) <- ((greater-or-equal)) ((trace-index integer)) ((len integer))) -- ((open 6))
c{0: 7 (((break-if)) ((trace-done? boolean))) -- ((open 6))
c{0: 8 (((screen-done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((screen-height integer) (space 1))) -- ((open 6))
c{0: 9 (((break-if)) ((screen-done? boolean))) -- ((open 6))
c{0: 10 (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((trace-index integer))) -- ((open 6))
c{0: 11 (((print-instruction-trace-collapsed)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state))) -- ((open 6))
c{0: 12 (((trace-index integer)) <- ((add)) ((trace-index integer)) ((1 literal))) -- ((open 6))
c{0: 13 (((loop))) -- ((open 6))
c{0: 14 (((done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((app-height integer) (space 1))) -- ((open 14) (close 14) (open 6))
c{0: 15 (((break-if)) ((done? boolean))) -- ((open 14) (close 14) (open 6))
c{0: 16 (((clear-line)) ((screen terminal-address))) -- ((open 14) (close 14) (open 6))
c{0: 17 (((down)) ((0 space-address) (screen-state)) ((screen terminal-address))) -- ((open 14) (close 14) (open 6))
c{0: 18 (((loop))) -- ((open 14) (close 14) (open 6))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 3 ✓ (((trace-index integer)) <- ((next-input)))
c{1: 4 ✓ (((len integer)) <- ((length)) ((traces instruction-trace-address-array-address) (space 1) (deref)))
c{1: 5 ✓ (((height integer)) <- ((min)) ((len integer)) ((screen-height integer) (space 1)))
c{1: 6 ✓ (((trace-done? boolean)) <- ((greater-or-equal)) ((trace-index integer)) ((len integer)))
c{1: 7 X (((break-if)) ((trace-done? boolean))) => (((jump-if)) ((trace-done? boolean)) ((6 offset)))
c{1: 8 ✓ (((screen-done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((screen-height integer) (space 1)))
c{1: 9 X (((break-if)) ((screen-done? boolean))) => (((jump-if)) ((screen-done? boolean)) ((4 offset)))
c{1: 10 ✓ (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((trace-index integer)))
c{1: 11 ✓ (((print-instruction-trace-collapsed)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state)))
c{1: 12 ✓ (((trace-index integer)) <- ((add)) ((trace-index integer)) ((1 literal)))
c{1: 13 X (((loop))) => (((jump)) ((-8 offset)))
c{1: 14 ✓ (((done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((app-height integer) (space 1)))
c{1: 15 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((3 offset)))
c{1: 16 ✓ (((clear-line)) ((screen terminal-address)))
c{1: 17 ✓ (((down)) ((0 space-address) (screen-state)) ((screen terminal-address)))
c{1: 18 X (((loop))) => (((jump)) ((-5 offset)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((k keyboard-address)) <- ((next-input))) -- nil
c{0: 3 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 4 (((c character)) <- ((read-key)) ((k keyboard-address)) ((silent literal) (terminal))) -- nil
c{0: 5 (((break-if)) ((c character))) -- ((open 5))
c{0: 6 (((reply)) ((nil literal))) -- ((open 5))
c{0: 7 (((q-pressed? boolean)) <- ((equal)) ((c character)) ((q literal))) -- ((open 7) (close 7) (open 5))
c{0: 8 (((end-of-fake-keyboard-input? boolean)) <- ((equal)) ((c character)) ((  literal))) -- ((open 7) (close 7) (open 5))
c{0: 9 (((quit? boolean)) <- ((or)) ((q-pressed? boolean)) ((end-of-fake-keyboard-input? boolean))) -- ((open 7) (close 7) (open 5))
c{0: 10 (((break-unless)) ((quit? boolean))) -- ((open 7) (close 7) (open 5))
c{0: 11 (((reply)) ((t literal))) -- ((open 7) (close 7) (open 5))
c{0: 12 (((up? boolean)) <- ((equal)) ((c character)) ((up literal))) -- ((open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 13 (((k? boolean)) <- ((equal)) ((c character)) ((k literal))) -- ((open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 14 (((up? boolean)) <- ((or)) ((up? boolean)) ((k? boolean))) -- ((open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 15 (((break-unless)) ((up? boolean))) -- ((open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 16 (((up)) ((0 space-address) (screen-state)) ((screen terminal-address))) -- ((open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 17 (((reply)) ((nil literal))) -- ((open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 18 (((down? boolean)) <- ((equal)) ((c character)) ((down literal))) -- ((open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 19 (((j? boolean)) <- ((equal)) ((c character)) ((j literal))) -- ((open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 20 (((down? boolean)) <- ((or)) ((down? boolean)) ((j? boolean))) -- ((open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 21 (((break-unless)) ((down? boolean))) -- ((open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 22 (((down)) ((0 space-address) (screen-state)) ((screen terminal-address))) -- ((open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 23 (((reply)) ((nil literal))) -- ((open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 24 (((toggle? boolean)) <- ((equal)) ((c character)) ((
 literal))) -- ((open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 25 (((break-unless)) ((toggle? boolean))) -- ((open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 26 (((original-cursor-row integer)) <- ((copy)) ((cursor-row integer) (space 1))) -- ((open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 27 (((original-trace-index integer)) <- ((cursor-row-to-trace-index)) ((0 space-address) (screen-state)) ((original-cursor-row integer))) -- ((open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 28 (((expanded? boolean)) <- ((greater-or-equal)) ((expanded-index integer) (space 1)) ((0 literal))) -- ((open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 29 (((break-unless)) ((expanded? boolean))) -- ((open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 30 (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1))) -- ((open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 31 (((break-unless)) ((at-expanded? boolean))) -- ((open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 32 (((expanded-index integer) (space 1)) <- ((copy)) ((-1 literal))) -- ((open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 33 (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((cursor-row integer) (space 1))) -- ((open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 34 (((back-to)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((original-cursor-row integer))) -- ((open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 35 (((reply))) -- ((open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 36 (((below-expanded? boolean)) <- ((greater-than)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1))) -- ((open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 37 (((break-unless)) ((below-expanded? boolean))) -- ((open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 38 (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1))) -- ((open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 39 (((break-if)) ((at-expanded? boolean))) -- ((open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 40 (((up)) ((0 space-address)) ((screen terminal-address))) -- ((open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 41 (((loop))) -- ((open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 42 (((done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((original-trace-index integer))) -- ((open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 43 (((break-if)) ((done? boolean))) -- ((open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 44 (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((cursor-row integer) (space 1))) -- ((open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 45 (((print-instruction-trace-collapsed)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state))) -- ((open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 46 (((loop))) -- ((open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 47 (((expanded-index integer) (space 1)) <- ((copy)) ((original-trace-index integer))) -- ((close 47) (close 47) (close 47) (open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 48 (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((original-trace-index integer))) -- ((close 47) (close 47) (close 47) (open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 49 (((print-instruction-trace)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state))) -- ((close 47) (close 47) (close 47) (open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 50 (((next-index integer)) <- ((add)) ((original-trace-index integer)) ((1 literal))) -- ((close 47) (close 47) (close 47) (open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 51 (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((next-index integer))) -- ((close 47) (close 47) (close 47) (open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 52 (((back-to)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((original-trace-index integer))) -- ((close 47) (close 47) (close 47) (open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 53 (((reply)) ((nil literal))) -- ((close 47) (close 47) (close 47) (open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 54 (((reply)) ((nil literal))) -- ((close 54) (close 47) (close 47) (close 47) (open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((k keyboard-address)) <- ((next-input)))
c{1: 3 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 4 ✓ (((c character)) <- ((read-key)) ((k keyboard-address)) ((silent literal) (terminal)))
c{1: 5 X (((break-if)) ((c character))) => (((jump-if)) ((c character)) ((1 offset)))
c{1: 6 ✓ (((reply)) ((nil literal)))
c{1: 7 ✓ (((q-pressed? boolean)) <- ((equal)) ((c character)) ((q literal)))
c{1: 8 ✓ (((end-of-fake-keyboard-input? boolean)) <- ((equal)) ((c character)) ((  literal)))
c{1: 9 ✓ (((quit? boolean)) <- ((or)) ((q-pressed? boolean)) ((end-of-fake-keyboard-input? boolean)))
c{1: 10 X (((break-unless)) ((quit? boolean))) => (((jump-unless)) ((quit? boolean)) ((1 offset)))
c{1: 11 ✓ (((reply)) ((t literal)))
c{1: 12 ✓ (((up? boolean)) <- ((equal)) ((c character)) ((up literal)))
c{1: 13 ✓ (((k? boolean)) <- ((equal)) ((c character)) ((k literal)))
c{1: 14 ✓ (((up? boolean)) <- ((or)) ((up? boolean)) ((k? boolean)))
c{1: 15 X (((break-unless)) ((up? boolean))) => (((jump-unless)) ((up? boolean)) ((2 offset)))
c{1: 16 ✓ (((up)) ((0 space-address) (screen-state)) ((screen terminal-address)))
c{1: 17 ✓ (((reply)) ((nil literal)))
c{1: 18 ✓ (((down? boolean)) <- ((equal)) ((c character)) ((down literal)))
c{1: 19 ✓ (((j? boolean)) <- ((equal)) ((c character)) ((j literal)))
c{1: 20 ✓ (((down? boolean)) <- ((or)) ((down? boolean)) ((j? boolean)))
c{1: 21 X (((break-unless)) ((down? boolean))) => (((jump-unless)) ((down? boolean)) ((2 offset)))
c{1: 22 ✓ (((down)) ((0 space-address) (screen-state)) ((screen terminal-address)))
c{1: 23 ✓ (((reply)) ((nil literal)))
c{1: 24 ✓ (((toggle? boolean)) <- ((equal)) ((c character)) ((
 literal)))
c{1: 25 X (((break-unless)) ((toggle? boolean))) => (((jump-unless)) ((toggle? boolean)) ((28 offset)))
c{1: 26 ✓ (((original-cursor-row integer)) <- ((copy)) ((cursor-row integer) (space 1)))
c{1: 27 ✓ (((original-trace-index integer)) <- ((cursor-row-to-trace-index)) ((0 space-address) (screen-state)) ((original-cursor-row integer)))
c{1: 28 ✓ (((expanded? boolean)) <- ((greater-or-equal)) ((expanded-index integer) (space 1)) ((0 literal)))
c{1: 29 X (((break-unless)) ((expanded? boolean))) => (((jump-unless)) ((expanded? boolean)) ((17 offset)))
c{1: 30 ✓ (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1)))
c{1: 31 X (((break-unless)) ((at-expanded? boolean))) => (((jump-unless)) ((at-expanded? boolean)) ((4 offset)))
c{1: 32 ✓ (((expanded-index integer) (space 1)) <- ((copy)) ((-1 literal)))
c{1: 33 ✓ (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((cursor-row integer) (space 1)))
c{1: 34 ✓ (((back-to)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((original-cursor-row integer)))
c{1: 35 ✓ (((reply)))
c{1: 36 ✓ (((below-expanded? boolean)) <- ((greater-than)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1)))
c{1: 37 X (((break-unless)) ((below-expanded? boolean))) => (((jump-unless)) ((below-expanded? boolean)) ((9 offset)))
c{1: 38 ✓ (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1)))
c{1: 39 X (((break-if)) ((at-expanded? boolean))) => (((jump-if)) ((at-expanded? boolean)) ((2 offset)))
c{1: 40 ✓ (((up)) ((0 space-address)) ((screen terminal-address)))
c{1: 41 X (((loop))) => (((jump)) ((-4 offset)))
c{1: 42 ✓ (((done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((original-trace-index integer)))
c{1: 43 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((3 offset)))
c{1: 44 ✓ (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((cursor-row integer) (space 1)))
c{1: 45 ✓ (((print-instruction-trace-collapsed)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state)))
c{1: 46 X (((loop))) => (((jump)) ((-5 offset)))
c{1: 47 ✓ (((expanded-index integer) (space 1)) <- ((copy)) ((original-trace-index integer)))
c{1: 48 ✓ (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((original-trace-index integer)))
c{1: 49 ✓ (((print-instruction-trace)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state)))
c{1: 50 ✓ (((next-index integer)) <- ((add)) ((original-trace-index integer)) ((1 literal)))
c{1: 51 ✓ (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((next-index integer)))
c{1: 52 ✓ (((back-to)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((original-trace-index integer)))
c{1: 53 ✓ (((reply)) ((nil literal)))
c{1: 54 ✓ (((reply)) ((nil literal)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((traces instruction-trace-address-array-address)) <- ((next-input))) -- nil
c{0: 2 (((screen-height integer)) <- ((next-input))) -- nil
c{0: 3 (((app-height integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 4 (((printed-height integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 5 (((cursor-row integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 6 (((expanded-index integer)) <- ((copy)) ((-1 literal))) -- nil
c{0: 7 (((reply)) ((default-space space-address))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((traces instruction-trace-address-array-address)) <- ((next-input)))
c{1: 2 ✓ (((screen-height integer)) <- ((next-input)))
c{1: 3 ✓ (((app-height integer)) <- ((copy)) ((0 literal)))
c{1: 4 ✓ (((printed-height integer)) <- ((copy)) ((0 literal)))
c{1: 5 ✓ (((cursor-row integer)) <- ((copy)) ((0 literal)))
c{1: 6 ✓ (((expanded-index integer)) <- ((copy)) ((-1 literal)))
c{1: 7 ✓ (((reply)) ((default-space space-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 3 (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1))) -- ((open 3))
c{0: 4 (((break-if)) ((at-bottom? boolean))) -- ((open 3))
c{0: 5 (((down)) ((0 space-address)) ((screen terminal-address))) -- ((open 3))
c{0: 6 (((loop))) -- ((open 3))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 3 ✓ (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1)))
c{1: 4 X (((break-if)) ((at-bottom? boolean))) => (((jump-if)) ((at-bottom? boolean)) ((2 offset)))
c{1: 5 ✓ (((down)) ((0 space-address)) ((screen terminal-address)))
c{1: 6 X (((loop))) => (((jump)) ((-4 offset)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 3 (((no-expanded? boolean)) <- ((less-than)) ((expanded-index integer) (space 1)) ((0 literal))) -- ((open 3))
c{0: 4 (((break-if)) ((no-expanded? boolean))) -- ((open 3))
c{0: 5 (((n integer)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1))) -- ((open 3))
c{0: 6 (((n integer)) <- ((add)) ((n integer)) ((1 literal))) -- ((open 3))
c{0: 7 (((cursor-row-below-expanded integer)) <- ((add)) ((expanded-index integer) (space 1)) ((n integer))) -- ((open 3))
c{0: 8 (((just-below-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((cursor-row-below-expanded integer))) -- ((open 3))
c{0: 9 (((break-unless)) ((just-below-expanded? boolean))) -- ((open 3))
c{0: 10 (((i integer)) <- ((copy)) ((0 literal))) -- ((open 3))
c{0: 11 (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((n integer))) -- ((open 11) (open 3))
c{0: 12 (((break-if)) ((done? boolean))) -- ((open 11) (open 3))
c{0: 13 (((cursor-row integer) (space 1)) <- ((subtract)) ((cursor-row integer) (space 1)) ((1 literal))) -- ((open 11) (open 3))
c{0: 14 (((cursor-up)) ((screen terminal-address))) -- ((open 11) (open 3))
c{0: 15 (((i integer)) <- ((add)) ((i integer)) ((1 literal))) -- ((open 11) (open 3))
c{0: 16 (((loop))) -- ((open 11) (open 3))
c{0: 17 (((reply))) -- ((close 17) (open 11) (open 3))
c{0: 18 (((at-top? boolean)) <- ((lesser-or-equal)) ((cursor-row integer) (space 1)) ((0 literal))) -- ((open 18) (close 18) (close 17) (open 11) (open 3))
c{0: 19 (((break-if)) ((at-top? boolean))) -- ((open 18) (close 18) (close 17) (open 11) (open 3))
c{0: 20 (((cursor-row integer) (space 1)) <- ((subtract)) ((cursor-row integer) (space 1)) ((1 literal))) -- ((open 18) (close 18) (close 17) (open 11) (open 3))
c{0: 21 (((cursor-up)) ((screen terminal-address))) -- ((open 18) (close 18) (close 17) (open 11) (open 3))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 3 ✓ (((no-expanded? boolean)) <- ((less-than)) ((expanded-index integer) (space 1)) ((0 literal)))
c{1: 4 X (((break-if)) ((no-expanded? boolean))) => (((jump-if)) ((no-expanded? boolean)) ((13 offset)))
c{1: 5 ✓ (((n integer)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1)))
c{1: 6 ✓ (((n integer)) <- ((add)) ((n integer)) ((1 literal)))
c{1: 7 ✓ (((cursor-row-below-expanded integer)) <- ((add)) ((expanded-index integer) (space 1)) ((n integer)))
c{1: 8 ✓ (((just-below-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((cursor-row-below-expanded integer)))
c{1: 9 X (((break-unless)) ((just-below-expanded? boolean))) => (((jump-unless)) ((just-below-expanded? boolean)) ((8 offset)))
c{1: 10 ✓ (((i integer)) <- ((copy)) ((0 literal)))
c{1: 11 ✓ (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((n integer)))
c{1: 12 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((4 offset)))
c{1: 13 ✓ (((cursor-row integer) (space 1)) <- ((subtract)) ((cursor-row integer) (space 1)) ((1 literal)))
c{1: 14 ✓ (((cursor-up)) ((screen terminal-address)))
c{1: 15 ✓ (((i integer)) <- ((add)) ((i integer)) ((1 literal)))
c{1: 16 X (((loop))) => (((jump)) ((-6 offset)))
c{1: 17 ✓ (((reply)))
c{1: 18 ✓ (((at-top? boolean)) <- ((lesser-or-equal)) ((cursor-row integer) (space 1)) ((0 literal)))
c{1: 19 X (((break-if)) ((at-top? boolean))) => (((jump-if)) ((at-top? boolean)) ((2 offset)))
c{1: 20 ✓ (((cursor-row integer) (space 1)) <- ((subtract)) ((cursor-row integer) (space 1)) ((1 literal)))
c{1: 21 ✓ (((cursor-up)) ((screen terminal-address)))
-: next-space-generator of add-line is screen-state
-: next-space-generator of back-to is screen-state
-: next-space-generator of browse-trace is screen-state
-: next-space-generator of cursor-row-to-trace-index is screen-state
-: next-space-generator of down is screen-state
-: next-space-generator of print-instruction-trace is screen-state
-: next-space-generator of print-traces-collapsed is screen-state
-: next-space-generator of print-traces-collapsed-from is screen-state
-: next-space-generator of process-key is screen-state
-: next-space-generator of to-bottom is screen-state
-: next-space-generator of up is screen-state
cn0: convert-names in add-line
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1))) ((screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((printed-height integer) (space 1))
maybe-add: ((printed-height integer) (space 1))
cn0: checking oarg ((at-bottom? boolean))
maybe-add: ((at-bottom? boolean))
cn0: location for oarg ((at-bottom? boolean)): 2
cn0: (((jump-unless)) ((at-bottom? boolean)) ((9 offset))) ((at-bottom? 2) (screen 1)) nil
cn0: checking arg ((at-bottom? boolean))
maybe-add: ((at-bottom? boolean))
cn0: checking arg ((9 offset))
cn0: (((screen-full? boolean)) <- ((greater-or-equal)) ((app-height integer) (space 1)) ((screen-height integer) (space 1))) ((at-bottom? 2) (screen 1)) nil
cn0: checking arg ((app-height integer) (space 1))
maybe-add: ((app-height integer) (space 1))
cn0: checking arg ((screen-height integer) (space 1))
maybe-add: ((screen-height integer) (space 1))
cn0: checking oarg ((screen-full? boolean))
maybe-add: ((screen-full? boolean))
cn0: location for oarg ((screen-full? boolean)): 3
cn0: (((jump-unless)) ((screen-full? boolean)) ((3 offset))) ((at-bottom? 2) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((screen-full? boolean))
maybe-add: ((screen-full? boolean))
cn0: checking arg ((3 offset))
cn0: (((cursor-to-next-line)) ((screen terminal-address))) ((at-bottom? 2) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((cursor-up)) ((screen terminal-address))) ((at-bottom? 2) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((reply))) ((at-bottom? 2) (screen 1) (screen-full? 3)) nil
cn0: (((printed-height integer) (space 1)) <- ((add)) ((printed-height integer) (space 1)) ((1 literal))) ((at-bottom? 2) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((printed-height integer) (space 1))
maybe-add: ((printed-height integer) (space 1))
cn0: checking arg ((1 literal))
cn0: checking oarg ((printed-height integer) (space 1))
maybe-add: ((printed-height integer) (space 1))
cn0: (((grow-max? boolean)) <- ((greater-than)) ((printed-height integer) (space 1)) ((app-height integer) (space 1))) ((at-bottom? 2) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((printed-height integer) (space 1))
maybe-add: ((printed-height integer) (space 1))
cn0: checking arg ((app-height integer) (space 1))
maybe-add: ((app-height integer) (space 1))
cn0: checking oarg ((grow-max? boolean))
maybe-add: ((grow-max? boolean))
cn0: location for oarg ((grow-max? boolean)): 4
cn0: (((jump-unless)) ((grow-max? boolean)) ((1 offset))) ((at-bottom? 2) (grow-max? 4) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((grow-max? boolean))
maybe-add: ((grow-max? boolean))
cn0: checking arg ((1 offset))
cn0: (((app-height integer) (space 1)) <- ((copy)) ((printed-height integer) (space 1))) ((at-bottom? 2) (grow-max? 4) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((printed-height integer) (space 1))
maybe-add: ((printed-height integer) (space 1))
cn0: checking oarg ((app-height integer) (space 1))
maybe-add: ((app-height integer) (space 1))
cn0: (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal))) ((at-bottom? 2) (grow-max? 4) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((1 literal))
cn0: checking oarg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: (((cursor-to-next-line)) ((screen terminal-address))) ((at-bottom? 2) (grow-max? 4) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: convert-names in back-to
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((target-row integer)) <- ((next-input))) ((screen 1)) nil
cn0: checking oarg ((target-row integer))
maybe-add: ((target-row integer))
cn0: location for oarg ((target-row integer)): 2
cn0: (((below-target? boolean)) <- ((greater-than)) ((cursor-row integer) (space 1)) ((target-row integer))) ((screen 1) (target-row 2)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((target-row integer))
maybe-add: ((target-row integer))
cn0: checking oarg ((below-target? boolean))
maybe-add: ((below-target? boolean))
cn0: location for oarg ((below-target? boolean)): 3
cn0: (((jump-unless)) ((below-target? boolean)) ((2 offset))) ((below-target? 3) (screen 1) (target-row 2)) nil
cn0: checking arg ((below-target? boolean))
maybe-add: ((below-target? boolean))
cn0: checking arg ((2 offset))
cn0: (((up)) ((0 space-address)) ((screen terminal-address))) ((below-target? 3) (screen 1) (target-row 2)) nil
cn0: checking arg ((0 space-address))
maybe-add: ((0 space-address))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((jump)) ((-4 offset))) ((below-target? 3) (screen 1) (target-row 2)) nil
cn0: checking arg ((-4 offset))
cn0: (((above-target? boolean)) <- ((less-than)) ((cursor-row integer) (space 1)) ((target-row integer))) ((below-target? 3) (screen 1) (target-row 2)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((target-row integer))
maybe-add: ((target-row integer))
cn0: checking oarg ((above-target? boolean))
maybe-add: ((above-target? boolean))
cn0: location for oarg ((above-target? boolean)): 4
cn0: (((jump-unless)) ((above-target? boolean)) ((2 offset))) ((above-target? 4) (below-target? 3) (screen 1) (target-row 2)) nil
cn0: checking arg ((above-target? boolean))
maybe-add: ((above-target? boolean))
cn0: checking arg ((2 offset))
cn0: (((down)) ((0 space-address)) ((screen terminal-address))) ((above-target? 4) (below-target? 3) (screen 1) (target-row 2)) nil
cn0: checking arg ((0 space-address))
maybe-add: ((0 space-address))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((jump)) ((-4 offset))) ((above-target? 4) (below-target? 3) (screen 1) (target-row 2)) nil
cn0: checking arg ((-4 offset))
cn0: convert-names in browse-trace
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((x string-address)) <- ((next-input))) nil nil
cn0: checking oarg ((x string-address))
maybe-add: ((x string-address))
cn0: location for oarg ((x string-address)): 1
cn0: (((screen-height integer)) <- ((next-input))) ((x 1)) nil
cn0: checking oarg ((screen-height integer))
maybe-add: ((screen-height integer))
cn0: location for oarg ((screen-height integer)): 2
cn0: (((s stream-address)) <- ((init-stream)) ((x string-address))) ((screen-height 2) (x 1)) nil
cn0: checking arg ((x string-address))
maybe-add: ((x string-address))
cn0: checking oarg ((s stream-address))
maybe-add: ((s stream-address))
cn0: location for oarg ((s stream-address)): 3
cn0: (((traces instruction-trace-address-array-address)) <- ((parse-traces)) ((s stream-address))) ((s 3) (screen-height 2) (x 1)) nil
cn0: checking arg ((s stream-address))
maybe-add: ((s stream-address))
cn0: checking oarg ((traces instruction-trace-address-array-address))
maybe-add: ((traces instruction-trace-address-array-address))
cn0: location for oarg ((traces instruction-trace-address-array-address)): 4
cn0: (((0 space-address) (names screen-state)) <- ((screen-state)) ((traces instruction-trace-address-array-address)) ((screen-height integer))) ((s 3) (screen-height 2) (traces 4) (x 1)) nil
cn0: checking arg ((traces instruction-trace-address-array-address))
maybe-add: ((traces instruction-trace-address-array-address))
cn0: checking arg ((screen-height integer))
maybe-add: ((screen-height integer))
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((cursor-mode))) ((s 3) (screen-height 2) (traces 4) (x 1)) nil
cn0: (((print-traces-collapsed)) ((0 space-address) (screen-state)) ((nil literal) (terminal))) ((s 3) (screen-height 2) (traces 4) (x 1)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((nil literal) (terminal))
cn0: (((quit? boolean)) <- ((process-key)) ((0 space-address) (screen-state)) ((nil literal) (keyboard)) ((nil literal) (terminal))) ((s 3) (screen-height 2) (traces 4) (x 1)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((nil literal) (keyboard))
cn0: checking arg ((nil literal) (terminal))
cn0: checking oarg ((quit? boolean))
maybe-add: ((quit? boolean))
cn0: location for oarg ((quit? boolean)): 5
cn0: (((jump-if)) ((quit? boolean)) ((1 offset))) ((quit? 5) (s 3) (screen-height 2) (traces 4) (x 1)) nil
cn0: checking arg ((quit? boolean))
maybe-add: ((quit? boolean))
cn0: checking arg ((1 offset))
cn0: (((jump)) ((-3 offset))) ((quit? 5) (s 3) (screen-height 2) (traces 4) (x 1)) nil
cn0: checking arg ((-3 offset))
cn0: (((to-bottom)) ((0 space-address) (screen-state)) ((nil literal) (terminal))) ((quit? 5) (s 3) (screen-height 2) (traces 4) (x 1)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((nil literal) (terminal))
cn0: (((retro-mode))) ((quit? 5) (s 3) (screen-height 2) (traces 4) (x 1)) nil
cn0: convert-names in cursor-row-to-trace-index
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((n integer) (screen)) <- ((next-input))) nil nil
cn0: checking oarg ((n integer) (screen))
maybe-add: ((n integer) (screen))
cn0: location for oarg ((n integer) (screen)): 1
cn0: (((has-expanded? boolean)) <- ((greater-or-equal)) ((expanded-index integer) (space 1)) ((0 literal))) ((n 1)) nil
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking arg ((0 literal))
cn0: checking oarg ((has-expanded? boolean))
maybe-add: ((has-expanded? boolean))
cn0: location for oarg ((has-expanded? boolean)): 2
cn0: (((jump-if)) ((has-expanded? boolean)) ((1 offset))) ((has-expanded? 2) (n 1)) nil
cn0: checking arg ((has-expanded? boolean))
maybe-add: ((has-expanded? boolean))
cn0: checking arg ((1 offset))
cn0: (((reply)) ((n integer) (index))) ((has-expanded? 2) (n 1)) nil
cn0: checking arg ((n integer) (index))
maybe-add: ((n integer) (index))
cn0: (((above-expanded? boolean)) <- ((lesser-or-equal)) ((cursor-row integer) (space 1) (screen)) ((expanded-index integer) (space 1))) ((has-expanded? 2) (n 1)) nil
cn0: checking arg ((cursor-row integer) (space 1) (screen))
maybe-add: ((cursor-row integer) (space 1) (screen))
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking oarg ((above-expanded? boolean))
maybe-add: ((above-expanded? boolean))
cn0: location for oarg ((above-expanded? boolean)): 3
cn0: (((jump-unless)) ((above-expanded? boolean)) ((1 offset))) ((above-expanded? 3) (has-expanded? 2) (n 1)) nil
cn0: checking arg ((above-expanded? boolean))
maybe-add: ((above-expanded? boolean))
cn0: checking arg ((1 offset))
cn0: (((reply)) ((n integer) (index))) ((above-expanded? 3) (has-expanded? 2) (n 1)) nil
cn0: checking arg ((n integer) (index))
maybe-add: ((n integer) (index))
cn0: (((k integer) (index)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1))) ((above-expanded? 3) (has-expanded? 2) (n 1)) nil
cn0: checking arg ((traces instruction-trace-address-array-address) (space 1))
maybe-add: ((traces instruction-trace-address-array-address) (space 1))
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking oarg ((k integer) (index))
maybe-add: ((k integer) (index))
cn0: location for oarg ((k integer) (index)): 4
cn0: (((result integer) (index)) <- ((subtract)) ((n integer) (screen)) ((k integer) (index))) ((above-expanded? 3) (has-expanded? 2) (k 4) (n 1)) nil
cn0: checking arg ((n integer) (screen))
maybe-add: ((n integer) (screen))
cn0: checking arg ((k integer) (index))
maybe-add: ((k integer) (index))
cn0: checking oarg ((result integer) (index))
maybe-add: ((result integer) (index))
cn0: location for oarg ((result integer) (index)): 5
cn0: (((reply)) ((result integer) (index))) ((above-expanded? 3) (has-expanded? 2) (k 4) (n 1) (result 5)) nil
cn0: checking arg ((result integer) (index))
maybe-add: ((result integer) (index))
cn0: convert-names in down
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((no-expanded? boolean)) <- ((less-than)) ((expanded-index integer) (space 1)) ((0 literal))) ((screen 1)) nil
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking arg ((0 literal))
cn0: checking oarg ((no-expanded? boolean))
maybe-add: ((no-expanded? boolean))
cn0: location for oarg ((no-expanded? boolean)): 2
cn0: (((jump-if)) ((no-expanded? boolean)) ((12 offset))) ((no-expanded? 2) (screen 1)) nil
cn0: checking arg ((no-expanded? boolean))
maybe-add: ((no-expanded? boolean))
cn0: checking arg ((12 offset))
cn0: (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1))) ((no-expanded? 2) (screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking oarg ((at-expanded? boolean))
maybe-add: ((at-expanded? boolean))
cn0: location for oarg ((at-expanded? boolean)): 3
cn0: (((jump-unless)) ((at-expanded? boolean)) ((10 offset))) ((at-expanded? 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((at-expanded? boolean))
maybe-add: ((at-expanded? boolean))
cn0: checking arg ((10 offset))
cn0: (((n integer)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1))) ((at-expanded? 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((traces instruction-trace-address-array-address) (space 1))
maybe-add: ((traces instruction-trace-address-array-address) (space 1))
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking oarg ((n integer))
maybe-add: ((n integer))
cn0: location for oarg ((n integer)): 4
cn0: (((n integer)) <- ((add)) ((n integer)) ((1 literal))) ((at-expanded? 3) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((n integer))
maybe-add: ((n integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((n integer))
maybe-add: ((n integer))
cn0: (((i integer)) <- ((copy)) ((0 literal))) ((at-expanded? 3) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: location for oarg ((i integer)): 5
cn0: (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((n integer))) ((at-expanded? 3) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((n integer))
maybe-add: ((n integer))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 6
cn0: (((jump-if)) ((done? boolean)) ((4 offset))) ((at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((4 offset))
cn0: (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal))) ((at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((1 literal))
cn0: checking oarg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: (((cursor-down)) ((screen terminal-address))) ((at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((i integer)) <- ((add)) ((i integer)) ((1 literal))) ((at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: (((jump)) ((-6 offset))) ((at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((-6 offset))
cn0: (((reply))) ((at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1))) ((at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((printed-height integer) (space 1))
maybe-add: ((printed-height integer) (space 1))
cn0: checking oarg ((at-bottom? boolean))
maybe-add: ((at-bottom? boolean))
cn0: location for oarg ((at-bottom? boolean)): 7
cn0: (((jump-if)) ((at-bottom? boolean)) ((2 offset))) ((at-bottom? 7) (at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((at-bottom? boolean))
maybe-add: ((at-bottom? boolean))
cn0: checking arg ((2 offset))
cn0: (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal))) ((at-bottom? 7) (at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((1 literal))
cn0: checking oarg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: (((cursor-down)) ((screen terminal-address))) ((at-bottom? 7) (at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: convert-names in instruction-trace-num-children
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((traces instruction-trace-address-array-address)) <- ((next-input))) nil nil
cn0: checking oarg ((traces instruction-trace-address-array-address))
maybe-add: ((traces instruction-trace-address-array-address))
cn0: location for oarg ((traces instruction-trace-address-array-address)): 1
cn0: (((index integer)) <- ((next-input))) ((traces 1)) nil
cn0: checking oarg ((index integer))
maybe-add: ((index integer))
cn0: location for oarg ((index integer)): 2
cn0: (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (deref)) ((index integer))) ((index 2) (traces 1)) nil
cn0: checking arg ((traces instruction-trace-address-array-address) (deref))
maybe-add: ((traces instruction-trace-address-array-address) (deref))
cn0: checking arg ((index integer))
maybe-add: ((index integer))
cn0: checking oarg ((tr instruction-trace-address))
maybe-add: ((tr instruction-trace-address))
cn0: location for oarg ((tr instruction-trace-address)): 3
cn0: (((tr-children trace-address-array-address)) <- ((get)) ((tr instruction-trace-address) (deref)) ((children offset))) ((index 2) (tr 3) (traces 1)) nil
cn0: field-access children in trinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 3
cn0: checking arg ((tr instruction-trace-address) (deref))
maybe-add: ((tr instruction-trace-address) (deref))
cn0: checking arg ((children offset))
cn0: checking oarg ((tr-children trace-address-array-address))
maybe-add: ((tr-children trace-address-array-address))
cn0: location for oarg ((tr-children trace-address-array-address)): 4
cn0: (((n integer)) <- ((length)) ((tr-children instruction-trace-address-array-address) (deref))) ((children 3) (index 2) (tr 3) (tr-children 4) (traces 1)) ((children t))
cn0: checking arg ((tr-children instruction-trace-address-array-address) (deref))
maybe-add: ((tr-children instruction-trace-address-array-address) (deref))
cn0: checking oarg ((n integer))
maybe-add: ((n integer))
cn0: location for oarg ((n integer)): 5
cn0: (((reply)) ((n integer))) ((children 3) (index 2) (n 5) (tr 3) (tr-children 4) (traces 1)) ((children t))
cn0: checking arg ((n integer))
maybe-add: ((n integer))
cn0: convert-names in main
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((x string-address)) <- ((new)) schedule: main
run: main 0: (((1 integer)) <- ((copy)) ((1 literal)))
run: main 0: 1 => ((1 integer))
mem: ((1 integer)): 1 <= 1
run: main 1: (((2 integer)) <- ((copy)) ((3 literal)))
run: main 1: 3 => ((2 integer))
mem: ((2 integer)): 2 <= 3) nil nil
cn0: checking arg schedule: main
run: main 0: (((1 integer)) <- ((copy)) ((1 literal)))
run: main 0: 1 => ((1 integer))
mem: ((1 integer)): 1 <= 1
run: main 1: (((2 integer)) <- ((copy)) ((3 literal)))
run: main 1: 3 => ((2 integer))
mem: ((2 integer)): 2 <= 3
cn0: checking oarg ((x string-address))
maybe-add: ((x string-address))
cn0: location for oarg ((x string-address)): 1
cn0: (((n integer)) <- ((length)) ((x string-address) (deref))) ((x 1)) nil
cn0: checking arg ((x string-address) (deref))
maybe-add: ((x string-address) (deref))
cn0: checking oarg ((n integer))
maybe-add: ((n integer))
cn0: location for oarg ((n integer)): 2
cn0: ((($print)) ((p3  literal))) ((n 2) (x 1)) nil
cn0: checking arg ((p3  literal))
cn0: ((($print)) ((n integer))) ((n 2) (x 1)) nil
cn0: checking arg ((n integer))
maybe-add: ((n integer))
cn0: ((($print)) ((
 literal))) ((n 2) (x 1)) nil
cn0: checking arg ((
 literal))
cn0: (((s stream-address)) <- ((init-stream)) ((x string-address))) ((n 2) (x 1)) nil
cn0: checking arg ((x string-address))
maybe-add: ((x string-address))
cn0: checking oarg ((s stream-address))
maybe-add: ((s stream-address))
cn0: location for oarg ((s stream-address)): 3
cn0: (((traces instruction-trace-address-array-address)) <- ((parse-traces)) ((s stream-address))) ((n 2) (s 3) (x 1)) nil
cn0: checking arg ((s stream-address))
maybe-add: ((s stream-address))
cn0: checking oarg ((traces instruction-trace-address-array-address))
maybe-add: ((traces instruction-trace-address-array-address))
cn0: location for oarg ((traces instruction-trace-address-array-address)): 4
cn0: convert-names in parse-instruction-trace
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((in trace-address)) <- ((next-input))) nil nil
cn0: checking oarg ((in trace-address))
maybe-add: ((in trace-address))
cn0: location for oarg ((in trace-address)): 1
cn0: (((buf string-address)) <- ((get)) ((in trace-address) (deref)) ((contents offset))) ((in 1)) nil
cn0: field-access contents in intrace-addressderef of type trace
cn0: new field; computing location
cn0: field location 1
cn0: checking arg ((in trace-address) (deref))
maybe-add: ((in trace-address) (deref))
cn0: checking arg ((contents offset))
cn0: checking oarg ((buf string-address))
maybe-add: ((buf string-address))
cn0: location for oarg ((buf string-address)): 2
cn0: (((result instruction-trace-address)) <- ((new)) ((instruction-trace literal))) ((buf 2) (contents 1) (in 1)) ((contents t))
cn0: checking arg ((instruction-trace literal))
cn0: checking oarg ((result instruction-trace-address))
maybe-add: ((result instruction-trace-address))
cn0: location for oarg ((result instruction-trace-address)): 3
cn0: (((f1 string-address)) ((rest string-address)) <- ((split-first)) ((buf string-address)) ((  literal))) ((buf 2) (contents 1) (in 1) (result 3)) ((contents t))
cn0: checking arg ((buf string-address))
maybe-add: ((buf string-address))
cn0: checking arg ((  literal))
cn0: checking oarg ((f1 string-address))
maybe-add: ((f1 string-address))
cn0: location for oarg ((f1 string-address)): 4
cn0: checking oarg ((rest string-address))
maybe-add: ((rest string-address))
cn0: location for oarg ((rest string-address)): 5
cn0: (((cs string-address-array-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((call-stack offset))) ((buf 2) (contents 1) (f1 4) (in 1) (rest 5) (result 3)) ((contents t))
cn0: field-access call-stack in resultinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 0
cn0: checking arg ((result instruction-trace-address) (deref))
maybe-add: ((result instruction-trace-address) (deref))
cn0: checking arg ((call-stack offset))
cn0: checking oarg ((cs string-address-array-address-address))
maybe-add: ((cs string-address-array-address-address))
cn0: location for oarg ((cs string-address-array-address-address)): 6
cn0: (((cs string-address-array-address-address) (deref)) <- ((split)) ((f1 string-address)) ((/ literal))) ((buf 2) (call-stack 0) (contents 1) (cs 6) (f1 4) (in 1) (rest 5) (result 3)) ((call-stack t) (contents t))
cn0: checking arg ((f1 string-address))
maybe-add: ((f1 string-address))
cn0: checking arg ((/ literal))
cn0: checking oarg ((cs string-address-array-address-address) (deref))
maybe-add: ((cs string-address-array-address-address) (deref))
cn0: (((p string-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((pc offset))) ((buf 2) (call-stack 0) (contents 1) (cs 6) (f1 4) (in 1) (rest 5) (result 3)) ((call-stack t) (contents t))
cn0: field-access pc in resultinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 1
cn0: checking arg ((result instruction-trace-address) (deref))
maybe-add: ((result instruction-trace-address) (deref))
cn0: checking arg ((pc offset))
cn0: checking oarg ((p string-address-address))
maybe-add: ((p string-address-address))
cn0: location for oarg ((p string-address-address)): 7
cn0: (((delim string-address)) <- ((new)) : ) ((buf 2) (call-stack 0) (contents 1) (cs 6) (f1 4) (in 1) (p 7) (pc 1) (rest 5) (result 3)) ((call-stack t) (contents t) (pc t))
cn0: checking arg : 
cn0: checking oarg ((delim string-address))
maybe-add: ((delim string-address))
cn0: location for oarg ((delim string-address)): 8
cn0: (((p string-address-address) (deref)) ((rest string-address)) <- ((split-first-at-substring)) ((rest string-address)) ((delim string-address))) ((buf 2) (call-stack 0) (contents 1) (cs 6) (delim 8) (f1 4) (in 1) (p 7) (pc 1) (rest 5) (result 3)) ((call-stack t) (contents t) (pc t))
cn0: checking arg ((rest string-address))
maybe-add: ((rest string-address))
cn0: checking arg ((delim string-address))
maybe-add: ((delim string-address))
cn0: checking oarg ((p string-address-address) (deref))
maybe-add: ((p string-address-address) (deref))
cn0: checking oarg ((rest string-address))
maybe-add: ((rest string-address))
cn0: (((inst string-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((instruction offset))) ((buf 2) (call-stack 0) (contents 1) (cs 6) (delim 8) (f1 4) (in 1) (p 7) (pc 1) (rest 5) (result 3)) ((call-stack t) (contents t) (pc t))
cn0: field-access instruction in resultinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 2
cn0: checking arg ((result instruction-trace-address) (deref))
maybe-add: ((result instruction-trace-address) (deref))
cn0: checking arg ((instruction offset))
cn0: checking oarg ((inst string-address-address))
maybe-add: ((inst string-address-address))
cn0: location for oarg ((inst string-address-address)): 9
cn0: (((inst string-address-address) (deref)) <- ((copy)) ((rest string-address))) ((buf 2) (call-stack 0) (contents 1) (cs 6) (delim 8) (f1 4) (in 1) (inst 9) (instruction 2) (p 7) (pc 1) (rest 5) (result 3)) ((call-stack t) (contents t) (instruction t) (pc t))
cn0: checking arg ((rest string-address))
maybe-add: ((rest string-address))
cn0: checking oarg ((inst string-address-address) (deref))
maybe-add: ((inst string-address-address) (deref))
cn0: (((reply)) ((result instruction-trace-address))) ((buf 2) (call-stack 0) (contents 1) (cs 6) (delim 8) (f1 4) (in 1) (inst 9) (instruction 2) (p 7) (pc 1) (rest 5) (result 3)) ((call-stack t) (contents t) (instruction t) (pc t))
cn0: checking arg ((result instruction-trace-address))
maybe-add: ((result instruction-trace-address))
cn0: convert-names in parse-trace
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((in string-address)) <- ((next-input))) nil nil
cn0: checking oarg ((in string-address))
maybe-add: ((in string-address))
cn0: location for oarg ((in string-address)): 1
cn0: (((result trace-address)) <- ((new)) ((trace literal))) ((in 1)) nil
cn0: checking arg ((trace literal))
cn0: checking oarg ((result trace-address))
maybe-add: ((result trace-address))
cn0: location for oarg ((result trace-address)): 2
cn0: (((delim string-address)) <- ((new)) : ) ((in 1) (result 2)) nil
cn0: checking arg : 
cn0: checking oarg ((delim string-address))
maybe-add: ((delim string-address))
cn0: location for oarg ((delim string-address)): 3
cn0: (((first string-address)) ((rest string-address)) <- ((split-first-at-substring)) ((in string-address)) ((delim string-address))) ((delim 3) (in 1) (result 2)) nil
cn0: checking arg ((in string-address))
maybe-add: ((in string-address))
cn0: checking arg ((delim string-address))
maybe-add: ((delim string-address))
cn0: checking oarg ((first string-address))
maybe-add: ((first string-address))
cn0: location for oarg ((first string-address)): 4
cn0: checking oarg ((rest string-address))
maybe-add: ((rest string-address))
cn0: location for oarg ((rest string-address)): 5
cn0: (((l string-address-address)) <- ((get-address)) ((result trace-address) (deref)) ((label offset))) ((delim 3) (first 4) (in 1) (rest 5) (result 2)) nil
cn0: field-access label in resulttrace-addressderef of type trace
cn0: new field; computing location
cn0: field location 0
cn0: checking arg ((result trace-address) (deref))
maybe-add: ((result trace-address) (deref))
cn0: checking arg ((label offset))
cn0: checking oarg ((l string-address-address))
maybe-add: ((l string-address-address))
cn0: location for oarg ((l string-address-address)): 6
cn0: (((l string-address-address) (deref)) <- ((copy)) ((first string-address))) ((delim 3) (first 4) (in 1) (l 6) (label 0) (rest 5) (result 2)) ((label t))
cn0: checking arg ((first string-address))
maybe-add: ((first string-address))
cn0: checking oarg ((l string-address-address) (deref))
maybe-add: ((l string-address-address) (deref))
cn0: (((c string-address-address)) <- ((get-address)) ((result trace-address) (deref)) ((contents offset))) ((delim 3) (first 4) (in 1) (l 6) (label 0) (rest 5) (result 2)) ((label t))
cn0: field-access contents in resulttrace-addressderef of type trace
cn0: new field; computing location
cn0: field location 1
cn0: checking arg ((result trace-address) (deref))
maybe-add: ((result trace-address) (deref))
cn0: checking arg ((contents offset))
cn0: checking oarg ((c string-address-address))
maybe-add: ((c string-address-address))
cn0: location for oarg ((c string-address-address)): 7
cn0: (((c string-address-address) (deref)) <- ((copy)) ((rest string-address))) ((c 7) (contents 1) (delim 3) (first 4) (in 1) (l 6) (label 0) (rest 5) (result 2)) ((contents t) (label t))
cn0: checking arg ((rest string-address))
maybe-add: ((rest string-address))
cn0: checking oarg ((c string-address-address) (deref))
maybe-add: ((c string-address-address) (deref))
cn0: (((reply)) ((result trace-address))) ((c 7) (contents 1) (delim 3) (first 4) (in 1) (l 6) (label 0) (rest 5) (result 2)) ((contents t) (label t))
cn0: checking arg ((result trace-address))
maybe-add: ((result trace-address))
cn0: convert-names in parse-traces
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((in stream-address)) <- ((next-input))) nil nil
cn0: checking oarg ((in stream-address))
maybe-add: ((in stream-address))
cn0: location for oarg ((in stream-address)): 1
cn0: (((result buffer-address)) <- ((init-buffer)) ((30 literal))) ((in 1)) nil
cn0: checking arg ((30 literal))
cn0: checking oarg ((result buffer-address))
maybe-add: ((result buffer-address))
cn0: location for oarg ((result buffer-address)): 2
cn0: (((curr-tail instruction-trace-address)) <- ((copy)) ((nil literal))) ((in 1) (result 2)) nil
cn0: checking arg ((nil literal))
cn0: checking oarg ((curr-tail instruction-trace-address))
maybe-add: ((curr-tail instruction-trace-address))
cn0: location for oarg ((curr-tail instruction-trace-address)): 3
cn0: (((ch buffer-address)) <- ((init-buffer)) ((5 literal))) ((curr-tail 3) (in 1) (result 2)) nil
cn0: checking arg ((5 literal))
cn0: checking oarg ((ch buffer-address))
maybe-add: ((ch buffer-address))
cn0: location for oarg ((ch buffer-address)): 4
cn0: (((run string-address) (const)) <- ((new)) run) ((ch 4) (curr-tail 3) (in 1) (result 2)) nil
cn0: checking arg run
cn0: checking oarg ((run string-address) (const))
maybe-add: ((run string-address) (const))
cn0: location for oarg ((run string-address) (const)): 5
cn0: (((done? boolean)) <- ((end-of-stream?)) ((in stream-address))) ((ch 4) (curr-tail 3) (in 1) (result 2) (run 5)) nil
cn0: checking arg ((in stream-address))
maybe-add: ((in stream-address))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 6
cn0: (((jump-if)) ((done? boolean)) ((15 offset))) ((ch 4) (curr-tail 3) (done? 6) (in 1) (result 2) (run 5)) nil
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((15 offset))
cn0: (((line string-address)) <- ((read-line)) ((in stream-address))) ((ch 4) (curr-tail 3) (done? 6) (in 1) (result 2) (run 5)) nil
cn0: checking arg ((in stream-address))
maybe-add: ((in stream-address))
cn0: checking oarg ((line string-address))
maybe-add: ((line string-address))
cn0: location for oarg ((line string-address)): 7
cn0: (((f trace-address)) <- ((parse-trace)) ((line string-address))) ((ch 4) (curr-tail 3) (done? 6) (in 1) (line 7) (result 2) (run 5)) nil
cn0: checking arg ((line string-address))
maybe-add: ((line string-address))
cn0: checking oarg ((f trace-address))
maybe-add: ((f trace-address))
cn0: location for oarg ((f trace-address)): 8
cn0: (((l string-address)) <- ((get)) ((f trace-address) (deref)) ((label offset))) ((ch 4) (curr-tail 3) (done? 6) (f 8) (in 1) (line 7) (result 2) (run 5)) nil
cn0: field-access label in ftrace-addressderef of type trace
cn0: new field; computing location
cn0: field location 0
cn0: checking arg ((f trace-address) (deref))
maybe-add: ((f trace-address) (deref))
cn0: checking arg ((label offset))
cn0: checking oarg ((l string-address))
maybe-add: ((l string-address))
cn0: location for oarg ((l string-address)): 9
cn0: (((inst? boolean)) <- ((string-equal)) ((l string-address)) ((run string-address) (const))) ((ch 4) (curr-tail 3) (done? 6) (f 8) (in 1) (l 9) (label 0) (line 7) (result 2) (run 5)) ((label t))
cn0: checking arg ((l string-address))
maybe-add: ((l string-address))
cn0: checking arg ((run string-address) (const))
maybe-add: ((run string-address) (const))
cn0: checking oarg ((inst? boolean))
maybe-add: ((inst? boolean))
cn0: location for oarg ((inst? boolean)): 10
cn0: (((jump-unless)) ((inst? boolean)) ((7 offset))) ((ch 4) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((label t))
cn0: checking arg ((inst? boolean))
maybe-add: ((inst? boolean))
cn0: checking arg ((7 offset))
cn0: (((jump-unless)) ((curr-tail instruction-trace-address)) ((3 offset))) ((ch 4) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((label t))
cn0: checking arg ((curr-tail instruction-trace-address))
maybe-add: ((curr-tail instruction-trace-address))
cn0: checking arg ((3 offset))
cn0: (((c trace-address-array-address-address)) <- ((get-address)) ((curr-tail instruction-trace-address) (deref)) ((children offset))) ((ch 4) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((label t))
cn0: field-access children in curr-tailinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 3
cn0: checking arg ((curr-tail instruction-trace-address) (deref))
maybe-add: ((curr-tail instruction-trace-address) (deref))
cn0: checking arg ((children offset))
cn0: checking oarg ((c trace-address-array-address-address))
maybe-add: ((c trace-address-array-address-address))
cn0: location for oarg ((c trace-address-array-address-address)): 11
cn0: (((c trace-address-array-address-address) (deref)) <- ((to-array)) ((ch buffer-address))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((ch buffer-address))
maybe-add: ((ch buffer-address))
cn0: checking oarg ((c trace-address-array-address-address) (deref))
maybe-add: ((c trace-address-array-address-address) (deref))
cn0: (((ch buffer-address)) <- ((init-buffer)) ((5 literal))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((5 literal))
cn0: checking oarg ((ch buffer-address))
maybe-add: ((ch buffer-address))
cn0: (((curr-tail instruction-trace-address)) <- ((parse-instruction-trace)) ((f trace-address))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((f trace-address))
maybe-add: ((f trace-address))
cn0: checking oarg ((curr-tail instruction-trace-address))
maybe-add: ((curr-tail instruction-trace-address))
cn0: (((result buffer-address)) <- ((append)) ((result buffer-address)) ((curr-tail instruction-trace-address))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((result buffer-address))
maybe-add: ((result buffer-address))
cn0: checking arg ((curr-tail instruction-trace-address))
maybe-add: ((curr-tail instruction-trace-address))
cn0: checking oarg ((result buffer-address))
maybe-add: ((result buffer-address))
cn0: (((jump)) ((-15 offset))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((-15 offset))
cn0: (((jump-unless)) ((curr-tail instruction-trace-address)) ((-16 offset))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((curr-tail instruction-trace-address))
maybe-add: ((curr-tail instruction-trace-address))
cn0: checking arg ((-16 offset))
cn0: (((ch buffer-address)) <- ((append)) ((ch buffer-address)) ((f trace-address))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((ch buffer-address))
maybe-add: ((ch buffer-address))
cn0: checking arg ((f trace-address))
maybe-add: ((f trace-address))
cn0: checking oarg ((ch buffer-address))
maybe-add: ((ch buffer-address))
cn0: (((jump)) ((-18 offset))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((-18 offset))
cn0: (((jump-unless)) ((curr-tail instruction-trace-address)) ((2 offset))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((curr-tail instruction-trace-address))
maybe-add: ((curr-tail instruction-trace-address))
cn0: checking arg ((2 offset))
cn0: (((c trace-address-array-address-address)) <- ((get-address)) ((curr-tail instruction-trace-address) (deref)) ((children offset))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: field-access children in curr-tailinstruction-trace-addressderef of type instruction-trace
cn0: checking arg ((curr-tail instruction-trace-address) (deref))
maybe-add: ((curr-tail instruction-trace-address) (deref))
cn0: checking arg ((children offset))
cn0: checking oarg ((c trace-address-array-address-address))
maybe-add: ((c trace-address-array-address-address))
cn0: (((c trace-address-array-address-address) (deref)) <- ((to-array)) ((ch buffer-address))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((ch buffer-address))
maybe-add: ((ch buffer-address))
cn0: checking oarg ((c trace-address-array-address-address) (deref))
maybe-add: ((c trace-address-array-address-address) (deref))
cn0: (((s instruction-trace-address-array-address)) <- ((to-array)) ((result buffer-address))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((result buffer-address))
maybe-add: ((result buffer-address))
cn0: checking oarg ((s instruction-trace-address-array-address))
maybe-add: ((s instruction-trace-address-array-address))
cn0: location for oarg ((s instruction-trace-address-array-address)): 12
cn0: (((reply)) ((s instruction-trace-address-array-address))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5) (s 12)) ((children t) (label t))
cn0: checking arg ((s instruction-trace-address-array-address))
maybe-add: ((s instruction-trace-address-array-address))
cn0: convert-names in print-instruction-trace
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((x instruction-trace-address)) <- ((next-input))) ((screen 1)) nil
cn0: checking oarg ((x instruction-trace-address))
maybe-add: ((x instruction-trace-address))
cn0: location for oarg ((x instruction-trace-address)): 2
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) ((screen 1) (x 2)) nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((clear-line)) ((screen terminal-address))) ((screen 1) (x 2)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((print-character)) ((screen terminal-address)) ((- literal))) ((screen 1) (x 2)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((- literal))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((screen 1) (x 2)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((c string-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((call-stack offset))) ((screen 1) (x 2)) nil
cn0: field-access call-stack in xinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 0
cn0: checking arg ((x instruction-trace-address) (deref))
maybe-add: ((x instruction-trace-address) (deref))
cn0: checking arg ((call-stack offset))
cn0: checking oarg ((c string-address-array-address))
maybe-add: ((c string-address-array-address))
cn0: location for oarg ((c string-address-array-address)): 3
cn0: (((i integer)) <- ((copy)) ((0 literal))) ((c 3) (call-stack 0) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((0 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: location for oarg ((i integer)): 4
cn0: (((len integer)) <- ((length)) ((c string-address-array-address) (deref))) ((c 3) (call-stack 0) (i 4) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((c string-address-array-address) (deref))
maybe-add: ((c string-address-array-address) (deref))
cn0: checking oarg ((len integer))
maybe-add: ((len integer))
cn0: location for oarg ((len integer)): 5
cn0: (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer))) ((c 3) (call-stack 0) (i 4) (len 5) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((len integer))
maybe-add: ((len integer))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 6
cn0: (((jump-if)) ((done? boolean)) ((5 offset))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((5 offset))
cn0: (((s string-address)) <- ((index)) ((c string-address-array-address) (deref)) ((i integer))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((c string-address-array-address) (deref))
maybe-add: ((c string-address-array-address) (deref))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking oarg ((s string-address))
maybe-add: ((s string-address))
cn0: location for oarg ((s string-address)): 7
cn0: (((print-string)) ((screen terminal-address)) ((s string-address))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (s 7) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((s string-address))
maybe-add: ((s string-address))
cn0: (((print-character)) ((screen terminal-address)) ((/ literal))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (s 7) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((/ literal))
cn0: (((i integer)) <- ((add)) ((i integer)) ((1 literal))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (s 7) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: (((jump)) ((-7 offset))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (s 7) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((-7 offset))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (s 7) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((p string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((pc offset))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (s 7) (screen 1) (x 2)) ((call-stack t))
cn0: field-access pc in xinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 1
cn0: checking arg ((x instruction-trace-address) (deref))
maybe-add: ((x instruction-trace-address) (deref))
cn0: checking arg ((pc offset))
cn0: checking oarg ((p string-address))
maybe-add: ((p string-address))
cn0: location for oarg ((p string-address)): 8
cn0: (((print-string)) ((screen terminal-address)) ((p string-address))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((p string-address))
maybe-add: ((p string-address))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((print-character)) ((screen terminal-address)) ((: literal))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((: literal))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((i string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((instruction offset))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (pc t))
cn0: field-access instruction in xinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 2
cn0: checking arg ((x instruction-trace-address) (deref))
maybe-add: ((x instruction-trace-address) (deref))
cn0: checking arg ((instruction offset))
cn0: checking oarg ((i string-address))
maybe-add: ((i string-address))
cn0: (((print-string)) ((screen terminal-address)) ((i string-address))) ((c 3) (call-stack 0) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (instruction t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((i string-address))
maybe-add: ((i string-address))
cn0: (((add-line)) ((0 space-address) (screen-state)) ((screen terminal-address))) ((c 3) (call-stack 0) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (instruction t) (pc t))
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((ch trace-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((children offset))) ((c 3) (call-stack 0) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (instruction t) (pc t))
cn0: field-access children in xinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 3
cn0: checking arg ((x instruction-trace-address) (deref))
maybe-add: ((x instruction-trace-address) (deref))
cn0: checking arg ((children offset))
cn0: checking oarg ((ch trace-address-array-address))
maybe-add: ((ch trace-address-array-address))
cn0: location for oarg ((ch trace-address-array-address)): 9
cn0: (((i integer)) <- ((copy)) ((0 literal))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((0 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: (((jump-if)) ((ch trace-address-array-address)) ((1 offset))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((ch trace-address-array-address))
maybe-add: ((ch trace-address-array-address))
cn0: checking arg ((1 offset))
cn0: (((reply))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: (((len integer)) <- ((length)) ((ch trace-address-array-address) (deref))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((ch trace-address-array-address) (deref))
maybe-add: ((ch trace-address-array-address) (deref))
cn0: checking oarg ((len integer))
maybe-add: ((len integer))
cn0: (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((len integer))
maybe-add: ((len integer))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: (((jump-if)) ((done? boolean)) ((10 offset))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((10 offset))
cn0: (((screen-done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((screen-height integer) (space 1))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((screen-height integer) (space 1))
maybe-add: ((screen-height integer) (space 1))
cn0: checking oarg ((screen-done? boolean))
maybe-add: ((screen-done? boolean))
cn0: location for oarg ((screen-done? boolean)): 10
cn0: (((jump-if)) ((screen-done? boolean)) ((8 offset))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((screen-done? boolean))
maybe-add: ((screen-done? boolean))
cn0: checking arg ((8 offset))
cn0: (((t trace-address)) <- ((index)) ((ch trace-address-array-address) (deref)) ((i integer))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((ch trace-address-array-address) (deref))
maybe-add: ((ch trace-address-array-address) (deref))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking oarg ((t trace-address))
maybe-add: ((t trace-address))
cn0: location for oarg ((t trace-address)): 11
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (t 11) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (t 11) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (t 11) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((print-trace)) ((screen terminal-address)) ((t trace-address))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (t 11) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((t trace-address))
maybe-add: ((t trace-address))
cn0: (((add-line)) ((0 space-address) (screen-state)) ((screen terminal-address))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (t 11) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((i integer)) <- ((add)) ((i integer)) ((1 literal))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (t 11) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: (((jump)) ((-12 offset))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (t 11) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((-12 offset))
cn0: convert-names in print-instruction-trace-collapsed
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((screen terminal)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal))
maybe-add: ((screen terminal))
cn0: location for oarg ((screen terminal)): 1
cn0: (((x instruction-trace-address)) <- ((next-input))) ((screen 1)) nil
cn0: checking oarg ((x instruction-trace-address))
maybe-add: ((x instruction-trace-address))
cn0: location for oarg ((x instruction-trace-address)): 6
cn0: (((screen-state space-address)) <- ((next-input))) ((screen 1) (x 6)) nil
cn0: checking oarg ((screen-state space-address))
maybe-add: ((screen-state space-address))
cn0: location for oarg ((screen-state space-address)): 7
cn0: (((clear-line)) ((screen terminal-address))) ((screen 1) (screen-state 7) (x 6)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((print-character)) ((screen terminal-address)) ((+ literal))) ((screen 1) (screen-state 7) (x 6)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((+ literal))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((screen 1) (screen-state 7) (x 6)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((c string-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((call-stack offset))) ((screen 1) (screen-state 7) (x 6)) nil
cn0: field-access call-stack in xinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 0
cn0: checking arg ((x instruction-trace-address) (deref))
maybe-add: ((x instruction-trace-address) (deref))
cn0: checking arg ((call-stack offset))
cn0: checking oarg ((c string-address-array-address))
maybe-add: ((c string-address-array-address))
cn0: location for oarg ((c string-address-array-address)): 8
cn0: (((i integer)) <- ((copy)) ((0 literal))) ((c 8) (call-stack 0) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((0 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: location for oarg ((i integer)): 9
cn0: (((len integer)) <- ((length)) ((c string-address-array-address) (deref))) ((c 8) (call-stack 0) (i 9) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((c string-address-array-address) (deref))
maybe-add: ((c string-address-array-address) (deref))
cn0: checking oarg ((len integer))
maybe-add: ((len integer))
cn0: location for oarg ((len integer)): 10
cn0: (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer))) ((c 8) (call-stack 0) (i 9) (len 10) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((len integer))
maybe-add: ((len integer))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 11
cn0: (((jump-if)) ((done? boolean)) ((5 offset))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((5 offset))
cn0: (((s string-address)) <- ((index)) ((c string-address-array-address) (deref)) ((i integer))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((c string-address-array-address) (deref))
maybe-add: ((c string-address-array-address) (deref))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking oarg ((s string-address))
maybe-add: ((s string-address))
cn0: location for oarg ((s string-address)): 12
cn0: (((print-string)) ((screen terminal-address)) ((s string-address))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((s string-address))
maybe-add: ((s string-address))
cn0: (((print-character)) ((screen terminal-address)) ((/ literal))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((/ literal))
cn0: (((i integer)) <- ((add)) ((i integer)) ((1 literal))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: (((jump)) ((-7 offset))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((-7 offset))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((p string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((pc offset))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: field-access pc in xinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 1
cn0: checking arg ((x instruction-trace-address) (deref))
maybe-add: ((x instruction-trace-address) (deref))
cn0: checking arg ((pc offset))
cn0: checking oarg ((p string-address))
maybe-add: ((p string-address))
cn0: location for oarg ((p string-address)): 13
cn0: (((print-string)) ((screen terminal-address)) ((p string-address))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (p 13) (pc 1) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((p string-address))
maybe-add: ((p string-address))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (p 13) (pc 1) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((print-character)) ((screen terminal-address)) ((: literal))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (p 13) (pc 1) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((: literal))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (p 13) (pc 1) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((i string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((instruction offset))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (p 13) (pc 1) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t) (pc t))
cn0: field-access instruction in xinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 2
cn0: checking arg ((x instruction-trace-address) (deref))
maybe-add: ((x instruction-trace-address) (deref))
cn0: checking arg ((instruction offset))
cn0: checking oarg ((i string-address))
maybe-add: ((i string-address))
cn0: (((print-string)) ((screen terminal-address)) ((i string-address))) ((c 8) (call-stack 0) (done? 11) (i 9) (instruction 2) (len 10) (p 13) (pc 1) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t) (instruction t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((i string-address))
maybe-add: ((i string-address))
cn0: (((add-line)) ((screen-state space-address)) ((screen terminal-address))) ((c 8) (call-stack 0) (done? 11) (i 9) (instruction 2) (len 10) (p 13) (pc 1) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t) (instruction t) (pc t))
cn0: checking arg ((screen-state space-address))
maybe-add: ((screen-state space-address))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: convert-names in print-trace
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((x trace-address)) <- ((next-input))) ((screen 1)) nil
cn0: checking oarg ((x trace-address))
maybe-add: ((x trace-address))
cn0: location for oarg ((x trace-address)): 2
cn0: (((l string-address)) <- ((get)) ((x trace-address) (deref)) ((label offset))) ((screen 1) (x 2)) nil
cn0: field-access label in xtrace-addressderef of type trace
cn0: new field; computing location
cn0: field location 0
cn0: checking arg ((x trace-address) (deref))
maybe-add: ((x trace-address) (deref))
cn0: checking arg ((label offset))
cn0: checking oarg ((l string-address))
maybe-add: ((l string-address))
cn0: location for oarg ((l string-address)): 3
cn0: (((clear-line)) ((screen terminal-address))) ((l 3) (label 0) (screen 1) (x 2)) ((label t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((print-string)) ((screen terminal-address)) ((l string-address))) ((l 3) (label 0) (screen 1) (x 2)) ((label t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((l string-address))
maybe-add: ((l string-address))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((l 3) (label 0) (screen 1) (x 2)) ((label t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((print-character)) ((screen terminal-address)) ((: literal))) ((l 3) (label 0) (screen 1) (x 2)) ((label t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((: literal))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((l 3) (label 0) (screen 1) (x 2)) ((label t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((c string-address)) <- ((get)) ((x trace-address) (deref)) ((contents offset))) ((l 3) (label 0) (screen 1) (x 2)) ((label t))
cn0: field-access contents in xtrace-addressderef of type trace
cn0: new field; computing location
cn0: field location 1
cn0: checking arg ((x trace-address) (deref))
maybe-add: ((x trace-address) (deref))
cn0: checking arg ((contents offset))
cn0: checking oarg ((c string-address))
maybe-add: ((c string-address))
cn0: location for oarg ((c string-address)): 4
cn0: (((print-string)) ((screen terminal-address)) ((c string-address))) ((c 4) (contents 1) (l 3) (label 0) (screen 1) (x 2)) ((contents t) (label t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((c string-address))
maybe-add: ((c string-address))
cn0: convert-names in print-traces-collapsed
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((0 literal) (from))) ((screen 1)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((0 literal) (from))
cn0: convert-names in print-traces-collapsed-from
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((trace-index integer)) <- ((next-input))) ((screen 1)) nil
cn0: checking oarg ((trace-index integer))
maybe-add: ((trace-index integer))
cn0: location for oarg ((trace-index integer)): 2
cn0: (((len integer)) <- ((length)) ((traces instruction-trace-address-array-address) (space 1) (deref))) ((screen 1) (trace-index 2)) nil
cn0: checking arg ((traces instruction-trace-address-array-address) (space 1) (deref))
maybe-add: ((traces instruction-trace-address-array-address) (space 1) (deref))
cn0: checking oarg ((len integer))
maybe-add: ((len integer))
cn0: location for oarg ((len integer)): 3
cn0: (((height integer)) <- ((min)) ((len integer)) ((screen-height integer) (space 1))) ((len 3) (screen 1) (trace-index 2)) nil
cn0: checking arg ((len integer))
maybe-add: ((len integer))
cn0: checking arg ((screen-height integer) (space 1))
maybe-add: ((screen-height integer) (space 1))
cn0: checking oarg ((height integer))
maybe-add: ((height integer))
cn0: location for oarg ((height integer)): 4
cn0: (((trace-done? boolean)) <- ((greater-or-equal)) ((trace-index integer)) ((len integer))) ((height 4) (len 3) (screen 1) (trace-index 2)) nil
cn0: checking arg ((trace-index integer))
maybe-add: ((trace-index integer))
cn0: checking arg ((len integer))
maybe-add: ((len integer))
cn0: checking oarg ((trace-done? boolean))
maybe-add: ((trace-done? boolean))
cn0: location for oarg ((trace-done? boolean)): 5
cn0: (((jump-if)) ((trace-done? boolean)) ((6 offset))) ((height 4) (len 3) (screen 1) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((trace-done? boolean))
maybe-add: ((trace-done? boolean))
cn0: checking arg ((6 offset))
cn0: (((screen-done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((screen-height integer) (space 1))) ((height 4) (len 3) (screen 1) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((screen-height integer) (space 1))
maybe-add: ((screen-height integer) (space 1))
cn0: checking oarg ((screen-done? boolean))
maybe-add: ((screen-done? boolean))
cn0: location for oarg ((screen-done? boolean)): 6
cn0: (((jump-if)) ((screen-done? boolean)) ((4 offset))) ((height 4) (len 3) (screen 1) (screen-done? 6) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((screen-done? boolean))
maybe-add: ((screen-done? boolean))
cn0: checking arg ((4 offset))
cn0: (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((trace-index integer))) ((height 4) (len 3) (screen 1) (screen-done? 6) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((traces instruction-trace-address-array-address) (space 1) (deref))
maybe-add: ((traces instruction-trace-address-array-address) (space 1) (deref))
cn0: checking arg ((trace-index integer))
maybe-add: ((trace-index integer))
cn0: checking oarg ((tr instruction-trace-address))
maybe-add: ((tr instruction-trace-address))
cn0: location for oarg ((tr instruction-trace-address)): 7
cn0: (((print-instruction-trace-collapsed)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state))) ((height 4) (len 3) (screen 1) (screen-done? 6) (tr 7) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((tr instruction-trace-address))
maybe-add: ((tr instruction-trace-address))
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: (((trace-index integer)) <- ((add)) ((trace-index integer)) ((1 literal))) ((height 4) (len 3) (screen 1) (screen-done? 6) (tr 7) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((trace-index integer))
maybe-add: ((trace-index integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((trace-index integer))
maybe-add: ((trace-index integer))
cn0: (((jump)) ((-8 offset))) ((height 4) (len 3) (screen 1) (screen-done? 6) (tr 7) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((-8 offset))
cn0: (((done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((app-height integer) (space 1))) ((height 4) (len 3) (screen 1) (screen-done? 6) (tr 7) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((app-height integer) (space 1))
maybe-add: ((app-height integer) (space 1))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 8
cn0: (((jump-if)) ((done? boolean)) ((3 offset))) ((done? 8) (height 4) (len 3) (screen 1) (screen-done? 6) (tr 7) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((3 offset))
cn0: (((clear-line)) ((screen terminal-address))) ((done? 8) (height 4) (len 3) (screen 1) (screen-done? 6) (tr 7) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((down)) ((0 space-address) (screen-state)) ((screen terminal-address))) ((done? 8) (height 4) (len 3) (screen 1) (screen-done? 6) (tr 7) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((jump)) ((-5 offset))) ((done? 8) (height 4) (len 3) (screen 1) (screen-done? 6) (tr 7) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((-5 offset))
cn0: convert-names in process-key
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((k keyboard-address)) <- ((next-input))) nil nil
cn0: checking oarg ((k keyboard-address))
maybe-add: ((k keyboard-address))
cn0: location for oarg ((k keyboard-address)): 1
cn0: (((screen terminal-address)) <- ((next-input))) ((k 1)) nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 2
cn0: (((c character)) <- ((read-key)) ((k keyboard-address)) ((silent literal) (terminal))) ((k 1) (screen 2)) nil
cn0: checking arg ((k keyboard-address))
maybe-add: ((k keyboard-address))
cn0: checking arg ((silent literal) (terminal))
cn0: checking oarg ((c character))
maybe-add: ((c character))
cn0: location for oarg ((c character)): 3
cn0: (((jump-if)) ((c character)) ((1 offset))) ((c 3) (k 1) (screen 2)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((1 offset))
cn0: (((reply)) ((nil literal))) ((c 3) (k 1) (screen 2)) nil
cn0: checking arg ((nil literal))
cn0: (((q-pressed? boolean)) <- ((equal)) ((c character)) ((q literal))) ((c 3) (k 1) (screen 2)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((q literal))
cn0: checking oarg ((q-pressed? boolean))
maybe-add: ((q-pressed? boolean))
cn0: location for oarg ((q-pressed? boolean)): 4
cn0: (((end-of-fake-keyboard-input? boolean)) <- ((equal)) ((c character)) ((  literal))) ((c 3) (k 1) (q-pressed? 4) (screen 2)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((  literal))
cn0: checking oarg ((end-of-fake-keyboard-input? boolean))
maybe-add: ((end-of-fake-keyboard-input? boolean))
cn0: location for oarg ((end-of-fake-keyboard-input? boolean)): 5
cn0: (((quit? boolean)) <- ((or)) ((q-pressed? boolean)) ((end-of-fake-keyboard-input? boolean))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (q-pressed? 4) (screen 2)) nil
cn0: checking arg ((q-pressed? boolean))
maybe-add: ((q-pressed? boolean))
cn0: checking arg ((end-of-fake-keyboard-input? boolean))
maybe-add: ((end-of-fake-keyboard-input? boolean))
cn0: checking oarg ((quit? boolean))
maybe-add: ((quit? boolean))
cn0: location for oarg ((quit? boolean)): 6
cn0: (((jump-unless)) ((quit? boolean)) ((1 offset))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (q-pressed? 4) (quit? 6) (screen 2)) nil
cn0: checking arg ((quit? boolean))
maybe-add: ((quit? boolean))
cn0: checking arg ((1 offset))
cn0: (((reply)) ((t literal))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (q-pressed? 4) (quit? 6) (screen 2)) nil
cn0: checking arg ((t literal))
cn0: (((up? boolean)) <- ((equal)) ((c character)) ((up literal))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (q-pressed? 4) (quit? 6) (screen 2)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((up literal))
cn0: checking oarg ((up? boolean))
maybe-add: ((up? boolean))
cn0: location for oarg ((up? boolean)): 7
cn0: (((k? boolean)) <- ((equal)) ((c character)) ((k literal))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((k literal))
cn0: checking oarg ((k? boolean))
maybe-add: ((k? boolean))
cn0: location for oarg ((k? boolean)): 8
cn0: (((up? boolean)) <- ((or)) ((up? boolean)) ((k? boolean))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((up? boolean))
maybe-add: ((up? boolean))
cn0: checking arg ((k? boolean))
maybe-add: ((k? boolean))
cn0: checking oarg ((up? boolean))
maybe-add: ((up? boolean))
cn0: (((jump-unless)) ((up? boolean)) ((2 offset))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((up? boolean))
maybe-add: ((up? boolean))
cn0: checking arg ((2 offset))
cn0: (((up)) ((0 space-address) (screen-state)) ((screen terminal-address))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((reply)) ((nil literal))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((nil literal))
cn0: (((down? boolean)) <- ((equal)) ((c character)) ((down literal))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((down literal))
cn0: checking oarg ((down? boolean))
maybe-add: ((down? boolean))
cn0: location for oarg ((down? boolean)): 9
cn0: (((j? boolean)) <- ((equal)) ((c character)) ((j literal))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((j literal))
cn0: checking oarg ((j? boolean))
maybe-add: ((j? boolean))
cn0: location for oarg ((j? boolean)): 10
cn0: (((down? boolean)) <- ((or)) ((down? boolean)) ((j? boolean))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((down? boolean))
maybe-add: ((down? boolean))
cn0: checking arg ((j? boolean))
maybe-add: ((j? boolean))
cn0: checking oarg ((down? boolean))
maybe-add: ((down? boolean))
cn0: (((jump-unless)) ((down? boolean)) ((2 offset))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((down? boolean))
maybe-add: ((down? boolean))
cn0: checking arg ((2 offset))
cn0: (((down)) ((0 space-address) (screen-state)) ((screen terminal-address))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((reply)) ((nil literal))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((nil literal))
cn0: (((toggle? boolean)) <- ((equal)) ((c character)) ((
 literal))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((
 literal))
cn0: checking oarg ((toggle? boolean))
maybe-add: ((toggle? boolean))
cn0: location for oarg ((toggle? boolean)): 11
cn0: (((jump-unless)) ((toggle? boolean)) ((28 offset))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((toggle? boolean))
maybe-add: ((toggle? boolean))
cn0: checking arg ((28 offset))
cn0: (((original-cursor-row integer)) <- ((copy)) ((cursor-row integer) (space 1))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking oarg ((original-cursor-row integer))
maybe-add: ((original-cursor-row integer))
cn0: location for oarg ((original-cursor-row integer)): 12
cn0: (((original-trace-index integer)) <- ((cursor-row-to-trace-index)) ((0 space-address) (screen-state)) ((original-cursor-row integer))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((original-cursor-row integer))
maybe-add: ((original-cursor-row integer))
cn0: checking oarg ((original-trace-index integer))
maybe-add: ((original-trace-index integer))
cn0: location for oarg ((original-trace-index integer)): 13
cn0: (((expanded? boolean)) <- ((greater-or-equal)) ((expanded-index integer) (space 1)) ((0 literal))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking arg ((0 literal))
cn0: checking oarg ((expanded? boolean))
maybe-add: ((expanded? boolean))
cn0: location for oarg ((expanded? boolean)): 14
cn0: (((jump-unless)) ((expanded? boolean)) ((17 offset))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((expanded? boolean))
maybe-add: ((expanded? boolean))
cn0: checking arg ((17 offset))
cn0: (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking oarg ((at-expanded? boolean))
maybe-add: ((at-expanded? boolean))
cn0: location for oarg ((at-expanded? boolean)): 15
cn0: (((jump-unless)) ((at-expanded? boolean)) ((4 offset))) ((at-expanded? 15) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((at-expanded? boolean))
maybe-add: ((at-expanded? boolean))
cn0: checking arg ((4 offset))
cn0: (((expanded-index integer) (space 1)) <- ((copy)) ((-1 literal))) ((at-expanded? 15) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((-1 literal))
cn0: checking oarg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((cursor-row integer) (space 1))) ((at-expanded? 15) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: (((back-to)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((original-cursor-row integer))) ((at-expanded? 15) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((original-cursor-row integer))
maybe-add: ((original-cursor-row integer))
cn0: (((reply))) ((at-expanded? 15) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: (((below-expanded? boolean)) <- ((greater-than)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1))) ((at-expanded? 15) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking oarg ((below-expanded? boolean))
maybe-add: ((below-expanded? boolean))
cn0: location for oarg ((below-expanded? boolean)): 16
cn0: (((jump-unless)) ((below-expanded? boolean)) ((9 offset))) ((at-expanded? 15) (below-expanded? 16) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((below-expanded? boolean))
maybe-add: ((below-expanded? boolean))
cn0: checking arg ((9 offset))
cn0: (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1))) ((at-expanded? 15) (below-expanded? 16) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking oarg ((at-expanded? boolean))
maybe-add: ((at-expanded? boolean))
cn0: (((jump-if)) ((at-expanded? boolean)) ((2 offset))) ((at-expanded? 15) (below-expanded? 16) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((at-expanded? boolean))
maybe-add: ((at-expanded? boolean))
cn0: checking arg ((2 offset))
cn0: (((up)) ((0 space-address)) ((screen terminal-address))) ((at-expanded? 15) (below-expanded? 16) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((0 space-address))
maybe-add: ((0 space-address))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((jump)) ((-4 offset))) ((at-expanded? 15) (below-expanded? 16) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((-4 offset))
cn0: (((done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((original-trace-index integer))) ((at-expanded? 15) (below-expanded? 16) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((original-trace-index integer))
maybe-add: ((original-trace-index integer))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 17
cn0: (((jump-if)) ((done? boolean)) ((3 offset))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((3 offset))
cn0: (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((cursor-row integer) (space 1))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((traces instruction-trace-address-array-address) (space 1) (deref))
maybe-add: ((traces instruction-trace-address-array-address) (space 1) (deref))
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking oarg ((tr instruction-trace-address))
maybe-add: ((tr instruction-trace-address))
cn0: location for oarg ((tr instruction-trace-address)): 18
cn0: (((print-instruction-trace-collapsed)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((tr instruction-trace-address))
maybe-add: ((tr instruction-trace-address))
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: (((jump)) ((-5 offset))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((-5 offset))
cn0: (((expanded-index integer) (space 1)) <- ((copy)) ((original-trace-index integer))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((original-trace-index integer))
maybe-add: ((original-trace-index integer))
cn0: checking oarg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((original-trace-index integer))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((traces instruction-trace-address-array-address) (space 1) (deref))
maybe-add: ((traces instruction-trace-address-array-address) (space 1) (deref))
cn0: checking arg ((original-trace-index integer))
maybe-add: ((original-trace-index integer))
cn0: checking oarg ((tr instruction-trace-address))
maybe-add: ((tr instruction-trace-address))
cn0: (((print-instruction-trace)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((tr instruction-trace-address))
maybe-add: ((tr instruction-trace-address))
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: (((next-index integer)) <- ((add)) ((original-trace-index integer)) ((1 literal))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((original-trace-index integer))
maybe-add: ((original-trace-index integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((next-index integer))
maybe-add: ((next-index integer))
cn0: location for oarg ((next-index integer)): 19
cn0: (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((next-index integer))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (next-index 19) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((next-index integer))
maybe-add: ((next-index integer))
cn0: (((back-to)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((original-trace-index integer))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (next-index 19) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((original-trace-index integer))
maybe-add: ((original-trace-index integer))
cn0: (((reply)) ((nil literal))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (next-index 19) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((nil literal))
cn0: (((reply)) ((nil literal))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (next-index 19) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((nil literal))
cn0: convert-names in screen-state
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((traces instruction-trace-address-array-address)) <- ((next-input))) nil nil
cn0: checking oarg ((traces instruction-trace-address-array-address))
maybe-add: ((traces instruction-trace-address-array-address))
cn0: location for oarg ((traces instruction-trace-address-array-address)): 1
cn0: (((screen-height integer)) <- ((next-input))) ((traces 1)) nil
cn0: checking oarg ((screen-height integer))
maybe-add: ((screen-height integer))
cn0: location for oarg ((screen-height integer)): 2
cn0: (((app-height integer)) <- ((copy)) ((0 literal))) ((screen-height 2) (traces 1)) nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((app-height integer))
maybe-add: ((app-height integer))
cn0: location for oarg ((app-height integer)): 3
cn0: (((printed-height integer)) <- ((copy)) ((0 literal))) ((app-height 3) (screen-height 2) (traces 1)) nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((printed-height integer))
maybe-add: ((printed-height integer))
cn0: location for oarg ((printed-height integer)): 4
cn0: (((cursor-row integer)) <- ((copy)) ((0 literal))) ((app-height 3) (printed-height 4) (screen-height 2) (traces 1)) nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((cursor-row integer))
maybe-add: ((cursor-row integer))
cn0: location for oarg ((cursor-row integer)): 5
cn0: (((expanded-index integer)) <- ((copy)) ((-1 literal))) ((app-height 3) (cursor-row 5) (printed-height 4) (screen-height 2) (traces 1)) nil
cn0: checking arg ((-1 literal))
cn0: checking oarg ((expanded-index integer))
maybe-add: ((expanded-index integer))
cn0: location for oarg ((expanded-index integer)): 6
cn0: (((reply)) ((default-space space-address))) ((app-height 3) (cursor-row 5) (expanded-index 6) (printed-height 4) (screen-height 2) (traces 1)) nil
cn0: checking arg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: convert-names in to-bottom
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1))) ((screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((printed-height integer) (space 1))
maybe-add: ((printed-height integer) (space 1))
cn0: checking oarg ((at-bottom? boolean))
maybe-add: ((at-bottom? boolean))
cn0: location for oarg ((at-bottom? boolean)): 2
cn0: (((jump-if)) ((at-bottom? boolean)) ((2 offset))) ((at-bottom? 2) (screen 1)) nil
cn0: checking arg ((at-bottom? boolean))
maybe-add: ((at-bottom? boolean))
cn0: checking arg ((2 offset))
cn0: (((down)) ((0 space-address)) ((screen terminal-address))) ((at-bottom? 2) (screen 1)) nil
cn0: checking arg ((0 space-address))
maybe-add: ((0 space-address))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((jump)) ((-4 offset))) ((at-bottom? 2) (screen 1)) nil
cn0: checking arg ((-4 offset))
cn0: convert-names in up
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((no-expanded? boolean)) <- ((less-than)) ((expanded-index integer) (space 1)) ((0 literal))) ((screen 1)) nil
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking arg ((0 literal))
cn0: checking oarg ((no-expanded? boolean))
maybe-add: ((no-expanded? boolean))
cn0: location for oarg ((no-expanded? boolean)): 2
cn0: (((jump-if)) ((no-expanded? boolean)) ((13 offset))) ((no-expanded? 2) (screen 1)) nil
cn0: checking arg ((no-expanded? boolean))
maybe-add: ((no-expanded? boolean))
cn0: checking arg ((13 offset))
cn0: (((n integer)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1))) ((no-expanded? 2) (screen 1)) nil
cn0: checking arg ((traces instruction-trace-address-array-address) (space 1))
maybe-add: ((traces instruction-trace-address-array-address) (space 1))
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking oarg ((n integer))
maybe-add: ((n integer))
cn0: location for oarg ((n integer)): 3
cn0: (((n integer)) <- ((add)) ((n integer)) ((1 literal))) ((n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((n integer))
maybe-add: ((n integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((n integer))
maybe-add: ((n integer))
cn0: (((cursor-row-below-expanded integer)) <- ((add)) ((expanded-index integer) (space 1)) ((n integer))) ((n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking arg ((n integer))
maybe-add: ((n integer))
cn0: checking oarg ((cursor-row-below-expanded integer))
maybe-add: ((cursor-row-below-expanded integer))
cn0: location for oarg ((cursor-row-below-expanded integer)): 4
cn0: (((just-below-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((cursor-row-below-expanded integer))) ((cursor-row-below-expanded 4) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((cursor-row-below-expanded integer))
maybe-add: ((cursor-row-below-expanded integer))
cn0: checking oarg ((just-below-expanded? boolean))
maybe-add: ((just-below-expanded? boolean))
cn0: location for oarg ((just-below-expanded? boolean)): 5
cn0: (((jump-unless)) ((just-below-expanded? boolean)) ((8 offset))) ((cursor-row-below-expanded 4) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((just-below-expanded? boolean))
maybe-add: ((just-below-expanded? boolean))
cn0: checking arg ((8 offset))
cn0: (((i integer)) <- ((copy)) ((0 literal))) ((cursor-row-below-expanded 4) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: location for oarg ((i integer)): 6
cn0: (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((n integer))) ((cursor-row-below-expanded 4) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((n integer))
maybe-add: ((n integer))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 7
cn0: (((jump-if)) ((done? boolean)) ((4 offset))) ((cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((4 offset))
cn0: (((cursor-row integer) (space 1)) <- ((subtract)) ((cursor-row integer) (space 1)) ((1 literal))) ((cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((1 literal))
cn0: checking oarg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: (((cursor-up)) ((screen terminal-address))) ((cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((i integer)) <- ((add)) ((i integer)) ((1 literal))) ((cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: (((jump)) ((-6 offset))) ((cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((-6 offset))
cn0: (((reply))) ((cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: (((at-top? boolean)) <- ((lesser-or-equal)) ((cursor-row integer) (space 1)) ((0 literal))) ((cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((0 literal))
cn0: checking oarg ((at-top? boolean))
maybe-add: ((at-top? boolean))
cn0: location for oarg ((at-top? boolean)): 8
cn0: (((jump-if)) ((at-top? boolean)) ((2 offset))) ((at-top? 8) (cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((at-top? boolean))
maybe-add: ((at-top? boolean))
cn0: checking arg ((2 offset))
cn0: (((cursor-row integer) (space 1)) <- ((subtract)) ((cursor-row integer) (space 1)) ((1 literal))) ((at-top? 8) (cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((1 literal))
cn0: checking oarg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: (((cursor-up)) ((screen terminal-address))) ((at-top? 8) (cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 boolean)) <- ((greater-or-equal)) ((5 integer) (space 1)) ((4 integer) (space 1)))
cn1: (((jump-unless)) ((2 boolean)) ((9 offset)))
cn1: (((3 boolean)) <- ((greater-or-equal)) ((3 integer) (space 1)) ((2 integer) (space 1)))
cn1: (((jump-unless)) ((3 boolean)) ((3 offset)))
cn1: (((cursor-to-next-line)) ((1 terminal-address)))
cn1: (((cursor-up)) ((1 terminal-address)))
cn1: (((reply)))
cn1: (((4 integer) (space 1)) <- ((add)) ((4 integer) (space 1)) ((1 literal)))
cn1: (((4 boolean)) <- ((greater-than)) ((4 integer) (space 1)) ((3 integer) (space 1)))
cn1: (((jump-unless)) ((4 boolean)) ((1 offset)))
cn1: (((3 integer) (space 1)) <- ((copy)) ((4 integer) (space 1)))
cn1: (((5 integer) (space 1)) <- ((add)) ((5 integer) (space 1)) ((1 literal)))
cn1: (((cursor-to-next-line)) ((1 terminal-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 integer)) <- ((next-input)))
cn1: (((3 boolean)) <- ((greater-than)) ((5 integer) (space 1)) ((2 integer)))
cn1: (((jump-unless)) ((3 boolean)) ((2 offset)))
cn1: (((up)) ((0 space-address)) ((1 terminal-address)))
cn1: (((jump)) ((-4 offset)))
cn1: (((4 boolean)) <- ((less-than)) ((5 integer) (space 1)) ((2 integer)))
cn1: (((jump-unless)) ((4 boolean)) ((2 offset)))
cn1: (((down)) ((0 space-address)) ((1 terminal-address)))
cn1: (((jump)) ((-4 offset)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((1 string-address)) <- ((next-input)))
cn1: (((2 integer)) <- ((next-input)))
cn1: (((3 stream-address)) <- ((init-stream)) ((1 string-address)))
cn1: (((4 instruction-trace-address-array-address)) <- ((parse-traces)) ((3 stream-address)))
cn1: (((0 space-address) (names screen-state)) <- ((screen-state)) ((4 instruction-trace-address-array-address)) ((2 integer)))
cn1: (((cursor-mode)))
cn1: (((print-traces-collapsed)) ((0 space-address) (screen-state)) ((nil literal) (terminal)))
cn1: (((5 boolean)) <- ((process-key)) ((0 space-address) (screen-state)) ((nil literal) (keyboard)) ((nil literal) (terminal)))
cn1: (((jump-if)) ((5 boolean)) ((1 offset)))
cn1: (((jump)) ((-3 offset)))
cn1: (((to-bottom)) ((0 space-address) (screen-state)) ((nil literal) (terminal)))
cn1: (((retro-mode)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 integer) (screen)) <- ((next-input)))
cn1: (((2 boolean)) <- ((greater-or-equal)) ((6 integer) (space 1)) ((0 literal)))
cn1: (((jump-if)) ((2 boolean)) ((1 offset)))
cn1: (((reply)) ((1 integer) (index)))
cn1: (((3 boolean)) <- ((lesser-or-equal)) ((5 integer) (space 1) (screen)) ((6 integer) (space 1)))
cn1: (((jump-unless)) ((3 boolean)) ((1 offset)))
cn1: (((reply)) ((1 integer) (index)))
cn1: (((4 integer) (index)) <- ((instruction-trace-num-children)) ((1 instruction-trace-address-array-address) (space 1)) ((6 integer) (space 1)))
cn1: (((5 integer) (index)) <- ((subtract)) ((1 integer) (screen)) ((4 integer) (index)))
cn1: (((reply)) ((5 integer) (index)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 boolean)) <- ((less-than)) ((6 integer) (space 1)) ((0 literal)))
cn1: (((jump-if)) ((2 boolean)) ((12 offset)))
cn1: (((3 boolean)) <- ((equal)) ((5 integer) (space 1)) ((6 integer) (space 1)))
cn1: (((jump-unless)) ((3 boolean)) ((10 offset)))
cn1: (((4 integer)) <- ((instruction-trace-num-children)) ((1 instruction-trace-address-array-address) (space 1)) ((6 integer) (space 1)))
cn1: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
cn1: (((5 integer)) <- ((copy)) ((0 literal)))
cn1: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((4 integer)))
cn1: (((jump-if)) ((6 boolean)) ((4 offset)))
cn1: (((5 integer) (space 1)) <- ((add)) ((5 integer) (space 1)) ((1 literal)))
cn1: (((cursor-down)) ((1 terminal-address)))
cn1: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
cn1: (((jump)) ((-6 offset)))
cn1: (((reply)))
cn1: (((7 boolean)) <- ((greater-or-equal)) ((5 integer) (space 1)) ((4 integer) (space 1)))
cn1: (((jump-if)) ((7 boolean)) ((2 offset)))
cn1: (((5 integer) (space 1)) <- ((add)) ((5 integer) (space 1)) ((1 literal)))
cn1: (((cursor-down)) ((1 terminal-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 instruction-trace-address-array-address)) <- ((next-input)))
cn1: (((2 integer)) <- ((next-input)))
cn1: (((3 instruction-trace-address)) <- ((index)) ((1 instruction-trace-address-array-address) (deref)) ((2 integer)))
cn1: (((4 trace-address-array-address)) <- ((get)) ((3 instruction-trace-address) (deref)) ((3 offset)))
cn1: (((5 integer)) <- ((length)) ((4 instruction-trace-address-array-address) (deref)))
cn1: (((reply)) ((5 integer)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((1 string-address)) <- ((new)) schedule: main
run: main 0: (((1 integer)) <- ((copy)) ((1 literal)))
run: main 0: 1 => ((1 integer))
mem: ((1 integer)): 1 <= 1
run: main 1: (((2 integer)) <- ((copy)) ((3 literal)))
run: main 1: 3 => ((2 integer))
mem: ((2 integer)): 2 <= 3)
cn1: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
cn1: ((($print)) ((p3  literal)))
cn1: ((($print)) ((2 integer)))
cn1: ((($print)) ((
 literal)))
cn1: (((3 stream-address)) <- ((init-stream)) ((1 string-address)))
cn1: (((4 instruction-trace-address-array-address)) <- ((parse-traces)) ((3 stream-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 trace-address)) <- ((next-input)))
cn1: (((2 string-address)) <- ((get)) ((1 trace-address) (deref)) ((1 offset)))
cn1: (((3 instruction-trace-address)) <- ((new)) ((instruction-trace literal)))
cn1: (((4 string-address)) ((5 string-address)) <- ((split-first)) ((2 string-address)) ((  literal)))
cn1: (((6 string-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((0 offset)))
cn1: (((6 string-address-array-address-address) (deref)) <- ((split)) ((4 string-address)) ((/ literal)))
cn1: (((7 string-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((1 offset)))
cn1: (((8 string-address)) <- ((new)) : )
cn1: (((7 string-address-address) (deref)) ((5 string-address)) <- ((split-first-at-substring)) ((5 string-address)) ((8 string-address)))
cn1: (((9 string-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((2 offset)))
cn1: (((9 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
cn1: (((reply)) ((3 instruction-trace-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 string-address)) <- ((next-input)))
cn1: (((2 trace-address)) <- ((new)) ((trace literal)))
cn1: (((3 string-address)) <- ((new)) : )
cn1: (((4 string-address)) ((5 string-address)) <- ((split-first-at-substring)) ((1 string-address)) ((3 string-address)))
cn1: (((6 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((0 offset)))
cn1: (((6 string-address-address) (deref)) <- ((copy)) ((4 string-address)))
cn1: (((7 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((1 offset)))
cn1: (((7 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
cn1: (((reply)) ((2 trace-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 stream-address)) <- ((next-input)))
cn1: (((2 buffer-address)) <- ((init-buffer)) ((30 literal)))
cn1: (((3 instruction-trace-address)) <- ((copy)) ((nil literal)))
cn1: (((4 buffer-address)) <- ((init-buffer)) ((5 literal)))
cn1: (((5 string-address) (const)) <- ((new)) run)
cn1: next-line
cn1: (((6 boolean)) <- ((end-of-stream?)) ((1 stream-address)))
cn1: (((jump-if)) ((6 boolean)) ((15 offset)))
cn1: (((7 string-address)) <- ((read-line)) ((1 stream-address)))
cn1: (((8 trace-address)) <- ((parse-trace)) ((7 string-address)))
cn1: (((9 string-address)) <- ((get)) ((8 trace-address) (deref)) ((0 offset)))
cn1: (((10 boolean)) <- ((string-equal)) ((9 string-address)) ((5 string-address) (const)))
cn1: (((jump-unless)) ((10 boolean)) ((7 offset)))
cn1: (((jump-unless)) ((3 instruction-trace-address)) ((3 offset)))
cn1: (((11 trace-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((3 offset)))
cn1: (((11 trace-address-array-address-address) (deref)) <- ((to-array)) ((4 buffer-address)))
cn1: (((4 buffer-address)) <- ((init-buffer)) ((5 literal)))
cn1: (((3 instruction-trace-address)) <- ((parse-instruction-trace)) ((8 trace-address)))
cn1: (((2 buffer-address)) <- ((append)) ((2 buffer-address)) ((3 instruction-trace-address)))
cn1: (((jump)) ((-15 offset)))
cn1: (((jump-unless)) ((3 instruction-trace-address)) ((-16 offset)))
cn1: (((4 buffer-address)) <- ((append)) ((4 buffer-address)) ((8 trace-address)))
cn1: (((jump)) ((-18 offset)))
cn1: (((jump-unless)) ((3 instruction-trace-address)) ((2 offset)))
cn1: (((11 trace-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((3 offset)))
cn1: (((11 trace-address-array-address-address) (deref)) <- ((to-array)) ((4 buffer-address)))
cn1: (((12 instruction-trace-address-array-address)) <- ((to-array)) ((2 buffer-address)))
cn1: (((reply)) ((12 instruction-trace-address-array-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 instruction-trace-address)) <- ((next-input)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((clear-line)) ((1 terminal-address)))
cn1: (((print-character)) ((1 terminal-address)) ((- literal)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((3 string-address-array-address)) <- ((get)) ((2 instruction-trace-address) (deref)) ((0 offset)))
cn1: (((4 integer)) <- ((copy)) ((0 literal)))
cn1: (((5 integer)) <- ((length)) ((3 string-address-array-address) (deref)))
cn1: (((6 boolean)) <- ((greater-or-equal)) ((4 integer)) ((5 integer)))
cn1: (((jump-if)) ((6 boolean)) ((5 offset)))
cn1: (((7 string-address)) <- ((index)) ((3 string-address-array-address) (deref)) ((4 integer)))
cn1: (((print-string)) ((1 terminal-address)) ((7 string-address)))
cn1: (((print-character)) ((1 terminal-address)) ((/ literal)))
cn1: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
cn1: (((jump)) ((-7 offset)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((8 string-address)) <- ((get)) ((2 instruction-trace-address) (deref)) ((1 offset)))
cn1: (((print-string)) ((1 terminal-address)) ((8 string-address)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((print-character)) ((1 terminal-address)) ((: literal)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((4 string-address)) <- ((get)) ((2 instruction-trace-address) (deref)) ((2 offset)))
cn1: (((print-string)) ((1 terminal-address)) ((4 string-address)))
cn1: (((add-line)) ((0 space-address) (screen-state)) ((1 terminal-address)))
cn1: (((9 trace-address-array-address)) <- ((get)) ((2 instruction-trace-address) (deref)) ((3 offset)))
cn1: (((4 integer)) <- ((copy)) ((0 literal)))
cn1: (((jump-if)) ((9 trace-address-array-address)) ((1 offset)))
cn1: (((reply)))
cn1: (((5 integer)) <- ((length)) ((9 trace-address-array-address) (deref)))
cn1: (((6 boolean)) <- ((greater-or-equal)) ((4 integer)) ((5 integer)))
cn1: (((jump-if)) ((6 boolean)) ((10 offset)))
cn1: (((10 boolean)) <- ((greater-or-equal)) ((5 integer) (space 1)) ((2 integer) (space 1)))
cn1: (((jump-if)) ((10 boolean)) ((8 offset)))
cn1: (((11 trace-address)) <- ((index)) ((9 trace-address-array-address) (deref)) ((4 integer)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((print-trace)) ((1 terminal-address)) ((11 trace-address)))
cn1: (((add-line)) ((0 space-address) (screen-state)) ((1 terminal-address)))
cn1: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
cn1: (((jump)) ((-12 offset)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 terminal)) <- ((next-input)))
cn1: (((6 instruction-trace-address)) <- ((next-input)))
cn1: (((7 space-address)) <- ((next-input)))
cn1: (((clear-line)) ((1 terminal-address)))
cn1: (((print-character)) ((1 terminal-address)) ((+ literal)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((8 string-address-array-address)) <- ((get)) ((6 instruction-trace-address) (deref)) ((0 offset)))
cn1: (((9 integer)) <- ((copy)) ((0 literal)))
cn1: (((10 integer)) <- ((length)) ((8 string-address-array-address) (deref)))
cn1: (((11 boolean)) <- ((greater-or-equal)) ((9 integer)) ((10 integer)))
cn1: (((jump-if)) ((11 boolean)) ((5 offset)))
cn1: (((12 string-address)) <- ((index)) ((8 string-address-array-address) (deref)) ((9 integer)))
cn1: (((print-string)) ((1 terminal-address)) ((12 string-address)))
cn1: (((print-character)) ((1 terminal-address)) ((/ literal)))
cn1: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
cn1: (((jump)) ((-7 offset)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((13 string-address)) <- ((get)) ((6 instruction-trace-address) (deref)) ((1 offset)))
cn1: (((print-string)) ((1 terminal-address)) ((13 string-address)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((print-character)) ((1 terminal-address)) ((: literal)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((9 string-address)) <- ((get)) ((6 instruction-trace-address) (deref)) ((2 offset)))
cn1: (((print-string)) ((1 terminal-address)) ((9 string-address)))
cn1: (((add-line)) ((7 space-address)) ((1 terminal-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 trace-address)) <- ((next-input)))
cn1: (((3 string-address)) <- ((get)) ((2 trace-address) (deref)) ((0 offset)))
cn1: (((clear-line)) ((1 terminal-address)))
cn1: (((print-string)) ((1 terminal-address)) ((3 string-address)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((print-character)) ((1 terminal-address)) ((: literal)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((4 string-address)) <- ((get)) ((2 trace-address) (deref)) ((1 offset)))
cn1: (((print-string)) ((1 terminal-address)) ((4 string-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((1 terminal-address)) ((0 literal) (from)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 integer)) <- ((next-input)))
cn1: (((3 integer)) <- ((length)) ((1 instruction-trace-address-array-address) (space 1) (deref)))
cn1: (((4 integer)) <- ((min)) ((3 integer)) ((2 integer) (space 1)))
cn1: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((3 integer)))
cn1: (((jump-if)) ((5 boolean)) ((6 offset)))
cn1: (((6 boolean)) <- ((greater-or-equal)) ((5 integer) (space 1)) ((2 integer) (space 1)))
cn1: (((jump-if)) ((6 boolean)) ((4 offset)))
cn1: (((7 instruction-trace-address)) <- ((index)) ((1 instruction-trace-address-array-address) (space 1) (deref)) ((2 integer)))
cn1: (((print-instruction-trace-collapsed)) ((1 terminal-address)) ((7 instruction-trace-address)) ((0 space-address) (screen-state)))
cn1: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
cn1: (((jump)) ((-8 offset)))
cn1: (((8 boolean)) <- ((greater-or-equal)) ((5 integer) (space 1)) ((3 integer) (space 1)))
cn1: (((jump-if)) ((8 boolean)) ((3 offset)))
cn1: (((clear-line)) ((1 terminal-address)))
cn1: (((down)) ((0 space-address) (screen-state)) ((1 terminal-address)))
cn1: (((jump)) ((-5 offset)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 keyboard-address)) <- ((next-input)))
cn1: (((2 terminal-address)) <- ((next-input)))
cn1: (((3 character)) <- ((read-key)) ((1 keyboard-address)) ((silent literal) (terminal)))
cn1: (((jump-if)) ((3 character)) ((1 offset)))
cn1: (((reply)) ((nil literal)))
cn1: (((4 boolean)) <- ((equal)) ((3 character)) ((q literal)))
cn1: (((5 boolean)) <- ((equal)) ((3 character)) ((  literal)))
cn1: (((6 boolean)) <- ((or)) ((4 boolean)) ((5 boolean)))
cn1: (((jump-unless)) ((6 boolean)) ((1 offset)))
cn1: (((reply)) ((t literal)))
cn1: (((7 boolean)) <- ((equal)) ((3 character)) ((up literal)))
cn1: (((8 boolean)) <- ((equal)) ((3 character)) ((k literal)))
cn1: (((7 boolean)) <- ((or)) ((7 boolean)) ((8 boolean)))
cn1: (((jump-unless)) ((7 boolean)) ((2 offset)))
cn1: (((up)) ((0 space-address) (screen-state)) ((2 terminal-address)))
cn1: (((reply)) ((nil literal)))
cn1: (((9 boolean)) <- ((equal)) ((3 character)) ((down literal)))
cn1: (((10 boolean)) <- ((equal)) ((3 character)) ((j literal)))
cn1: (((9 boolean)) <- ((or)) ((9 boolean)) ((10 boolean)))
cn1: (((jump-unless)) ((9 boolean)) ((2 offset)))
cn1: (((down)) ((0 space-address) (screen-state)) ((2 terminal-address)))
cn1: (((reply)) ((nil literal)))
cn1: (((11 boolean)) <- ((equal)) ((3 character)) ((
 literal)))
cn1: (((jump-unless)) ((11 boolean)) ((28 offset)))
cn1: (((12 integer)) <- ((copy)) ((5 integer) (space 1)))
cn1: (((13 integer)) <- ((cursor-row-to-trace-index)) ((0 space-address) (screen-state)) ((12 integer)))
cn1: (((14 boolean)) <- ((greater-or-equal)) ((6 integer) (space 1)) ((0 literal)))
cn1: (((jump-unless)) ((14 boolean)) ((17 offset)))
cn1: (((15 boolean)) <- ((equal)) ((5 integer) (space 1)) ((6 integer) (space 1)))
cn1: (((jump-unless)) ((15 boolean)) ((4 offset)))
cn1: (((6 integer) (space 1)) <- ((copy)) ((-1 literal)))
cn1: (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((2 terminal-address)) ((5 integer) (space 1)))
cn1: (((back-to)) ((0 space-address) (screen-state)) ((2 terminal-address)) ((12 integer)))
cn1: (((reply)))
cn1: (((16 boolean)) <- ((greater-than)) ((5 integer) (space 1)) ((6 integer) (space 1)))
cn1: (((jump-unless)) ((16 boolean)) ((9 offset)))
cn1: (((15 boolean)) <- ((equal)) ((5 integer) (space 1)) ((6 integer) (space 1)))
cn1: (((jump-if)) ((15 boolean)) ((2 offset)))
cn1: (((up)) ((0 space-address)) ((2 terminal-address)))
cn1: (((jump)) ((-4 offset)))
cn1: (((17 boolean)) <- ((greater-or-equal)) ((5 integer) (space 1)) ((13 integer)))
cn1: (((jump-if)) ((17 boolean)) ((3 offset)))
cn1: (((18 instruction-trace-address)) <- ((index)) ((1 instruction-trace-address-array-address) (space 1) (deref)) ((5 integer) (space 1)))
cn1: (((print-instruction-trace-collapsed)) ((2 terminal-address)) ((18 instruction-trace-address)) ((0 space-address) (screen-state)))
cn1: (((jump)) ((-5 offset)))
cn1: (((6 integer) (space 1)) <- ((copy)) ((13 integer)))
cn1: (((18 instruction-trace-address)) <- ((index)) ((1 instruction-trace-address-array-address) (space 1) (deref)) ((13 integer)))
cn1: (((print-instruction-trace)) ((2 terminal-address)) ((18 instruction-trace-address)) ((0 space-address) (screen-state)))
cn1: (((19 integer)) <- ((add)) ((13 integer)) ((1 literal)))
cn1: (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((2 terminal-address)) ((19 integer)))
cn1: (((back-to)) ((0 space-address) (screen-state)) ((2 terminal-address)) ((13 integer)))
cn1: (((reply)) ((nil literal)))
cn1: (((reply)) ((nil literal)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((1 instruction-trace-address-array-address)) <- ((next-input)))
cn1: (((2 integer)) <- ((next-input)))
cn1: (((3 integer)) <- ((copy)) ((0 literal)))
cn1: (((4 integer)) <- ((copy)) ((0 literal)))
cn1: (((5 integer)) <- ((copy)) ((0 literal)))
cn1: (((6 integer)) <- ((copy)) ((-1 literal)))
cn1: (((reply)) ((default-space space-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 boolean)) <- ((greater-or-equal)) ((5 integer) (space 1)) ((4 integer) (space 1)))
cn1: (((jump-if)) ((2 boolean)) ((2 offset)))
cn1: (((down)) ((0 space-address)) ((1 terminal-address)))
cn1: (((jump)) ((-4 offset)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 boolean)) <- ((less-than)) ((6 integer) (space 1)) ((0 literal)))
cn1: (((jump-if)) ((2 boolean)) ((13 offset)))
cn1: (((3 integer)) <- ((instruction-trace-num-children)) ((1 instruction-trace-address-array-address) (space 1)) ((6 integer) (space 1)))
cn1: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
cn1: (((4 integer)) <- ((add)) ((6 integer) (space 1)) ((3 integer)))
cn1: (((5 boolean)) <- ((equal)) ((5 integer) (space 1)) ((4 integer)))
cn1: (((jump-unless)) ((5 boolean)) ((8 offset)))
cn1: (((6 integer)) <- ((copy)) ((0 literal)))
cn1: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
cn1: (((jump-if)) ((7 boolean)) ((4 offset)))
cn1: (((5 integer) (space 1)) <- ((subtract)) ((5 integer) (space 1)) ((1 literal)))
cn1: (((cursor-up)) ((1 terminal-address)))
cn1: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
cn1: (((jump)) ((-6 offset)))
cn1: (((reply)))
cn1: (((8 boolean)) <- ((lesser-or-equal)) ((5 integer) (space 1)) ((0 literal)))
cn1: (((jump-if)) ((8 boolean)) ((2 offset)))
cn1: (((5 integer) (space 1)) <- ((subtract)) ((5 integer) (space 1)) ((1 literal)))
cn1: (((cursor-up)) ((1 terminal-address)))
schedule: main
run: main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
run: main 0: 1000 => ((default-space space-address))
run: main 1: (((1 string-address)) <- ((new)) schedule: main
run: main 0: (((1 integer)) <- ((copy)) ((1 literal)))
run: main 0: 1 => ((1 integer))
mem: ((1 integer)): 1 <= 1
run: main 1: (((2 integer)) <- ((copy)) ((3 literal)))
run: main 1: 3 => ((2 integer))
mem: ((2 integer)): 2 <= 3)
run: main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 1002 <= 1031
run: main 2: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: main 2: 242 => ((2 integer))
mem: ((2 integer)): 1003 <= 242
run: main 3: ((($print)) ((p3  literal)))
run: main 4: ((($print)) ((2 integer)))
mem: ((2 integer)) => 242
run: main 5: ((($print)) ((
 literal)))
run: main 6: (((3 stream-address)) <- ((init-stream)) ((1 string-address)))
mem: ((1 string-address)) => 1031
run: init-stream/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-stream/main 0: 1274 => ((default-space space-address))
run: init-stream/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031)
run: init-stream/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 1276 <= 1031
run: init-stream/main 2: (((2 stream-address)) <- ((new)) ((stream literal)))
run: init-stream/main 2: 1305 => ((2 stream-address))
mem: ((2 stream-address)): 1277 <= 1305
run: init-stream/main 3: (((3 integer-address)) <- ((get-address)) ((2 stream-address) (deref)) ((0 offset)))
run: init-stream/main 3: 1305 => ((3 integer-address))
mem: ((3 integer-address)): 1278 <= 1305
run: init-stream/main 4: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-stream/main 4: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1305 <= 0
run: init-stream/main 5: (((4 string-address-address)) <- ((get-address)) ((2 stream-address) (deref)) ((1 offset)))
run: init-stream/main 5: 1306 => ((4 string-address-address))
mem: ((4 string-address-address)): 1279 <= 1306
run: init-stream/main 6: (((4 string-address-address) (deref)) <- ((copy)) ((1 string-address)))
mem: ((1 string-address)) => 1031
run: init-stream/main 6: 1031 => ((4 string-address-address) (deref))
mem: ((4 string-address-address) (deref)): 1306 <= 1031
run: init-stream/main 7: (((reply)) ((2 stream-address)))
mem: ((2 stream-address)) => 1305
run: main 6: 1305 => ((3 stream-address))
mem: ((3 stream-address)): 1004 <= 1305
run: main 7: (((4 instruction-trace-address-array-address)) <- ((parse-traces)) ((3 stream-address)))
mem: ((3 stream-address)) => 1305
run: parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-traces/main 0: 1307 => ((default-space space-address))
run: parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1305)
run: parse-traces/main 1: 1305 => ((1 stream-address))
mem: ((1 stream-address)): 1309 <= 1305
run: parse-traces/main 2: (((2 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/parse-traces/main 0: 1338 => ((default-space space-address))
run: init-buffer/parse-traces/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/parse-traces/main 1: 1369 => ((1 buffer-address))
mem: ((1 buffer-address)): 1340 <= 1369
run: init-buffer/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/parse-traces/main 2: 1369 => ((2 integer-address))
mem: ((2 integer-address)): 1341 <= 1369
run: init-buffer/parse-traces/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/parse-traces/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1369 <= 0
run: init-buffer/parse-traces/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/parse-traces/main 4: 1370 => ((3 string-address-address))
mem: ((3 string-address-address)): 1342 <= 1370
run: init-buffer/parse-traces/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/parse-traces/main 5: 30 => ((4 integer))
mem: ((4 integer)): 1343 <= 30
run: init-buffer/parse-traces/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/parse-traces/main 6: 1371 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 1370 <= 1371
run: init-buffer/parse-traces/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1369
run: parse-traces/main 2: 1369 => ((2 buffer-address))
mem: ((2 buffer-address)): 1310 <= 1369
run: parse-traces/main 3: (((3 instruction-trace-address)) <- ((copy)) ((nil literal)))
run: parse-traces/main 3: nil => ((3 instruction-trace-address))
mem: ((3 instruction-trace-address)): 1311 <= nil
run: parse-traces/main 4: (((4 buffer-address)) <- ((init-buffer)) ((5 literal)))
run: init-buffer/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/parse-traces/main 0: 1402 => ((default-space space-address))
run: init-buffer/parse-traces/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/parse-traces/main 1: 1433 => ((1 buffer-address))
mem: ((1 buffer-address)): 1404 <= 1433
run: init-buffer/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/parse-traces/main 2: 1433 => ((2 integer-address))
mem: ((2 integer-address)): 1405 <= 1433
run: init-buffer/parse-traces/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/parse-traces/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1433 <= 0
run: init-buffer/parse-traces/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/parse-traces/main 4: 1434 => ((3 string-address-address))
mem: ((3 string-address-address)): 1406 <= 1434
run: init-buffer/parse-traces/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (5)
run: init-buffer/parse-traces/main 5: 5 => ((4 integer))
mem: ((4 integer)): 1407 <= 5
run: init-buffer/parse-traces/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 5
run: init-buffer/parse-traces/main 6: 1435 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 1434 <= 1435
run: init-buffer/parse-traces/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1433
run: parse-traces/main 4: 1433 => ((4 buffer-address))
mem: ((4 buffer-address)): 1312 <= 1433
run: parse-traces/main 5: (((5 string-address) (const)) <- ((new)) run)
run: parse-traces/main 5: 1441 => ((5 string-address) (const))
mem: ((5 string-address) (const)): 1313 <= 1441
run: parse-traces/main 6: next-line
run: parse-traces/main 7: (((6 boolean)) <- ((end-of-stream?)) ((1 stream-address)))
mem: ((1 stream-address)) => 1305
run: end-of-stream?/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: end-of-stream?/parse-traces/main 0: 1445 => ((default-space space-address))
run: end-of-stream?/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1305)
run: end-of-stream?/parse-traces/main 1: 1305 => ((1 stream-address))
mem: ((1 stream-address)): 1447 <= 1305
run: end-of-stream?/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 stream-address) (deref)) ((0 offset)))
mem: ((1305 integer) (raw)) => 0
run: end-of-stream?/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 1448 <= 0
run: end-of-stream?/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1306 string-address) (raw)) => 1031
run: end-of-stream?/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 1449 <= 1031
run: end-of-stream?/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: end-of-stream?/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 1450 <= 242
run: end-of-stream?/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 242
run: end-of-stream?/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1451 <= nil
run: end-of-stream?/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: parse-traces/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1314 <= nil
run: parse-traces/main 8: (((jump-if)) ((6 boolean)) ((15 offset)))
mem: ((6 boolean)) => nil
run: parse-traces/main 9: (((7 string-address)) <- ((read-line)) ((1 stream-address)))
mem: ((1 stream-address)) => 1305
run: read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-line/parse-traces/main 0: 1476 => ((default-space space-address))
run: read-line/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1305)
run: read-line/parse-traces/main 1: 1305 => ((1 stream-address))
mem: ((1 stream-address)): 1478 <= 1305
run: read-line/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 stream-address) (deref)) ((0 offset)))
run: read-line/parse-traces/main 2: 1305 => ((2 integer-address))
mem: ((2 integer-address)): 1479 <= 1305
run: read-line/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1306 string-address) (raw)) => 1031
run: read-line/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 1480 <= 1031
run: read-line/parse-traces/main 4: (((4 integer)) <- ((find-next)) ((3 string-address)) ((
 literal)) ((2 integer-address) (deref)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 0
run: find-next/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/read-line/parse-traces/main 0: 1507 => ((default-space space-address))
run: find-next/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 #\newline 0)
run: find-next/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 1509 <= 1031
run: find-next/read-line/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1031 #\newline 0)
run: find-next/read-line/parse-traces/main 2: #\newline => ((2 character))
mem: ((2 character)): 1510 <= #\newline
run: find-next/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 #\newline 0)
run: find-next/read-line/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 1511 <= 0
run: find-next/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: find-next/read-line/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 1512 <= 242
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1513 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1032 byte) (raw)) => s
run: find-next/read-line/parse-traces/main 7: #\s => ((6 byte))
mem: ((6 byte)): 1514 <= #\s
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => s
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1515 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/read-line/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 1511 <= 1
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1513 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1033 byte) (raw)) => c
run: find-next/read-line/parse-traces/main 7: #\c => ((6 byte))
mem: ((6 byte)): 1514 <= #\c
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => c
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1515 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/read-line/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 1511 <= 2
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1513 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1034 byte) (raw)) => h
run: find-next/read-line/parse-traces/main 7: #\h => ((6 byte))
mem: ((6 byte)): 1514 <= #\h
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => h
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1515 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/read-line/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 1511 <= 3
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1513 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1035 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 1514 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1515 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/read-line/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 1511 <= 4
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1513 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1036 byte) (raw)) => d
run: find-next/read-line/parse-traces/main 7: #\d => ((6 byte))
mem: ((6 byte)): 1514 <= #\d
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => d
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1515 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: find-next/read-line/parse-traces/main 10: 5 => ((3 integer))
mem: ((3 integer)): 1511 <= 5
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 5
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1513 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1037 byte) (raw)) => u
run: find-next/read-line/parse-traces/main 7: #\u => ((6 byte))
mem: ((6 byte)): 1514 <= #\u
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => u
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1515 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: find-next/read-line/parse-traces/main 10: 6 => ((3 integer))
mem: ((3 integer)): 1511 <= 6
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 6
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1513 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1038 byte) (raw)) => l
run: find-next/read-line/parse-traces/main 7: #\l => ((6 byte))
mem: ((6 byte)): 1514 <= #\l
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => l
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1515 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: find-next/read-line/parse-traces/main 10: 7 => ((3 integer))
mem: ((3 integer)): 1511 <= 7
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 7
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1513 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1039 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 1514 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1515 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: find-next/read-line/parse-traces/main 10: 8 => ((3 integer))
mem: ((3 integer)): 1511 <= 8
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 8
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1513 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 8
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1040 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 1514 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1515 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 8
run: find-next/read-line/parse-traces/main 10: 9 => ((3 integer))
mem: ((3 integer)): 1511 <= 9
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 9
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1513 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 9
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1041 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 1514 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1515 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 9
run: find-next/read-line/parse-traces/main 10: 10 => ((3 integer))
mem: ((3 integer)): 1511 <= 10
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 10
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1513 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 10
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1042 byte) (raw)) => m
run: find-next/read-line/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 1514 <= #\m
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1515 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 10
run: find-next/read-line/parse-traces/main 10: 11 => ((3 integer))
mem: ((3 integer)): 1511 <= 11
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 11
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1513 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 11
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1043 byte) (raw)) => a
run: find-next/read-line/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 1514 <= #\a
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1515 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 11
run: find-next/read-line/parse-traces/main 10: 12 => ((3 integer))
mem: ((3 integer)): 1511 <= 12
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 12
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1513 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 12
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1044 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 1514 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1515 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 12
run: find-next/read-line/parse-traces/main 10: 13 => ((3 integer))
mem: ((3 integer)): 1511 <= 13
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 13
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1513 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 13
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1045 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 1514 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1515 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 13
run: find-next/read-line/parse-traces/main 10: 14 => ((3 integer))
mem: ((3 integer)): 1511 <= 14
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 14
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1513 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 14
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1046 byte) (raw)) => 

run: find-next/read-line/parse-traces/main 7: #\newline => ((6 byte))
mem: ((6 byte)): 1514 <= #\newline
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 

mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 1515 <= t
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/read-line/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 14
run: read-line/parse-traces/main 4: 14 => ((4 integer))
mem: ((4 integer)): 1481 <= 14
run: read-line/parse-traces/main 5: (((5 string-address)) <- ((string-copy)) ((3 string-address)) ((2 integer-address) (deref)) ((4 integer)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 0
mem: ((4 integer)) => 14
run: string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/read-line/parse-traces/main 0: 1538 => ((default-space space-address))
run: string-copy/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 0 14)
run: string-copy/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 1540 <= 1031
run: string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1031 0 14)
run: string-copy/read-line/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 1541 <= 0
run: string-copy/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 0 14)
run: string-copy/read-line/parse-traces/main 3: 14 => ((3 integer))
mem: ((3 integer)): 1542 <= 14
run: string-copy/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: string-copy/read-line/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 1543 <= 242
run: string-copy/read-line/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 242
mem: ((3 integer)) => 14
run: min/string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/read-line/parse-traces/main 0: 1569 => ((default-space space-address))
run: min/string-copy/read-line/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (242 14)
run: min/string-copy/read-line/parse-traces/main 1: 242 => ((1 integer))
mem: ((1 integer)): 1571 <= 242
run: min/string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (242 14)
run: min/string-copy/read-line/parse-traces/main 2: 14 => ((2 integer))
mem: ((2 integer)): 1572 <= 14
run: min/string-copy/read-line/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 242
mem: ((2 integer)) => 14
run: min/string-copy/read-line/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 1573 <= nil
run: min/string-copy/read-line/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/read-line/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 14
run: string-copy/read-line/parse-traces/main 5: 14 => ((3 integer))
mem: ((3 integer)): 1542 <= 14
run: string-copy/read-line/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 14
mem: ((2 integer)) => 0
run: string-copy/read-line/parse-traces/main 6: 14 => ((4 integer))
mem: ((4 integer)): 1543 <= 14
run: string-copy/read-line/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 14
run: string-copy/read-line/parse-traces/main 7: 1600 => ((5 string-address))
mem: ((5 string-address)): 1544 <= 1600
run: string-copy/read-line/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/read-line/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 1545 <= 0
run: string-copy/read-line/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/read-line/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 1546 <= 0
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1547 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1032 byte) (raw)) => s
run: string-copy/read-line/parse-traces/main 12: #\s => ((9 character))
mem: ((9 character)): 1548 <= #\s
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1601 => ((10 character-address))
mem: ((10 character-address)): 1549 <= 1601
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => s
run: string-copy/read-line/parse-traces/main 14: #\s => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1601 <= #\s
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/read-line/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 1545 <= 1
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/read-line/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 1546 <= 1
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1547 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1033 byte) (raw)) => c
run: string-copy/read-line/parse-traces/main 12: #\c => ((9 character))
mem: ((9 character)): 1548 <= #\c
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1602 => ((10 character-address))
mem: ((10 character-address)): 1549 <= 1602
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => c
run: string-copy/read-line/parse-traces/main 14: #\c => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1602 <= #\c
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/read-line/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 1545 <= 2
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/read-line/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 1546 <= 2
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1547 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1034 byte) (raw)) => h
run: string-copy/read-line/parse-traces/main 12: #\h => ((9 character))
mem: ((9 character)): 1548 <= #\h
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1603 => ((10 character-address))
mem: ((10 character-address)): 1549 <= 1603
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => h
run: string-copy/read-line/parse-traces/main 14: #\h => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1603 <= #\h
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/read-line/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 1545 <= 3
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/read-line/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 1546 <= 3
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1547 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1035 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 1548 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1604 => ((10 character-address))
mem: ((10 character-address)): 1549 <= 1604
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1604 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/read-line/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 1545 <= 4
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/read-line/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 1546 <= 4
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1547 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 4
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1036 byte) (raw)) => d
run: string-copy/read-line/parse-traces/main 12: #\d => ((9 character))
mem: ((9 character)): 1548 <= #\d
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1605 => ((10 character-address))
mem: ((10 character-address)): 1549 <= 1605
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => d
run: string-copy/read-line/parse-traces/main 14: #\d => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1605 <= #\d
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 4
run: string-copy/read-line/parse-traces/main 15: 5 => ((6 integer))
mem: ((6 integer)): 1545 <= 5
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/read-line/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 1546 <= 5
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1547 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1037 byte) (raw)) => u
run: string-copy/read-line/parse-traces/main 12: #\u => ((9 character))
mem: ((9 character)): 1548 <= #\u
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1606 => ((10 character-address))
mem: ((10 character-address)): 1549 <= 1606
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => u
run: string-copy/read-line/parse-traces/main 14: #\u => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1606 <= #\u
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/read-line/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 1545 <= 6
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/read-line/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 1546 <= 6
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1547 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1038 byte) (raw)) => l
run: string-copy/read-line/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 1548 <= #\l
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1607 => ((10 character-address))
mem: ((10 character-address)): 1549 <= 1607
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/read-line/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1607 <= #\l
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/read-line/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 1545 <= 7
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/read-line/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 1546 <= 7
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1547 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1039 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 1548 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1608 => ((10 character-address))
mem: ((10 character-address)): 1549 <= 1608
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1608 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/read-line/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 1545 <= 8
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/read-line/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 1546 <= 8
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1547 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1040 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 1548 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1609 => ((10 character-address))
mem: ((10 character-address)): 1549 <= 1609
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1609 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/read-line/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 1545 <= 9
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/read-line/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 1546 <= 9
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1547 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1041 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 1548 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1610 => ((10 character-address))
mem: ((10 character-address)): 1549 <= 1610
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1610 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/read-line/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 1545 <= 10
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/read-line/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 1546 <= 10
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1547 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1042 byte) (raw)) => m
run: string-copy/read-line/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 1548 <= #\m
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1611 => ((10 character-address))
mem: ((10 character-address)): 1549 <= 1611
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/read-line/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1611 <= #\m
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/read-line/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 1545 <= 11
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/read-line/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 1546 <= 11
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1547 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1043 byte) (raw)) => a
run: string-copy/read-line/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 1548 <= #\a
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1612 => ((10 character-address))
mem: ((10 character-address)): 1549 <= 1612
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/read-line/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1612 <= #\a
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/read-line/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 1545 <= 12
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/read-line/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 1546 <= 12
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1547 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1044 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 1548 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1613 => ((10 character-address))
mem: ((10 character-address)): 1549 <= 1613
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1613 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/read-line/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 1545 <= 13
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/read-line/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 1546 <= 13
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1547 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1045 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 1548 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1614 => ((10 character-address))
mem: ((10 character-address)): 1549 <= 1614
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1614 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/read-line/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 1545 <= 14
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/read-line/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 1546 <= 14
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 1547 <= t
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/read-line/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 1600
run: read-line/parse-traces/main 5: 1600 => ((5 string-address))
mem: ((5 string-address)): 1482 <= 1600
run: read-line/parse-traces/main 6: (((2 integer-address) (deref)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 14
run: read-line/parse-traces/main 6: 15 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1305 <= 15
run: read-line/parse-traces/main 7: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 1600
run: parse-traces/main 9: 1600 => ((7 string-address))
mem: ((7 string-address)): 1315 <= 1600
run: parse-traces/main 10: (((8 trace-address)) <- ((parse-trace)) ((7 string-address)))
mem: ((7 string-address)) => 1600
run: parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-trace/parse-traces/main 0: 1615 => ((default-space space-address))
run: parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1600)
run: parse-trace/parse-traces/main 1: 1600 => ((1 string-address))
mem: ((1 string-address)): 1617 <= 1600
run: parse-trace/parse-traces/main 2: (((2 trace-address)) <- ((new)) ((trace literal)))
run: parse-trace/parse-traces/main 2: 1646 => ((2 trace-address))
mem: ((2 trace-address)): 1618 <= 1646
run: parse-trace/parse-traces/main 3: (((3 string-address)) <- ((new)) : )
run: parse-trace/parse-traces/main 3: 1648 => ((3 string-address))
mem: ((3 string-address)): 1619 <= 1648
run: parse-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first-at-substring)) ((1 string-address)) ((3 string-address)))
mem: ((1 string-address)) => 1600
mem: ((3 string-address)) => 1648
run: split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-trace/parse-traces/main 0: 1651 => ((default-space space-address))
run: split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1600 1648)
run: split-first-at-substring/parse-trace/parse-traces/main 1: 1600 => ((1 string-address))
mem: ((1 string-address)): 1653 <= 1600
run: split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1600 1648)
run: split-first-at-substring/parse-trace/parse-traces/main 2: 1648 => ((2 string-address))
mem: ((2 string-address)): 1654 <= 1648
run: split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1600 integer) (raw)) => 14
run: split-first-at-substring/parse-trace/parse-traces/main 3: 14 => ((3 integer))
mem: ((3 integer)): 1655 <= 14
run: split-first-at-substring/parse-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 14
run: split-first-at-substring/parse-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1656 <= nil
run: split-first-at-substring/parse-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 1600
mem: ((2 string-address)) => 1648
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 1682 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1600 1648 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 1600 => ((1 string-address))
mem: ((1 string-address)): 1684 <= 1600
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1600 1648 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 1648 => ((2 string-address))
mem: ((2 string-address)): 1685 <= 1648
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1600 1648 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 1686 <= 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((1648 string) (raw))
mem: ((1648 integer) (raw)) => 2
mem: ((1649 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 1687 <= #\:
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1600 integer) (raw)) => 14
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 14 => ((5 integer))
mem: ((5 integer)): 1688 <= 14
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 14
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 1689 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 1600
mem: ((2 string-address)) => 1648
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 1713 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1600 1648 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 1600 => ((1 string-address))
mem: ((1 string-address)): 1715 <= 1600
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1600 1648 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 1648 => ((2 string-address))
mem: ((2 string-address)): 1716 <= 1648
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1600 1648 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 1717 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((1648 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 1718 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1600 integer) (raw)) => 14
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 14 => ((5 integer))
mem: ((5 integer)): 1719 <= 14
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 14
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 12 => ((5 integer))
mem: ((5 integer)): 1719 <= 12
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 12
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 1720 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1721 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 1722 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1601 byte) (raw)) => s
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\s => ((9 character))
mem: ((9 character)): 1723 <= #\s
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1648 string) (raw))
mem: ((1648 integer) (raw)) => 2
mem: ((1649 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 1724 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => s
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 1725 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1690 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 1686 <= 1
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 1600
mem: ((4 character)) => :
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 1744 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1600 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 1600 => ((1 string-address))
mem: ((1 string-address)): 1746 <= 1600
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1600 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 1747 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1600 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 1748 <= 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1600 integer) (raw)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 14 => ((4 integer))
mem: ((4 integer)): 1749 <= 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1750 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1602 byte) (raw)) => c
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\c => ((6 byte))
mem: ((6 byte)): 1751 <= #\c
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => c
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1752 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 1748 <= 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1750 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1603 byte) (raw)) => h
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\h => ((6 byte))
mem: ((6 byte)): 1751 <= #\h
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => h
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1752 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 1748 <= 3
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1750 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1604 byte) (raw)) => e
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 1751 <= #\e
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1752 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 1748 <= 4
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1750 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1605 byte) (raw)) => d
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\d => ((6 byte))
mem: ((6 byte)): 1751 <= #\d
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => d
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1752 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 5 => ((3 integer))
mem: ((3 integer)): 1748 <= 5
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 5
mem: ((4 integer)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1750 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1606 byte) (raw)) => u
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\u => ((6 byte))
mem: ((6 byte)): 1751 <= #\u
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => u
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1752 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 6 => ((3 integer))
mem: ((3 integer)): 1748 <= 6
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 6
mem: ((4 integer)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1750 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1607 byte) (raw)) => l
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\l => ((6 byte))
mem: ((6 byte)): 1751 <= #\l
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => l
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1752 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 7 => ((3 integer))
mem: ((3 integer)): 1748 <= 7
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 7
mem: ((4 integer)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1750 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1608 byte) (raw)) => e
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 1751 <= #\e
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1752 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 8 => ((3 integer))
mem: ((3 integer)): 1748 <= 8
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 8
mem: ((4 integer)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1750 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 8
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1609 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 1751 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 1752 <= t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 8
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: 8 => ((3 integer))
mem: ((3 integer)): 1686 <= 8
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 8
mem: ((5 integer)) => 14
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 1689 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 1600
mem: ((2 string-address)) => 1648
mem: ((3 integer)) => 8
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 1775 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1600 1648 8)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 1600 => ((1 string-address))
mem: ((1 string-address)): 1777 <= 1600
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1600 1648 8)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 1648 => ((2 string-address))
mem: ((2 string-address)): 1778 <= 1648
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1600 1648 8)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 8 => ((3 integer))
mem: ((3 integer)): 1779 <= 8
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((1648 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 1780 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1600 integer) (raw)) => 14
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 14 => ((5 integer))
mem: ((5 integer)): 1781 <= 14
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 14
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 12 => ((5 integer))
mem: ((5 integer)): 1781 <= 12
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 8
mem: ((5 integer)) => 12
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 1782 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1783 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 1784 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 8
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1609 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 1785 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1648 string) (raw))
mem: ((1648 integer) (raw)) => 2
mem: ((1649 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 1786 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 1787 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 8
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 9 => ((3 integer))
mem: ((3 integer)): 1779 <= 9
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 1783 <= 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 1784 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 9
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1610 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 1785 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1648 string) (raw))
mem: ((1648 integer) (raw)) => 2
mem: ((1650 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 1786 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 1787 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 9
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 10 => ((3 integer))
mem: ((3 integer)): 1779 <= 10
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 1783 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 1784 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 1690 <= t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 8
run: split-first-at-substring/parse-trace/parse-traces/main 9: 8 => ((7 integer))
mem: ((7 integer)): 1659 <= 8
run: split-first-at-substring/parse-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 1600
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 1806 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1600 0 8)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 1600 => ((1 string-address))
mem: ((1 string-address)): 1808 <= 1600
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1600 0 8)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 1809 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1600 0 8)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 8 => ((3 integer))
mem: ((3 integer)): 1810 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1600 integer) (raw)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 14 => ((4 integer))
mem: ((4 integer)): 1811 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 8
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 1837 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (14 8)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 14 => ((1 integer))
mem: ((1 integer)): 1839 <= 14
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (14 8)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 8 => ((2 integer))
mem: ((2 integer)): 1840 <= 8
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 14
mem: ((2 integer)) => 8
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 1841 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 8 => ((3 integer))
mem: ((3 integer)): 1810 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 8
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 8 => ((4 integer))
mem: ((4 integer)): 1811 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 1868 => ((5 string-address))
mem: ((5 string-address)): 1812 <= 1868
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 1813 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 1814 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1815 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1601 byte) (raw)) => s
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\s => ((9 character))
mem: ((9 character)): 1816 <= #\s
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1868 string) (raw))
mem: ((1868 integer) (raw)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1869 => ((10 character-address))
mem: ((10 character-address)): 1817 <= 1869
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => s
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\s => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1869 <= #\s
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 1813 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 1814 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1815 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1602 byte) (raw)) => c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\c => ((9 character))
mem: ((9 character)): 1816 <= #\c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1868 string) (raw))
mem: ((1868 integer) (raw)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1870 => ((10 character-address))
mem: ((10 character-address)): 1817 <= 1870
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\c => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1870 <= #\c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 1813 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 1814 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1815 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1603 byte) (raw)) => h
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\h => ((9 character))
mem: ((9 character)): 1816 <= #\h
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1868 string) (raw))
mem: ((1868 integer) (raw)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1871 => ((10 character-address))
mem: ((10 character-address)): 1817 <= 1871
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => h
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\h => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1871 <= #\h
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 1813 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 1814 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1815 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1604 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 1816 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1868 string) (raw))
mem: ((1868 integer) (raw)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1872 => ((10 character-address))
mem: ((10 character-address)): 1817 <= 1872
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1872 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 1813 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 1814 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1815 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 4
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1605 byte) (raw)) => d
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\d => ((9 character))
mem: ((9 character)): 1816 <= #\d
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1868 string) (raw))
mem: ((1868 integer) (raw)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1873 => ((10 character-address))
mem: ((10 character-address)): 1817 <= 1873
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => d
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\d => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1873 <= #\d
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 5 => ((6 integer))
mem: ((6 integer)): 1813 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 1814 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1815 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1606 byte) (raw)) => u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\u => ((9 character))
mem: ((9 character)): 1816 <= #\u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1868 string) (raw))
mem: ((1868 integer) (raw)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1874 => ((10 character-address))
mem: ((10 character-address)): 1817 <= 1874
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\u => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1874 <= #\u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 1813 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 1814 <= 6
schedule: scheduling string-copy/split-first-at-substring/parse-trace/parse-traces/main for further processing
schedule: string-copy/split-first-at-substring/parse-trace/parse-traces/main
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1815 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1607 byte) (raw)) => l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 1816 <= #\l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1868 string) (raw))
mem: ((1868 integer) (raw)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1875 => ((10 character-address))
mem: ((10 character-address)): 1817 <= 1875
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1875 <= #\l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 1813 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 1814 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1815 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1608 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 1816 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1868 string) (raw))
mem: ((1868 integer) (raw)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1876 => ((10 character-address))
mem: ((10 character-address)): 1817 <= 1876
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1876 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 1813 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 1814 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 1815 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 1868
run: split-first-at-substring/parse-trace/parse-traces/main 10: 1868 => ((5 string-address))
mem: ((5 string-address)): 1657 <= 1868
run: split-first-at-substring/parse-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((1648 integer) (raw)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 1660 <= 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 8
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: 10 => ((7 integer))
mem: ((7 integer)): 1659 <= 10
run: split-first-at-substring/parse-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 1600
mem: ((7 integer)) => 10
mem: ((3 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 1877 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1600 10 14)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 1600 => ((1 string-address))
mem: ((1 string-address)): 1879 <= 1600
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1600 10 14)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 10 => ((2 integer))
mem: ((2 integer)): 1880 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1600 10 14)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 14 => ((3 integer))
mem: ((3 integer)): 1881 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1600 integer) (raw)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 14 => ((4 integer))
mem: ((4 integer)): 1882 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 14
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 1908 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (14 14)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 14 => ((1 integer))
mem: ((1 integer)): 1910 <= 14
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (14 14)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 14 => ((2 integer))
mem: ((2 integer)): 1911 <= 14
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 14
mem: ((2 integer)) => 14
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 1912 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 14 => ((3 integer))
mem: ((3 integer)): 1881 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 14
mem: ((2 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 4 => ((4 integer))
mem: ((4 integer)): 1882 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 1939 => ((5 string-address))
mem: ((5 string-address)): 1883 <= 1939
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 10 => ((6 integer))
mem: ((6 integer)): 1884 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 1885 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1886 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1611 byte) (raw)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 1887 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1939 string) (raw))
mem: ((1939 integer) (raw)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1940 => ((10 character-address))
mem: ((10 character-address)): 1888 <= 1940
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1940 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 1884 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 1885 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1886 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1612 byte) (raw)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 1887 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1939 string) (raw))
mem: ((1939 integer) (raw)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1941 => ((10 character-address))
mem: ((10 character-address)): 1888 <= 1941
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1941 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 1884 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 1885 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1886 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1613 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 1887 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1939 string) (raw))
mem: ((1939 integer) (raw)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1942 => ((10 character-address))
mem: ((10 character-address)): 1888 <= 1942
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1942 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 1884 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 1885 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1886 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((1600 string) (raw))
mem: ((1600 integer) (raw)) => 14
mem: ((1614 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 1887 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1939 string) (raw))
mem: ((1939 integer) (raw)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1943 => ((10 character-address))
mem: ((10 character-address)): 1888 <= 1943
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1943 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 1884 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 1885 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 1886 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 1939
run: split-first-at-substring/parse-trace/parse-traces/main 13: 1939 => ((6 string-address))
mem: ((6 string-address)): 1658 <= 1939
run: split-first-at-substring/parse-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 1868
mem: ((6 string-address)) => 1939
run: parse-trace/parse-traces/main 4: 1868 => ((4 string-address))
mem: ((4 string-address)): 1620 <= 1868
run: parse-trace/parse-traces/main 4: 1939 => ((5 string-address))
mem: ((5 string-address)): 1621 <= 1939
run: parse-trace/parse-traces/main 5: (((6 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((0 offset)))
run: parse-trace/parse-traces/main 5: 1646 => ((6 string-address-address))
mem: ((6 string-address-address)): 1622 <= 1646
run: parse-trace/parse-traces/main 6: (((6 string-address-address) (deref)) <- ((copy)) ((4 string-address)))
mem: ((4 string-address)) => 1868
run: parse-trace/parse-traces/main 6: 1868 => ((6 string-address-address) (deref))
mem: ((6 string-address-address) (deref)): 1646 <= 1868
run: parse-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((1 offset)))
run: parse-trace/parse-traces/main 7: 1647 => ((7 string-address-address))
mem: ((7 string-address-address)): 1623 <= 1647
run: parse-trace/parse-traces/main 8: (((7 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 1939
run: parse-trace/parse-traces/main 8: 1939 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 1647 <= 1939
run: parse-trace/parse-traces/main 9: (((reply)) ((2 trace-address)))
mem: ((2 trace-address)) => 1646
run: parse-traces/main 10: 1646 => ((8 trace-address))
mem: ((8 trace-address)): 1316 <= 1646
run: parse-traces/main 11: (((9 string-address)) <- ((get)) ((8 trace-address) (deref)) ((0 offset)))
mem: ((1646 string-address) (raw)) => 1868
run: parse-traces/main 11: 1868 => ((9 string-address))
mem: ((9 string-address)): 1317 <= 1868
run: parse-traces/main 12: (((10 boolean)) <- ((string-equal)) ((9 string-address)) ((5 string-address) (const)))
mem: ((9 string-address)) => 1868
mem: ((5 string-address) (const)) => 1441
run: string-equal/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-equal/parse-traces/main 0: 1944 => ((default-space space-address))
run: string-equal/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1868 1441)
run: string-equal/parse-traces/main 1: 1868 => ((1 string-address))
mem: ((1 string-address)): 1946 <= 1868
run: string-equal/parse-traces/main 2: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1868 integer) (raw)) => 8
run: string-equal/parse-traces/main 2: 8 => ((2 integer))
mem: ((2 integer)): 1947 <= 8
run: string-equal/parse-traces/main 3: (((3 string-address)) <- ((next-input)))
arg: nil 1 (1868 1441)
run: string-equal/parse-traces/main 3: 1441 => ((3 string-address))
mem: ((3 string-address)): 1948 <= 1441
run: string-equal/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1441 integer) (raw)) => 3
run: string-equal/parse-traces/main 4: 3 => ((4 integer))
mem: ((4 integer)): 1949 <= 3
run: string-equal/parse-traces/main 5: (((5 boolean)) <- ((equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 8
mem: ((4 integer)) => 3
run: string-equal/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1950 <= nil
run: string-equal/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((1 offset)))
mem: ((5 boolean)) => nil
run: string-equal/parse-traces/main 7: (((reply)) ((nil literal)))
run: parse-traces/main 12: nil => ((10 boolean))
mem: ((10 boolean)): 1318 <= nil
run: parse-traces/main 13: (((jump-unless)) ((10 boolean)) ((7 offset)))
mem: ((10 boolean)) => nil
run: parse-traces/main 21: (((jump-unless)) ((3 instruction-trace-address)) ((-16 offset)))
mem: ((3 instruction-trace-address)) => nil
run: parse-traces/main 6: next-line
run: parse-traces/main 7: (((6 boolean)) <- ((end-of-stream?)) ((1 stream-address)))
mem: ((1 stream-address)) => 1305
run: end-of-stream?/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: end-of-stream?/parse-traces/main 0: 1975 => ((default-space space-address))
run: end-of-stream?/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1305)
run: end-of-stream?/parse-traces/main 1: 1305 => ((1 stream-address))
mem: ((1 stream-address)): 1977 <= 1305
run: end-of-stream?/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 stream-address) (deref)) ((0 offset)))
mem: ((1305 integer) (raw)) => 15
run: end-of-stream?/parse-traces/main 2: 15 => ((2 integer))
mem: ((2 integer)): 1978 <= 15
run: end-of-stream?/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1306 string-address) (raw)) => 1031
run: end-of-stream?/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 1979 <= 1031
run: end-of-stream?/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: end-of-stream?/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 1980 <= 242
run: end-of-stream?/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 15
mem: ((4 integer)) => 242
run: end-of-stream?/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1981 <= nil
run: end-of-stream?/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: parse-traces/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1314 <= nil
run: parse-traces/main 8: (((jump-if)) ((6 boolean)) ((15 offset)))
mem: ((6 boolean)) => nil
run: parse-traces/main 9: (((7 string-address)) <- ((read-line)) ((1 stream-address)))
mem: ((1 stream-address)) => 1305
run: read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-line/parse-traces/main 0: 2006 => ((default-space space-address))
run: read-line/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1305)
run: read-line/parse-traces/main 1: 1305 => ((1 stream-address))
mem: ((1 stream-address)): 2008 <= 1305
run: read-line/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 stream-address) (deref)) ((0 offset)))
run: read-line/parse-traces/main 2: 1305 => ((2 integer-address))
mem: ((2 integer-address)): 2009 <= 1305
run: read-line/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1306 string-address) (raw)) => 1031
run: read-line/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 2010 <= 1031
run: read-line/parse-traces/main 4: (((4 integer)) <- ((find-next)) ((3 string-address)) ((
 literal)) ((2 integer-address) (deref)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 15
run: find-next/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/read-line/parse-traces/main 0: 2037 => ((default-space space-address))
run: find-next/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 #\newline 15)
run: find-next/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 2039 <= 1031
run: find-next/read-line/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1031 #\newline 15)
run: find-next/read-line/parse-traces/main 2: #\newline => ((2 character))
mem: ((2 character)): 2040 <= #\newline
run: find-next/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 #\newline 15)
run: find-next/read-line/parse-traces/main 3: 15 => ((3 integer))
mem: ((3 integer)): 2041 <= 15
run: find-next/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: find-next/read-line/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 2042 <= 242
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 15
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 15
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1047 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 2044 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 15
run: find-next/read-line/parse-traces/main 10: 16 => ((3 integer))
mem: ((3 integer)): 2041 <= 16
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 16
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 16
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1048 byte) (raw)) => u
run: find-next/read-line/parse-traces/main 7: #\u => ((6 byte))
mem: ((6 byte)): 2044 <= #\u
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => u
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 16
run: find-next/read-line/parse-traces/main 10: 17 => ((3 integer))
mem: ((3 integer)): 2041 <= 17
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 17
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 17
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1049 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 2044 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 17
run: find-next/read-line/parse-traces/main 10: 18 => ((3 integer))
mem: ((3 integer)): 2041 <= 18
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 18
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 18
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1050 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 2044 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 18
run: find-next/read-line/parse-traces/main 10: 19 => ((3 integer))
mem: ((3 integer)): 2041 <= 19
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 19
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 19
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1051 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 2044 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 19
run: find-next/read-line/parse-traces/main 10: 20 => ((3 integer))
mem: ((3 integer)): 2041 <= 20
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 20
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 20
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1052 byte) (raw)) => m
run: find-next/read-line/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 2044 <= #\m
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 20
run: find-next/read-line/parse-traces/main 10: 21 => ((3 integer))
mem: ((3 integer)): 2041 <= 21
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 21
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 21
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1053 byte) (raw)) => a
run: find-next/read-line/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 2044 <= #\a
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 21
run: find-next/read-line/parse-traces/main 10: 22 => ((3 integer))
mem: ((3 integer)): 2041 <= 22
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 22
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 22
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1054 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 2044 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 22
run: find-next/read-line/parse-traces/main 10: 23 => ((3 integer))
mem: ((3 integer)): 2041 <= 23
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 23
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 23
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1055 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 2044 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 23
run: find-next/read-line/parse-traces/main 10: 24 => ((3 integer))
mem: ((3 integer)): 2041 <= 24
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 24
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 24
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1056 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 2044 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 24
run: find-next/read-line/parse-traces/main 10: 25 => ((3 integer))
mem: ((3 integer)): 2041 <= 25
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 25
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 25
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1057 byte) (raw)) => 0
run: find-next/read-line/parse-traces/main 7: #\0 => ((6 byte))
mem: ((6 byte)): 2044 <= #\0
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 0
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 25
run: find-next/read-line/parse-traces/main 10: 26 => ((3 integer))
mem: ((3 integer)): 2041 <= 26
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 26
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 26
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1058 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 2044 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 26
run: find-next/read-line/parse-traces/main 10: 27 => ((3 integer))
mem: ((3 integer)): 2041 <= 27
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 27
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 27
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1059 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 2044 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 27
run: find-next/read-line/parse-traces/main 10: 28 => ((3 integer))
mem: ((3 integer)): 2041 <= 28
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 28
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 28
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1060 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 2044 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 28
run: find-next/read-line/parse-traces/main 10: 29 => ((3 integer))
mem: ((3 integer)): 2041 <= 29
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 29
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 29
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1061 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 2044 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 29
run: find-next/read-line/parse-traces/main 10: 30 => ((3 integer))
mem: ((3 integer)): 2041 <= 30
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 30
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 30
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1062 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 2044 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 30
run: find-next/read-line/parse-traces/main 10: 31 => ((3 integer))
mem: ((3 integer)): 2041 <= 31
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 31
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 31
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1063 byte) (raw)) => 1
run: find-next/read-line/parse-traces/main 7: #\1 => ((6 byte))
mem: ((6 byte)): 2044 <= #\1
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 1
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 31
run: find-next/read-line/parse-traces/main 10: 32 => ((3 integer))
mem: ((3 integer)): 2041 <= 32
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 32
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 32
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1064 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 2044 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 32
run: find-next/read-line/parse-traces/main 10: 33 => ((3 integer))
mem: ((3 integer)): 2041 <= 33
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 33
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 33
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1065 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 2044 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 33
run: find-next/read-line/parse-traces/main 10: 34 => ((3 integer))
mem: ((3 integer)): 2041 <= 34
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 34
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 34
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1066 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 2044 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 34
run: find-next/read-line/parse-traces/main 10: 35 => ((3 integer))
mem: ((3 integer)): 2041 <= 35
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 35
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 35
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1067 byte) (raw)) => t
run: find-next/read-line/parse-traces/main 7: #\t => ((6 byte))
mem: ((6 byte)): 2044 <= #\t
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => t
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 35
run: find-next/read-line/parse-traces/main 10: 36 => ((3 integer))
mem: ((3 integer)): 2041 <= 36
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 36
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 36
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1068 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 2044 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 36
run: find-next/read-line/parse-traces/main 10: 37 => ((3 integer))
mem: ((3 integer)): 2041 <= 37
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 37
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 37
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1069 byte) (raw)) => g
run: find-next/read-line/parse-traces/main 7: #\g => ((6 byte))
mem: ((6 byte)): 2044 <= #\g
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => g
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 37
run: find-next/read-line/parse-traces/main 10: 38 => ((3 integer))
mem: ((3 integer)): 2041 <= 38
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 38
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 38
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1070 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 2044 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 38
run: find-next/read-line/parse-traces/main 10: 39 => ((3 integer))
mem: ((3 integer)): 2041 <= 39
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 39
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 39
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1071 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 2044 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 39
run: find-next/read-line/parse-traces/main 10: 40 => ((3 integer))
mem: ((3 integer)): 2041 <= 40
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 40
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 40
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1072 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 2044 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 40
run: find-next/read-line/parse-traces/main 10: 41 => ((3 integer))
mem: ((3 integer)): 2041 <= 41
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 41
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 41
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1073 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 2044 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 41
run: find-next/read-line/parse-traces/main 10: 42 => ((3 integer))
mem: ((3 integer)): 2041 <= 42
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 42
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 42
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1074 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 2044 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 42
run: find-next/read-line/parse-traces/main 10: 43 => ((3 integer))
mem: ((3 integer)): 2041 <= 43
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 43
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 43
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1075 byte) (raw)) => <
run: find-next/read-line/parse-traces/main 7: #\< => ((6 byte))
mem: ((6 byte)): 2044 <= #\<
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => <
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 43
run: find-next/read-line/parse-traces/main 10: 44 => ((3 integer))
mem: ((3 integer)): 2041 <= 44
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 44
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 44
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1076 byte) (raw)) => -
run: find-next/read-line/parse-traces/main 7: #\- => ((6 byte))
mem: ((6 byte)): 2044 <= #\-
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => -
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 44
run: find-next/read-line/parse-traces/main 10: 45 => ((3 integer))
mem: ((3 integer)): 2041 <= 45
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 45
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 45
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1077 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 2044 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 45
run: find-next/read-line/parse-traces/main 10: 46 => ((3 integer))
mem: ((3 integer)): 2041 <= 46
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 46
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 46
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1078 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 2044 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 46
run: find-next/read-line/parse-traces/main 10: 47 => ((3 integer))
mem: ((3 integer)): 2041 <= 47
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 47
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 47
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1079 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 2044 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 47
run: find-next/read-line/parse-traces/main 10: 48 => ((3 integer))
mem: ((3 integer)): 2041 <= 48
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 48
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 48
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1080 byte) (raw)) => c
run: find-next/read-line/parse-traces/main 7: #\c => ((6 byte))
mem: ((6 byte)): 2044 <= #\c
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => c
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 48
run: find-next/read-line/parse-traces/main 10: 49 => ((3 integer))
mem: ((3 integer)): 2041 <= 49
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 49
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 49
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1081 byte) (raw)) => o
run: find-next/read-line/parse-traces/main 7: #\o => ((6 byte))
mem: ((6 byte)): 2044 <= #\o
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => o
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 49
run: find-next/read-line/parse-traces/main 10: 50 => ((3 integer))
mem: ((3 integer)): 2041 <= 50
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 50
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 50
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1082 byte) (raw)) => p
run: find-next/read-line/parse-traces/main 7: #\p => ((6 byte))
mem: ((6 byte)): 2044 <= #\p
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => p
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 50
run: find-next/read-line/parse-traces/main 10: 51 => ((3 integer))
mem: ((3 integer)): 2041 <= 51
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 51
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 51
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1083 byte) (raw)) => y
run: find-next/read-line/parse-traces/main 7: #\y => ((6 byte))
mem: ((6 byte)): 2044 <= #\y
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => y
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 51
run: find-next/read-line/parse-traces/main 10: 52 => ((3 integer))
mem: ((3 integer)): 2041 <= 52
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 52
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 52
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1084 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 2044 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 52
run: find-next/read-line/parse-traces/main 10: 53 => ((3 integer))
mem: ((3 integer)): 2041 <= 53
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 53
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 53
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1085 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 2044 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 53
run: find-next/read-line/parse-traces/main 10: 54 => ((3 integer))
mem: ((3 integer)): 2041 <= 54
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 54
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 54
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1086 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 2044 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 54
run: find-next/read-line/parse-traces/main 10: 55 => ((3 integer))
mem: ((3 integer)): 2041 <= 55
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 55
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 55
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1087 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 2044 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 55
run: find-next/read-line/parse-traces/main 10: 56 => ((3 integer))
mem: ((3 integer)): 2041 <= 56
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 56
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 56
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1088 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 2044 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 56
run: find-next/read-line/parse-traces/main 10: 57 => ((3 integer))
mem: ((3 integer)): 2041 <= 57
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 57
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 57
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1089 byte) (raw)) => 1
run: find-next/read-line/parse-traces/main 7: #\1 => ((6 byte))
mem: ((6 byte)): 2044 <= #\1
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 1
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 57
run: find-next/read-line/parse-traces/main 10: 58 => ((3 integer))
mem: ((3 integer)): 2041 <= 58
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 58
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 58
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1090 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 2044 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 58
run: find-next/read-line/parse-traces/main 10: 59 => ((3 integer))
mem: ((3 integer)): 2041 <= 59
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 59
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 59
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1091 byte) (raw)) => l
run: find-next/read-line/parse-traces/main 7: #\l => ((6 byte))
mem: ((6 byte)): 2044 <= #\l
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => l
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 59
run: find-next/read-line/parse-traces/main 10: 60 => ((3 integer))
mem: ((3 integer)): 2041 <= 60
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 60
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 60
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1092 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 2044 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 60
run: find-next/read-line/parse-traces/main 10: 61 => ((3 integer))
mem: ((3 integer)): 2041 <= 61
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 61
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 61
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1093 byte) (raw)) => t
run: find-next/read-line/parse-traces/main 7: #\t => ((6 byte))
mem: ((6 byte)): 2044 <= #\t
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => t
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 61
run: find-next/read-line/parse-traces/main 10: 62 => ((3 integer))
mem: ((3 integer)): 2041 <= 62
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 62
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 62
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1094 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 2044 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 62
run: find-next/read-line/parse-traces/main 10: 63 => ((3 integer))
mem: ((3 integer)): 2041 <= 63
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 63
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 63
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1095 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 2044 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 63
run: find-next/read-line/parse-traces/main 10: 64 => ((3 integer))
mem: ((3 integer)): 2041 <= 64
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 64
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 64
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1096 byte) (raw)) => a
run: find-next/read-line/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 2044 <= #\a
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 64
run: find-next/read-line/parse-traces/main 10: 65 => ((3 integer))
mem: ((3 integer)): 2041 <= 65
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 65
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 65
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1097 byte) (raw)) => l
run: find-next/read-line/parse-traces/main 7: #\l => ((6 byte))
mem: ((6 byte)): 2044 <= #\l
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => l
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 65
run: find-next/read-line/parse-traces/main 10: 66 => ((3 integer))
mem: ((3 integer)): 2041 <= 66
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 66
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 66
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1098 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 2044 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 66
run: find-next/read-line/parse-traces/main 10: 67 => ((3 integer))
mem: ((3 integer)): 2041 <= 67
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 67
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 67
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1099 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 2044 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 67
run: find-next/read-line/parse-traces/main 10: 68 => ((3 integer))
mem: ((3 integer)): 2041 <= 68
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 68
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 68
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1100 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 2044 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2045 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 68
run: find-next/read-line/parse-traces/main 10: 69 => ((3 integer))
mem: ((3 integer)): 2041 <= 69
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 69
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2043 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 69
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1101 byte) (raw)) => 

run: find-next/read-line/parse-traces/main 7: #\newline => ((6 byte))
mem: ((6 byte)): 2044 <= #\newline
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 

mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 2045 <= t
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/read-line/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 69
run: read-line/parse-traces/main 4: 69 => ((4 integer))
mem: ((4 integer)): 2011 <= 69
run: read-line/parse-traces/main 5: (((5 string-address)) <- ((string-copy)) ((3 string-address)) ((2 integer-address) (deref)) ((4 integer)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 15
mem: ((4 integer)) => 69
run: string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/read-line/parse-traces/main 0: 2068 => ((default-space space-address))
run: string-copy/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 15 69)
run: string-copy/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 2070 <= 1031
schedule: scheduling string-copy/read-line/parse-traces/main for further processing
schedule: string-copy/read-line/parse-traces/main
run: string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1031 15 69)
run: string-copy/read-line/parse-traces/main 2: 15 => ((2 integer))
mem: ((2 integer)): 2071 <= 15
run: string-copy/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 15 69)
run: string-copy/read-line/parse-traces/main 3: 69 => ((3 integer))
mem: ((3 integer)): 2072 <= 69
run: string-copy/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: string-copy/read-line/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 2073 <= 242
run: string-copy/read-line/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 242
mem: ((3 integer)) => 69
run: min/string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/read-line/parse-traces/main 0: 2099 => ((default-space space-address))
run: min/string-copy/read-line/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (242 69)
run: min/string-copy/read-line/parse-traces/main 1: 242 => ((1 integer))
mem: ((1 integer)): 2101 <= 242
run: min/string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (242 69)
run: min/string-copy/read-line/parse-traces/main 2: 69 => ((2 integer))
mem: ((2 integer)): 2102 <= 69
run: min/string-copy/read-line/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 242
mem: ((2 integer)) => 69
run: min/string-copy/read-line/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 2103 <= nil
run: min/string-copy/read-line/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/read-line/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 69
run: string-copy/read-line/parse-traces/main 5: 69 => ((3 integer))
mem: ((3 integer)): 2072 <= 69
run: string-copy/read-line/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 69
mem: ((2 integer)) => 15
run: string-copy/read-line/parse-traces/main 6: 54 => ((4 integer))
mem: ((4 integer)): 2073 <= 54
run: string-copy/read-line/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 54
run: string-copy/read-line/parse-traces/main 7: 2130 => ((5 string-address))
mem: ((5 string-address)): 2074 <= 2130
run: string-copy/read-line/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 15
run: string-copy/read-line/parse-traces/main 8: 15 => ((6 integer))
mem: ((6 integer)): 2075 <= 15
run: string-copy/read-line/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/read-line/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 2076 <= 0
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1047 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 2078 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2131 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2131
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2131 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/read-line/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 2075 <= 16
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/read-line/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 2076 <= 1
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1048 byte) (raw)) => u
run: string-copy/read-line/parse-traces/main 12: #\u => ((9 character))
mem: ((9 character)): 2078 <= #\u
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2132 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2132
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => u
run: string-copy/read-line/parse-traces/main 14: #\u => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2132 <= #\u
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/read-line/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 2075 <= 17
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/read-line/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 2076 <= 2
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1049 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 2078 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2133 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2133
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2133 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/read-line/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 2075 <= 18
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/read-line/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 2076 <= 3
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1050 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 2078 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2134 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2134
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2134 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/read-line/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 2075 <= 19
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/read-line/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 2076 <= 4
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1051 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2078 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2135 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2135
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2135 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/read-line/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 2075 <= 20
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/read-line/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 2076 <= 5
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1052 byte) (raw)) => m
run: string-copy/read-line/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 2078 <= #\m
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2136 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2136
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/read-line/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2136 <= #\m
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/read-line/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 2075 <= 21
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/read-line/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 2076 <= 6
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1053 byte) (raw)) => a
run: string-copy/read-line/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 2078 <= #\a
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2137 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2137
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/read-line/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2137 <= #\a
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/read-line/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 2075 <= 22
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/read-line/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 2076 <= 7
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1054 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2078 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2138 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2138
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2138 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/read-line/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 2075 <= 23
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/read-line/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 2076 <= 8
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1055 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 2078 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2139 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2139
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2139 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/read-line/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 2075 <= 24
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/read-line/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 2076 <= 9
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1056 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2078 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2140 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2140
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2140 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/read-line/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 2075 <= 25
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/read-line/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 2076 <= 10
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1057 byte) (raw)) => 0
run: string-copy/read-line/parse-traces/main 12: #\0 => ((9 character))
mem: ((9 character)): 2078 <= #\0
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2141 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2141
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 0
run: string-copy/read-line/parse-traces/main 14: #\0 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2141 <= #\0
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/read-line/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 2075 <= 26
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/read-line/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 2076 <= 11
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 26
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1058 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 2078 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2142 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2142
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2142 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 26
run: string-copy/read-line/parse-traces/main 15: 27 => ((6 integer))
mem: ((6 integer)): 2075 <= 27
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/read-line/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 2076 <= 12
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 27
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 27
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1059 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2078 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2143 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2143
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2143 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 27
run: string-copy/read-line/parse-traces/main 15: 28 => ((6 integer))
mem: ((6 integer)): 2075 <= 28
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/read-line/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 2076 <= 13
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 28
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 28
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1060 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2078 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2144 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2144
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2144 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 28
run: string-copy/read-line/parse-traces/main 15: 29 => ((6 integer))
mem: ((6 integer)): 2075 <= 29
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/read-line/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 2076 <= 14
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 29
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 29
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1061 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2078 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2145 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2145
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2145 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 29
run: string-copy/read-line/parse-traces/main 15: 30 => ((6 integer))
mem: ((6 integer)): 2075 <= 30
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/read-line/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 2076 <= 15
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 30
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 30
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1062 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2078 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2146 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2146
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2146 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 30
run: string-copy/read-line/parse-traces/main 15: 31 => ((6 integer))
mem: ((6 integer)): 2075 <= 31
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/read-line/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 2076 <= 16
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 31
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 31
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1063 byte) (raw)) => 1
run: string-copy/read-line/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 2078 <= #\1
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2147 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2147
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/read-line/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2147 <= #\1
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 31
run: string-copy/read-line/parse-traces/main 15: 32 => ((6 integer))
mem: ((6 integer)): 2075 <= 32
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/read-line/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 2076 <= 17
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 32
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 32
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1064 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2078 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2148 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2148
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2148 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 32
run: string-copy/read-line/parse-traces/main 15: 33 => ((6 integer))
mem: ((6 integer)): 2075 <= 33
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/read-line/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 2076 <= 18
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 33
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 33
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1065 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2078 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2149 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2149
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2149 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 33
run: string-copy/read-line/parse-traces/main 15: 34 => ((6 integer))
mem: ((6 integer)): 2075 <= 34
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/read-line/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 2076 <= 19
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 34
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 34
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1066 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 2078 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2150 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2150
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2150 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 34
run: string-copy/read-line/parse-traces/main 15: 35 => ((6 integer))
mem: ((6 integer)): 2075 <= 35
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/read-line/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 2076 <= 20
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 35
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 35
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1067 byte) (raw)) => t
run: string-copy/read-line/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 2078 <= #\t
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2151 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2151
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/read-line/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2151 <= #\t
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 35
run: string-copy/read-line/parse-traces/main 15: 36 => ((6 integer))
mem: ((6 integer)): 2075 <= 36
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/read-line/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 2076 <= 21
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 36
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 36
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1068 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 2078 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2152 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2152
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2152 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 36
run: string-copy/read-line/parse-traces/main 15: 37 => ((6 integer))
mem: ((6 integer)): 2075 <= 37
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/read-line/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 2076 <= 22
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 37
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 37
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1069 byte) (raw)) => g
run: string-copy/read-line/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 2078 <= #\g
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2153 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2153
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/read-line/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2153 <= #\g
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 37
run: string-copy/read-line/parse-traces/main 15: 38 => ((6 integer))
mem: ((6 integer)): 2075 <= 38
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/read-line/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 2076 <= 23
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 38
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 38
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1070 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 2078 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2154 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2154
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2154 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 38
run: string-copy/read-line/parse-traces/main 15: 39 => ((6 integer))
mem: ((6 integer)): 2075 <= 39
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/read-line/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 2076 <= 24
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 39
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 39
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1071 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 2078 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2155 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2155
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2155 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 39
run: string-copy/read-line/parse-traces/main 15: 40 => ((6 integer))
mem: ((6 integer)): 2075 <= 40
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/read-line/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 2076 <= 25
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 40
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 40
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1072 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2078 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2156 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2156
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2156 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 40
run: string-copy/read-line/parse-traces/main 15: 41 => ((6 integer))
mem: ((6 integer)): 2075 <= 41
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/read-line/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 2076 <= 26
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 41
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 41
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1073 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2078 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 26
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2157 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2157
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2157 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 41
run: string-copy/read-line/parse-traces/main 15: 42 => ((6 integer))
mem: ((6 integer)): 2075 <= 42
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 26
run: string-copy/read-line/parse-traces/main 16: 27 => ((7 integer))
mem: ((7 integer)): 2076 <= 27
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 42
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 42
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1074 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2078 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 27
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2158 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2158
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2158 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 42
run: string-copy/read-line/parse-traces/main 15: 43 => ((6 integer))
mem: ((6 integer)): 2075 <= 43
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 27
run: string-copy/read-line/parse-traces/main 16: 28 => ((7 integer))
mem: ((7 integer)): 2076 <= 28
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 43
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 43
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1075 byte) (raw)) => <
run: string-copy/read-line/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 2078 <= #\<
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 28
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2159 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2159
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/read-line/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2159 <= #\<
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 43
run: string-copy/read-line/parse-traces/main 15: 44 => ((6 integer))
mem: ((6 integer)): 2075 <= 44
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 28
run: string-copy/read-line/parse-traces/main 16: 29 => ((7 integer))
mem: ((7 integer)): 2076 <= 29
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 44
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 44
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1076 byte) (raw)) => -
run: string-copy/read-line/parse-traces/main 12: #\- => ((9 character))
mem: ((9 character)): 2078 <= #\-
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 29
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2160 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2160
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => -
run: string-copy/read-line/parse-traces/main 14: #\- => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2160 <= #\-
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 44
run: string-copy/read-line/parse-traces/main 15: 45 => ((6 integer))
mem: ((6 integer)): 2075 <= 45
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 29
run: string-copy/read-line/parse-traces/main 16: 30 => ((7 integer))
mem: ((7 integer)): 2076 <= 30
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 45
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 45
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1077 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2078 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 30
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2161 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2161
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2161 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 45
run: string-copy/read-line/parse-traces/main 15: 46 => ((6 integer))
mem: ((6 integer)): 2075 <= 46
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 30
run: string-copy/read-line/parse-traces/main 16: 31 => ((7 integer))
mem: ((7 integer)): 2076 <= 31
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 46
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 46
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1078 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2078 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 31
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2162 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2162
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2162 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 46
run: string-copy/read-line/parse-traces/main 15: 47 => ((6 integer))
mem: ((6 integer)): 2075 <= 47
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 31
run: string-copy/read-line/parse-traces/main 16: 32 => ((7 integer))
mem: ((7 integer)): 2076 <= 32
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 47
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 47
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1079 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2078 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 32
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2163 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2163
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2163 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 47
run: string-copy/read-line/parse-traces/main 15: 48 => ((6 integer))
mem: ((6 integer)): 2075 <= 48
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 32
run: string-copy/read-line/parse-traces/main 16: 33 => ((7 integer))
mem: ((7 integer)): 2076 <= 33
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 48
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 48
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1080 byte) (raw)) => c
run: string-copy/read-line/parse-traces/main 12: #\c => ((9 character))
mem: ((9 character)): 2078 <= #\c
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 33
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2164 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2164
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => c
run: string-copy/read-line/parse-traces/main 14: #\c => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2164 <= #\c
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 48
run: string-copy/read-line/parse-traces/main 15: 49 => ((6 integer))
mem: ((6 integer)): 2075 <= 49
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 33
run: string-copy/read-line/parse-traces/main 16: 34 => ((7 integer))
mem: ((7 integer)): 2076 <= 34
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 49
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 49
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1081 byte) (raw)) => o
run: string-copy/read-line/parse-traces/main 12: #\o => ((9 character))
mem: ((9 character)): 2078 <= #\o
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 34
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2165 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2165
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => o
run: string-copy/read-line/parse-traces/main 14: #\o => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2165 <= #\o
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 49
run: string-copy/read-line/parse-traces/main 15: 50 => ((6 integer))
mem: ((6 integer)): 2075 <= 50
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 34
run: string-copy/read-line/parse-traces/main 16: 35 => ((7 integer))
mem: ((7 integer)): 2076 <= 35
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 50
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 50
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1082 byte) (raw)) => p
run: string-copy/read-line/parse-traces/main 12: #\p => ((9 character))
mem: ((9 character)): 2078 <= #\p
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 35
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2166 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2166
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => p
run: string-copy/read-line/parse-traces/main 14: #\p => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2166 <= #\p
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 50
run: string-copy/read-line/parse-traces/main 15: 51 => ((6 integer))
mem: ((6 integer)): 2075 <= 51
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 35
run: string-copy/read-line/parse-traces/main 16: 36 => ((7 integer))
mem: ((7 integer)): 2076 <= 36
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 51
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 51
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1083 byte) (raw)) => y
run: string-copy/read-line/parse-traces/main 12: #\y => ((9 character))
mem: ((9 character)): 2078 <= #\y
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 36
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2167 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2167
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => y
run: string-copy/read-line/parse-traces/main 14: #\y => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2167 <= #\y
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 51
run: string-copy/read-line/parse-traces/main 15: 52 => ((6 integer))
mem: ((6 integer)): 2075 <= 52
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 36
run: string-copy/read-line/parse-traces/main 16: 37 => ((7 integer))
mem: ((7 integer)): 2076 <= 37
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 52
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 52
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1084 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2078 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 37
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2168 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2168
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2168 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 52
run: string-copy/read-line/parse-traces/main 15: 53 => ((6 integer))
mem: ((6 integer)): 2075 <= 53
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 37
run: string-copy/read-line/parse-traces/main 16: 38 => ((7 integer))
mem: ((7 integer)): 2076 <= 38
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 53
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 53
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1085 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2078 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 38
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2169 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2169
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2169 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 53
run: string-copy/read-line/parse-traces/main 15: 54 => ((6 integer))
mem: ((6 integer)): 2075 <= 54
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 38
run: string-copy/read-line/parse-traces/main 16: 39 => ((7 integer))
mem: ((7 integer)): 2076 <= 39
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 54
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 54
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1086 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2078 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 39
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2170 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2170
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2170 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 54
run: string-copy/read-line/parse-traces/main 15: 55 => ((6 integer))
mem: ((6 integer)): 2075 <= 55
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 39
run: string-copy/read-line/parse-traces/main 16: 40 => ((7 integer))
mem: ((7 integer)): 2076 <= 40
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 55
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 55
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1087 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2078 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 40
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2171 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2171
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2171 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 55
run: string-copy/read-line/parse-traces/main 15: 56 => ((6 integer))
mem: ((6 integer)): 2075 <= 56
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 40
run: string-copy/read-line/parse-traces/main 16: 41 => ((7 integer))
mem: ((7 integer)): 2076 <= 41
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 56
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 56
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1088 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2078 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 41
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2172 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2172
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2172 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 56
run: string-copy/read-line/parse-traces/main 15: 57 => ((6 integer))
mem: ((6 integer)): 2075 <= 57
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 41
run: string-copy/read-line/parse-traces/main 16: 42 => ((7 integer))
mem: ((7 integer)): 2076 <= 42
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 57
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 57
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1089 byte) (raw)) => 1
run: string-copy/read-line/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 2078 <= #\1
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 42
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2173 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2173
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/read-line/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2173 <= #\1
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 57
run: string-copy/read-line/parse-traces/main 15: 58 => ((6 integer))
mem: ((6 integer)): 2075 <= 58
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 42
run: string-copy/read-line/parse-traces/main 16: 43 => ((7 integer))
mem: ((7 integer)): 2076 <= 43
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 58
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 58
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1090 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2078 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 43
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2174 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2174
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2174 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 58
run: string-copy/read-line/parse-traces/main 15: 59 => ((6 integer))
mem: ((6 integer)): 2075 <= 59
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 43
run: string-copy/read-line/parse-traces/main 16: 44 => ((7 integer))
mem: ((7 integer)): 2076 <= 44
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 59
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 59
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1091 byte) (raw)) => l
run: string-copy/read-line/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 2078 <= #\l
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 44
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2175 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2175
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/read-line/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2175 <= #\l
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 59
run: string-copy/read-line/parse-traces/main 15: 60 => ((6 integer))
mem: ((6 integer)): 2075 <= 60
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 44
run: string-copy/read-line/parse-traces/main 16: 45 => ((7 integer))
mem: ((7 integer)): 2076 <= 45
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 60
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 60
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1092 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2078 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 45
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2176 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2176
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2176 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 60
run: string-copy/read-line/parse-traces/main 15: 61 => ((6 integer))
mem: ((6 integer)): 2075 <= 61
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 45
run: string-copy/read-line/parse-traces/main 16: 46 => ((7 integer))
mem: ((7 integer)): 2076 <= 46
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 61
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 61
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1093 byte) (raw)) => t
run: string-copy/read-line/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 2078 <= #\t
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 46
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2177 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2177
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/read-line/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2177 <= #\t
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 61
run: string-copy/read-line/parse-traces/main 15: 62 => ((6 integer))
mem: ((6 integer)): 2075 <= 62
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 46
run: string-copy/read-line/parse-traces/main 16: 47 => ((7 integer))
mem: ((7 integer)): 2076 <= 47
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 62
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 62
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1094 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 2078 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 47
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2178 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2178
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2178 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 62
run: string-copy/read-line/parse-traces/main 15: 63 => ((6 integer))
mem: ((6 integer)): 2075 <= 63
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 47
run: string-copy/read-line/parse-traces/main 16: 48 => ((7 integer))
mem: ((7 integer)): 2076 <= 48
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 63
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 63
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1095 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 2078 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 48
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2179 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2179
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2179 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 63
run: string-copy/read-line/parse-traces/main 15: 64 => ((6 integer))
mem: ((6 integer)): 2075 <= 64
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 48
run: string-copy/read-line/parse-traces/main 16: 49 => ((7 integer))
mem: ((7 integer)): 2076 <= 49
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 64
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 64
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1096 byte) (raw)) => a
run: string-copy/read-line/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 2078 <= #\a
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 49
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2180 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2180
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/read-line/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2180 <= #\a
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 64
run: string-copy/read-line/parse-traces/main 15: 65 => ((6 integer))
mem: ((6 integer)): 2075 <= 65
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 49
run: string-copy/read-line/parse-traces/main 16: 50 => ((7 integer))
mem: ((7 integer)): 2076 <= 50
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 65
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 65
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1097 byte) (raw)) => l
run: string-copy/read-line/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 2078 <= #\l
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 50
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2181 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2181
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/read-line/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2181 <= #\l
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 65
run: string-copy/read-line/parse-traces/main 15: 66 => ((6 integer))
mem: ((6 integer)): 2075 <= 66
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 50
run: string-copy/read-line/parse-traces/main 16: 51 => ((7 integer))
mem: ((7 integer)): 2076 <= 51
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 66
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 66
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1098 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2078 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 51
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2182 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2182
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2182 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 66
run: string-copy/read-line/parse-traces/main 15: 67 => ((6 integer))
mem: ((6 integer)): 2075 <= 67
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 51
run: string-copy/read-line/parse-traces/main 16: 52 => ((7 integer))
mem: ((7 integer)): 2076 <= 52
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 67
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 67
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1099 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2078 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 52
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2183 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2183
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2183 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 67
run: string-copy/read-line/parse-traces/main 15: 68 => ((6 integer))
mem: ((6 integer)): 2075 <= 68
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 52
run: string-copy/read-line/parse-traces/main 16: 53 => ((7 integer))
mem: ((7 integer)): 2076 <= 53
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 68
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2077 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 68
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1100 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2078 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 53
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2184 => ((10 character-address))
mem: ((10 character-address)): 2079 <= 2184
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2184 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 68
run: string-copy/read-line/parse-traces/main 15: 69 => ((6 integer))
mem: ((6 integer)): 2075 <= 69
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 53
run: string-copy/read-line/parse-traces/main 16: 54 => ((7 integer))
mem: ((7 integer)): 2076 <= 54
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 69
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 2077 <= t
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/read-line/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 2130
run: read-line/parse-traces/main 5: 2130 => ((5 string-address))
mem: ((5 string-address)): 2012 <= 2130
run: read-line/parse-traces/main 6: (((2 integer-address) (deref)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 69
run: read-line/parse-traces/main 6: 70 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1305 <= 70
run: read-line/parse-traces/main 7: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 2130
run: parse-traces/main 9: 2130 => ((7 string-address))
mem: ((7 string-address)): 1315 <= 2130
run: parse-traces/main 10: (((8 trace-address)) <- ((parse-trace)) ((7 string-address)))
mem: ((7 string-address)) => 2130
run: parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-trace/parse-traces/main 0: 2185 => ((default-space space-address))
run: parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2130)
run: parse-trace/parse-traces/main 1: 2130 => ((1 string-address))
mem: ((1 string-address)): 2187 <= 2130
run: parse-trace/parse-traces/main 2: (((2 trace-address)) <- ((new)) ((trace literal)))
run: parse-trace/parse-traces/main 2: 2216 => ((2 trace-address))
mem: ((2 trace-address)): 2188 <= 2216
run: parse-trace/parse-traces/main 3: (((3 string-address)) <- ((new)) : )
run: parse-trace/parse-traces/main 3: 2218 => ((3 string-address))
mem: ((3 string-address)): 2189 <= 2218
run: parse-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first-at-substring)) ((1 string-address)) ((3 string-address)))
mem: ((1 string-address)) => 2130
mem: ((3 string-address)) => 2218
run: split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-trace/parse-traces/main 0: 2221 => ((default-space space-address))
run: split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2130 2218)
run: split-first-at-substring/parse-trace/parse-traces/main 1: 2130 => ((1 string-address))
mem: ((1 string-address)): 2223 <= 2130
run: split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (2130 2218)
run: split-first-at-substring/parse-trace/parse-traces/main 2: 2218 => ((2 string-address))
mem: ((2 string-address)): 2224 <= 2218
run: split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2130 integer) (raw)) => 54
run: split-first-at-substring/parse-trace/parse-traces/main 3: 54 => ((3 integer))
mem: ((3 integer)): 2225 <= 54
run: split-first-at-substring/parse-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 54
run: split-first-at-substring/parse-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 2226 <= nil
run: split-first-at-substring/parse-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 2130
mem: ((2 string-address)) => 2218
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 2252 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2130 2218 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 2130 => ((1 string-address))
mem: ((1 string-address)): 2254 <= 2130
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (2130 2218 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 2218 => ((2 string-address))
mem: ((2 string-address)): 2255 <= 2218
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2130 2218 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 2256 <= 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((2218 string) (raw))
mem: ((2218 integer) (raw)) => 2
mem: ((2219 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 2257 <= #\:
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2130 integer) (raw)) => 54
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 54 => ((5 integer))
mem: ((5 integer)): 2258 <= 54
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 54
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 2259 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 2130
mem: ((2 string-address)) => 2218
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 2283 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2130 2218 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 2130 => ((1 string-address))
mem: ((1 string-address)): 2285 <= 2130
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (2130 2218 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 2218 => ((2 string-address))
mem: ((2 string-address)): 2286 <= 2218
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2130 2218 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 2287 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((2218 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 2288 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2130 integer) (raw)) => 54
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 54 => ((5 integer))
mem: ((5 integer)): 2289 <= 54
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 54
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 52 => ((5 integer))
mem: ((5 integer)): 2289 <= 52
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 52
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 2290 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 2291 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 2292 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2131 byte) (raw)) => r
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\r => ((9 character))
mem: ((9 character)): 2293 <= #\r
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2218 string) (raw))
mem: ((2218 integer) (raw)) => 2
mem: ((2219 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 2294 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => r
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 2295 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2260 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 2256 <= 1
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 2130
mem: ((4 character)) => :
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 2314 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2130 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 2130 => ((1 string-address))
mem: ((1 string-address)): 2316 <= 2130
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (2130 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 2317 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2130 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 2318 <= 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2130 integer) (raw)) => 54
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 54 => ((4 integer))
mem: ((4 integer)): 2319 <= 54
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 54
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2320 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
schedule: scheduling find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main for further processing
schedule: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2132 byte) (raw)) => u
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\u => ((6 byte))
mem: ((6 byte)): 2321 <= #\u
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => u
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2322 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 2318 <= 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 54
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2320 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2133 byte) (raw)) => n
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 2321 <= #\n
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2322 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 2318 <= 3
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 54
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2320 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2134 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 2321 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 2322 <= t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: 3 => ((3 integer))
mem: ((3 integer)): 2256 <= 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 54
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 2259 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 2130
mem: ((2 string-address)) => 2218
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 2345 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2130 2218 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 2130 => ((1 string-address))
mem: ((1 string-address)): 2347 <= 2130
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (2130 2218 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 2218 => ((2 string-address))
mem: ((2 string-address)): 2348 <= 2218
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2130 2218 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 2349 <= 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((2218 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 2350 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2130 integer) (raw)) => 54
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 54 => ((5 integer))
mem: ((5 integer)): 2351 <= 54
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 54
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 52 => ((5 integer))
mem: ((5 integer)): 2351 <= 52
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 52
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 2352 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 2353 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 2354 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2134 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 2355 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2218 string) (raw))
mem: ((2218 integer) (raw)) => 2
mem: ((2219 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 2356 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 2357 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 4 => ((3 integer))
mem: ((3 integer)): 2349 <= 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 2353 <= 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 2354 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2135 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 2355 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((2218 string) (raw))
mem: ((2218 integer) (raw)) => 2
mem: ((2220 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 2356 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 2357 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 5 => ((3 integer))
mem: ((3 integer)): 2349 <= 5
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 2353 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 2354 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 2260 <= t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: split-first-at-substring/parse-trace/parse-traces/main 9: 3 => ((7 integer))
mem: ((7 integer)): 2229 <= 3
run: split-first-at-substring/parse-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 2130
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 2376 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2130 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 2130 => ((1 string-address))
mem: ((1 string-address)): 2378 <= 2130
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (2130 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 2379 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2130 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 2380 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2130 integer) (raw)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 54 => ((4 integer))
mem: ((4 integer)): 2381 <= 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 54
mem: ((3 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 2407 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (54 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 54 => ((1 integer))
mem: ((1 integer)): 2409 <= 54
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (54 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 2410 <= 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 54
mem: ((2 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 2411 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 3 => ((3 integer))
mem: ((3 integer)): 2380 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 3
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 3 => ((4 integer))
mem: ((4 integer)): 2381 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 2438 => ((5 string-address))
mem: ((5 string-address)): 2382 <= 2438
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 2383 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 2384 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2385 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2131 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 2386 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2438 string) (raw))
mem: ((2438 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2439 => ((10 character-address))
mem: ((10 character-address)): 2387 <= 2439
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2439 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 2383 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 2384 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2385 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2132 byte) (raw)) => u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\u => ((9 character))
mem: ((9 character)): 2386 <= #\u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((2438 string) (raw))
mem: ((2438 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2440 => ((10 character-address))
mem: ((10 character-address)): 2387 <= 2440
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\u => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2440 <= #\u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 2383 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 2384 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2385 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2133 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 2386 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((2438 string) (raw))
mem: ((2438 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2441 => ((10 character-address))
mem: ((10 character-address)): 2387 <= 2441
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2441 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 2383 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 2384 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 2385 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 2438
run: split-first-at-substring/parse-trace/parse-traces/main 10: 2438 => ((5 string-address))
mem: ((5 string-address)): 2227 <= 2438
run: split-first-at-substring/parse-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((2218 integer) (raw)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 2230 <= 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 3
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: 5 => ((7 integer))
mem: ((7 integer)): 2229 <= 5
run: split-first-at-substring/parse-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 2130
mem: ((7 integer)) => 5
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 2442 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2130 5 54)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 2130 => ((1 string-address))
mem: ((1 string-address)): 2444 <= 2130
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (2130 5 54)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 5 => ((2 integer))
mem: ((2 integer)): 2445 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2130 5 54)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 54 => ((3 integer))
mem: ((3 integer)): 2446 <= 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2130 integer) (raw)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 54 => ((4 integer))
mem: ((4 integer)): 2447 <= 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 54
mem: ((3 integer)) => 54
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 2473 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (54 54)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 54 => ((1 integer))
mem: ((1 integer)): 2475 <= 54
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (54 54)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 54 => ((2 integer))
mem: ((2 integer)): 2476 <= 54
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 54
mem: ((2 integer)) => 54
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 2477 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 54 => ((3 integer))
mem: ((3 integer)): 2446 <= 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 54
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 49 => ((4 integer))
mem: ((4 integer)): 2447 <= 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 2504 => ((5 string-address))
mem: ((5 string-address)): 2448 <= 2504
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 5 => ((6 integer))
mem: ((6 integer)): 2449 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 2450 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2136 byte) (raw)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 2452 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2505 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2505
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2505 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 2449 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 2450 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2137 byte) (raw)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 2452 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2506 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2506
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2506 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 2449 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 2450 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2138 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2452 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2507 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2507
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2507 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 2449 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 2450 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2139 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 2452 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2508 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2508
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2508 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 2449 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 2450 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2140 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2452 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2509 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2509
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2509 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 2449 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 2450 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2141 byte) (raw)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\0 => ((9 character))
mem: ((9 character)): 2452 <= #\0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2510 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2510
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\0 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2510 <= #\0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 2449 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 2450 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2142 byte) (raw)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 2452 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2511 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2511
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2511 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 2449 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 2450 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2143 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2452 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2512 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2512
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2512 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 2449 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 2450 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2144 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2452 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2513 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2513
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2513 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 2449 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 2450 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2145 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2452 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2514 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2514
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2514 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 2449 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 2450 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2146 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2452 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2515 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2515
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2515 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 2449 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 2450 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2147 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 2452 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2516 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2516
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2516 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 2449 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 2450 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2148 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2452 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2517 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2517
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2517 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 2449 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 2450 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2149 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2452 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2518 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2518
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2518 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 2449 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 2450 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2150 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 2452 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2519 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2519
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2519 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 2449 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 2450 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2151 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 2452 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2520 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2520
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2520 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 2449 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 2450 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2152 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 2452 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2521 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2521
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2521 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 2449 <= 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 2450 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2153 byte) (raw)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 2452 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2522 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2522
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2522 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 2449 <= 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 2450 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2154 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 2452 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2523 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2523
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2523 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 2449 <= 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 2450 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2155 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 2452 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2524 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2524
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2524 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 2449 <= 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 2450 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2156 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2452 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2525 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2525
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2525 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 2449 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 2450 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 26
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2157 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2452 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2526 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2526
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2526 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 27 => ((6 integer))
mem: ((6 integer)): 2449 <= 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 2450 <= 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 27
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 27
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2158 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2452 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2527 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2527
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2527 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 28 => ((6 integer))
mem: ((6 integer)): 2449 <= 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 2450 <= 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 28
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 28
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2159 byte) (raw)) => <
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 2452 <= #\<
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2528 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2528
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2528 <= #\<
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 29 => ((6 integer))
mem: ((6 integer)): 2449 <= 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 2450 <= 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 29
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 29
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2160 byte) (raw)) => -
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\- => ((9 character))
mem: ((9 character)): 2452 <= #\-
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2529 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2529
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => -
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\- => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2529 <= #\-
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 30 => ((6 integer))
mem: ((6 integer)): 2449 <= 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 2450 <= 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 30
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 30
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2161 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2452 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2530 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2530
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2530 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 31 => ((6 integer))
mem: ((6 integer)): 2449 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 2450 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 31
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 31
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2162 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2452 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 26
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2531 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2531
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2531 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 32 => ((6 integer))
mem: ((6 integer)): 2449 <= 32
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 27 => ((7 integer))
mem: ((7 integer)): 2450 <= 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 32
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 32
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2163 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2452 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 27
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2532 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2532
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2532 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 32
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 33 => ((6 integer))
mem: ((6 integer)): 2449 <= 33
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 28 => ((7 integer))
mem: ((7 integer)): 2450 <= 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 33
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 33
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2164 byte) (raw)) => c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\c => ((9 character))
mem: ((9 character)): 2452 <= #\c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 28
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2533 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2533
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\c => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2533 <= #\c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 33
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 34 => ((6 integer))
mem: ((6 integer)): 2449 <= 34
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 29 => ((7 integer))
mem: ((7 integer)): 2450 <= 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 34
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 34
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2165 byte) (raw)) => o
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\o => ((9 character))
mem: ((9 character)): 2452 <= #\o
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 29
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2534 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2534
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => o
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\o => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2534 <= #\o
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 34
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 35 => ((6 integer))
mem: ((6 integer)): 2449 <= 35
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 30 => ((7 integer))
mem: ((7 integer)): 2450 <= 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 35
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 35
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2166 byte) (raw)) => p
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\p => ((9 character))
mem: ((9 character)): 2452 <= #\p
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 30
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2535 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2535
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => p
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\p => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2535 <= #\p
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 35
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 36 => ((6 integer))
mem: ((6 integer)): 2449 <= 36
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 31 => ((7 integer))
mem: ((7 integer)): 2450 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 36
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 36
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2167 byte) (raw)) => y
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\y => ((9 character))
mem: ((9 character)): 2452 <= #\y
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 31
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2536 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2536
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => y
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\y => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2536 <= #\y
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 36
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 37 => ((6 integer))
mem: ((6 integer)): 2449 <= 37
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 32 => ((7 integer))
mem: ((7 integer)): 2450 <= 32
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 37
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 37
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2168 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2452 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 32
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2537 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2537
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2537 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 37
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 38 => ((6 integer))
mem: ((6 integer)): 2449 <= 38
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 32
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 33 => ((7 integer))
mem: ((7 integer)): 2450 <= 33
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 38
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 38
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2169 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2452 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 33
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2538 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2538
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2538 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 38
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 39 => ((6 integer))
mem: ((6 integer)): 2449 <= 39
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 33
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 34 => ((7 integer))
mem: ((7 integer)): 2450 <= 34
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 39
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 39
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2170 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2452 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 34
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2539 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2539
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2539 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 39
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 40 => ((6 integer))
mem: ((6 integer)): 2449 <= 40
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 34
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 35 => ((7 integer))
mem: ((7 integer)): 2450 <= 35
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 40
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 40
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2171 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2452 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 35
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2540 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2540
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2540 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 40
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 41 => ((6 integer))
mem: ((6 integer)): 2449 <= 41
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 35
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 36 => ((7 integer))
mem: ((7 integer)): 2450 <= 36
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 41
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 41
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2172 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2452 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 36
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2541 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2541
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2541 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 41
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 42 => ((6 integer))
mem: ((6 integer)): 2449 <= 42
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 36
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 37 => ((7 integer))
mem: ((7 integer)): 2450 <= 37
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 42
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 42
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2173 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 2452 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 37
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2542 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2542
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2542 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 42
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 43 => ((6 integer))
mem: ((6 integer)): 2449 <= 43
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 37
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 38 => ((7 integer))
mem: ((7 integer)): 2450 <= 38
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 43
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 43
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2174 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2452 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 38
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2543 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2543
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2543 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 43
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 44 => ((6 integer))
mem: ((6 integer)): 2449 <= 44
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 38
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 39 => ((7 integer))
mem: ((7 integer)): 2450 <= 39
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 44
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 44
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2175 byte) (raw)) => l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 2452 <= #\l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 39
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2544 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2544
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2544 <= #\l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 44
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 45 => ((6 integer))
mem: ((6 integer)): 2449 <= 45
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 39
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 40 => ((7 integer))
mem: ((7 integer)): 2450 <= 40
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 45
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 45
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2176 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2452 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 40
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2545 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2545
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2545 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 45
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 46 => ((6 integer))
mem: ((6 integer)): 2449 <= 46
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 40
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 41 => ((7 integer))
mem: ((7 integer)): 2450 <= 41
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 46
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 46
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2177 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 2452 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 41
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2546 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2546
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2546 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 46
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 47 => ((6 integer))
mem: ((6 integer)): 2449 <= 47
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 41
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 42 => ((7 integer))
mem: ((7 integer)): 2450 <= 42
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 47
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 47
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2178 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 2452 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 42
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2547 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2547
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2547 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 47
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 48 => ((6 integer))
mem: ((6 integer)): 2449 <= 48
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 42
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 43 => ((7 integer))
mem: ((7 integer)): 2450 <= 43
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 48
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 48
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2179 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 2452 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 43
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2548 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2548
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2548 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 48
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 49 => ((6 integer))
mem: ((6 integer)): 2449 <= 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 43
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 44 => ((7 integer))
mem: ((7 integer)): 2450 <= 44
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 49
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 49
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2180 byte) (raw)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 2452 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 44
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2549 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2549
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2549 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 50 => ((6 integer))
mem: ((6 integer)): 2449 <= 50
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 44
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 45 => ((7 integer))
mem: ((7 integer)): 2450 <= 45
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 50
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 50
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2181 byte) (raw)) => l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 2452 <= #\l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 45
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2550 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2550
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2550 <= #\l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 50
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 51 => ((6 integer))
mem: ((6 integer)): 2449 <= 51
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 45
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 46 => ((7 integer))
mem: ((7 integer)): 2450 <= 46
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 51
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 51
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2182 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2452 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 46
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2551 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2551
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2551 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 51
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 52 => ((6 integer))
mem: ((6 integer)): 2449 <= 52
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 46
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 47 => ((7 integer))
mem: ((7 integer)): 2450 <= 47
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 52
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 52
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2183 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2452 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 47
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2552 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2552
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2552 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 52
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 53 => ((6 integer))
mem: ((6 integer)): 2449 <= 53
schedule: scheduling string-copy/split-first-at-substring/parse-trace/parse-traces/main for further processing
schedule: string-copy/split-first-at-substring/parse-trace/parse-traces/main
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 47
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 48 => ((7 integer))
mem: ((7 integer)): 2450 <= 48
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 53
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2451 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 53
array-len: ((2130 string) (raw))
mem: ((2130 integer) (raw)) => 54
mem: ((2184 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2452 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 48
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2553 => ((10 character-address))
mem: ((10 character-address)): 2453 <= 2553
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2553 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 53
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 54 => ((6 integer))
mem: ((6 integer)): 2449 <= 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 48
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 49 => ((7 integer))
mem: ((7 integer)): 2450 <= 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 54
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 2451 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 2504
run: split-first-at-substring/parse-trace/parse-traces/main 13: 2504 => ((6 string-address))
mem: ((6 string-address)): 2228 <= 2504
run: split-first-at-substring/parse-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 2438
mem: ((6 string-address)) => 2504
run: parse-trace/parse-traces/main 4: 2438 => ((4 string-address))
mem: ((4 string-address)): 2190 <= 2438
run: parse-trace/parse-traces/main 4: 2504 => ((5 string-address))
mem: ((5 string-address)): 2191 <= 2504
run: parse-trace/parse-traces/main 5: (((6 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((0 offset)))
run: parse-trace/parse-traces/main 5: 2216 => ((6 string-address-address))
mem: ((6 string-address-address)): 2192 <= 2216
run: parse-trace/parse-traces/main 6: (((6 string-address-address) (deref)) <- ((copy)) ((4 string-address)))
mem: ((4 string-address)) => 2438
run: parse-trace/parse-traces/main 6: 2438 => ((6 string-address-address) (deref))
mem: ((6 string-address-address) (deref)): 2216 <= 2438
run: parse-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((1 offset)))
run: parse-trace/parse-traces/main 7: 2217 => ((7 string-address-address))
mem: ((7 string-address-address)): 2193 <= 2217
run: parse-trace/parse-traces/main 8: (((7 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 2504
run: parse-trace/parse-traces/main 8: 2504 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 2217 <= 2504
run: parse-trace/parse-traces/main 9: (((reply)) ((2 trace-address)))
mem: ((2 trace-address)) => 2216
run: parse-traces/main 10: 2216 => ((8 trace-address))
mem: ((8 trace-address)): 1316 <= 2216
run: parse-traces/main 11: (((9 string-address)) <- ((get)) ((8 trace-address) (deref)) ((0 offset)))
mem: ((2216 string-address) (raw)) => 2438
run: parse-traces/main 11: 2438 => ((9 string-address))
mem: ((9 string-address)): 1317 <= 2438
run: parse-traces/main 12: (((10 boolean)) <- ((string-equal)) ((9 string-address)) ((5 string-address) (const)))
mem: ((9 string-address)) => 2438
mem: ((5 string-address) (const)) => 1441
run: string-equal/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-equal/parse-traces/main 0: 2554 => ((default-space space-address))
run: string-equal/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2438 1441)
run: string-equal/parse-traces/main 1: 2438 => ((1 string-address))
mem: ((1 string-address)): 2556 <= 2438
run: string-equal/parse-traces/main 2: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2438 integer) (raw)) => 3
run: string-equal/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 2557 <= 3
run: string-equal/parse-traces/main 3: (((3 string-address)) <- ((next-input)))
arg: nil 1 (2438 1441)
run: string-equal/parse-traces/main 3: 1441 => ((3 string-address))
mem: ((3 string-address)): 2558 <= 1441
run: string-equal/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1441 integer) (raw)) => 3
run: string-equal/parse-traces/main 4: 3 => ((4 integer))
mem: ((4 integer)): 2559 <= 3
run: string-equal/parse-traces/main 5: (((5 boolean)) <- ((equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 3
mem: ((4 integer)) => 3
run: string-equal/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 2560 <= t
run: string-equal/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((1 offset)))
mem: ((5 boolean)) => t
run: string-equal/parse-traces/main 8: (((6 integer)) <- ((copy)) ((0 literal)))
run: string-equal/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 2561 <= 0
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 0
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 2562 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((2438 string) (raw))
mem: ((2438 integer) (raw)) => 3
mem: ((2439 byte) (raw)) => r
run: string-equal/parse-traces/main 11: #\r => ((8 byte))
mem: ((8 byte)): 2563 <= #\r
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((1441 string) (raw))
mem: ((1441 integer) (raw)) => 3
mem: ((1442 byte) (raw)) => r
run: string-equal/parse-traces/main 12: #\r => ((9 byte))
mem: ((9 byte)): 2564 <= #\r
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => r
mem: ((9 byte)) => r
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 2565 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-equal/parse-traces/main 16: 1 => ((6 integer))
mem: ((6 integer)): 2561 <= 1
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 1
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 2562 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((2438 string) (raw))
mem: ((2438 integer) (raw)) => 3
mem: ((2440 byte) (raw)) => u
run: string-equal/parse-traces/main 11: #\u => ((8 byte))
mem: ((8 byte)): 2563 <= #\u
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((1441 string) (raw))
mem: ((1441 integer) (raw)) => 3
mem: ((1443 byte) (raw)) => u
run: string-equal/parse-traces/main 12: #\u => ((9 byte))
mem: ((9 byte)): 2564 <= #\u
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => u
mem: ((9 byte)) => u
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 2565 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-equal/parse-traces/main 16: 2 => ((6 integer))
mem: ((6 integer)): 2561 <= 2
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 2
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 2562 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((2438 string) (raw))
mem: ((2438 integer) (raw)) => 3
mem: ((2441 byte) (raw)) => n
run: string-equal/parse-traces/main 11: #\n => ((8 byte))
mem: ((8 byte)): 2563 <= #\n
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((1441 string) (raw))
mem: ((1441 integer) (raw)) => 3
mem: ((1444 byte) (raw)) => n
run: string-equal/parse-traces/main 12: #\n => ((9 byte))
mem: ((9 byte)): 2564 <= #\n
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => n
mem: ((9 byte)) => n
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 2565 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-equal/parse-traces/main 16: 3 => ((6 integer))
mem: ((6 integer)): 2561 <= 3
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 3
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: t => ((7 boolean))
mem: ((7 boolean)): 2562 <= t
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => t
run: string-equal/parse-traces/main 18: (((reply)) ((t literal)))
run: parse-traces/main 12: t => ((10 boolean))
mem: ((10 boolean)): 1318 <= t
run: parse-traces/main 13: (((jump-unless)) ((10 boolean)) ((7 offset)))
mem: ((10 boolean)) => t
run: parse-traces/main 14: (((jump-unless)) ((3 instruction-trace-address)) ((3 offset)))
mem: ((3 instruction-trace-address)) => nil
run: parse-traces/main 18: (((3 instruction-trace-address)) <- ((parse-instruction-trace)) ((8 trace-address)))
mem: ((8 trace-address)) => 2216
run: parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-instruction-trace/parse-traces/main 0: 2585 => ((default-space space-address))
run: parse-instruction-trace/parse-traces/main 1: (((1 trace-address)) <- ((next-input)))
arg: nil 0 (2216)
run: parse-instruction-trace/parse-traces/main 1: 2216 => ((1 trace-address))
mem: ((1 trace-address)): 2587 <= 2216
run: parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((get)) ((1 trace-address) (deref)) ((1 offset)))
mem: ((2217 string-address) (raw)) => 2504
run: parse-instruction-trace/parse-traces/main 2: 2504 => ((2 string-address))
mem: ((2 string-address)): 2588 <= 2504
run: parse-instruction-trace/parse-traces/main 3: (((3 instruction-trace-address)) <- ((new)) ((instruction-trace literal)))
run: parse-instruction-trace/parse-traces/main 3: 2616 => ((3 instruction-trace-address))
mem: ((3 instruction-trace-address)): 2589 <= 2616
run: parse-instruction-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first)) ((2 string-address)) ((  literal)))
mem: ((2 string-address)) => 2504
run: split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first/parse-instruction-trace/parse-traces/main 0: 2620 => ((default-space space-address))
run: split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2504 #\space)
run: split-first/parse-instruction-trace/parse-traces/main 1: 2504 => ((1 string-address))
mem: ((1 string-address)): 2622 <= 2504
run: split-first/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (2504 #\space)
run: split-first/parse-instruction-trace/parse-traces/main 2: #\space => ((2 character))
mem: ((2 character)): 2623 <= #\space
run: split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2504 integer) (raw)) => 49
run: split-first/parse-instruction-trace/parse-traces/main 3: 49 => ((3 integer))
mem: ((3 integer)): 2624 <= 49
run: split-first/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 49
run: split-first/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 2625 <= nil
run: split-first/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((0 literal)))
mem: ((1 string-address)) => 2504
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 0: 2651 => ((default-space space-address))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2504 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 1: 2504 => ((1 string-address))
mem: ((1 string-address)): 2653 <= 2504
run: find-next/split-first/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (2504 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 2: #\space => ((2 character))
mem: ((2 character)): 2654 <= #\space
run: find-next/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2504 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 2655 <= 0
run: find-next/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2504 integer) (raw)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 4: 49 => ((4 integer))
mem: ((4 integer)): 2656 <= 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2657 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2505 byte) (raw)) => m
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 2658 <= #\m
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2659 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 2655 <= 1
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2657 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2506 byte) (raw)) => a
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 2658 <= #\a
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2659 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 2655 <= 2
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2657 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2507 byte) (raw)) => i
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 2658 <= #\i
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2659 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 2655 <= 3
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2657 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2508 byte) (raw)) => n
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 2658 <= #\n
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2659 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 2655 <= 4
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2657 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2509 byte) (raw)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 2658 <= #\space
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 2659 <= t
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/split-first/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split-first/parse-instruction-trace/parse-traces/main 9: 4 => ((7 integer))
mem: ((7 integer)): 2628 <= 4
run: split-first/parse-instruction-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 2504
mem: ((7 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 2682 => ((default-space space-address))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2504 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 2504 => ((1 string-address))
mem: ((1 string-address)): 2684 <= 2504
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (2504 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 2685 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2504 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 2686 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: 49 => ((4 integer))
mem: ((4 integer)): 2687 <= 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 49
mem: ((3 integer)) => 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 2713 => ((default-space space-address))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (49 4)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 49 => ((1 integer))
mem: ((1 integer)): 2715 <= 49
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (49 4)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 4 => ((2 integer))
mem: ((2 integer)): 2716 <= 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 49
mem: ((2 integer)) => 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 2717 <= nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: 4 => ((3 integer))
mem: ((3 integer)): 2686 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 4
mem: ((2 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: 4 => ((4 integer))
mem: ((4 integer)): 2687 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: 2744 => ((5 string-address))
mem: ((5 string-address)): 2688 <= 2744
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 2689 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 2690 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2691 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2505 byte) (raw)) => m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 2692 <= #\m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2744 string) (raw))
mem: ((2744 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2745 => ((10 character-address))
mem: ((10 character-address)): 2693 <= 2745
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2745 <= #\m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 2689 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 2690 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2691 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2506 byte) (raw)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 2692 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((2744 string) (raw))
mem: ((2744 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2746 => ((10 character-address))
mem: ((10 character-address)): 2693 <= 2746
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2746 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 2689 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 2690 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2691 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2507 byte) (raw)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2692 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((2744 string) (raw))
mem: ((2744 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2747 => ((10 character-address))
mem: ((10 character-address)): 2693 <= 2747
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2747 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 2689 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 2690 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2691 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2508 byte) (raw)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 2692 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((2744 string) (raw))
mem: ((2744 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2748 => ((10 character-address))
mem: ((10 character-address)): 2693 <= 2748
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2748 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 2689 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 2690 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 2691 <= t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 2744
run: split-first/parse-instruction-trace/parse-traces/main 10: 2744 => ((5 string-address))
mem: ((5 string-address)): 2626 <= 2744
run: split-first/parse-instruction-trace/parse-traces/main 11: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: split-first/parse-instruction-trace/parse-traces/main 11: 5 => ((7 integer))
mem: ((7 integer)): 2628 <= 5
run: split-first/parse-instruction-trace/parse-traces/main 12: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 2504
mem: ((7 integer)) => 5
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 2749 => ((default-space space-address))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2504 5 49)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 2504 => ((1 string-address))
mem: ((1 string-address)): 2751 <= 2504
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (2504 5 49)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 5 => ((2 integer))
mem: ((2 integer)): 2752 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2504 5 49)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: 49 => ((3 integer))
mem: ((3 integer)): 2753 <= 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2504 integer) (raw)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: 49 => ((4 integer))
mem: ((4 integer)): 2754 <= 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 49
mem: ((3 integer)) => 49
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 2780 => ((default-space space-address))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (49 49)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 49 => ((1 integer))
mem: ((1 integer)): 2782 <= 49
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (49 49)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 49 => ((2 integer))
mem: ((2 integer)): 2783 <= 49
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 49
mem: ((2 integer)) => 49
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 2784 <= nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: 49 => ((3 integer))
mem: ((3 integer)): 2753 <= 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 49
mem: ((2 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: 44 => ((4 integer))
mem: ((4 integer)): 2754 <= 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: 2811 => ((5 string-address))
mem: ((5 string-address)): 2755 <= 2811
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: 5 => ((6 integer))
mem: ((6 integer)): 2756 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 2757 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2510 byte) (raw)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\0 => ((9 character))
mem: ((9 character)): 2759 <= #\0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2812 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2812
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\0 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2812 <= #\0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 2756 <= 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 2757 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2511 byte) (raw)) => :
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 2759 <= #\:
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2813 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2813
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2813 <= #\:
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 2756 <= 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 2757 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2512 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2759 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2814 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2814
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2814 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 2756 <= 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 2757 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2513 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2759 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2815 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2815
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2815 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 2756 <= 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 2757 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2514 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2759 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2816 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2816
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2816 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 2756 <= 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 2757 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2515 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2759 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2817 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2817
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2817 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 2756 <= 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 2757 <= 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2516 byte) (raw)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 2759 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2818 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2818
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2818 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 2756 <= 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 2757 <= 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2517 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2759 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2819 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2819
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2819 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 2756 <= 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 2757 <= 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2518 byte) (raw)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2759 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2820 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2820
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2820 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 2756 <= 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 2757 <= 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2519 byte) (raw)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 2759 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2821 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2821
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2821 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 2756 <= 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 2757 <= 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2520 byte) (raw)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 2759 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2822 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2822
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2822 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 2756 <= 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 2757 <= 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2521 byte) (raw)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 2759 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2823 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2823
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2823 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 2756 <= 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 2757 <= 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2522 byte) (raw)) => g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 2759 <= #\g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2824 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2824
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2824 <= #\g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 2756 <= 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 2757 <= 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2523 byte) (raw)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 2759 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2825 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2825
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2825 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 2756 <= 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 2757 <= 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2524 byte) (raw)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 2759 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2826 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2826
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2826 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 2756 <= 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 2757 <= 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2525 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2759 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2827 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2827
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2827 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 2756 <= 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 2757 <= 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2526 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2759 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2828 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2828
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2828 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 2756 <= 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 2757 <= 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2527 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2759 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2829 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2829
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2829 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 2756 <= 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 2757 <= 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2528 byte) (raw)) => <
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 2759 <= #\<
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2830 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2830
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2830 <= #\<
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 2756 <= 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 2757 <= 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2529 byte) (raw)) => -
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\- => ((9 character))
mem: ((9 character)): 2759 <= #\-
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2831 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2831
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => -
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\- => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2831 <= #\-
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 2756 <= 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 2757 <= 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2530 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2759 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2832 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2832
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2832 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 2756 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 2757 <= 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 26
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2531 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2759 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2833 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2833
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2833 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 27 => ((6 integer))
mem: ((6 integer)): 2756 <= 27
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 2757 <= 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 27
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 27
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2532 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2759 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2834 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2834
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2834 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 27
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 28 => ((6 integer))
mem: ((6 integer)): 2756 <= 28
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 2757 <= 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 28
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 28
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2533 byte) (raw)) => c
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\c => ((9 character))
mem: ((9 character)): 2759 <= #\c
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2835 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2835
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => c
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\c => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2835 <= #\c
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 28
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 29 => ((6 integer))
mem: ((6 integer)): 2756 <= 29
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 2757 <= 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 29
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 29
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2534 byte) (raw)) => o
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\o => ((9 character))
mem: ((9 character)): 2759 <= #\o
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2836 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2836
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => o
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\o => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2836 <= #\o
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 29
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 30 => ((6 integer))
mem: ((6 integer)): 2756 <= 30
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 2757 <= 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 30
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 30
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2535 byte) (raw)) => p
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\p => ((9 character))
mem: ((9 character)): 2759 <= #\p
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2837 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2837
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => p
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\p => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2837 <= #\p
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 30
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 31 => ((6 integer))
mem: ((6 integer)): 2756 <= 31
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 2757 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 31
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 31
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2536 byte) (raw)) => y
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\y => ((9 character))
mem: ((9 character)): 2759 <= #\y
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 26
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2838 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2838
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => y
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\y => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2838 <= #\y
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 31
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 32 => ((6 integer))
mem: ((6 integer)): 2756 <= 32
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 27 => ((7 integer))
mem: ((7 integer)): 2757 <= 27
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 32
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 32
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2537 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2759 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 27
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2839 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2839
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2839 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 32
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 33 => ((6 integer))
mem: ((6 integer)): 2756 <= 33
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 27
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 28 => ((7 integer))
mem: ((7 integer)): 2757 <= 28
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 33
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 33
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2538 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2759 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 28
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2840 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2840
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2840 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 33
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 34 => ((6 integer))
mem: ((6 integer)): 2756 <= 34
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 28
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 29 => ((7 integer))
mem: ((7 integer)): 2757 <= 29
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 34
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 34
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2539 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2759 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 29
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2841 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2841
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2841 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 34
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 35 => ((6 integer))
mem: ((6 integer)): 2756 <= 35
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 29
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 30 => ((7 integer))
mem: ((7 integer)): 2757 <= 30
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 35
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 35
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2540 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2759 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 30
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2842 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2842
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2842 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 35
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 36 => ((6 integer))
mem: ((6 integer)): 2756 <= 36
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 30
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 31 => ((7 integer))
mem: ((7 integer)): 2757 <= 31
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 36
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 36
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2541 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2759 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 31
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2843 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2843
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2843 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 36
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 37 => ((6 integer))
mem: ((6 integer)): 2756 <= 37
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 31
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 32 => ((7 integer))
mem: ((7 integer)): 2757 <= 32
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 37
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 37
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2542 byte) (raw)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 2759 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 32
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2844 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2844
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2844 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 37
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 38 => ((6 integer))
mem: ((6 integer)): 2756 <= 38
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 32
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 33 => ((7 integer))
mem: ((7 integer)): 2757 <= 33
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 38
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 38
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2543 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2759 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 33
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2845 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2845
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2845 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 38
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 39 => ((6 integer))
mem: ((6 integer)): 2756 <= 39
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 33
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 34 => ((7 integer))
mem: ((7 integer)): 2757 <= 34
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 39
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 39
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2544 byte) (raw)) => l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 2759 <= #\l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 34
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2846 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2846
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2846 <= #\l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 39
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 40 => ((6 integer))
mem: ((6 integer)): 2756 <= 40
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 34
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 35 => ((7 integer))
mem: ((7 integer)): 2757 <= 35
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 40
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 40
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2545 byte) (raw)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2759 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 35
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2847 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2847
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2847 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 40
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 41 => ((6 integer))
mem: ((6 integer)): 2756 <= 41
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 35
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 36 => ((7 integer))
mem: ((7 integer)): 2757 <= 36
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 41
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 41
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2546 byte) (raw)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 2759 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 36
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2848 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2848
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2848 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 41
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 42 => ((6 integer))
mem: ((6 integer)): 2756 <= 42
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 36
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 37 => ((7 integer))
mem: ((7 integer)): 2757 <= 37
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 42
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 42
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2547 byte) (raw)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 2759 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 37
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2849 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2849
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2849 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 42
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 43 => ((6 integer))
mem: ((6 integer)): 2756 <= 43
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 37
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 38 => ((7 integer))
mem: ((7 integer)): 2757 <= 38
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 43
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 43
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2548 byte) (raw)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 2759 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 38
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2850 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2850
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2850 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 43
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 44 => ((6 integer))
mem: ((6 integer)): 2756 <= 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 38
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 39 => ((7 integer))
mem: ((7 integer)): 2757 <= 39
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 44
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 44
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2549 byte) (raw)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 2759 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 39
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2851 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2851
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2851 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 45 => ((6 integer))
mem: ((6 integer)): 2756 <= 45
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 39
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 40 => ((7 integer))
mem: ((7 integer)): 2757 <= 40
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
schedule: scheduling string-copy/split-first/parse-instruction-trace/parse-traces/main for further processing
schedule: string-copy/split-first/parse-instruction-trace/parse-traces/main
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 45
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 45
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2550 byte) (raw)) => l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 2759 <= #\l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 40
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2852 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2852
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2852 <= #\l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 45
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 46 => ((6 integer))
mem: ((6 integer)): 2756 <= 46
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 40
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 41 => ((7 integer))
mem: ((7 integer)): 2757 <= 41
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 46
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 46
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2551 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2759 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 41
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2853 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2853
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2853 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 46
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 47 => ((6 integer))
mem: ((6 integer)): 2756 <= 47
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 41
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 42 => ((7 integer))
mem: ((7 integer)): 2757 <= 42
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 47
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 47
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2552 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2759 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 42
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2854 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2854
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2854 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 47
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 48 => ((6 integer))
mem: ((6 integer)): 2756 <= 48
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 42
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 43 => ((7 integer))
mem: ((7 integer)): 2757 <= 43
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 48
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2758 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 48
array-len: ((2504 string) (raw))
mem: ((2504 integer) (raw)) => 49
mem: ((2553 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2759 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 43
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2855 => ((10 character-address))
mem: ((10 character-address)): 2760 <= 2855
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2855 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 48
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 49 => ((6 integer))
mem: ((6 integer)): 2756 <= 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 43
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 44 => ((7 integer))
mem: ((7 integer)): 2757 <= 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 49
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 2758 <= t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 2811
run: split-first/parse-instruction-trace/parse-traces/main 12: 2811 => ((6 string-address))
mem: ((6 string-address)): 2627 <= 2811
run: split-first/parse-instruction-trace/parse-traces/main 13: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 2744
mem: ((6 string-address)) => 2811
run: parse-instruction-trace/parse-traces/main 4: 2744 => ((4 string-address))
mem: ((4 string-address)): 2590 <= 2744
run: parse-instruction-trace/parse-traces/main 4: 2811 => ((5 string-address))
mem: ((5 string-address)): 2591 <= 2811
run: parse-instruction-trace/parse-traces/main 5: (((6 string-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((0 offset)))
run: parse-instruction-trace/parse-traces/main 5: 2616 => ((6 string-address-array-address-address))
mem: ((6 string-address-array-address-address)): 2592 <= 2616
run: parse-instruction-trace/parse-traces/main 6: (((6 string-address-array-address-address) (deref)) <- ((split)) ((4 string-address)) ((/ literal)))
mem: ((4 string-address)) => 2744
run: split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split/parse-instruction-trace/parse-traces/main 0: 2856 => ((default-space space-address))
run: split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2744 #\/)
run: split/parse-instruction-trace/parse-traces/main 1: 2744 => ((1 string-address))
mem: ((1 string-address)): 2858 <= 2744
run: split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (2744 #\/)
run: split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 2859 <= #\/
run: split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2744 integer) (raw)) => 4
run: split/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 2860 <= 4
run: split/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 2861 <= nil
run: split/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => nil
run: split/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((1 literal)))
run: split/parse-instruction-trace/parse-traces/main 8: 1 => ((6 integer))
mem: ((6 integer)): 2863 <= 1
run: split/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 2864 <= 0
run: split/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((7 integer)))
mem: ((1 string-address)) => 2744
mem: ((2 character)) => /
mem: ((7 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split/parse-instruction-trace/parse-traces/main 0: 2887 => ((default-space space-address))
run: find-next/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2744 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 1: 2744 => ((1 string-address))
mem: ((1 string-address)): 2889 <= 2744
run: find-next/split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (2744 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 2890 <= #\/
run: find-next/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2744 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 2891 <= 0
run: find-next/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2744 integer) (raw)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 2892 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2893 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((2744 string) (raw))
mem: ((2744 integer) (raw)) => 4
mem: ((2745 byte) (raw)) => m
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 2894 <= #\m
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2895 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 2891 <= 1
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2893 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((2744 string) (raw))
mem: ((2744 integer) (raw)) => 4
mem: ((2746 byte) (raw)) => a
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 2894 <= #\a
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2895 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 2891 <= 2
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2893 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((2744 string) (raw))
mem: ((2744 integer) (raw)) => 4
mem: ((2747 byte) (raw)) => i
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 2894 <= #\i
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2895 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 2891 <= 3
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2893 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((2744 string) (raw))
mem: ((2744 integer) (raw)) => 4
mem: ((2748 byte) (raw)) => n
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 2894 <= #\n
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2895 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 2891 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 2893 <= t
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: find-next/split/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 10: 4 => ((7 integer))
mem: ((7 integer)): 2864 <= 4
run: split/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((3 integer)))
mem: ((7 integer)) => 4
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 2865 <= t
run: split/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((3 offset)))
mem: ((8 boolean)) => t
run: split/parse-instruction-trace/parse-traces/main 16: (((5 string-address-array-address)) <- ((new)) ((string-address-array literal)) ((6 integer)))
mem: ((6 integer)) => 1
run: split/parse-instruction-trace/parse-traces/main 16: 2918 => ((5 string-address-array-address))
mem: ((5 string-address-array-address)): 2862 <= 2918
run: split/parse-instruction-trace/parse-traces/main 17: (((9 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 17: 0 => ((9 integer))
mem: ((9 integer)): 2866 <= 0
run: split/parse-instruction-trace/parse-traces/main 18: (((10 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 18: 0 => ((10 integer))
mem: ((10 integer)): 2867 <= 0
run: split/parse-instruction-trace/parse-traces/main 19: (((8 boolean)) <- ((greater-or-equal)) ((10 integer)) ((3 integer)))
mem: ((10 integer)) => 0
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 19: nil => ((8 boolean))
mem: ((8 boolean)): 2865 <= nil
run: split/parse-instruction-trace/parse-traces/main 20: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: split/parse-instruction-trace/parse-traces/main 21: (((11 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((10 integer)))
mem: ((1 string-address)) => 2744
mem: ((2 character)) => /
mem: ((10 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split/parse-instruction-trace/parse-traces/main 0: 2920 => ((default-space space-address))
run: find-next/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2744 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 1: 2744 => ((1 string-address))
mem: ((1 string-address)): 2922 <= 2744
run: find-next/split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (2744 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 2923 <= #\/
run: find-next/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2744 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 2924 <= 0
run: find-next/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2744 integer) (raw)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 2925 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2926 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((2744 string) (raw))
mem: ((2744 integer) (raw)) => 4
mem: ((2745 byte) (raw)) => m
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 2927 <= #\m
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2928 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 2924 <= 1
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2926 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((2744 string) (raw))
mem: ((2744 integer) (raw)) => 4
mem: ((2746 byte) (raw)) => a
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 2927 <= #\a
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2928 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 2924 <= 2
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2926 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((2744 string) (raw))
mem: ((2744 integer) (raw)) => 4
mem: ((2747 byte) (raw)) => i
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 2927 <= #\i
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2928 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 2924 <= 3
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2926 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((2744 string) (raw))
mem: ((2744 integer) (raw)) => 4
mem: ((2748 byte) (raw)) => n
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 2927 <= #\n
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2928 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 2924 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 2926 <= t
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: find-next/split/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 21: 4 => ((11 integer))
mem: ((11 integer)): 2868 <= 4
run: split/parse-instruction-trace/parse-traces/main 22: (((12 string-address-address)) <- ((index-address)) ((5 string-address-array-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 0
array-len: ((2918 string-address-array) (raw))
mem: ((2918 integer) (raw)) => 1
run: split/parse-instruction-trace/parse-traces/main 22: 2919 => ((12 string-address-address))
mem: ((12 string-address-address)): 2869 <= 2919
run: split/parse-instruction-trace/parse-traces/main 23: (((12 string-address-address) (deref)) <- ((string-copy)) ((1 string-address)) ((10 integer)) ((11 integer)))
mem: ((1 string-address)) => 2744
mem: ((10 integer)) => 0
mem: ((11 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 0: 2951 => ((default-space space-address))
run: string-copy/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2744 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 1: 2744 => ((1 string-address))
mem: ((1 string-address)): 2953 <= 2744
run: string-copy/split/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (2744 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 2954 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2744 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 2955 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2744 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 2956 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 0: 2982 => ((default-space space-address))
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (4 4)
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 1: 4 => ((1 integer))
mem: ((1 integer)): 2984 <= 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (4 4)
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 2: 4 => ((2 integer))
mem: ((2 integer)): 2985 <= 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 4
mem: ((2 integer)) => 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 2986 <= nil
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 5: 4 => ((3 integer))
mem: ((3 integer)): 2955 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 4
mem: ((2 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 6: 4 => ((4 integer))
mem: ((4 integer)): 2956 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 7: 3013 => ((5 string-address))
mem: ((5 string-address)): 2957 <= 3013
run: string-copy/split/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 2958 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 2959 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2960 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((2744 string) (raw))
mem: ((2744 integer) (raw)) => 4
mem: ((2745 byte) (raw)) => m
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 2961 <= #\m
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3013 string) (raw))
mem: ((3013 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 3014 => ((10 character-address))
mem: ((10 character-address)): 2962 <= 3014
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3014 <= #\m
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 2958 <= 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 2959 <= 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2960 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((2744 string) (raw))
mem: ((2744 integer) (raw)) => 4
mem: ((2746 byte) (raw)) => a
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 2961 <= #\a
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((3013 string) (raw))
mem: ((3013 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 3015 => ((10 character-address))
mem: ((10 character-address)): 2962 <= 3015
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3015 <= #\a
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 2958 <= 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 2959 <= 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2960 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((2744 string) (raw))
mem: ((2744 integer) (raw)) => 4
mem: ((2747 byte) (raw)) => i
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2961 <= #\i
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((3013 string) (raw))
mem: ((3013 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 3016 => ((10 character-address))
mem: ((10 character-address)): 2962 <= 3016
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3016 <= #\i
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 2958 <= 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 2959 <= 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2960 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((2744 string) (raw))
mem: ((2744 integer) (raw)) => 4
mem: ((2748 byte) (raw)) => n
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 2961 <= #\n
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((3013 string) (raw))
mem: ((3013 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 3017 => ((10 character-address))
mem: ((10 character-address)): 2962 <= 3017
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3017 <= #\n
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 2958 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 2959 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 2960 <= t
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 3013
run: split/parse-instruction-trace/parse-traces/main 23: 3013 => ((12 string-address-address) (deref))
mem: ((12 string-address-address) (deref)): 2919 <= 3013
run: split/parse-instruction-trace/parse-traces/main 24: (((10 integer)) <- ((add)) ((11 integer)) ((1 literal)))
mem: ((11 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 24: 5 => ((10 integer))
mem: ((10 integer)): 2867 <= 5
run: split/parse-instruction-trace/parse-traces/main 25: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
mem: ((9 integer)) => 0
run: split/parse-instruction-trace/parse-traces/main 25: 1 => ((9 integer))
mem: ((9 integer)): 2866 <= 1
run: split/parse-instruction-trace/parse-traces/main 26: (((jump)) ((-8 offset)))
run: split/parse-instruction-trace/parse-traces/main 19: (((8 boolean)) <- ((greater-or-equal)) ((10 integer)) ((3 integer)))
mem: ((10 integer)) => 5
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 19: t => ((8 boolean))
mem: ((8 boolean)): 2865 <= t
run: split/parse-instruction-trace/parse-traces/main 20: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: split/parse-instruction-trace/parse-traces/main 27: (((reply)) ((5 string-address-array-address)))
mem: ((5 string-address-array-address)) => 2918
run: parse-instruction-trace/parse-traces/main 6: 2918 => ((6 string-address-array-address-address) (deref))
mem: ((6 string-address-array-address-address) (deref)): 2616 <= 2918
run: parse-instruction-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((1 offset)))
run: parse-instruction-trace/parse-traces/main 7: 2617 => ((7 string-address-address))
mem: ((7 string-address-address)): 2593 <= 2617
run: parse-instruction-trace/parse-traces/main 8: (((8 string-address)) <- ((new)) : )
run: parse-instruction-trace/parse-traces/main 8: 3018 => ((8 string-address))
mem: ((8 string-address)): 2594 <= 3018
run: parse-instruction-trace/parse-traces/main 9: (((7 string-address-address) (deref)) ((5 string-address)) <- ((split-first-at-substring)) ((5 string-address)) ((8 string-address)))
mem: ((5 string-address)) => 2811
mem: ((8 string-address)) => 3018
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 3021 => ((default-space space-address))
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2811 3018)
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 2811 => ((1 string-address))
mem: ((1 string-address)): 3023 <= 2811
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (2811 3018)
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 3018 => ((2 string-address))
mem: ((2 string-address)): 3024 <= 3018
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2811 integer) (raw)) => 44
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 44 => ((3 integer))
mem: ((3 integer)): 3025 <= 44
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 44
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 3026 <= nil
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 2811
mem: ((2 string-address)) => 3018
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 3052 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2811 3018 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 2811 => ((1 string-address))
mem: ((1 string-address)): 3054 <= 2811
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (2811 3018 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 3018 => ((2 string-address))
mem: ((2 string-address)): 3055 <= 3018
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2811 3018 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 3056 <= 0
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((3018 string) (raw))
mem: ((3018 integer) (raw)) => 2
mem: ((3019 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 3057 <= #\:
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2811 integer) (raw)) => 44
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 44 => ((5 integer))
mem: ((5 integer)): 3058 <= 44
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 44
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 3059 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 2811
mem: ((2 string-address)) => 3018
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 3083 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2811 3018 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 2811 => ((1 string-address))
mem: ((1 string-address)): 3085 <= 2811
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (2811 3018 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 3018 => ((2 string-address))
mem: ((2 string-address)): 3086 <= 3018
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2811 3018 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 3087 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((3018 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 3088 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2811 integer) (raw)) => 44
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 44 => ((5 integer))
mem: ((5 integer)): 3089 <= 44
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 44
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 42 => ((5 integer))
mem: ((5 integer)): 3089 <= 42
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 42
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 3090 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 3091 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 3092 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2812 byte) (raw)) => 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\0 => ((9 character))
mem: ((9 character)): 3093 <= #\0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3018 string) (raw))
mem: ((3018 integer) (raw)) => 2
mem: ((3019 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 3094 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => 0
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 3095 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3060 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 3056 <= 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 2811
mem: ((4 character)) => :
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 3114 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2811 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 2811 => ((1 string-address))
mem: ((1 string-address)): 3116 <= 2811
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (2811 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 3117 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2811 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 3118 <= 1
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2811 integer) (raw)) => 44
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 44 => ((4 integer))
mem: ((4 integer)): 3119 <= 44
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 44
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3120 <= nil
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2813 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 3121 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 3122 <= t
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: 1 => ((3 integer))
mem: ((3 integer)): 3056 <= 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 1
mem: ((5 integer)) => 44
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 3059 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 2811
mem: ((2 string-address)) => 3018
mem: ((3 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 3145 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2811 3018 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 2811 => ((1 string-address))
mem: ((1 string-address)): 3147 <= 2811
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (2811 3018 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 3018 => ((2 string-address))
mem: ((2 string-address)): 3148 <= 3018
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2811 3018 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 3149 <= 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((3018 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 3150 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2811 integer) (raw)) => 44
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 44 => ((5 integer))
mem: ((5 integer)): 3151 <= 44
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 44
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 42 => ((5 integer))
mem: ((5 integer)): 3151 <= 42
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 1
mem: ((5 integer)) => 42
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 3152 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 3153 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 3154 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2813 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 3155 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3018 string) (raw))
mem: ((3018 integer) (raw)) => 2
mem: ((3019 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 3156 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 3157 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: 2 => ((3 integer))
mem: ((3 integer)): 3149 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 3153 <= 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 3154 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2814 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 3155 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((3018 string) (raw))
mem: ((3018 integer) (raw)) => 2
mem: ((3020 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 3156 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 3157 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: 3 => ((3 integer))
mem: ((3 integer)): 3149 <= 3
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 3153 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 3154 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 3060 <= t
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 1
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 1 => ((7 integer))
mem: ((7 integer)): 3029 <= 1
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 2811
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 3176 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2811 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 2811 => ((1 string-address))
mem: ((1 string-address)): 3178 <= 2811
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (2811 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 3179 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2811 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 3180 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 44 => ((4 integer))
mem: ((4 integer)): 3181 <= 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 44
mem: ((3 integer)) => 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 3207 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (44 1)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 44 => ((1 integer))
mem: ((1 integer)): 3209 <= 44
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (44 1)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 1 => ((2 integer))
mem: ((2 integer)): 3210 <= 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 44
mem: ((2 integer)) => 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 3211 <= nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 1 => ((3 integer))
mem: ((3 integer)): 3180 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 1
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 1 => ((4 integer))
mem: ((4 integer)): 3181 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: 3238 => ((5 string-address))
mem: ((5 string-address)): 3182 <= 3238
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 3183 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 3184 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3185 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2812 byte) (raw)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\0 => ((9 character))
mem: ((9 character)): 3186 <= #\0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3238 string) (raw))
mem: ((3238 integer) (raw)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3239 => ((10 character-address))
mem: ((10 character-address)): 3187 <= 3239
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\0 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3239 <= #\0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 3183 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 3184 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 3185 <= t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 3238
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 3238 => ((5 string-address))
mem: ((5 string-address)): 3027 <= 3238
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((3018 integer) (raw)) => 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 3030 <= 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 1
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 12: 3 => ((7 integer))
mem: ((7 integer)): 3029 <= 3
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 2811
mem: ((7 integer)) => 3
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 3240 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2811 3 44)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 2811 => ((1 string-address))
mem: ((1 string-address)): 3242 <= 2811
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (2811 3 44)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 3243 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2811 3 44)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 44 => ((3 integer))
mem: ((3 integer)): 3244 <= 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2811 integer) (raw)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 44 => ((4 integer))
mem: ((4 integer)): 3245 <= 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 44
mem: ((3 integer)) => 44
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 3271 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (44 44)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 44 => ((1 integer))
mem: ((1 integer)): 3273 <= 44
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (44 44)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 44 => ((2 integer))
mem: ((2 integer)): 3274 <= 44
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 44
mem: ((2 integer)) => 44
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 3275 <= nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 44 => ((3 integer))
mem: ((3 integer)): 3244 <= 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 44
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 41 => ((4 integer))
mem: ((4 integer)): 3245 <= 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: 3302 => ((5 string-address))
mem: ((5 string-address)): 3246 <= 3302
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: 3 => ((6 integer))
mem: ((6 integer)): 3247 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 3248 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2815 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3250 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3303 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3303
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3303 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 3247 <= 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 3248 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 4
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2816 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3250 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3304 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3304
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3304 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 5 => ((6 integer))
mem: ((6 integer)): 3247 <= 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 3248 <= 2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2817 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3250 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3305 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3305
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3305 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 3247 <= 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 3248 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2818 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 3250 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3306 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3306
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3306 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 3247 <= 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 3248 <= 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2819 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3250 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3307 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3307
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3307 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 3247 <= 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 3248 <= 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2820 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 3250 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3308 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3308
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3308 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 3247 <= 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 3248 <= 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2821 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 3250 <= #\n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3309 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3309
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3309 <= #\n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 3247 <= 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 3248 <= 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2822 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 3250 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3310 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3310
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3310 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 3247 <= 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 3248 <= 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2823 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 3250 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3311 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3311
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3311 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 3247 <= 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 3248 <= 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2824 byte) (raw)) => g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 3250 <= #\g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3312 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3312
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3312 <= #\g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 3247 <= 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 3248 <= 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2825 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 3250 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3313 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3313
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3313 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 3247 <= 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 3248 <= 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2826 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 3250 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3314 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3314
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3314 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 3247 <= 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 3248 <= 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2827 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3250 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3315 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3315
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3315 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 3247 <= 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 3248 <= 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2828 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3250 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3316 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3316
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3316 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 3247 <= 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 3248 <= 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2829 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3250 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3317 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3317
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3317 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 3247 <= 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 3248 <= 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2830 byte) (raw)) => <
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 3250 <= #\<
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3318 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3318
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3318 <= #\<
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 3247 <= 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 3248 <= 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2831 byte) (raw)) => -
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\- => ((9 character))
mem: ((9 character)): 3250 <= #\-
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3319 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3319
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => -
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\- => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3319 <= #\-
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 3247 <= 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 3248 <= 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2832 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3250 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3320 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3320
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3320 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 3247 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 3248 <= 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2833 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3250 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3321 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3321
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3321 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 3247 <= 22
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 3248 <= 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2834 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3250 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3322 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3322
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3322 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 3247 <= 23
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 3248 <= 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2835 byte) (raw)) => c
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\c => ((9 character))
mem: ((9 character)): 3250 <= #\c
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3323 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3323
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => c
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\c => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3323 <= #\c
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 3247 <= 24
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 3248 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2836 byte) (raw)) => o
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\o => ((9 character))
mem: ((9 character)): 3250 <= #\o
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3324 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3324
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => o
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\o => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3324 <= #\o
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 3247 <= 25
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 3248 <= 22
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2837 byte) (raw)) => p
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\p => ((9 character))
mem: ((9 character)): 3250 <= #\p
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3325 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3325
schedule: scheduling string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main for further processing
schedule: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => p
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\p => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3325 <= #\p
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 3247 <= 26
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 3248 <= 23
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 26
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2838 byte) (raw)) => y
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\y => ((9 character))
mem: ((9 character)): 3250 <= #\y
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3326 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3326
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => y
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\y => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3326 <= #\y
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 26
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 27 => ((6 integer))
mem: ((6 integer)): 3247 <= 27
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 3248 <= 24
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 27
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 27
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2839 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3250 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3327 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3327
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3327 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 27
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 28 => ((6 integer))
mem: ((6 integer)): 3247 <= 28
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 3248 <= 25
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 28
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 28
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2840 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3250 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3328 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3328
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3328 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 28
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 29 => ((6 integer))
mem: ((6 integer)): 3247 <= 29
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 3248 <= 26
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 29
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 29
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2841 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3250 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 26
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3329 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3329
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3329 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 29
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 30 => ((6 integer))
mem: ((6 integer)): 3247 <= 30
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 26
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 27 => ((7 integer))
mem: ((7 integer)): 3248 <= 27
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 30
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 30
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2842 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3250 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 27
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3330 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3330
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3330 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 30
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 31 => ((6 integer))
mem: ((6 integer)): 3247 <= 31
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 27
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 28 => ((7 integer))
mem: ((7 integer)): 3248 <= 28
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 31
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 31
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2843 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3250 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 28
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3331 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3331
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3331 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 31
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 32 => ((6 integer))
mem: ((6 integer)): 3247 <= 32
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 28
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 29 => ((7 integer))
mem: ((7 integer)): 3248 <= 29
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 32
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 32
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2844 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 3250 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 29
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3332 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3332
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3332 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 32
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 33 => ((6 integer))
mem: ((6 integer)): 3247 <= 33
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 29
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 30 => ((7 integer))
mem: ((7 integer)): 3248 <= 30
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 33
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 33
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2845 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3250 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 30
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3333 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3333
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3333 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 33
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 34 => ((6 integer))
mem: ((6 integer)): 3247 <= 34
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 30
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 31 => ((7 integer))
mem: ((7 integer)): 3248 <= 31
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 34
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 34
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2846 byte) (raw)) => l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 3250 <= #\l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 31
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3334 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3334
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3334 <= #\l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 34
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 35 => ((6 integer))
mem: ((6 integer)): 3247 <= 35
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 31
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 32 => ((7 integer))
mem: ((7 integer)): 3248 <= 32
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 35
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 35
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2847 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 3250 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 32
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3335 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3335
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3335 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 35
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 36 => ((6 integer))
mem: ((6 integer)): 3247 <= 36
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 32
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 33 => ((7 integer))
mem: ((7 integer)): 3248 <= 33
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 36
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 36
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2848 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 3250 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 33
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3336 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3336
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3336 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 36
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 37 => ((6 integer))
mem: ((6 integer)): 3247 <= 37
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 33
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 34 => ((7 integer))
mem: ((7 integer)): 3248 <= 34
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 37
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 37
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2849 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 3250 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 34
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3337 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3337
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3337 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 37
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 38 => ((6 integer))
mem: ((6 integer)): 3247 <= 38
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 34
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 35 => ((7 integer))
mem: ((7 integer)): 3248 <= 35
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 38
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 38
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2850 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 3250 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 35
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3338 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3338
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3338 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 38
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 39 => ((6 integer))
mem: ((6 integer)): 3247 <= 39
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 35
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 36 => ((7 integer))
mem: ((7 integer)): 3248 <= 36
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 39
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 39
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2851 byte) (raw)) => a
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 3250 <= #\a
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 36
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3339 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3339
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3339 <= #\a
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 39
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 40 => ((6 integer))
mem: ((6 integer)): 3247 <= 40
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 36
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 37 => ((7 integer))
mem: ((7 integer)): 3248 <= 37
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 40
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 40
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2852 byte) (raw)) => l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 3250 <= #\l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 37
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3340 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3340
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3340 <= #\l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 40
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 41 => ((6 integer))
mem: ((6 integer)): 3247 <= 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 37
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 38 => ((7 integer))
mem: ((7 integer)): 3248 <= 38
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 41
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 41
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2853 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3250 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 38
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3341 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3341
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3341 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 42 => ((6 integer))
mem: ((6 integer)): 3247 <= 42
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 38
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 39 => ((7 integer))
mem: ((7 integer)): 3248 <= 39
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 42
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 42
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2854 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3250 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 39
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3342 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3342
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3342 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 42
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 43 => ((6 integer))
mem: ((6 integer)): 3247 <= 43
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 39
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 40 => ((7 integer))
mem: ((7 integer)): 3248 <= 40
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 43
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3249 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 43
array-len: ((2811 string) (raw))
mem: ((2811 integer) (raw)) => 44
mem: ((2855 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3250 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 40
array-len: ((3302 string) (raw))
mem: ((3302 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3343 => ((10 character-address))
mem: ((10 character-address)): 3251 <= 3343
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3343 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 43
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 44 => ((6 integer))
mem: ((6 integer)): 3247 <= 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 40
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 41 => ((7 integer))
mem: ((7 integer)): 3248 <= 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 44
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 3249 <= t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 3302
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3302 => ((6 string-address))
mem: ((6 string-address)): 3028 <= 3302
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 3238
mem: ((6 string-address)) => 3302
run: parse-instruction-trace/parse-traces/main 9: 3238 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 2617 <= 3238
run: parse-instruction-trace/parse-traces/main 9: 3302 => ((5 string-address))
mem: ((5 string-address)): 2591 <= 3302
run: parse-instruction-trace/parse-traces/main 10: (((9 string-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((2 offset)))
run: parse-instruction-trace/parse-traces/main 10: 2618 => ((9 string-address-address))
mem: ((9 string-address-address)): 2595 <= 2618
run: parse-instruction-trace/parse-traces/main 11: (((9 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 3302
run: parse-instruction-trace/parse-traces/main 11: 3302 => ((9 string-address-address) (deref))
mem: ((9 string-address-address) (deref)): 2618 <= 3302
run: parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 instruction-trace-address)))
mem: ((3 instruction-trace-address)) => 2616
run: parse-traces/main 18: 2616 => ((3 instruction-trace-address))
mem: ((3 instruction-trace-address)): 1311 <= 2616
run: parse-traces/main 19: (((2 buffer-address)) <- ((append)) ((2 buffer-address)) ((3 instruction-trace-address)))
mem: ((2 buffer-address)) => 1369
mem: ((3 instruction-trace-address)) => 2616
run: append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/parse-traces/main 0: 3344 => ((default-space space-address))
run: append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1369 2616)
run: append/parse-traces/main 1: 1369 => ((1 buffer-address))
mem: ((1 buffer-address)): 3346 <= 1369
run: append/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1369 2616)
run: append/parse-traces/main 2: 2616 => ((2 character))
mem: ((2 character)): 3347 <= 2616
run: append/parse-traces/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1369
run: buffer-full?/append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/parse-traces/main 0: 3375 => ((default-space space-address))
run: buffer-full?/append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1369)
run: buffer-full?/append/parse-traces/main 1: 1369 => ((1 buffer-address))
mem: ((1 buffer-address)): 3377 <= 1369
run: buffer-full?/append/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((1369 integer) (raw)) => 0
run: buffer-full?/append/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 3378 <= 0
run: buffer-full?/append/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1370 string-address) (raw)) => 1371
run: buffer-full?/append/parse-traces/main 3: 1371 => ((3 string-address))
mem: ((3 string-address)): 3379 <= 1371
run: buffer-full?/append/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1371 integer) (raw)) => 30
run: buffer-full?/append/parse-traces/main 4: 30 => ((4 integer))
mem: ((4 integer)): 3380 <= 30
run: buffer-full?/append/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3381 <= nil
run: buffer-full?/append/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 3348 <= nil
run: append/parse-traces/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/parse-traces/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/parse-traces/main 6: 1369 => ((4 integer-address))
mem: ((4 integer-address)): 3349 <= 1369
run: append/parse-traces/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1370 string-address) (raw)) => 1371
run: append/parse-traces/main 7: 1371 => ((5 string-address))
mem: ((5 string-address)): 3350 <= 1371
run: append/parse-traces/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((1371 string) (raw))
mem: ((1371 integer) (raw)) => 30
run: append/parse-traces/main 8: 1372 => ((6 byte-address))
mem: ((6 byte-address)): 3351 <= 1372
run: append/parse-traces/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 2616
run: append/parse-traces/main 9: 2616 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 1372 <= 2616
run: append/parse-traces/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/parse-traces/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1369 <= 1
run: append/parse-traces/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 1369
run: parse-traces/main 19: 1369 => ((2 buffer-address))
mem: ((2 buffer-address)): 1310 <= 1369
run: parse-traces/main 20: (((jump)) ((-15 offset)))
run: parse-traces/main 6: next-line
run: parse-traces/main 7: (((6 boolean)) <- ((end-of-stream?)) ((1 stream-address)))
mem: ((1 stream-address)) => 1305
run: end-of-stream?/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: end-of-stream?/parse-traces/main 0: 3406 => ((default-space space-address))
run: end-of-stream?/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1305)
run: end-of-stream?/parse-traces/main 1: 1305 => ((1 stream-address))
mem: ((1 stream-address)): 3408 <= 1305
run: end-of-stream?/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 stream-address) (deref)) ((0 offset)))
mem: ((1305 integer) (raw)) => 70
run: end-of-stream?/parse-traces/main 2: 70 => ((2 integer))
mem: ((2 integer)): 3409 <= 70
run: end-of-stream?/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1306 string-address) (raw)) => 1031
run: end-of-stream?/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 3410 <= 1031
run: end-of-stream?/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: end-of-stream?/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 3411 <= 242
run: end-of-stream?/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 70
mem: ((4 integer)) => 242
run: end-of-stream?/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3412 <= nil
run: end-of-stream?/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: parse-traces/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1314 <= nil
run: parse-traces/main 8: (((jump-if)) ((6 boolean)) ((15 offset)))
mem: ((6 boolean)) => nil
run: parse-traces/main 9: (((7 string-address)) <- ((read-line)) ((1 stream-address)))
mem: ((1 stream-address)) => 1305
run: read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-line/parse-traces/main 0: 3437 => ((default-space space-address))
run: read-line/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1305)
run: read-line/parse-traces/main 1: 1305 => ((1 stream-address))
mem: ((1 stream-address)): 3439 <= 1305
run: read-line/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 stream-address) (deref)) ((0 offset)))
run: read-line/parse-traces/main 2: 1305 => ((2 integer-address))
mem: ((2 integer-address)): 3440 <= 1305
run: read-line/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1306 string-address) (raw)) => 1031
run: read-line/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 3441 <= 1031
run: read-line/parse-traces/main 4: (((4 integer)) <- ((find-next)) ((3 string-address)) ((
 literal)) ((2 integer-address) (deref)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 70
run: find-next/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/read-line/parse-traces/main 0: 3468 => ((default-space space-address))
run: find-next/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 #\newline 70)
run: find-next/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 3470 <= 1031
run: find-next/read-line/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1031 #\newline 70)
run: find-next/read-line/parse-traces/main 2: #\newline => ((2 character))
mem: ((2 character)): 3471 <= #\newline
run: find-next/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 #\newline 70)
run: find-next/read-line/parse-traces/main 3: 70 => ((3 integer))
mem: ((3 integer)): 3472 <= 70
run: find-next/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: find-next/read-line/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 3473 <= 242
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 70
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 70
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1102 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 3475 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 70
run: find-next/read-line/parse-traces/main 10: 71 => ((3 integer))
mem: ((3 integer)): 3472 <= 71
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 71
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 71
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1103 byte) (raw)) => u
run: find-next/read-line/parse-traces/main 7: #\u => ((6 byte))
mem: ((6 byte)): 3475 <= #\u
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => u
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 71
run: find-next/read-line/parse-traces/main 10: 72 => ((3 integer))
mem: ((3 integer)): 3472 <= 72
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 72
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 72
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1104 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 3475 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 72
run: find-next/read-line/parse-traces/main 10: 73 => ((3 integer))
mem: ((3 integer)): 3472 <= 73
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 73
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 73
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1105 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 3475 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 73
run: find-next/read-line/parse-traces/main 10: 74 => ((3 integer))
mem: ((3 integer)): 3472 <= 74
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 74
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 74
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1106 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 3475 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 74
run: find-next/read-line/parse-traces/main 10: 75 => ((3 integer))
mem: ((3 integer)): 3472 <= 75
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 75
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 75
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1107 byte) (raw)) => m
run: find-next/read-line/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 3475 <= #\m
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 75
run: find-next/read-line/parse-traces/main 10: 76 => ((3 integer))
mem: ((3 integer)): 3472 <= 76
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 76
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 76
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1108 byte) (raw)) => a
run: find-next/read-line/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 3475 <= #\a
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 76
run: find-next/read-line/parse-traces/main 10: 77 => ((3 integer))
mem: ((3 integer)): 3472 <= 77
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 77
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 77
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1109 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 3475 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 77
run: find-next/read-line/parse-traces/main 10: 78 => ((3 integer))
mem: ((3 integer)): 3472 <= 78
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 78
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 78
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1110 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 3475 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 78
run: find-next/read-line/parse-traces/main 10: 79 => ((3 integer))
mem: ((3 integer)): 3472 <= 79
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 79
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 79
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1111 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 3475 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 79
run: find-next/read-line/parse-traces/main 10: 80 => ((3 integer))
mem: ((3 integer)): 3472 <= 80
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 80
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 80
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1112 byte) (raw)) => 0
run: find-next/read-line/parse-traces/main 7: #\0 => ((6 byte))
mem: ((6 byte)): 3475 <= #\0
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 0
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 80
run: find-next/read-line/parse-traces/main 10: 81 => ((3 integer))
mem: ((3 integer)): 3472 <= 81
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 81
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 81
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1113 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 3475 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 81
run: find-next/read-line/parse-traces/main 10: 82 => ((3 integer))
mem: ((3 integer)): 3472 <= 82
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 82
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 82
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1114 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 3475 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 82
run: find-next/read-line/parse-traces/main 10: 83 => ((3 integer))
mem: ((3 integer)): 3472 <= 83
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 83
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 83
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1115 byte) (raw)) => 1
run: find-next/read-line/parse-traces/main 7: #\1 => ((6 byte))
mem: ((6 byte)): 3475 <= #\1
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 1
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 83
run: find-next/read-line/parse-traces/main 10: 84 => ((3 integer))
mem: ((3 integer)): 3472 <= 84
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 84
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 84
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1116 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 3475 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 84
run: find-next/read-line/parse-traces/main 10: 85 => ((3 integer))
mem: ((3 integer)): 3472 <= 85
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 85
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 85
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1117 byte) (raw)) => =
run: find-next/read-line/parse-traces/main 7: #\= => ((6 byte))
mem: ((6 byte)): 3475 <= #\=
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => =
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 85
run: find-next/read-line/parse-traces/main 10: 86 => ((3 integer))
mem: ((3 integer)): 3472 <= 86
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 86
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 86
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1118 byte) (raw)) => >
run: find-next/read-line/parse-traces/main 7: #\> => ((6 byte))
mem: ((6 byte)): 3475 <= #\>
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => >
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 86
run: find-next/read-line/parse-traces/main 10: 87 => ((3 integer))
mem: ((3 integer)): 3472 <= 87
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 87
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 87
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1119 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 3475 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 87
run: find-next/read-line/parse-traces/main 10: 88 => ((3 integer))
mem: ((3 integer)): 3472 <= 88
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 88
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 88
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1120 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 3475 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 88
run: find-next/read-line/parse-traces/main 10: 89 => ((3 integer))
mem: ((3 integer)): 3472 <= 89
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 89
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 89
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1121 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 3475 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 89
run: find-next/read-line/parse-traces/main 10: 90 => ((3 integer))
mem: ((3 integer)): 3472 <= 90
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 90
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 90
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1122 byte) (raw)) => 1
run: find-next/read-line/parse-traces/main 7: #\1 => ((6 byte))
mem: ((6 byte)): 3475 <= #\1
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 1
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 90
run: find-next/read-line/parse-traces/main 10: 91 => ((3 integer))
mem: ((3 integer)): 3472 <= 91
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 91
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 91
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1123 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 3475 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 91
run: find-next/read-line/parse-traces/main 10: 92 => ((3 integer))
mem: ((3 integer)): 3472 <= 92
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 92
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 92
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1124 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 3475 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 92
run: find-next/read-line/parse-traces/main 10: 93 => ((3 integer))
mem: ((3 integer)): 3472 <= 93
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 93
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 93
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1125 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 3475 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 93
run: find-next/read-line/parse-traces/main 10: 94 => ((3 integer))
mem: ((3 integer)): 3472 <= 94
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 94
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 94
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1126 byte) (raw)) => t
run: find-next/read-line/parse-traces/main 7: #\t => ((6 byte))
mem: ((6 byte)): 3475 <= #\t
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => t
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 94
run: find-next/read-line/parse-traces/main 10: 95 => ((3 integer))
mem: ((3 integer)): 3472 <= 95
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 95
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 95
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1127 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 3475 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 95
run: find-next/read-line/parse-traces/main 10: 96 => ((3 integer))
mem: ((3 integer)): 3472 <= 96
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 96
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 96
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1128 byte) (raw)) => g
run: find-next/read-line/parse-traces/main 7: #\g => ((6 byte))
mem: ((6 byte)): 3475 <= #\g
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => g
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 96
run: find-next/read-line/parse-traces/main 10: 97 => ((3 integer))
mem: ((3 integer)): 3472 <= 97
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 97
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 97
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1129 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 3475 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 97
run: find-next/read-line/parse-traces/main 10: 98 => ((3 integer))
mem: ((3 integer)): 3472 <= 98
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 98
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 98
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1130 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 3475 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 98
run: find-next/read-line/parse-traces/main 10: 99 => ((3 integer))
mem: ((3 integer)): 3472 <= 99
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 99
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 99
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1131 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 3475 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 99
run: find-next/read-line/parse-traces/main 10: 100 => ((3 integer))
mem: ((3 integer)): 3472 <= 100
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 100
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 100
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1132 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 3475 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3476 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 100
run: find-next/read-line/parse-traces/main 10: 101 => ((3 integer))
mem: ((3 integer)): 3472 <= 101
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 101
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3474 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 101
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1133 byte) (raw)) => 

run: find-next/read-line/parse-traces/main 7: #\newline => ((6 byte))
mem: ((6 byte)): 3475 <= #\newline
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 

mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 3476 <= t
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/read-line/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 101
run: read-line/parse-traces/main 4: 101 => ((4 integer))
mem: ((4 integer)): 3442 <= 101
run: read-line/parse-traces/main 5: (((5 string-address)) <- ((string-copy)) ((3 string-address)) ((2 integer-address) (deref)) ((4 integer)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 70
mem: ((4 integer)) => 101
run: string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/read-line/parse-traces/main 0: 3499 => ((default-space space-address))
run: string-copy/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 70 101)
run: string-copy/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 3501 <= 1031
run: string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1031 70 101)
run: string-copy/read-line/parse-traces/main 2: 70 => ((2 integer))
mem: ((2 integer)): 3502 <= 70
run: string-copy/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 70 101)
run: string-copy/read-line/parse-traces/main 3: 101 => ((3 integer))
mem: ((3 integer)): 3503 <= 101
run: string-copy/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: string-copy/read-line/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 3504 <= 242
run: string-copy/read-line/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 242
mem: ((3 integer)) => 101
run: min/string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/read-line/parse-traces/main 0: 3530 => ((default-space space-address))
run: min/string-copy/read-line/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (242 101)
run: min/string-copy/read-line/parse-traces/main 1: 242 => ((1 integer))
mem: ((1 integer)): 3532 <= 242
run: min/string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (242 101)
run: min/string-copy/read-line/parse-traces/main 2: 101 => ((2 integer))
mem: ((2 integer)): 3533 <= 101
run: min/string-copy/read-line/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 242
mem: ((2 integer)) => 101
run: min/string-copy/read-line/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 3534 <= nil
run: min/string-copy/read-line/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/read-line/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 101
run: string-copy/read-line/parse-traces/main 5: 101 => ((3 integer))
mem: ((3 integer)): 3503 <= 101
run: string-copy/read-line/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 101
mem: ((2 integer)) => 70
run: string-copy/read-line/parse-traces/main 6: 31 => ((4 integer))
mem: ((4 integer)): 3504 <= 31
run: string-copy/read-line/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 31
run: string-copy/read-line/parse-traces/main 7: 3561 => ((5 string-address))
mem: ((5 string-address)): 3505 <= 3561
run: string-copy/read-line/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 70
run: string-copy/read-line/parse-traces/main 8: 70 => ((6 integer))
mem: ((6 integer)): 3506 <= 70
run: string-copy/read-line/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/read-line/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 3507 <= 0
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 70
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 70
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1102 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 3509 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3562 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3562
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3562 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 70
run: string-copy/read-line/parse-traces/main 15: 71 => ((6 integer))
mem: ((6 integer)): 3506 <= 71
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/read-line/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 3507 <= 1
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 71
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 71
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1103 byte) (raw)) => u
run: string-copy/read-line/parse-traces/main 12: #\u => ((9 character))
mem: ((9 character)): 3509 <= #\u
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3563 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3563
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => u
run: string-copy/read-line/parse-traces/main 14: #\u => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3563 <= #\u
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 71
run: string-copy/read-line/parse-traces/main 15: 72 => ((6 integer))
mem: ((6 integer)): 3506 <= 72
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/read-line/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 3507 <= 2
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 72
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 72
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1104 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 3509 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3564 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3564
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3564 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 72
run: string-copy/read-line/parse-traces/main 15: 73 => ((6 integer))
mem: ((6 integer)): 3506 <= 73
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/read-line/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 3507 <= 3
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 73
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 73
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1105 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 3509 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3565 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3565
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3565 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 73
run: string-copy/read-line/parse-traces/main 15: 74 => ((6 integer))
mem: ((6 integer)): 3506 <= 74
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/read-line/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 3507 <= 4
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 74
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 74
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1106 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3509 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3566 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3566
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3566 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 74
run: string-copy/read-line/parse-traces/main 15: 75 => ((6 integer))
mem: ((6 integer)): 3506 <= 75
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/read-line/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 3507 <= 5
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 75
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 75
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1107 byte) (raw)) => m
run: string-copy/read-line/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 3509 <= #\m
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3567 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3567
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/read-line/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3567 <= #\m
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 75
run: string-copy/read-line/parse-traces/main 15: 76 => ((6 integer))
mem: ((6 integer)): 3506 <= 76
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/read-line/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 3507 <= 6
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 76
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 76
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1108 byte) (raw)) => a
run: string-copy/read-line/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 3509 <= #\a
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3568 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3568
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/read-line/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3568 <= #\a
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 76
run: string-copy/read-line/parse-traces/main 15: 77 => ((6 integer))
mem: ((6 integer)): 3506 <= 77
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/read-line/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 3507 <= 7
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 77
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 77
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1109 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 3509 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3569 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3569
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3569 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 77
run: string-copy/read-line/parse-traces/main 15: 78 => ((6 integer))
mem: ((6 integer)): 3506 <= 78
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/read-line/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 3507 <= 8
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
schedule: scheduling string-copy/read-line/parse-traces/main for further processing
schedule: string-copy/read-line/parse-traces/main
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 78
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 78
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1110 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 3509 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3570 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3570
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3570 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 78
run: string-copy/read-line/parse-traces/main 15: 79 => ((6 integer))
mem: ((6 integer)): 3506 <= 79
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/read-line/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 3507 <= 9
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 79
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 79
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1111 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3509 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3571 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3571
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3571 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 79
run: string-copy/read-line/parse-traces/main 15: 80 => ((6 integer))
mem: ((6 integer)): 3506 <= 80
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/read-line/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 3507 <= 10
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 80
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 80
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1112 byte) (raw)) => 0
run: string-copy/read-line/parse-traces/main 12: #\0 => ((9 character))
mem: ((9 character)): 3509 <= #\0
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3572 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3572
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 0
run: string-copy/read-line/parse-traces/main 14: #\0 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3572 <= #\0
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 80
run: string-copy/read-line/parse-traces/main 15: 81 => ((6 integer))
mem: ((6 integer)): 3506 <= 81
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/read-line/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 3507 <= 11
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 81
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 81
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1113 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 3509 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3573 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3573
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3573 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 81
run: string-copy/read-line/parse-traces/main 15: 82 => ((6 integer))
mem: ((6 integer)): 3506 <= 82
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/read-line/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 3507 <= 12
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 82
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 82
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1114 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3509 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3574 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3574
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3574 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 82
run: string-copy/read-line/parse-traces/main 15: 83 => ((6 integer))
mem: ((6 integer)): 3506 <= 83
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/read-line/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 3507 <= 13
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 83
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 83
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1115 byte) (raw)) => 1
run: string-copy/read-line/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 3509 <= #\1
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3575 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3575
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/read-line/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3575 <= #\1
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 83
run: string-copy/read-line/parse-traces/main 15: 84 => ((6 integer))
mem: ((6 integer)): 3506 <= 84
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/read-line/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 3507 <= 14
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 84
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 84
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1116 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3509 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3576 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3576
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3576 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 84
run: string-copy/read-line/parse-traces/main 15: 85 => ((6 integer))
mem: ((6 integer)): 3506 <= 85
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/read-line/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 3507 <= 15
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 85
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 85
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1117 byte) (raw)) => =
run: string-copy/read-line/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 3509 <= #\=
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3577 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3577
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/read-line/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3577 <= #\=
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 85
run: string-copy/read-line/parse-traces/main 15: 86 => ((6 integer))
mem: ((6 integer)): 3506 <= 86
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/read-line/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 3507 <= 16
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 86
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 86
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1118 byte) (raw)) => >
run: string-copy/read-line/parse-traces/main 12: #\> => ((9 character))
mem: ((9 character)): 3509 <= #\>
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3578 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3578
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => >
run: string-copy/read-line/parse-traces/main 14: #\> => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3578 <= #\>
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 86
run: string-copy/read-line/parse-traces/main 15: 87 => ((6 integer))
mem: ((6 integer)): 3506 <= 87
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/read-line/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 3507 <= 17
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 87
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 87
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1119 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3509 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3579 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3579
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3579 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 87
run: string-copy/read-line/parse-traces/main 15: 88 => ((6 integer))
mem: ((6 integer)): 3506 <= 88
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/read-line/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 3507 <= 18
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 88
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 88
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1120 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3509 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3580 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3580
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3580 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 88
run: string-copy/read-line/parse-traces/main 15: 89 => ((6 integer))
mem: ((6 integer)): 3506 <= 89
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/read-line/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 3507 <= 19
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 89
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 89
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1121 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3509 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3581 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3581
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3581 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 89
run: string-copy/read-line/parse-traces/main 15: 90 => ((6 integer))
mem: ((6 integer)): 3506 <= 90
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/read-line/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 3507 <= 20
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 90
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 90
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1122 byte) (raw)) => 1
run: string-copy/read-line/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 3509 <= #\1
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3582 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3582
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/read-line/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3582 <= #\1
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 90
run: string-copy/read-line/parse-traces/main 15: 91 => ((6 integer))
mem: ((6 integer)): 3506 <= 91
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/read-line/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 3507 <= 21
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 91
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 91
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1123 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3509 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3583 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3583
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3583 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 91
run: string-copy/read-line/parse-traces/main 15: 92 => ((6 integer))
mem: ((6 integer)): 3506 <= 92
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/read-line/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 3507 <= 22
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 92
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 92
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1124 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 3509 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3584 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3584
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3584 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 92
run: string-copy/read-line/parse-traces/main 15: 93 => ((6 integer))
mem: ((6 integer)): 3506 <= 93
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/read-line/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 3507 <= 23
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 93
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 93
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1125 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 3509 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3585 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3585
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3585 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 93
run: string-copy/read-line/parse-traces/main 15: 94 => ((6 integer))
mem: ((6 integer)): 3506 <= 94
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/read-line/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 3507 <= 24
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 94
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 94
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1126 byte) (raw)) => t
run: string-copy/read-line/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 3509 <= #\t
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3586 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3586
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/read-line/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3586 <= #\t
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 94
run: string-copy/read-line/parse-traces/main 15: 95 => ((6 integer))
mem: ((6 integer)): 3506 <= 95
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/read-line/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 3507 <= 25
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 95
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 95
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1127 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 3509 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3587 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3587
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3587 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 95
run: string-copy/read-line/parse-traces/main 15: 96 => ((6 integer))
mem: ((6 integer)): 3506 <= 96
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/read-line/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 3507 <= 26
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 96
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 96
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1128 byte) (raw)) => g
run: string-copy/read-line/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 3509 <= #\g
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 26
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3588 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3588
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/read-line/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3588 <= #\g
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 96
run: string-copy/read-line/parse-traces/main 15: 97 => ((6 integer))
mem: ((6 integer)): 3506 <= 97
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 26
run: string-copy/read-line/parse-traces/main 16: 27 => ((7 integer))
mem: ((7 integer)): 3507 <= 27
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 97
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 97
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1129 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 3509 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 27
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3589 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3589
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3589 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 97
run: string-copy/read-line/parse-traces/main 15: 98 => ((6 integer))
mem: ((6 integer)): 3506 <= 98
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 27
run: string-copy/read-line/parse-traces/main 16: 28 => ((7 integer))
mem: ((7 integer)): 3507 <= 28
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 98
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 98
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1130 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 3509 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 28
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3590 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3590
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3590 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 98
run: string-copy/read-line/parse-traces/main 15: 99 => ((6 integer))
mem: ((6 integer)): 3506 <= 99
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 28
run: string-copy/read-line/parse-traces/main 16: 29 => ((7 integer))
mem: ((7 integer)): 3507 <= 29
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 99
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 99
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1131 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3509 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 29
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3591 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3591
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3591 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 99
run: string-copy/read-line/parse-traces/main 15: 100 => ((6 integer))
mem: ((6 integer)): 3506 <= 100
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 29
run: string-copy/read-line/parse-traces/main 16: 30 => ((7 integer))
mem: ((7 integer)): 3507 <= 30
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 100
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3508 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 100
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1132 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3509 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 30
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3592 => ((10 character-address))
mem: ((10 character-address)): 3510 <= 3592
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3592 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 100
run: string-copy/read-line/parse-traces/main 15: 101 => ((6 integer))
mem: ((6 integer)): 3506 <= 101
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 30
run: string-copy/read-line/parse-traces/main 16: 31 => ((7 integer))
mem: ((7 integer)): 3507 <= 31
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 101
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 3508 <= t
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/read-line/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 3561
run: read-line/parse-traces/main 5: 3561 => ((5 string-address))
mem: ((5 string-address)): 3443 <= 3561
run: read-line/parse-traces/main 6: (((2 integer-address) (deref)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 101
run: read-line/parse-traces/main 6: 102 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1305 <= 102
run: read-line/parse-traces/main 7: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 3561
run: parse-traces/main 9: 3561 => ((7 string-address))
mem: ((7 string-address)): 1315 <= 3561
run: parse-traces/main 10: (((8 trace-address)) <- ((parse-trace)) ((7 string-address)))
mem: ((7 string-address)) => 3561
run: parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-trace/parse-traces/main 0: 3593 => ((default-space space-address))
run: parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3561)
run: parse-trace/parse-traces/main 1: 3561 => ((1 string-address))
mem: ((1 string-address)): 3595 <= 3561
run: parse-trace/parse-traces/main 2: (((2 trace-address)) <- ((new)) ((trace literal)))
run: parse-trace/parse-traces/main 2: 3624 => ((2 trace-address))
mem: ((2 trace-address)): 3596 <= 3624
run: parse-trace/parse-traces/main 3: (((3 string-address)) <- ((new)) : )
run: parse-trace/parse-traces/main 3: 3626 => ((3 string-address))
mem: ((3 string-address)): 3597 <= 3626
run: parse-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first-at-substring)) ((1 string-address)) ((3 string-address)))
mem: ((1 string-address)) => 3561
mem: ((3 string-address)) => 3626
run: split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-trace/parse-traces/main 0: 3629 => ((default-space space-address))
run: split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3561 3626)
run: split-first-at-substring/parse-trace/parse-traces/main 1: 3561 => ((1 string-address))
mem: ((1 string-address)): 3631 <= 3561
run: split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (3561 3626)
run: split-first-at-substring/parse-trace/parse-traces/main 2: 3626 => ((2 string-address))
mem: ((2 string-address)): 3632 <= 3626
run: split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3561 integer) (raw)) => 31
run: split-first-at-substring/parse-trace/parse-traces/main 3: 31 => ((3 integer))
mem: ((3 integer)): 3633 <= 31
run: split-first-at-substring/parse-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 31
run: split-first-at-substring/parse-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 3634 <= nil
run: split-first-at-substring/parse-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 3561
mem: ((2 string-address)) => 3626
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 3660 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3561 3626 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 3561 => ((1 string-address))
mem: ((1 string-address)): 3662 <= 3561
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (3561 3626 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 3626 => ((2 string-address))
mem: ((2 string-address)): 3663 <= 3626
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3561 3626 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 3664 <= 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((3626 string) (raw))
mem: ((3626 integer) (raw)) => 2
mem: ((3627 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 3665 <= #\:
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3561 integer) (raw)) => 31
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 31 => ((5 integer))
mem: ((5 integer)): 3666 <= 31
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 31
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 3667 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 3561
mem: ((2 string-address)) => 3626
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 3691 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3561 3626 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 3561 => ((1 string-address))
mem: ((1 string-address)): 3693 <= 3561
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (3561 3626 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 3626 => ((2 string-address))
mem: ((2 string-address)): 3694 <= 3626
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3561 3626 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 3695 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((3626 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 3696 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3561 integer) (raw)) => 31
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 31 => ((5 integer))
mem: ((5 integer)): 3697 <= 31
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 31
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 29 => ((5 integer))
mem: ((5 integer)): 3697 <= 29
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 29
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 3698 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 3699 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 3700 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3562 byte) (raw)) => r
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\r => ((9 character))
mem: ((9 character)): 3701 <= #\r
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3626 string) (raw))
mem: ((3626 integer) (raw)) => 2
mem: ((3627 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 3702 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => r
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 3703 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3668 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 3664 <= 1
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 3561
mem: ((4 character)) => :
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 3722 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3561 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 3561 => ((1 string-address))
mem: ((1 string-address)): 3724 <= 3561
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (3561 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 3725 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3561 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 3726 <= 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3561 integer) (raw)) => 31
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 31 => ((4 integer))
mem: ((4 integer)): 3727 <= 31
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 31
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3728 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3563 byte) (raw)) => u
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\u => ((6 byte))
mem: ((6 byte)): 3729 <= #\u
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => u
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3730 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 3726 <= 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 31
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3728 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3564 byte) (raw)) => n
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 3729 <= #\n
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3730 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 3726 <= 3
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 31
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3728 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3565 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 3729 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 3730 <= t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: 3 => ((3 integer))
mem: ((3 integer)): 3664 <= 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 31
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 3667 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 3561
mem: ((2 string-address)) => 3626
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 3753 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3561 3626 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 3561 => ((1 string-address))
mem: ((1 string-address)): 3755 <= 3561
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (3561 3626 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 3626 => ((2 string-address))
mem: ((2 string-address)): 3756 <= 3626
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3561 3626 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 3757 <= 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((3626 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 3758 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3561 integer) (raw)) => 31
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 31 => ((5 integer))
mem: ((5 integer)): 3759 <= 31
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 31
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 29 => ((5 integer))
mem: ((5 integer)): 3759 <= 29
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 29
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 3760 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 3761 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 3762 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3565 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 3763 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3626 string) (raw))
mem: ((3626 integer) (raw)) => 2
mem: ((3627 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 3764 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 3765 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 4 => ((3 integer))
mem: ((3 integer)): 3757 <= 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 3761 <= 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 3762 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3566 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 3763 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((3626 string) (raw))
mem: ((3626 integer) (raw)) => 2
mem: ((3628 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 3764 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 3765 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 5 => ((3 integer))
mem: ((3 integer)): 3757 <= 5
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 3761 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 3762 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 3668 <= t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: split-first-at-substring/parse-trace/parse-traces/main 9: 3 => ((7 integer))
mem: ((7 integer)): 3637 <= 3
run: split-first-at-substring/parse-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 3561
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 3784 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3561 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 3561 => ((1 string-address))
mem: ((1 string-address)): 3786 <= 3561
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (3561 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 3787 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3561 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 3788 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3561 integer) (raw)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 31 => ((4 integer))
mem: ((4 integer)): 3789 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 31
mem: ((3 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 3815 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (31 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 31 => ((1 integer))
mem: ((1 integer)): 3817 <= 31
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (31 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 3818 <= 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 31
mem: ((2 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 3819 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 3 => ((3 integer))
mem: ((3 integer)): 3788 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 3
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 3 => ((4 integer))
mem: ((4 integer)): 3789 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 3846 => ((5 string-address))
mem: ((5 string-address)): 3790 <= 3846
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 3791 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 3792 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3562 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 3794 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3846 string) (raw))
mem: ((3846 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3847 => ((10 character-address))
mem: ((10 character-address)): 3795 <= 3847
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3847 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 3791 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 3792 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3563 byte) (raw)) => u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\u => ((9 character))
mem: ((9 character)): 3794 <= #\u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((3846 string) (raw))
mem: ((3846 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3848 => ((10 character-address))
mem: ((10 character-address)): 3795 <= 3848
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\u => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3848 <= #\u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 3791 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 3792 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3564 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 3794 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((3846 string) (raw))
mem: ((3846 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3849 => ((10 character-address))
mem: ((10 character-address)): 3795 <= 3849
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3849 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 3791 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 3792 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 3793 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 3846
run: split-first-at-substring/parse-trace/parse-traces/main 10: 3846 => ((5 string-address))
mem: ((5 string-address)): 3635 <= 3846
run: split-first-at-substring/parse-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((3626 integer) (raw)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 3638 <= 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 3
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: 5 => ((7 integer))
mem: ((7 integer)): 3637 <= 5
run: split-first-at-substring/parse-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 3561
mem: ((7 integer)) => 5
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 3850 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3561 5 31)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 3561 => ((1 string-address))
mem: ((1 string-address)): 3852 <= 3561
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (3561 5 31)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 5 => ((2 integer))
mem: ((2 integer)): 3853 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3561 5 31)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 31 => ((3 integer))
mem: ((3 integer)): 3854 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3561 integer) (raw)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 31 => ((4 integer))
mem: ((4 integer)): 3855 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 31
mem: ((3 integer)) => 31
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 3881 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (31 31)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 31 => ((1 integer))
mem: ((1 integer)): 3883 <= 31
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (31 31)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 31 => ((2 integer))
mem: ((2 integer)): 3884 <= 31
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 31
mem: ((2 integer)) => 31
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 3885 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 31 => ((3 integer))
mem: ((3 integer)): 3854 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 31
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 26 => ((4 integer))
mem: ((4 integer)): 3855 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 3912 => ((5 string-address))
mem: ((5 string-address)): 3856 <= 3912
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 5 => ((6 integer))
mem: ((6 integer)): 3857 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 3858 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3567 byte) (raw)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 3860 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3913 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3913
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3913 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 3857 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 3858 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3568 byte) (raw)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 3860 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3914 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3914
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3914 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 3857 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 3858 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3569 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 3860 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3915 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3915
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3915 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 3857 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 3858 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3570 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 3860 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3916 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3916
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3916 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 3857 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 3858 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3571 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3860 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3917 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3917
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3917 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 3857 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 3858 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3572 byte) (raw)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\0 => ((9 character))
mem: ((9 character)): 3860 <= #\0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3918 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3918
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\0 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3918 <= #\0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 3857 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 3858 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3573 byte) (raw)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 3860 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3919 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3919
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3919 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 3857 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 3858 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3574 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3860 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3920 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3920
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3920 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 3857 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 3858 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3575 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 3860 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3921 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3921
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3921 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 3857 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 3858 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3576 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3860 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3922 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3922
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3922 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 3857 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 3858 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3577 byte) (raw)) => =
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 3860 <= #\=
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3923 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3923
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3923 <= #\=
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 3857 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 3858 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3578 byte) (raw)) => >
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\> => ((9 character))
mem: ((9 character)): 3860 <= #\>
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3924 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3924
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => >
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\> => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3924 <= #\>
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 3857 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 3858 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3579 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3860 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3925 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3925
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3925 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 3857 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 3858 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3580 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3860 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3926 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3926
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3926 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 3857 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 3858 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3581 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3860 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3927 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3927
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3927 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 3857 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 3858 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3582 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 3860 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3928 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3928
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3928 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 3857 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 3858 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3583 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3860 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3929 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3929
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3929 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 3857 <= 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 3858 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3584 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 3860 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3930 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3930
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3930 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 3857 <= 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 3858 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
schedule: scheduling string-copy/split-first-at-substring/parse-trace/parse-traces/main for further processing
schedule: string-copy/split-first-at-substring/parse-trace/parse-traces/main
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3585 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 3860 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3931 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3931
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3931 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 3857 <= 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 3858 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3586 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 3860 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3932 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3932
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3932 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 3857 <= 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 3858 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3587 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 3860 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3933 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3933
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3933 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 3857 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 3858 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 26
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3588 byte) (raw)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 3860 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3934 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3934
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3934 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 27 => ((6 integer))
mem: ((6 integer)): 3857 <= 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 3858 <= 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 27
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 27
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3589 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 3860 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3935 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3935
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3935 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 28 => ((6 integer))
mem: ((6 integer)): 3857 <= 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 3858 <= 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 28
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 28
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3590 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 3860 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3936 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3936
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3936 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 29 => ((6 integer))
mem: ((6 integer)): 3857 <= 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 3858 <= 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 29
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 29
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3591 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3860 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3937 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3937
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3937 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 30 => ((6 integer))
mem: ((6 integer)): 3857 <= 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 3858 <= 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 30
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3859 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 30
array-len: ((3561 string) (raw))
mem: ((3561 integer) (raw)) => 31
mem: ((3592 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3860 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3938 => ((10 character-address))
mem: ((10 character-address)): 3861 <= 3938
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3938 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 31 => ((6 integer))
mem: ((6 integer)): 3857 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 3858 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 31
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 3859 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 3912
run: split-first-at-substring/parse-trace/parse-traces/main 13: 3912 => ((6 string-address))
mem: ((6 string-address)): 3636 <= 3912
run: split-first-at-substring/parse-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 3846
mem: ((6 string-address)) => 3912
run: parse-trace/parse-traces/main 4: 3846 => ((4 string-address))
mem: ((4 string-address)): 3598 <= 3846
run: parse-trace/parse-traces/main 4: 3912 => ((5 string-address))
mem: ((5 string-address)): 3599 <= 3912
run: parse-trace/parse-traces/main 5: (((6 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((0 offset)))
run: parse-trace/parse-traces/main 5: 3624 => ((6 string-address-address))
mem: ((6 string-address-address)): 3600 <= 3624
run: parse-trace/parse-traces/main 6: (((6 string-address-address) (deref)) <- ((copy)) ((4 string-address)))
mem: ((4 string-address)) => 3846
run: parse-trace/parse-traces/main 6: 3846 => ((6 string-address-address) (deref))
mem: ((6 string-address-address) (deref)): 3624 <= 3846
run: parse-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((1 offset)))
run: parse-trace/parse-traces/main 7: 3625 => ((7 string-address-address))
mem: ((7 string-address-address)): 3601 <= 3625
run: parse-trace/parse-traces/main 8: (((7 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 3912
run: parse-trace/parse-traces/main 8: 3912 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 3625 <= 3912
run: parse-trace/parse-traces/main 9: (((reply)) ((2 trace-address)))
mem: ((2 trace-address)) => 3624
run: parse-traces/main 10: 3624 => ((8 trace-address))
mem: ((8 trace-address)): 1316 <= 3624
run: parse-traces/main 11: (((9 string-address)) <- ((get)) ((8 trace-address) (deref)) ((0 offset)))
mem: ((3624 string-address) (raw)) => 3846
run: parse-traces/main 11: 3846 => ((9 string-address))
mem: ((9 string-address)): 1317 <= 3846
run: parse-traces/main 12: (((10 boolean)) <- ((string-equal)) ((9 string-address)) ((5 string-address) (const)))
mem: ((9 string-address)) => 3846
mem: ((5 string-address) (const)) => 1441
run: string-equal/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-equal/parse-traces/main 0: 3939 => ((default-space space-address))
run: string-equal/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3846 1441)
run: string-equal/parse-traces/main 1: 3846 => ((1 string-address))
mem: ((1 string-address)): 3941 <= 3846
run: string-equal/parse-traces/main 2: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3846 integer) (raw)) => 3
run: string-equal/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 3942 <= 3
run: string-equal/parse-traces/main 3: (((3 string-address)) <- ((next-input)))
arg: nil 1 (3846 1441)
run: string-equal/parse-traces/main 3: 1441 => ((3 string-address))
mem: ((3 string-address)): 3943 <= 1441
run: string-equal/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1441 integer) (raw)) => 3
run: string-equal/parse-traces/main 4: 3 => ((4 integer))
mem: ((4 integer)): 3944 <= 3
run: string-equal/parse-traces/main 5: (((5 boolean)) <- ((equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 3
mem: ((4 integer)) => 3
run: string-equal/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 3945 <= t
run: string-equal/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((1 offset)))
mem: ((5 boolean)) => t
run: string-equal/parse-traces/main 8: (((6 integer)) <- ((copy)) ((0 literal)))
run: string-equal/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 3946 <= 0
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 0
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 3947 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((3846 string) (raw))
mem: ((3846 integer) (raw)) => 3
mem: ((3847 byte) (raw)) => r
run: string-equal/parse-traces/main 11: #\r => ((8 byte))
mem: ((8 byte)): 3948 <= #\r
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((1441 string) (raw))
mem: ((1441 integer) (raw)) => 3
mem: ((1442 byte) (raw)) => r
run: string-equal/parse-traces/main 12: #\r => ((9 byte))
mem: ((9 byte)): 3949 <= #\r
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => r
mem: ((9 byte)) => r
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 3950 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-equal/parse-traces/main 16: 1 => ((6 integer))
mem: ((6 integer)): 3946 <= 1
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 1
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 3947 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((3846 string) (raw))
mem: ((3846 integer) (raw)) => 3
mem: ((3848 byte) (raw)) => u
run: string-equal/parse-traces/main 11: #\u => ((8 byte))
mem: ((8 byte)): 3948 <= #\u
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((1441 string) (raw))
mem: ((1441 integer) (raw)) => 3
mem: ((1443 byte) (raw)) => u
run: string-equal/parse-traces/main 12: #\u => ((9 byte))
mem: ((9 byte)): 3949 <= #\u
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => u
mem: ((9 byte)) => u
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 3950 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-equal/parse-traces/main 16: 2 => ((6 integer))
mem: ((6 integer)): 3946 <= 2
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 2
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 3947 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((3846 string) (raw))
mem: ((3846 integer) (raw)) => 3
mem: ((3849 byte) (raw)) => n
run: string-equal/parse-traces/main 11: #\n => ((8 byte))
mem: ((8 byte)): 3948 <= #\n
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((1441 string) (raw))
mem: ((1441 integer) (raw)) => 3
mem: ((1444 byte) (raw)) => n
run: string-equal/parse-traces/main 12: #\n => ((9 byte))
mem: ((9 byte)): 3949 <= #\n
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => n
mem: ((9 byte)) => n
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 3950 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-equal/parse-traces/main 16: 3 => ((6 integer))
mem: ((6 integer)): 3946 <= 3
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 3
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: t => ((7 boolean))
mem: ((7 boolean)): 3947 <= t
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => t
run: string-equal/parse-traces/main 18: (((reply)) ((t literal)))
run: parse-traces/main 12: t => ((10 boolean))
mem: ((10 boolean)): 1318 <= t
run: parse-traces/main 13: (((jump-unless)) ((10 boolean)) ((7 offset)))
mem: ((10 boolean)) => t
run: parse-traces/main 14: (((jump-unless)) ((3 instruction-trace-address)) ((3 offset)))
mem: ((3 instruction-trace-address)) => 2616
run: parse-traces/main 15: (((11 trace-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((3 offset)))
run: parse-traces/main 15: 2619 => ((11 trace-address-array-address-address))
mem: ((11 trace-address-array-address-address)): 1319 <= 2619
run: parse-traces/main 16: (((11 trace-address-array-address-address) (deref)) <- ((to-array)) ((4 buffer-address)))
mem: ((4 buffer-address)) => 1433
run: to-array/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: to-array/parse-traces/main 0: 3970 => ((default-space space-address))
run: to-array/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1433)
run: to-array/parse-traces/main 1: 1433 => ((1 buffer-address))
mem: ((1 buffer-address)): 3972 <= 1433
run: to-array/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((1433 integer) (raw)) => 0
run: to-array/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 3973 <= 0
run: to-array/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1434 string-address) (raw)) => 1435
run: to-array/parse-traces/main 3: 1435 => ((3 string-address))
mem: ((3 string-address)): 3974 <= 1435
run: to-array/parse-traces/main 4: (((jump-if)) ((3 string-address)) ((1 offset)))
mem: ((3 string-address)) => 1435
run: to-array/parse-traces/main 6: (((4 string-address)) <- ((new)) ((string literal)) ((2 integer)))
mem: ((2 integer)) => 0
run: to-array/parse-traces/main 6: 4001 => ((4 string-address))
mem: ((4 string-address)): 3975 <= 4001
run: to-array/parse-traces/main 7: (((5 integer)) <- ((copy)) ((0 literal)))
run: to-array/parse-traces/main 7: 0 => ((5 integer))
mem: ((5 integer)): 3976 <= 0
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 0
mem: ((2 integer)) => 0
run: to-array/parse-traces/main 8: t => ((6 boolean))
mem: ((6 boolean)): 3977 <= t
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => t
run: to-array/parse-traces/main 15: (((reply)) ((4 string-address)))
mem: ((4 string-address)) => 4001
run: parse-traces/main 16: 4001 => ((11 trace-address-array-address-address) (deref))
mem: ((11 trace-address-array-address-address) (deref)): 2619 <= 4001
run: parse-traces/main 17: (((4 buffer-address)) <- ((init-buffer)) ((5 literal)))
run: init-buffer/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/parse-traces/main 0: 4002 => ((default-space space-address))
run: init-buffer/parse-traces/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/parse-traces/main 1: 4033 => ((1 buffer-address))
mem: ((1 buffer-address)): 4004 <= 4033
run: init-buffer/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/parse-traces/main 2: 4033 => ((2 integer-address))
mem: ((2 integer-address)): 4005 <= 4033
run: init-buffer/parse-traces/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/parse-traces/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 4033 <= 0
run: init-buffer/parse-traces/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/parse-traces/main 4: 4034 => ((3 string-address-address))
mem: ((3 string-address-address)): 4006 <= 4034
run: init-buffer/parse-traces/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (5)
run: init-buffer/parse-traces/main 5: 5 => ((4 integer))
mem: ((4 integer)): 4007 <= 5
run: init-buffer/parse-traces/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 5
run: init-buffer/parse-traces/main 6: 4035 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 4034 <= 4035
run: init-buffer/parse-traces/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 4033
run: parse-traces/main 17: 4033 => ((4 buffer-address))
mem: ((4 buffer-address)): 1312 <= 4033
run: parse-traces/main 18: (((3 instruction-trace-address)) <- ((parse-instruction-trace)) ((8 trace-address)))
mem: ((8 trace-address)) => 3624
run: parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-instruction-trace/parse-traces/main 0: 4041 => ((default-space space-address))
run: parse-instruction-trace/parse-traces/main 1: (((1 trace-address)) <- ((next-input)))
arg: nil 0 (3624)
run: parse-instruction-trace/parse-traces/main 1: 3624 => ((1 trace-address))
mem: ((1 trace-address)): 4043 <= 3624
run: parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((get)) ((1 trace-address) (deref)) ((1 offset)))
mem: ((3625 string-address) (raw)) => 3912
run: parse-instruction-trace/parse-traces/main 2: 3912 => ((2 string-address))
mem: ((2 string-address)): 4044 <= 3912
run: parse-instruction-trace/parse-traces/main 3: (((3 instruction-trace-address)) <- ((new)) ((instruction-trace literal)))
run: parse-instruction-trace/parse-traces/main 3: 4072 => ((3 instruction-trace-address))
mem: ((3 instruction-trace-address)): 4045 <= 4072
run: parse-instruction-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first)) ((2 string-address)) ((  literal)))
mem: ((2 string-address)) => 3912
run: split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first/parse-instruction-trace/parse-traces/main 0: 4076 => ((default-space space-address))
run: split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3912 #\space)
run: split-first/parse-instruction-trace/parse-traces/main 1: 3912 => ((1 string-address))
mem: ((1 string-address)): 4078 <= 3912
run: split-first/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (3912 #\space)
run: split-first/parse-instruction-trace/parse-traces/main 2: #\space => ((2 character))
mem: ((2 character)): 4079 <= #\space
run: split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3912 integer) (raw)) => 26
run: split-first/parse-instruction-trace/parse-traces/main 3: 26 => ((3 integer))
mem: ((3 integer)): 4080 <= 26
run: split-first/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 26
run: split-first/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 4081 <= nil
run: split-first/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((0 literal)))
mem: ((1 string-address)) => 3912
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 0: 4107 => ((default-space space-address))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3912 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 1: 3912 => ((1 string-address))
mem: ((1 string-address)): 4109 <= 3912
run: find-next/split-first/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (3912 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 2: #\space => ((2 character))
mem: ((2 character)): 4110 <= #\space
run: find-next/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3912 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 4111 <= 0
run: find-next/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3912 integer) (raw)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 4112 <= 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4113 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3913 byte) (raw)) => m
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 4114 <= #\m
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4115 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 4111 <= 1
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4113 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3914 byte) (raw)) => a
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 4114 <= #\a
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4115 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 4111 <= 2
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4113 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3915 byte) (raw)) => i
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 4114 <= #\i
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4115 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 4111 <= 3
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4113 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3916 byte) (raw)) => n
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 4114 <= #\n
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4115 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 4111 <= 4
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4113 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3917 byte) (raw)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 4114 <= #\space
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 4115 <= t
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/split-first/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split-first/parse-instruction-trace/parse-traces/main 9: 4 => ((7 integer))
mem: ((7 integer)): 4084 <= 4
run: split-first/parse-instruction-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 3912
mem: ((7 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 4138 => ((default-space space-address))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3912 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 3912 => ((1 string-address))
mem: ((1 string-address)): 4140 <= 3912
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (3912 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 4141 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3912 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 4142 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 4143 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 4169 => ((default-space space-address))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (26 4)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 26 => ((1 integer))
mem: ((1 integer)): 4171 <= 26
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (26 4)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 4 => ((2 integer))
mem: ((2 integer)): 4172 <= 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 26
mem: ((2 integer)) => 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 4173 <= nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: 4 => ((3 integer))
mem: ((3 integer)): 4142 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 4
mem: ((2 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: 4 => ((4 integer))
mem: ((4 integer)): 4143 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: 4200 => ((5 string-address))
mem: ((5 string-address)): 4144 <= 4200
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 4145 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 4146 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4147 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3913 byte) (raw)) => m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 4148 <= #\m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4200 string) (raw))
mem: ((4200 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4201 => ((10 character-address))
mem: ((10 character-address)): 4149 <= 4201
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4201 <= #\m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 4145 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 4146 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4147 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3914 byte) (raw)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 4148 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((4200 string) (raw))
mem: ((4200 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4202 => ((10 character-address))
mem: ((10 character-address)): 4149 <= 4202
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4202 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 4145 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 4146 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4147 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3915 byte) (raw)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 4148 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((4200 string) (raw))
mem: ((4200 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4203 => ((10 character-address))
mem: ((10 character-address)): 4149 <= 4203
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4203 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 4145 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 4146 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4147 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3916 byte) (raw)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 4148 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((4200 string) (raw))
mem: ((4200 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4204 => ((10 character-address))
mem: ((10 character-address)): 4149 <= 4204
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4204 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 4145 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 4146 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 4147 <= t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 4200
run: split-first/parse-instruction-trace/parse-traces/main 10: 4200 => ((5 string-address))
mem: ((5 string-address)): 4082 <= 4200
run: split-first/parse-instruction-trace/parse-traces/main 11: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: split-first/parse-instruction-trace/parse-traces/main 11: 5 => ((7 integer))
mem: ((7 integer)): 4084 <= 5
run: split-first/parse-instruction-trace/parse-traces/main 12: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 3912
mem: ((7 integer)) => 5
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 4205 => ((default-space space-address))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3912 5 26)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 3912 => ((1 string-address))
mem: ((1 string-address)): 4207 <= 3912
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (3912 5 26)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 5 => ((2 integer))
mem: ((2 integer)): 4208 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3912 5 26)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: 26 => ((3 integer))
mem: ((3 integer)): 4209 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3912 integer) (raw)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 4210 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 26
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 4236 => ((default-space space-address))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (26 26)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 26 => ((1 integer))
mem: ((1 integer)): 4238 <= 26
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (26 26)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 26 => ((2 integer))
mem: ((2 integer)): 4239 <= 26
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 26
mem: ((2 integer)) => 26
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 4240 <= nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: 26 => ((3 integer))
mem: ((3 integer)): 4209 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 26
mem: ((2 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: 21 => ((4 integer))
mem: ((4 integer)): 4210 <= 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: 4267 => ((5 string-address))
mem: ((5 string-address)): 4211 <= 4267
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: 5 => ((6 integer))
mem: ((6 integer)): 4212 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 4213 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3918 byte) (raw)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\0 => ((9 character))
mem: ((9 character)): 4215 <= #\0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4268 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4268
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\0 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4268 <= #\0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 4212 <= 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 4213 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3919 byte) (raw)) => :
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 4215 <= #\:
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4269 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4269
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4269 <= #\:
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 4212 <= 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 4213 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3920 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4215 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4270 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4270
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4270 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 4212 <= 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 4213 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3921 byte) (raw)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 4215 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4271 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4271
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4271 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 4212 <= 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 4213 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3922 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4215 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4272 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4272
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4272 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 4212 <= 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 4213 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3923 byte) (raw)) => =
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 4215 <= #\=
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4273 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4273
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4273 <= #\=
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 4212 <= 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 4213 <= 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3924 byte) (raw)) => >
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\> => ((9 character))
mem: ((9 character)): 4215 <= #\>
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4274 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4274
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => >
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\> => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4274 <= #\>
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 4212 <= 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 4213 <= 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3925 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4215 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4275 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4275
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4275 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 4212 <= 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 4213 <= 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3926 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 4215 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4276 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4276
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4276 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 4212 <= 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 4213 <= 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3927 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 4215 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4277 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4277
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4277 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 4212 <= 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 4213 <= 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3928 byte) (raw)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 4215 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4278 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4278
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4278 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 4212 <= 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 4213 <= 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3929 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4215 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4279 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4279
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4279 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 4212 <= 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 4213 <= 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3930 byte) (raw)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 4215 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4280 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4280
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4280 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 4212 <= 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 4213 <= 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3931 byte) (raw)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 4215 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4281 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4281
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4281 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 4212 <= 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 4213 <= 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3932 byte) (raw)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 4215 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4282 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4282
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4282 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 4212 <= 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 4213 <= 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3933 byte) (raw)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 4215 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4283 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4283
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4283 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 4212 <= 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 4213 <= 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3934 byte) (raw)) => g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 4215 <= #\g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4284 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4284
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4284 <= #\g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 4212 <= 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 4213 <= 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3935 byte) (raw)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 4215 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4285 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4285
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4285 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 4212 <= 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 4213 <= 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3936 byte) (raw)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 4215 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4286 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4286
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4286 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 4212 <= 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 4213 <= 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3937 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 4215 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4287 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4287
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4287 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 4212 <= 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 4213 <= 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4214 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((3912 string) (raw))
mem: ((3912 integer) (raw)) => 26
mem: ((3938 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 4215 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4288 => ((10 character-address))
mem: ((10 character-address)): 4216 <= 4288
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4288 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 4212 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 4213 <= 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 4214 <= t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 4267
run: split-first/parse-instruction-trace/parse-traces/main 12: 4267 => ((6 string-address))
mem: ((6 string-address)): 4083 <= 4267
run: split-first/parse-instruction-trace/parse-traces/main 13: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 4200
mem: ((6 string-address)) => 4267
run: parse-instruction-trace/parse-traces/main 4: 4200 => ((4 string-address))
mem: ((4 string-address)): 4046 <= 4200
run: parse-instruction-trace/parse-traces/main 4: 4267 => ((5 string-address))
mem: ((5 string-address)): 4047 <= 4267
run: parse-instruction-trace/parse-traces/main 5: (((6 string-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((0 offset)))
run: parse-instruction-trace/parse-traces/main 5: 4072 => ((6 string-address-array-address-address))
mem: ((6 string-address-array-address-address)): 4048 <= 4072
run: parse-instruction-trace/parse-traces/main 6: (((6 string-address-array-address-address) (deref)) <- ((split)) ((4 string-address)) ((/ literal)))
mem: ((4 string-address)) => 4200
run: split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split/parse-instruction-trace/parse-traces/main 0: 4289 => ((default-space space-address))
run: split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4200 #\/)
run: split/parse-instruction-trace/parse-traces/main 1: 4200 => ((1 string-address))
mem: ((1 string-address)): 4291 <= 4200
run: split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (4200 #\/)
run: split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 4292 <= #\/
run: split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4200 integer) (raw)) => 4
run: split/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 4293 <= 4
run: split/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 4294 <= nil
run: split/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => nil
run: split/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((1 literal)))
run: split/parse-instruction-trace/parse-traces/main 8: 1 => ((6 integer))
mem: ((6 integer)): 4296 <= 1
run: split/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 4297 <= 0
run: split/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((7 integer)))
mem: ((1 string-address)) => 4200
mem: ((2 character)) => /
mem: ((7 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split/parse-instruction-trace/parse-traces/main 0: 4320 => ((default-space space-address))
run: find-next/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4200 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 1: 4200 => ((1 string-address))
mem: ((1 string-address)): 4322 <= 4200
run: find-next/split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (4200 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 4323 <= #\/
run: find-next/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4200 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 4324 <= 0
run: find-next/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4200 integer) (raw)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 4325 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4326 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((4200 string) (raw))
mem: ((4200 integer) (raw)) => 4
mem: ((4201 byte) (raw)) => m
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 4327 <= #\m
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4328 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 4324 <= 1
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4326 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((4200 string) (raw))
mem: ((4200 integer) (raw)) => 4
mem: ((4202 byte) (raw)) => a
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 4327 <= #\a
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4328 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 4324 <= 2
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4326 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((4200 string) (raw))
mem: ((4200 integer) (raw)) => 4
mem: ((4203 byte) (raw)) => i
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 4327 <= #\i
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4328 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 4324 <= 3
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4326 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((4200 string) (raw))
mem: ((4200 integer) (raw)) => 4
mem: ((4204 byte) (raw)) => n
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 4327 <= #\n
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4328 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 4324 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 4326 <= t
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: find-next/split/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 10: 4 => ((7 integer))
mem: ((7 integer)): 4297 <= 4
run: split/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((3 integer)))
mem: ((7 integer)) => 4
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 4298 <= t
run: split/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((3 offset)))
mem: ((8 boolean)) => t
run: split/parse-instruction-trace/parse-traces/main 16: (((5 string-address-array-address)) <- ((new)) ((string-address-array literal)) ((6 integer)))
mem: ((6 integer)) => 1
run: split/parse-instruction-trace/parse-traces/main 16: 4351 => ((5 string-address-array-address))
mem: ((5 string-address-array-address)): 4295 <= 4351
run: split/parse-instruction-trace/parse-traces/main 17: (((9 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 17: 0 => ((9 integer))
mem: ((9 integer)): 4299 <= 0
run: split/parse-instruction-trace/parse-traces/main 18: (((10 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 18: 0 => ((10 integer))
mem: ((10 integer)): 4300 <= 0
run: split/parse-instruction-trace/parse-traces/main 19: (((8 boolean)) <- ((greater-or-equal)) ((10 integer)) ((3 integer)))
mem: ((10 integer)) => 0
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 19: nil => ((8 boolean))
mem: ((8 boolean)): 4298 <= nil
run: split/parse-instruction-trace/parse-traces/main 20: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: split/parse-instruction-trace/parse-traces/main 21: (((11 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((10 integer)))
mem: ((1 string-address)) => 4200
mem: ((2 character)) => /
mem: ((10 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split/parse-instruction-trace/parse-traces/main 0: 4353 => ((default-space space-address))
run: find-next/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4200 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 1: 4200 => ((1 string-address))
mem: ((1 string-address)): 4355 <= 4200
run: find-next/split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (4200 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 4356 <= #\/
run: find-next/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4200 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 4357 <= 0
run: find-next/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4200 integer) (raw)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 4358 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4359 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((4200 string) (raw))
mem: ((4200 integer) (raw)) => 4
mem: ((4201 byte) (raw)) => m
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 4360 <= #\m
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4361 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 4357 <= 1
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4359 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((4200 string) (raw))
mem: ((4200 integer) (raw)) => 4
mem: ((4202 byte) (raw)) => a
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 4360 <= #\a
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4361 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 4357 <= 2
schedule: scheduling find-next/split/parse-instruction-trace/parse-traces/main for further processing
schedule: find-next/split/parse-instruction-trace/parse-traces/main
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4359 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((4200 string) (raw))
mem: ((4200 integer) (raw)) => 4
mem: ((4203 byte) (raw)) => i
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 4360 <= #\i
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4361 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 4357 <= 3
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4359 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((4200 string) (raw))
mem: ((4200 integer) (raw)) => 4
mem: ((4204 byte) (raw)) => n
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 4360 <= #\n
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4361 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 4357 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 4359 <= t
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: find-next/split/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 21: 4 => ((11 integer))
mem: ((11 integer)): 4301 <= 4
run: split/parse-instruction-trace/parse-traces/main 22: (((12 string-address-address)) <- ((index-address)) ((5 string-address-array-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 0
array-len: ((4351 string-address-array) (raw))
mem: ((4351 integer) (raw)) => 1
run: split/parse-instruction-trace/parse-traces/main 22: 4352 => ((12 string-address-address))
mem: ((12 string-address-address)): 4302 <= 4352
run: split/parse-instruction-trace/parse-traces/main 23: (((12 string-address-address) (deref)) <- ((string-copy)) ((1 string-address)) ((10 integer)) ((11 integer)))
mem: ((1 string-address)) => 4200
mem: ((10 integer)) => 0
mem: ((11 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 0: 4384 => ((default-space space-address))
run: string-copy/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4200 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 1: 4200 => ((1 string-address))
mem: ((1 string-address)): 4386 <= 4200
run: string-copy/split/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (4200 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 4387 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4200 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 4388 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4200 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 4389 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 0: 4415 => ((default-space space-address))
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (4 4)
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 1: 4 => ((1 integer))
mem: ((1 integer)): 4417 <= 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (4 4)
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 2: 4 => ((2 integer))
mem: ((2 integer)): 4418 <= 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 4
mem: ((2 integer)) => 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 4419 <= nil
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 5: 4 => ((3 integer))
mem: ((3 integer)): 4388 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 4
mem: ((2 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 6: 4 => ((4 integer))
mem: ((4 integer)): 4389 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 7: 4446 => ((5 string-address))
mem: ((5 string-address)): 4390 <= 4446
run: string-copy/split/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 4391 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 4392 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4393 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((4200 string) (raw))
mem: ((4200 integer) (raw)) => 4
mem: ((4201 byte) (raw)) => m
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 4394 <= #\m
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4446 string) (raw))
mem: ((4446 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 4447 => ((10 character-address))
mem: ((10 character-address)): 4395 <= 4447
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4447 <= #\m
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 4391 <= 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 4392 <= 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4393 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((4200 string) (raw))
mem: ((4200 integer) (raw)) => 4
mem: ((4202 byte) (raw)) => a
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 4394 <= #\a
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((4446 string) (raw))
mem: ((4446 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 4448 => ((10 character-address))
mem: ((10 character-address)): 4395 <= 4448
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4448 <= #\a
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 4391 <= 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 4392 <= 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4393 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((4200 string) (raw))
mem: ((4200 integer) (raw)) => 4
mem: ((4203 byte) (raw)) => i
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 4394 <= #\i
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((4446 string) (raw))
mem: ((4446 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 4449 => ((10 character-address))
mem: ((10 character-address)): 4395 <= 4449
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4449 <= #\i
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 4391 <= 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 4392 <= 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4393 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((4200 string) (raw))
mem: ((4200 integer) (raw)) => 4
mem: ((4204 byte) (raw)) => n
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 4394 <= #\n
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((4446 string) (raw))
mem: ((4446 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 4450 => ((10 character-address))
mem: ((10 character-address)): 4395 <= 4450
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4450 <= #\n
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 4391 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 4392 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 4393 <= t
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 4446
run: split/parse-instruction-trace/parse-traces/main 23: 4446 => ((12 string-address-address) (deref))
mem: ((12 string-address-address) (deref)): 4352 <= 4446
run: split/parse-instruction-trace/parse-traces/main 24: (((10 integer)) <- ((add)) ((11 integer)) ((1 literal)))
mem: ((11 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 24: 5 => ((10 integer))
mem: ((10 integer)): 4300 <= 5
run: split/parse-instruction-trace/parse-traces/main 25: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
mem: ((9 integer)) => 0
run: split/parse-instruction-trace/parse-traces/main 25: 1 => ((9 integer))
mem: ((9 integer)): 4299 <= 1
run: split/parse-instruction-trace/parse-traces/main 26: (((jump)) ((-8 offset)))
run: split/parse-instruction-trace/parse-traces/main 19: (((8 boolean)) <- ((greater-or-equal)) ((10 integer)) ((3 integer)))
mem: ((10 integer)) => 5
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 19: t => ((8 boolean))
mem: ((8 boolean)): 4298 <= t
run: split/parse-instruction-trace/parse-traces/main 20: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: split/parse-instruction-trace/parse-traces/main 27: (((reply)) ((5 string-address-array-address)))
mem: ((5 string-address-array-address)) => 4351
run: parse-instruction-trace/parse-traces/main 6: 4351 => ((6 string-address-array-address-address) (deref))
mem: ((6 string-address-array-address-address) (deref)): 4072 <= 4351
run: parse-instruction-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((1 offset)))
run: parse-instruction-trace/parse-traces/main 7: 4073 => ((7 string-address-address))
mem: ((7 string-address-address)): 4049 <= 4073
run: parse-instruction-trace/parse-traces/main 8: (((8 string-address)) <- ((new)) : )
run: parse-instruction-trace/parse-traces/main 8: 4451 => ((8 string-address))
mem: ((8 string-address)): 4050 <= 4451
run: parse-instruction-trace/parse-traces/main 9: (((7 string-address-address) (deref)) ((5 string-address)) <- ((split-first-at-substring)) ((5 string-address)) ((8 string-address)))
mem: ((5 string-address)) => 4267
mem: ((8 string-address)) => 4451
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4454 => ((default-space space-address))
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4267 4451)
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 4267 => ((1 string-address))
mem: ((1 string-address)): 4456 <= 4267
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (4267 4451)
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 4451 => ((2 string-address))
mem: ((2 string-address)): 4457 <= 4451
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4267 integer) (raw)) => 21
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 21 => ((3 integer))
mem: ((3 integer)): 4458 <= 21
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 21
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 4459 <= nil
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 4267
mem: ((2 string-address)) => 4451
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4485 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4267 4451 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 4267 => ((1 string-address))
mem: ((1 string-address)): 4487 <= 4267
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (4267 4451 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 4451 => ((2 string-address))
mem: ((2 string-address)): 4488 <= 4451
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4267 4451 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 4489 <= 0
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((4451 string) (raw))
mem: ((4451 integer) (raw)) => 2
mem: ((4452 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 4490 <= #\:
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4267 integer) (raw)) => 21
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 21 => ((5 integer))
mem: ((5 integer)): 4491 <= 21
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 21
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 4492 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 4267
mem: ((2 string-address)) => 4451
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4516 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4267 4451 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 4267 => ((1 string-address))
mem: ((1 string-address)): 4518 <= 4267
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (4267 4451 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 4451 => ((2 string-address))
mem: ((2 string-address)): 4519 <= 4451
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4267 4451 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 4520 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((4451 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 4521 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4267 integer) (raw)) => 21
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 21 => ((5 integer))
mem: ((5 integer)): 4522 <= 21
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 21
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 19 => ((5 integer))
mem: ((5 integer)): 4522 <= 19
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 19
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 4523 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 4524 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 4525 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4268 byte) (raw)) => 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\0 => ((9 character))
mem: ((9 character)): 4526 <= #\0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4451 string) (raw))
mem: ((4451 integer) (raw)) => 2
mem: ((4452 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 4527 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => 0
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 4528 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4493 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 4489 <= 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 4267
mem: ((4 character)) => :
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4547 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4267 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 4267 => ((1 string-address))
mem: ((1 string-address)): 4549 <= 4267
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (4267 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 4550 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4267 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 4551 <= 1
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4267 integer) (raw)) => 21
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 21 => ((4 integer))
mem: ((4 integer)): 4552 <= 21
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 21
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4553 <= nil
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4269 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 4554 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 4555 <= t
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: 1 => ((3 integer))
mem: ((3 integer)): 4489 <= 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 1
mem: ((5 integer)) => 21
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 4492 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 4267
mem: ((2 string-address)) => 4451
mem: ((3 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4578 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4267 4451 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 4267 => ((1 string-address))
mem: ((1 string-address)): 4580 <= 4267
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (4267 4451 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 4451 => ((2 string-address))
mem: ((2 string-address)): 4581 <= 4451
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4267 4451 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 4582 <= 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((4451 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 4583 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4267 integer) (raw)) => 21
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 21 => ((5 integer))
mem: ((5 integer)): 4584 <= 21
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 21
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 19 => ((5 integer))
mem: ((5 integer)): 4584 <= 19
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 1
mem: ((5 integer)) => 19
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 4585 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 4586 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 4587 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4269 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 4588 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4451 string) (raw))
mem: ((4451 integer) (raw)) => 2
mem: ((4452 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 4589 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 4590 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: 2 => ((3 integer))
mem: ((3 integer)): 4582 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 4586 <= 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 4587 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4270 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 4588 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((4451 string) (raw))
mem: ((4451 integer) (raw)) => 2
mem: ((4453 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 4589 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 4590 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: 3 => ((3 integer))
mem: ((3 integer)): 4582 <= 3
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 4586 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 4587 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 4493 <= t
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 1
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 1 => ((7 integer))
mem: ((7 integer)): 4462 <= 1
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 4267
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4609 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4267 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 4267 => ((1 string-address))
mem: ((1 string-address)): 4611 <= 4267
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (4267 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 4612 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4267 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 4613 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 21 => ((4 integer))
mem: ((4 integer)): 4614 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 21
mem: ((3 integer)) => 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4640 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (21 1)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 21 => ((1 integer))
mem: ((1 integer)): 4642 <= 21
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (21 1)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 1 => ((2 integer))
mem: ((2 integer)): 4643 <= 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 21
mem: ((2 integer)) => 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 4644 <= nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 1 => ((3 integer))
mem: ((3 integer)): 4613 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 1
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 1 => ((4 integer))
mem: ((4 integer)): 4614 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: 4671 => ((5 string-address))
mem: ((5 string-address)): 4615 <= 4671
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 4616 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 4617 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4618 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4268 byte) (raw)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\0 => ((9 character))
mem: ((9 character)): 4619 <= #\0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4671 string) (raw))
mem: ((4671 integer) (raw)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4672 => ((10 character-address))
mem: ((10 character-address)): 4620 <= 4672
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\0 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4672 <= #\0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 4616 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 4617 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 4618 <= t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 4671
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 4671 => ((5 string-address))
mem: ((5 string-address)): 4460 <= 4671
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((4451 integer) (raw)) => 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 4463 <= 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 1
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 12: 3 => ((7 integer))
mem: ((7 integer)): 4462 <= 3
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 4267
mem: ((7 integer)) => 3
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4673 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4267 3 21)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 4267 => ((1 string-address))
mem: ((1 string-address)): 4675 <= 4267
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (4267 3 21)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 4676 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4267 3 21)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 21 => ((3 integer))
mem: ((3 integer)): 4677 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4267 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 21 => ((4 integer))
mem: ((4 integer)): 4678 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 21
mem: ((3 integer)) => 21
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4704 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (21 21)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 21 => ((1 integer))
mem: ((1 integer)): 4706 <= 21
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (21 21)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 21 => ((2 integer))
mem: ((2 integer)): 4707 <= 21
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 21
mem: ((2 integer)) => 21
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 4708 <= nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 21 => ((3 integer))
mem: ((3 integer)): 4677 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 21
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 18 => ((4 integer))
mem: ((4 integer)): 4678 <= 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: 4735 => ((5 string-address))
mem: ((5 string-address)): 4679 <= 4735
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: 3 => ((6 integer))
mem: ((6 integer)): 4680 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 4681 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4271 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 4683 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4736 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4736
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4736 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 4680 <= 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 4681 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 4
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4272 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4683 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4737 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4737
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4737 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 5 => ((6 integer))
mem: ((6 integer)): 4680 <= 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 4681 <= 2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4273 byte) (raw)) => =
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 4683 <= #\=
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4738 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4738
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4738 <= #\=
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 4680 <= 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 4681 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4274 byte) (raw)) => >
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\> => ((9 character))
mem: ((9 character)): 4683 <= #\>
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4739 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4739
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => >
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\> => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4739 <= #\>
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 4680 <= 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 4681 <= 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4275 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4683 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4740 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4740
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4740 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 4680 <= 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 4681 <= 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4276 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 4683 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4741 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4741
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4741 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 4680 <= 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 4681 <= 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4277 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 4683 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4742 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4742
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4742 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 4680 <= 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 4681 <= 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4278 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 4683 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4743 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4743
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4743 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 4680 <= 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 4681 <= 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4279 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4683 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4744 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4744
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4744 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 4680 <= 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 4681 <= 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4280 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 4683 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4745 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4745
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4745 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 4680 <= 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 4681 <= 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4281 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 4683 <= #\n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4746 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4746
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4746 <= #\n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 4680 <= 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 4681 <= 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4282 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 4683 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4747 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4747
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4747 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 4680 <= 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 4681 <= 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4283 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 4683 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4748 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4748
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4748 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 4680 <= 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 4681 <= 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4284 byte) (raw)) => g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 4683 <= #\g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4749 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4749
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4749 <= #\g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 4680 <= 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 4681 <= 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4285 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 4683 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4750 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4750
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4750 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 4680 <= 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 4681 <= 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4286 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 4683 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4751 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4751
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4751 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 4680 <= 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 4681 <= 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4287 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 4683 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4752 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4752
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4752 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 4680 <= 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 4681 <= 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4682 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((4267 string) (raw))
mem: ((4267 integer) (raw)) => 21
mem: ((4288 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 4683 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((4735 string) (raw))
mem: ((4735 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4753 => ((10 character-address))
mem: ((10 character-address)): 4684 <= 4753
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4753 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 4680 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 4681 <= 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 4682 <= t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 4735
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4735 => ((6 string-address))
mem: ((6 string-address)): 4461 <= 4735
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 4671
mem: ((6 string-address)) => 4735
run: parse-instruction-trace/parse-traces/main 9: 4671 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 4073 <= 4671
run: parse-instruction-trace/parse-traces/main 9: 4735 => ((5 string-address))
mem: ((5 string-address)): 4047 <= 4735
run: parse-instruction-trace/parse-traces/main 10: (((9 string-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((2 offset)))
run: parse-instruction-trace/parse-traces/main 10: 4074 => ((9 string-address-address))
mem: ((9 string-address-address)): 4051 <= 4074
run: parse-instruction-trace/parse-traces/main 11: (((9 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 4735
run: parse-instruction-trace/parse-traces/main 11: 4735 => ((9 string-address-address) (deref))
mem: ((9 string-address-address) (deref)): 4074 <= 4735
run: parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 instruction-trace-address)))
mem: ((3 instruction-trace-address)) => 4072
run: parse-traces/main 18: 4072 => ((3 instruction-trace-address))
mem: ((3 instruction-trace-address)): 1311 <= 4072
run: parse-traces/main 19: (((2 buffer-address)) <- ((append)) ((2 buffer-address)) ((3 instruction-trace-address)))
mem: ((2 buffer-address)) => 1369
mem: ((3 instruction-trace-address)) => 4072
run: append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/parse-traces/main 0: 4754 => ((default-space space-address))
run: append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1369 4072)
run: append/parse-traces/main 1: 1369 => ((1 buffer-address))
mem: ((1 buffer-address)): 4756 <= 1369
run: append/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1369 4072)
run: append/parse-traces/main 2: 4072 => ((2 character))
mem: ((2 character)): 4757 <= 4072
run: append/parse-traces/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1369
run: buffer-full?/append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/parse-traces/main 0: 4785 => ((default-space space-address))
run: buffer-full?/append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1369)
run: buffer-full?/append/parse-traces/main 1: 1369 => ((1 buffer-address))
mem: ((1 buffer-address)): 4787 <= 1369
run: buffer-full?/append/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((1369 integer) (raw)) => 1
run: buffer-full?/append/parse-traces/main 2: 1 => ((2 integer))
mem: ((2 integer)): 4788 <= 1
run: buffer-full?/append/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1370 string-address) (raw)) => 1371
run: buffer-full?/append/parse-traces/main 3: 1371 => ((3 string-address))
mem: ((3 string-address)): 4789 <= 1371
run: buffer-full?/append/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1371 integer) (raw)) => 30
run: buffer-full?/append/parse-traces/main 4: 30 => ((4 integer))
mem: ((4 integer)): 4790 <= 30
run: buffer-full?/append/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 1
mem: ((4 integer)) => 30
run: buffer-full?/append/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4791 <= nil
run: buffer-full?/append/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 4758 <= nil
run: append/parse-traces/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/parse-traces/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/parse-traces/main 6: 1369 => ((4 integer-address))
mem: ((4 integer-address)): 4759 <= 1369
run: append/parse-traces/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1370 string-address) (raw)) => 1371
run: append/parse-traces/main 7: 1371 => ((5 string-address))
mem: ((5 string-address)): 4760 <= 1371
run: append/parse-traces/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 1
array-len: ((1371 string) (raw))
mem: ((1371 integer) (raw)) => 30
run: append/parse-traces/main 8: 1373 => ((6 byte-address))
mem: ((6 byte-address)): 4761 <= 1373
run: append/parse-traces/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 4072
run: append/parse-traces/main 9: 4072 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 1373 <= 4072
run: append/parse-traces/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 1
run: append/parse-traces/main 10: 2 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1369 <= 2
run: append/parse-traces/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 1369
run: parse-traces/main 19: 1369 => ((2 buffer-address))
mem: ((2 buffer-address)): 1310 <= 1369
run: parse-traces/main 20: (((jump)) ((-15 offset)))
run: parse-traces/main 6: next-line
run: parse-traces/main 7: (((6 boolean)) <- ((end-of-stream?)) ((1 stream-address)))
mem: ((1 stream-address)) => 1305
run: end-of-stream?/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: end-of-stream?/parse-traces/main 0: 4816 => ((default-space space-address))
run: end-of-stream?/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1305)
run: end-of-stream?/parse-traces/main 1: 1305 => ((1 stream-address))
mem: ((1 stream-address)): 4818 <= 1305
run: end-of-stream?/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 stream-address) (deref)) ((0 offset)))
mem: ((1305 integer) (raw)) => 102
run: end-of-stream?/parse-traces/main 2: 102 => ((2 integer))
mem: ((2 integer)): 4819 <= 102
run: end-of-stream?/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1306 string-address) (raw)) => 1031
run: end-of-stream?/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 4820 <= 1031
run: end-of-stream?/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: end-of-stream?/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 4821 <= 242
run: end-of-stream?/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 102
mem: ((4 integer)) => 242
run: end-of-stream?/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4822 <= nil
run: end-of-stream?/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: parse-traces/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1314 <= nil
run: parse-traces/main 8: (((jump-if)) ((6 boolean)) ((15 offset)))
mem: ((6 boolean)) => nil
run: parse-traces/main 9: (((7 string-address)) <- ((read-line)) ((1 stream-address)))
mem: ((1 stream-address)) => 1305
run: read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-line/parse-traces/main 0: 4847 => ((default-space space-address))
run: read-line/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1305)
run: read-line/parse-traces/main 1: 1305 => ((1 stream-address))
mem: ((1 stream-address)): 4849 <= 1305
run: read-line/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 stream-address) (deref)) ((0 offset)))
run: read-line/parse-traces/main 2: 1305 => ((2 integer-address))
mem: ((2 integer-address)): 4850 <= 1305
run: read-line/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1306 string-address) (raw)) => 1031
run: read-line/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 4851 <= 1031
run: read-line/parse-traces/main 4: (((4 integer)) <- ((find-next)) ((3 string-address)) ((
 literal)) ((2 integer-address) (deref)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 102
run: find-next/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/read-line/parse-traces/main 0: 4878 => ((default-space space-address))
run: find-next/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 #\newline 102)
run: find-next/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 4880 <= 1031
run: find-next/read-line/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1031 #\newline 102)
run: find-next/read-line/parse-traces/main 2: #\newline => ((2 character))
mem: ((2 character)): 4881 <= #\newline
run: find-next/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 #\newline 102)
run: find-next/read-line/parse-traces/main 3: 102 => ((3 integer))
mem: ((3 integer)): 4882 <= 102
run: find-next/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: find-next/read-line/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 4883 <= 242
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 102
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 102
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1134 byte) (raw)) => m
run: find-next/read-line/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 4885 <= #\m
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 102
run: find-next/read-line/parse-traces/main 10: 103 => ((3 integer))
mem: ((3 integer)): 4882 <= 103
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 103
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 103
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1135 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 4885 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 103
run: find-next/read-line/parse-traces/main 10: 104 => ((3 integer))
mem: ((3 integer)): 4882 <= 104
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 104
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 104
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1136 byte) (raw)) => m
run: find-next/read-line/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 4885 <= #\m
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 104
run: find-next/read-line/parse-traces/main 10: 105 => ((3 integer))
mem: ((3 integer)): 4882 <= 105
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 105
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 105
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1137 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 4885 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 105
run: find-next/read-line/parse-traces/main 10: 106 => ((3 integer))
mem: ((3 integer)): 4882 <= 106
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 106
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 106
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1138 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 4885 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 106
run: find-next/read-line/parse-traces/main 10: 107 => ((3 integer))
mem: ((3 integer)): 4882 <= 107
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 107
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 107
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1139 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 4885 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 107
run: find-next/read-line/parse-traces/main 10: 108 => ((3 integer))
mem: ((3 integer)): 4882 <= 108
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 108
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 108
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1140 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 4885 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 108
run: find-next/read-line/parse-traces/main 10: 109 => ((3 integer))
mem: ((3 integer)): 4882 <= 109
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 109
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 109
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1141 byte) (raw)) => 1
run: find-next/read-line/parse-traces/main 7: #\1 => ((6 byte))
mem: ((6 byte)): 4885 <= #\1
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 1
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 109
run: find-next/read-line/parse-traces/main 10: 110 => ((3 integer))
mem: ((3 integer)): 4882 <= 110
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 110
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 110
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1142 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 4885 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 110
run: find-next/read-line/parse-traces/main 10: 111 => ((3 integer))
mem: ((3 integer)): 4882 <= 111
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 111
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 111
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1143 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 4885 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 111
run: find-next/read-line/parse-traces/main 10: 112 => ((3 integer))
mem: ((3 integer)): 4882 <= 112
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 112
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 112
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1144 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 4885 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 112
run: find-next/read-line/parse-traces/main 10: 113 => ((3 integer))
mem: ((3 integer)): 4882 <= 113
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 113
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 113
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1145 byte) (raw)) => t
run: find-next/read-line/parse-traces/main 7: #\t => ((6 byte))
mem: ((6 byte)): 4885 <= #\t
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => t
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 113
run: find-next/read-line/parse-traces/main 10: 114 => ((3 integer))
mem: ((3 integer)): 4882 <= 114
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 114
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 114
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1146 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 4885 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 114
run: find-next/read-line/parse-traces/main 10: 115 => ((3 integer))
mem: ((3 integer)): 4882 <= 115
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 115
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 115
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1147 byte) (raw)) => g
run: find-next/read-line/parse-traces/main 7: #\g => ((6 byte))
mem: ((6 byte)): 4885 <= #\g
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => g
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 115
run: find-next/read-line/parse-traces/main 10: 116 => ((3 integer))
mem: ((3 integer)): 4882 <= 116
schedule: scheduling find-next/read-line/parse-traces/main for further processing
schedule: find-next/read-line/parse-traces/main
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 116
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 116
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1148 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 4885 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 116
run: find-next/read-line/parse-traces/main 10: 117 => ((3 integer))
mem: ((3 integer)): 4882 <= 117
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 117
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 117
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1149 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 4885 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 117
run: find-next/read-line/parse-traces/main 10: 118 => ((3 integer))
mem: ((3 integer)): 4882 <= 118
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 118
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 118
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1150 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 4885 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 118
run: find-next/read-line/parse-traces/main 10: 119 => ((3 integer))
mem: ((3 integer)): 4882 <= 119
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 119
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 119
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1151 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 4885 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 119
run: find-next/read-line/parse-traces/main 10: 120 => ((3 integer))
mem: ((3 integer)): 4882 <= 120
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 120
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 120
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1152 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 4885 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 120
run: find-next/read-line/parse-traces/main 10: 121 => ((3 integer))
mem: ((3 integer)): 4882 <= 121
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 121
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 121
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1153 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 4885 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 121
run: find-next/read-line/parse-traces/main 10: 122 => ((3 integer))
mem: ((3 integer)): 4882 <= 122
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 122
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 122
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1154 byte) (raw)) => 1
run: find-next/read-line/parse-traces/main 7: #\1 => ((6 byte))
mem: ((6 byte)): 4885 <= #\1
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 1
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 122
run: find-next/read-line/parse-traces/main 10: 123 => ((3 integer))
mem: ((3 integer)): 4882 <= 123
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 123
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 123
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1155 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 4885 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 123
run: find-next/read-line/parse-traces/main 10: 124 => ((3 integer))
mem: ((3 integer)): 4882 <= 124
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 124
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 124
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1156 byte) (raw)) => <
run: find-next/read-line/parse-traces/main 7: #\< => ((6 byte))
mem: ((6 byte)): 4885 <= #\<
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => <
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 124
run: find-next/read-line/parse-traces/main 10: 125 => ((3 integer))
mem: ((3 integer)): 4882 <= 125
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 125
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 125
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1157 byte) (raw)) => =
run: find-next/read-line/parse-traces/main 7: #\= => ((6 byte))
mem: ((6 byte)): 4885 <= #\=
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => =
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 125
run: find-next/read-line/parse-traces/main 10: 126 => ((3 integer))
mem: ((3 integer)): 4882 <= 126
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 126
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 126
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1158 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 4885 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 126
run: find-next/read-line/parse-traces/main 10: 127 => ((3 integer))
mem: ((3 integer)): 4882 <= 127
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 127
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 127
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1159 byte) (raw)) => 1
run: find-next/read-line/parse-traces/main 7: #\1 => ((6 byte))
mem: ((6 byte)): 4885 <= #\1
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 1
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4886 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 127
run: find-next/read-line/parse-traces/main 10: 128 => ((3 integer))
mem: ((3 integer)): 4882 <= 128
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 128
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4884 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 128
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1160 byte) (raw)) => 

run: find-next/read-line/parse-traces/main 7: #\newline => ((6 byte))
mem: ((6 byte)): 4885 <= #\newline
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 

mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 4886 <= t
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/read-line/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 128
run: read-line/parse-traces/main 4: 128 => ((4 integer))
mem: ((4 integer)): 4852 <= 128
run: read-line/parse-traces/main 5: (((5 string-address)) <- ((string-copy)) ((3 string-address)) ((2 integer-address) (deref)) ((4 integer)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 102
mem: ((4 integer)) => 128
run: string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/read-line/parse-traces/main 0: 4909 => ((default-space space-address))
run: string-copy/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 102 128)
run: string-copy/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 4911 <= 1031
run: string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1031 102 128)
run: string-copy/read-line/parse-traces/main 2: 102 => ((2 integer))
mem: ((2 integer)): 4912 <= 102
run: string-copy/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 102 128)
run: string-copy/read-line/parse-traces/main 3: 128 => ((3 integer))
mem: ((3 integer)): 4913 <= 128
run: string-copy/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: string-copy/read-line/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 4914 <= 242
run: string-copy/read-line/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 242
mem: ((3 integer)) => 128
run: min/string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/read-line/parse-traces/main 0: 4940 => ((default-space space-address))
run: min/string-copy/read-line/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (242 128)
run: min/string-copy/read-line/parse-traces/main 1: 242 => ((1 integer))
mem: ((1 integer)): 4942 <= 242
run: min/string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (242 128)
run: min/string-copy/read-line/parse-traces/main 2: 128 => ((2 integer))
mem: ((2 integer)): 4943 <= 128
run: min/string-copy/read-line/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 242
mem: ((2 integer)) => 128
run: min/string-copy/read-line/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 4944 <= nil
run: min/string-copy/read-line/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/read-line/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 128
run: string-copy/read-line/parse-traces/main 5: 128 => ((3 integer))
mem: ((3 integer)): 4913 <= 128
run: string-copy/read-line/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 128
mem: ((2 integer)) => 102
run: string-copy/read-line/parse-traces/main 6: 26 => ((4 integer))
mem: ((4 integer)): 4914 <= 26
run: string-copy/read-line/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 26
run: string-copy/read-line/parse-traces/main 7: 4971 => ((5 string-address))
mem: ((5 string-address)): 4915 <= 4971
run: string-copy/read-line/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 102
run: string-copy/read-line/parse-traces/main 8: 102 => ((6 integer))
mem: ((6 integer)): 4916 <= 102
run: string-copy/read-line/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/read-line/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 4917 <= 0
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 102
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 102
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1134 byte) (raw)) => m
run: string-copy/read-line/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 4919 <= #\m
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4972 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4972
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/read-line/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4972 <= #\m
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 102
run: string-copy/read-line/parse-traces/main 15: 103 => ((6 integer))
mem: ((6 integer)): 4916 <= 103
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/read-line/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 4917 <= 1
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 103
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 103
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1135 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 4919 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4973 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4973
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4973 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 103
run: string-copy/read-line/parse-traces/main 15: 104 => ((6 integer))
mem: ((6 integer)): 4916 <= 104
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/read-line/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 4917 <= 2
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 104
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 104
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1136 byte) (raw)) => m
run: string-copy/read-line/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 4919 <= #\m
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4974 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4974
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/read-line/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4974 <= #\m
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 104
run: string-copy/read-line/parse-traces/main 15: 105 => ((6 integer))
mem: ((6 integer)): 4916 <= 105
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/read-line/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 4917 <= 3
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 105
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 105
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1137 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 4919 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4975 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4975
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4975 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 105
run: string-copy/read-line/parse-traces/main 15: 106 => ((6 integer))
mem: ((6 integer)): 4916 <= 106
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/read-line/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 4917 <= 4
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 106
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 106
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1138 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4919 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4976 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4976
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4976 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 106
run: string-copy/read-line/parse-traces/main 15: 107 => ((6 integer))
mem: ((6 integer)): 4916 <= 107
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/read-line/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 4917 <= 5
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 107
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 107
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1139 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 4919 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4977 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4977
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4977 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 107
run: string-copy/read-line/parse-traces/main 15: 108 => ((6 integer))
mem: ((6 integer)): 4916 <= 108
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/read-line/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 4917 <= 6
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 108
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 108
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1140 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 4919 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4978 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4978
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4978 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 108
run: string-copy/read-line/parse-traces/main 15: 109 => ((6 integer))
mem: ((6 integer)): 4916 <= 109
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/read-line/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 4917 <= 7
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 109
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 109
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1141 byte) (raw)) => 1
run: string-copy/read-line/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 4919 <= #\1
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4979 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4979
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/read-line/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4979 <= #\1
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 109
run: string-copy/read-line/parse-traces/main 15: 110 => ((6 integer))
mem: ((6 integer)): 4916 <= 110
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/read-line/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 4917 <= 8
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 110
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 110
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1142 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4919 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4980 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4980
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4980 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 110
run: string-copy/read-line/parse-traces/main 15: 111 => ((6 integer))
mem: ((6 integer)): 4916 <= 111
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/read-line/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 4917 <= 9
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 111
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 111
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1143 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 4919 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4981 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4981
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4981 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 111
run: string-copy/read-line/parse-traces/main 15: 112 => ((6 integer))
mem: ((6 integer)): 4916 <= 112
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/read-line/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 4917 <= 10
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 112
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 112
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1144 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 4919 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4982 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4982
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4982 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 112
run: string-copy/read-line/parse-traces/main 15: 113 => ((6 integer))
mem: ((6 integer)): 4916 <= 113
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/read-line/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 4917 <= 11
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 113
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 113
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1145 byte) (raw)) => t
run: string-copy/read-line/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 4919 <= #\t
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4983 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4983
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/read-line/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4983 <= #\t
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 113
run: string-copy/read-line/parse-traces/main 15: 114 => ((6 integer))
mem: ((6 integer)): 4916 <= 114
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/read-line/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 4917 <= 12
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 114
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 114
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1146 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 4919 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4984 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4984
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4984 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 114
run: string-copy/read-line/parse-traces/main 15: 115 => ((6 integer))
mem: ((6 integer)): 4916 <= 115
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/read-line/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 4917 <= 13
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 115
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 115
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1147 byte) (raw)) => g
run: string-copy/read-line/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 4919 <= #\g
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4985 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4985
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/read-line/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4985 <= #\g
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 115
run: string-copy/read-line/parse-traces/main 15: 116 => ((6 integer))
mem: ((6 integer)): 4916 <= 116
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/read-line/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 4917 <= 14
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 116
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 116
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1148 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 4919 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4986 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4986
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4986 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 116
run: string-copy/read-line/parse-traces/main 15: 117 => ((6 integer))
mem: ((6 integer)): 4916 <= 117
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/read-line/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 4917 <= 15
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 117
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 117
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1149 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 4919 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4987 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4987
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4987 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 117
run: string-copy/read-line/parse-traces/main 15: 118 => ((6 integer))
mem: ((6 integer)): 4916 <= 118
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/read-line/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 4917 <= 16
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 118
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 118
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1150 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 4919 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4988 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4988
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4988 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 118
run: string-copy/read-line/parse-traces/main 15: 119 => ((6 integer))
mem: ((6 integer)): 4916 <= 119
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/read-line/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 4917 <= 17
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 119
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 119
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1151 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 4919 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4989 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4989
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4989 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 119
run: string-copy/read-line/parse-traces/main 15: 120 => ((6 integer))
mem: ((6 integer)): 4916 <= 120
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/read-line/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 4917 <= 18
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 120
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 120
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1152 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 4919 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4990 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4990
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4990 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 120
run: string-copy/read-line/parse-traces/main 15: 121 => ((6 integer))
mem: ((6 integer)): 4916 <= 121
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/read-line/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 4917 <= 19
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 121
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 121
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1153 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4919 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4991 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4991
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4991 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 121
run: string-copy/read-line/parse-traces/main 15: 122 => ((6 integer))
mem: ((6 integer)): 4916 <= 122
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/read-line/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 4917 <= 20
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 122
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 122
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1154 byte) (raw)) => 1
run: string-copy/read-line/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 4919 <= #\1
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4992 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4992
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/read-line/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4992 <= #\1
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 122
run: string-copy/read-line/parse-traces/main 15: 123 => ((6 integer))
mem: ((6 integer)): 4916 <= 123
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/read-line/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 4917 <= 21
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 123
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 123
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1155 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4919 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4993 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4993
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4993 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 123
run: string-copy/read-line/parse-traces/main 15: 124 => ((6 integer))
mem: ((6 integer)): 4916 <= 124
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/read-line/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 4917 <= 22
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 124
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 124
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1156 byte) (raw)) => <
run: string-copy/read-line/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 4919 <= #\<
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4994 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4994
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/read-line/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4994 <= #\<
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 124
run: string-copy/read-line/parse-traces/main 15: 125 => ((6 integer))
mem: ((6 integer)): 4916 <= 125
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/read-line/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 4917 <= 23
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 125
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 125
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1157 byte) (raw)) => =
run: string-copy/read-line/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 4919 <= #\=
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4995 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4995
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/read-line/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4995 <= #\=
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 125
run: string-copy/read-line/parse-traces/main 15: 126 => ((6 integer))
mem: ((6 integer)): 4916 <= 126
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/read-line/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 4917 <= 24
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 126
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 126
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1158 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4919 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4996 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4996
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4996 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 126
run: string-copy/read-line/parse-traces/main 15: 127 => ((6 integer))
mem: ((6 integer)): 4916 <= 127
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/read-line/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 4917 <= 25
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 127
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4918 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 127
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1159 byte) (raw)) => 1
run: string-copy/read-line/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 4919 <= #\1
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4997 => ((10 character-address))
mem: ((10 character-address)): 4920 <= 4997
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/read-line/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4997 <= #\1
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 127
run: string-copy/read-line/parse-traces/main 15: 128 => ((6 integer))
mem: ((6 integer)): 4916 <= 128
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/read-line/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 4917 <= 26
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 128
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 4918 <= t
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/read-line/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 4971
run: read-line/parse-traces/main 5: 4971 => ((5 string-address))
mem: ((5 string-address)): 4853 <= 4971
run: read-line/parse-traces/main 6: (((2 integer-address) (deref)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 128
run: read-line/parse-traces/main 6: 129 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1305 <= 129
run: read-line/parse-traces/main 7: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 4971
run: parse-traces/main 9: 4971 => ((7 string-address))
mem: ((7 string-address)): 1315 <= 4971
run: parse-traces/main 10: (((8 trace-address)) <- ((parse-trace)) ((7 string-address)))
mem: ((7 string-address)) => 4971
run: parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-trace/parse-traces/main 0: 4998 => ((default-space space-address))
run: parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4971)
run: parse-trace/parse-traces/main 1: 4971 => ((1 string-address))
mem: ((1 string-address)): 5000 <= 4971
run: parse-trace/parse-traces/main 2: (((2 trace-address)) <- ((new)) ((trace literal)))
run: parse-trace/parse-traces/main 2: 5029 => ((2 trace-address))
mem: ((2 trace-address)): 5001 <= 5029
run: parse-trace/parse-traces/main 3: (((3 string-address)) <- ((new)) : )
run: parse-trace/parse-traces/main 3: 5031 => ((3 string-address))
mem: ((3 string-address)): 5002 <= 5031
run: parse-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first-at-substring)) ((1 string-address)) ((3 string-address)))
mem: ((1 string-address)) => 4971
mem: ((3 string-address)) => 5031
run: split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-trace/parse-traces/main 0: 5034 => ((default-space space-address))
run: split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4971 5031)
run: split-first-at-substring/parse-trace/parse-traces/main 1: 4971 => ((1 string-address))
mem: ((1 string-address)): 5036 <= 4971
run: split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (4971 5031)
run: split-first-at-substring/parse-trace/parse-traces/main 2: 5031 => ((2 string-address))
mem: ((2 string-address)): 5037 <= 5031
run: split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4971 integer) (raw)) => 26
run: split-first-at-substring/parse-trace/parse-traces/main 3: 26 => ((3 integer))
mem: ((3 integer)): 5038 <= 26
run: split-first-at-substring/parse-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 26
run: split-first-at-substring/parse-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 5039 <= nil
run: split-first-at-substring/parse-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 4971
mem: ((2 string-address)) => 5031
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 5065 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4971 5031 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 4971 => ((1 string-address))
mem: ((1 string-address)): 5067 <= 4971
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (4971 5031 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 5031 => ((2 string-address))
mem: ((2 string-address)): 5068 <= 5031
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4971 5031 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 5069 <= 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((5031 string) (raw))
mem: ((5031 integer) (raw)) => 2
mem: ((5032 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 5070 <= #\:
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4971 integer) (raw)) => 26
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 26 => ((5 integer))
mem: ((5 integer)): 5071 <= 26
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 26
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 5072 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 4971
mem: ((2 string-address)) => 5031
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 5096 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4971 5031 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 4971 => ((1 string-address))
mem: ((1 string-address)): 5098 <= 4971
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (4971 5031 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 5031 => ((2 string-address))
mem: ((2 string-address)): 5099 <= 5031
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4971 5031 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 5100 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((5031 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 5101 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4971 integer) (raw)) => 26
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 26 => ((5 integer))
mem: ((5 integer)): 5102 <= 26
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 26
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 24 => ((5 integer))
mem: ((5 integer)): 5102 <= 24
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 24
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 5103 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 5104 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 5105 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4972 byte) (raw)) => m
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\m => ((9 character))
mem: ((9 character)): 5106 <= #\m
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((5031 string) (raw))
mem: ((5031 integer) (raw)) => 2
mem: ((5032 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 5107 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => m
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 5108 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5073 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 5069 <= 1
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 4971
mem: ((4 character)) => :
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 5127 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4971 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 4971 => ((1 string-address))
mem: ((1 string-address)): 5129 <= 4971
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (4971 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 5130 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4971 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 5131 <= 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4971 integer) (raw)) => 26
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 5132 <= 26
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 26
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5133 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4973 byte) (raw)) => e
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 5134 <= #\e
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5135 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 5131 <= 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 26
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5133 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4974 byte) (raw)) => m
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 5134 <= #\m
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5135 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 5131 <= 3
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 26
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5133 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4975 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 5134 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 5135 <= t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: 3 => ((3 integer))
mem: ((3 integer)): 5069 <= 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 26
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 5072 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 4971
mem: ((2 string-address)) => 5031
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 5158 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4971 5031 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 4971 => ((1 string-address))
mem: ((1 string-address)): 5160 <= 4971
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (4971 5031 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 5031 => ((2 string-address))
mem: ((2 string-address)): 5161 <= 5031
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4971 5031 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 5162 <= 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((5031 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 5163 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4971 integer) (raw)) => 26
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 26 => ((5 integer))
mem: ((5 integer)): 5164 <= 26
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 26
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 24 => ((5 integer))
mem: ((5 integer)): 5164 <= 24
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 24
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 5165 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 5166 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 5167 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4975 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 5168 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((5031 string) (raw))
mem: ((5031 integer) (raw)) => 2
mem: ((5032 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 5169 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 5170 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 4 => ((3 integer))
mem: ((3 integer)): 5162 <= 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 5166 <= 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 5167 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4976 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 5168 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((5031 string) (raw))
mem: ((5031 integer) (raw)) => 2
mem: ((5033 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 5169 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 5170 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 5 => ((3 integer))
mem: ((3 integer)): 5162 <= 5
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 5166 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 5167 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 5073 <= t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: split-first-at-substring/parse-trace/parse-traces/main 9: 3 => ((7 integer))
mem: ((7 integer)): 5042 <= 3
run: split-first-at-substring/parse-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 4971
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 5189 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4971 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 4971 => ((1 string-address))
mem: ((1 string-address)): 5191 <= 4971
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (4971 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 5192 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4971 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 5193 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4971 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 5194 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 5220 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (26 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 26 => ((1 integer))
mem: ((1 integer)): 5222 <= 26
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (26 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 5223 <= 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 26
mem: ((2 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 5224 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 3 => ((3 integer))
mem: ((3 integer)): 5193 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 3
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 3 => ((4 integer))
mem: ((4 integer)): 5194 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 5251 => ((5 string-address))
mem: ((5 string-address)): 5195 <= 5251
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 5196 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 5197 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5198 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4972 byte) (raw)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 5199 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((5251 string) (raw))
mem: ((5251 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5252 => ((10 character-address))
mem: ((10 character-address)): 5200 <= 5252
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5252 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 5196 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 5197 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5198 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4973 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 5199 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((5251 string) (raw))
mem: ((5251 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5253 => ((10 character-address))
mem: ((10 character-address)): 5200 <= 5253
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5253 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 5196 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 5197 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5198 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4974 byte) (raw)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 5199 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((5251 string) (raw))
mem: ((5251 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5254 => ((10 character-address))
mem: ((10 character-address)): 5200 <= 5254
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5254 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 5196 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 5197 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 5198 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 5251
run: split-first-at-substring/parse-trace/parse-traces/main 10: 5251 => ((5 string-address))
mem: ((5 string-address)): 5040 <= 5251
run: split-first-at-substring/parse-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((5031 integer) (raw)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 5043 <= 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 3
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: 5 => ((7 integer))
mem: ((7 integer)): 5042 <= 5
run: split-first-at-substring/parse-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 4971
mem: ((7 integer)) => 5
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 5255 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4971 5 26)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 4971 => ((1 string-address))
mem: ((1 string-address)): 5257 <= 4971
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (4971 5 26)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 5 => ((2 integer))
mem: ((2 integer)): 5258 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4971 5 26)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 26 => ((3 integer))
mem: ((3 integer)): 5259 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4971 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 5260 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 26
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 5286 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (26 26)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 26 => ((1 integer))
mem: ((1 integer)): 5288 <= 26
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (26 26)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 26 => ((2 integer))
mem: ((2 integer)): 5289 <= 26
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 26
mem: ((2 integer)) => 26
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 5290 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 26 => ((3 integer))
mem: ((3 integer)): 5259 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 26
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 21 => ((4 integer))
mem: ((4 integer)): 5260 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 5317 => ((5 string-address))
mem: ((5 string-address)): 5261 <= 5317
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 5 => ((6 integer))
mem: ((6 integer)): 5262 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 5263 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4977 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5265 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5318 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5318
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5318 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 5262 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 5263 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4978 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5265 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5319 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5319
schedule: scheduling string-copy/split-first-at-substring/parse-trace/parse-traces/main for further processing
schedule: string-copy/split-first-at-substring/parse-trace/parse-traces/main
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5319 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 5262 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 5263 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4979 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 5265 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5320 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5320
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5320 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 5262 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 5263 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4980 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5265 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5321 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5321
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5321 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 5262 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 5263 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4981 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 5265 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5322 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5322
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5322 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 5262 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 5263 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4982 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 5265 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5323 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5323
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5323 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 5262 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 5263 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4983 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 5265 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5324 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5324
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5324 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 5262 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 5263 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4984 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 5265 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5325 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5325
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5325 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 5262 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 5263 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4985 byte) (raw)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 5265 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5326 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5326
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5326 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 5262 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 5263 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4986 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 5265 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5327 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5327
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5327 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 5262 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 5263 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4987 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 5265 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5328 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5328
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5328 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 5262 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 5263 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4988 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5265 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5329 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5329
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5329 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 5262 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 5263 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4989 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5265 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5330 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5330
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5330 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 5262 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 5263 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4990 byte) (raw)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 5265 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5331 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5331
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5331 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 5262 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 5263 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4991 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5265 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5332 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5332
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5332 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 5262 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 5263 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4992 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 5265 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5333 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5333
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5333 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 5262 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 5263 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4993 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5265 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5334 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5334
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5334 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 5262 <= 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 5263 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4994 byte) (raw)) => <
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 5265 <= #\<
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5335 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5335
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5335 <= #\<
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 5262 <= 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 5263 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4995 byte) (raw)) => =
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 5265 <= #\=
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5336 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5336
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5336 <= #\=
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 5262 <= 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 5263 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4996 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5265 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5337 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5337
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5337 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 5262 <= 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 5263 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5264 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((4971 string) (raw))
mem: ((4971 integer) (raw)) => 26
mem: ((4997 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 5265 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((5317 string) (raw))
mem: ((5317 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5338 => ((10 character-address))
mem: ((10 character-address)): 5266 <= 5338
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5338 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 5262 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 5263 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 5264 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 5317
run: split-first-at-substring/parse-trace/parse-traces/main 13: 5317 => ((6 string-address))
mem: ((6 string-address)): 5041 <= 5317
run: split-first-at-substring/parse-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 5251
mem: ((6 string-address)) => 5317
run: parse-trace/parse-traces/main 4: 5251 => ((4 string-address))
mem: ((4 string-address)): 5003 <= 5251
run: parse-trace/parse-traces/main 4: 5317 => ((5 string-address))
mem: ((5 string-address)): 5004 <= 5317
run: parse-trace/parse-traces/main 5: (((6 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((0 offset)))
run: parse-trace/parse-traces/main 5: 5029 => ((6 string-address-address))
mem: ((6 string-address-address)): 5005 <= 5029
run: parse-trace/parse-traces/main 6: (((6 string-address-address) (deref)) <- ((copy)) ((4 string-address)))
mem: ((4 string-address)) => 5251
run: parse-trace/parse-traces/main 6: 5251 => ((6 string-address-address) (deref))
mem: ((6 string-address-address) (deref)): 5029 <= 5251
run: parse-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((1 offset)))
run: parse-trace/parse-traces/main 7: 5030 => ((7 string-address-address))
mem: ((7 string-address-address)): 5006 <= 5030
run: parse-trace/parse-traces/main 8: (((7 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 5317
run: parse-trace/parse-traces/main 8: 5317 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 5030 <= 5317
run: parse-trace/parse-traces/main 9: (((reply)) ((2 trace-address)))
mem: ((2 trace-address)) => 5029
run: parse-traces/main 10: 5029 => ((8 trace-address))
mem: ((8 trace-address)): 1316 <= 5029
run: parse-traces/main 11: (((9 string-address)) <- ((get)) ((8 trace-address) (deref)) ((0 offset)))
mem: ((5029 string-address) (raw)) => 5251
run: parse-traces/main 11: 5251 => ((9 string-address))
mem: ((9 string-address)): 1317 <= 5251
run: parse-traces/main 12: (((10 boolean)) <- ((string-equal)) ((9 string-address)) ((5 string-address) (const)))
mem: ((9 string-address)) => 5251
mem: ((5 string-address) (const)) => 1441
run: string-equal/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-equal/parse-traces/main 0: 5339 => ((default-space space-address))
run: string-equal/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (5251 1441)
run: string-equal/parse-traces/main 1: 5251 => ((1 string-address))
mem: ((1 string-address)): 5341 <= 5251
run: string-equal/parse-traces/main 2: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((5251 integer) (raw)) => 3
run: string-equal/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 5342 <= 3
run: string-equal/parse-traces/main 3: (((3 string-address)) <- ((next-input)))
arg: nil 1 (5251 1441)
run: string-equal/parse-traces/main 3: 1441 => ((3 string-address))
mem: ((3 string-address)): 5343 <= 1441
run: string-equal/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1441 integer) (raw)) => 3
run: string-equal/parse-traces/main 4: 3 => ((4 integer))
mem: ((4 integer)): 5344 <= 3
run: string-equal/parse-traces/main 5: (((5 boolean)) <- ((equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 3
mem: ((4 integer)) => 3
run: string-equal/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 5345 <= t
run: string-equal/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((1 offset)))
mem: ((5 boolean)) => t
run: string-equal/parse-traces/main 8: (((6 integer)) <- ((copy)) ((0 literal)))
run: string-equal/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 5346 <= 0
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 0
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 5347 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((5251 string) (raw))
mem: ((5251 integer) (raw)) => 3
mem: ((5252 byte) (raw)) => m
run: string-equal/parse-traces/main 11: #\m => ((8 byte))
mem: ((8 byte)): 5348 <= #\m
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((1441 string) (raw))
mem: ((1441 integer) (raw)) => 3
mem: ((1442 byte) (raw)) => r
run: string-equal/parse-traces/main 12: #\r => ((9 byte))
mem: ((9 byte)): 5349 <= #\r
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => m
mem: ((9 byte)) => r
run: string-equal/parse-traces/main 13: nil => ((10 boolean))
mem: ((10 boolean)): 5350 <= nil
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => nil
run: string-equal/parse-traces/main 15: (((reply)) ((nil literal)))
run: parse-traces/main 12: nil => ((10 boolean))
mem: ((10 boolean)): 1318 <= nil
run: parse-traces/main 13: (((jump-unless)) ((10 boolean)) ((7 offset)))
mem: ((10 boolean)) => nil
run: parse-traces/main 21: (((jump-unless)) ((3 instruction-trace-address)) ((-16 offset)))
mem: ((3 instruction-trace-address)) => 4072
run: parse-traces/main 22: (((4 buffer-address)) <- ((append)) ((4 buffer-address)) ((8 trace-address)))
mem: ((4 buffer-address)) => 4033
mem: ((8 trace-address)) => 5029
run: append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/parse-traces/main 0: 5370 => ((default-space space-address))
run: append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (4033 5029)
run: append/parse-traces/main 1: 4033 => ((1 buffer-address))
mem: ((1 buffer-address)): 5372 <= 4033
run: append/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (4033 5029)
run: append/parse-traces/main 2: 5029 => ((2 character))
mem: ((2 character)): 5373 <= 5029
run: append/parse-traces/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 4033
run: buffer-full?/append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/parse-traces/main 0: 5401 => ((default-space space-address))
run: buffer-full?/append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (4033)
run: buffer-full?/append/parse-traces/main 1: 4033 => ((1 buffer-address))
mem: ((1 buffer-address)): 5403 <= 4033
run: buffer-full?/append/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((4033 integer) (raw)) => 0
run: buffer-full?/append/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 5404 <= 0
run: buffer-full?/append/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((4034 string-address) (raw)) => 4035
run: buffer-full?/append/parse-traces/main 3: 4035 => ((3 string-address))
mem: ((3 string-address)): 5405 <= 4035
run: buffer-full?/append/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((4035 integer) (raw)) => 5
run: buffer-full?/append/parse-traces/main 4: 5 => ((4 integer))
mem: ((4 integer)): 5406 <= 5
run: buffer-full?/append/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 5
run: buffer-full?/append/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5407 <= nil
run: buffer-full?/append/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 5374 <= nil
run: append/parse-traces/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/parse-traces/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/parse-traces/main 6: 4033 => ((4 integer-address))
mem: ((4 integer-address)): 5375 <= 4033
run: append/parse-traces/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((4034 string-address) (raw)) => 4035
run: append/parse-traces/main 7: 4035 => ((5 string-address))
mem: ((5 string-address)): 5376 <= 4035
run: append/parse-traces/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((4035 string) (raw))
mem: ((4035 integer) (raw)) => 5
run: append/parse-traces/main 8: 4036 => ((6 byte-address))
mem: ((6 byte-address)): 5377 <= 4036
run: append/parse-traces/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 5029
run: append/parse-traces/main 9: 5029 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 4036 <= 5029
run: append/parse-traces/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/parse-traces/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 4033 <= 1
run: append/parse-traces/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 4033
run: parse-traces/main 22: 4033 => ((4 buffer-address))
mem: ((4 buffer-address)): 1312 <= 4033
run: parse-traces/main 23: (((jump)) ((-18 offset)))
run: parse-traces/main 6: next-line
run: parse-traces/main 7: (((6 boolean)) <- ((end-of-stream?)) ((1 stream-address)))
mem: ((1 stream-address)) => 1305
run: end-of-stream?/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: end-of-stream?/parse-traces/main 0: 5432 => ((default-space space-address))
run: end-of-stream?/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1305)
run: end-of-stream?/parse-traces/main 1: 1305 => ((1 stream-address))
mem: ((1 stream-address)): 5434 <= 1305
run: end-of-stream?/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 stream-address) (deref)) ((0 offset)))
mem: ((1305 integer) (raw)) => 129
run: end-of-stream?/parse-traces/main 2: 129 => ((2 integer))
mem: ((2 integer)): 5435 <= 129
run: end-of-stream?/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1306 string-address) (raw)) => 1031
run: end-of-stream?/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 5436 <= 1031
run: end-of-stream?/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: end-of-stream?/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 5437 <= 242
run: end-of-stream?/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 129
mem: ((4 integer)) => 242
run: end-of-stream?/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5438 <= nil
run: end-of-stream?/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: parse-traces/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1314 <= nil
run: parse-traces/main 8: (((jump-if)) ((6 boolean)) ((15 offset)))
mem: ((6 boolean)) => nil
run: parse-traces/main 9: (((7 string-address)) <- ((read-line)) ((1 stream-address)))
mem: ((1 stream-address)) => 1305
run: read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-line/parse-traces/main 0: 5463 => ((default-space space-address))
run: read-line/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1305)
run: read-line/parse-traces/main 1: 1305 => ((1 stream-address))
mem: ((1 stream-address)): 5465 <= 1305
run: read-line/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 stream-address) (deref)) ((0 offset)))
run: read-line/parse-traces/main 2: 1305 => ((2 integer-address))
mem: ((2 integer-address)): 5466 <= 1305
run: read-line/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1306 string-address) (raw)) => 1031
run: read-line/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 5467 <= 1031
run: read-line/parse-traces/main 4: (((4 integer)) <- ((find-next)) ((3 string-address)) ((
 literal)) ((2 integer-address) (deref)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 129
run: find-next/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/read-line/parse-traces/main 0: 5494 => ((default-space space-address))
run: find-next/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 #\newline 129)
run: find-next/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 5496 <= 1031
run: find-next/read-line/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1031 #\newline 129)
run: find-next/read-line/parse-traces/main 2: #\newline => ((2 character))
mem: ((2 character)): 5497 <= #\newline
run: find-next/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 #\newline 129)
run: find-next/read-line/parse-traces/main 3: 129 => ((3 integer))
mem: ((3 integer)): 5498 <= 129
run: find-next/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: find-next/read-line/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 5499 <= 242
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 129
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 129
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1161 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 5501 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 129
run: find-next/read-line/parse-traces/main 10: 130 => ((3 integer))
mem: ((3 integer)): 5498 <= 130
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 130
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 130
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1162 byte) (raw)) => u
run: find-next/read-line/parse-traces/main 7: #\u => ((6 byte))
mem: ((6 byte)): 5501 <= #\u
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => u
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 130
run: find-next/read-line/parse-traces/main 10: 131 => ((3 integer))
mem: ((3 integer)): 5498 <= 131
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 131
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 131
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1163 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 5501 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 131
run: find-next/read-line/parse-traces/main 10: 132 => ((3 integer))
mem: ((3 integer)): 5498 <= 132
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 132
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 132
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1164 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 5501 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 132
run: find-next/read-line/parse-traces/main 10: 133 => ((3 integer))
mem: ((3 integer)): 5498 <= 133
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 133
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 133
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1165 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 5501 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 133
run: find-next/read-line/parse-traces/main 10: 134 => ((3 integer))
mem: ((3 integer)): 5498 <= 134
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 134
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 134
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1166 byte) (raw)) => m
run: find-next/read-line/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 5501 <= #\m
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 134
run: find-next/read-line/parse-traces/main 10: 135 => ((3 integer))
mem: ((3 integer)): 5498 <= 135
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 135
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 135
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1167 byte) (raw)) => a
run: find-next/read-line/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 5501 <= #\a
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 135
run: find-next/read-line/parse-traces/main 10: 136 => ((3 integer))
mem: ((3 integer)): 5498 <= 136
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 136
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 136
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1168 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 5501 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 136
run: find-next/read-line/parse-traces/main 10: 137 => ((3 integer))
mem: ((3 integer)): 5498 <= 137
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 137
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 137
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1169 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 5501 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 137
run: find-next/read-line/parse-traces/main 10: 138 => ((3 integer))
mem: ((3 integer)): 5498 <= 138
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 138
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 138
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1170 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 5501 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 138
run: find-next/read-line/parse-traces/main 10: 139 => ((3 integer))
mem: ((3 integer)): 5498 <= 139
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 139
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 139
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1171 byte) (raw)) => 1
run: find-next/read-line/parse-traces/main 7: #\1 => ((6 byte))
mem: ((6 byte)): 5501 <= #\1
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 1
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 139
run: find-next/read-line/parse-traces/main 10: 140 => ((3 integer))
mem: ((3 integer)): 5498 <= 140
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 140
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 140
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1172 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 5501 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 140
run: find-next/read-line/parse-traces/main 10: 141 => ((3 integer))
mem: ((3 integer)): 5498 <= 141
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 141
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 141
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1173 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 5501 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 141
run: find-next/read-line/parse-traces/main 10: 142 => ((3 integer))
mem: ((3 integer)): 5498 <= 142
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 142
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 142
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1174 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 5501 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 142
run: find-next/read-line/parse-traces/main 10: 143 => ((3 integer))
mem: ((3 integer)): 5498 <= 143
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 143
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 143
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1175 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 5501 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 143
run: find-next/read-line/parse-traces/main 10: 144 => ((3 integer))
mem: ((3 integer)): 5498 <= 144
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 144
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 144
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1176 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 5501 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 144
run: find-next/read-line/parse-traces/main 10: 145 => ((3 integer))
mem: ((3 integer)): 5498 <= 145
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 145
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 145
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1177 byte) (raw)) => 2
run: find-next/read-line/parse-traces/main 7: #\2 => ((6 byte))
mem: ((6 byte)): 5501 <= #\2
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 2
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 145
run: find-next/read-line/parse-traces/main 10: 146 => ((3 integer))
mem: ((3 integer)): 5498 <= 146
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 146
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 146
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1178 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 5501 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 146
run: find-next/read-line/parse-traces/main 10: 147 => ((3 integer))
mem: ((3 integer)): 5498 <= 147
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 147
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 147
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1179 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 5501 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 147
run: find-next/read-line/parse-traces/main 10: 148 => ((3 integer))
mem: ((3 integer)): 5498 <= 148
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 148
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 148
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1180 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 5501 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 148
run: find-next/read-line/parse-traces/main 10: 149 => ((3 integer))
mem: ((3 integer)): 5498 <= 149
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 149
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 149
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1181 byte) (raw)) => t
run: find-next/read-line/parse-traces/main 7: #\t => ((6 byte))
mem: ((6 byte)): 5501 <= #\t
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => t
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 149
run: find-next/read-line/parse-traces/main 10: 150 => ((3 integer))
mem: ((3 integer)): 5498 <= 150
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 150
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 150
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1182 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 5501 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 150
run: find-next/read-line/parse-traces/main 10: 151 => ((3 integer))
mem: ((3 integer)): 5498 <= 151
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 151
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 151
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1183 byte) (raw)) => g
run: find-next/read-line/parse-traces/main 7: #\g => ((6 byte))
mem: ((6 byte)): 5501 <= #\g
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => g
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 151
run: find-next/read-line/parse-traces/main 10: 152 => ((3 integer))
mem: ((3 integer)): 5498 <= 152
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 152
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 152
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1184 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 5501 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 152
run: find-next/read-line/parse-traces/main 10: 153 => ((3 integer))
mem: ((3 integer)): 5498 <= 153
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 153
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 153
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1185 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 5501 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 153
run: find-next/read-line/parse-traces/main 10: 154 => ((3 integer))
mem: ((3 integer)): 5498 <= 154
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 154
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 154
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1186 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 5501 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 154
run: find-next/read-line/parse-traces/main 10: 155 => ((3 integer))
mem: ((3 integer)): 5498 <= 155
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 155
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 155
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1187 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 5501 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 155
run: find-next/read-line/parse-traces/main 10: 156 => ((3 integer))
mem: ((3 integer)): 5498 <= 156
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 156
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 156
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1188 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 5501 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 156
run: find-next/read-line/parse-traces/main 10: 157 => ((3 integer))
mem: ((3 integer)): 5498 <= 157
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 157
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 157
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1189 byte) (raw)) => <
run: find-next/read-line/parse-traces/main 7: #\< => ((6 byte))
mem: ((6 byte)): 5501 <= #\<
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => <
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 157
run: find-next/read-line/parse-traces/main 10: 158 => ((3 integer))
mem: ((3 integer)): 5498 <= 158
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 158
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 158
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1190 byte) (raw)) => -
run: find-next/read-line/parse-traces/main 7: #\- => ((6 byte))
mem: ((6 byte)): 5501 <= #\-
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => -
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 158
run: find-next/read-line/parse-traces/main 10: 159 => ((3 integer))
mem: ((3 integer)): 5498 <= 159
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 159
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 159
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1191 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 5501 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 159
run: find-next/read-line/parse-traces/main 10: 160 => ((3 integer))
mem: ((3 integer)): 5498 <= 160
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 160
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 160
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1192 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 5501 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 160
run: find-next/read-line/parse-traces/main 10: 161 => ((3 integer))
mem: ((3 integer)): 5498 <= 161
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 161
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 161
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1193 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 5501 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 161
run: find-next/read-line/parse-traces/main 10: 162 => ((3 integer))
mem: ((3 integer)): 5498 <= 162
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 162
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 162
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1194 byte) (raw)) => c
run: find-next/read-line/parse-traces/main 7: #\c => ((6 byte))
mem: ((6 byte)): 5501 <= #\c
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => c
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 162
run: find-next/read-line/parse-traces/main 10: 163 => ((3 integer))
mem: ((3 integer)): 5498 <= 163
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 163
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 163
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1195 byte) (raw)) => o
run: find-next/read-line/parse-traces/main 7: #\o => ((6 byte))
mem: ((6 byte)): 5501 <= #\o
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => o
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 163
run: find-next/read-line/parse-traces/main 10: 164 => ((3 integer))
mem: ((3 integer)): 5498 <= 164
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 164
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 164
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1196 byte) (raw)) => p
run: find-next/read-line/parse-traces/main 7: #\p => ((6 byte))
mem: ((6 byte)): 5501 <= #\p
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => p
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 164
run: find-next/read-line/parse-traces/main 10: 165 => ((3 integer))
mem: ((3 integer)): 5498 <= 165
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 165
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 165
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1197 byte) (raw)) => y
run: find-next/read-line/parse-traces/main 7: #\y => ((6 byte))
mem: ((6 byte)): 5501 <= #\y
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => y
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 165
run: find-next/read-line/parse-traces/main 10: 166 => ((3 integer))
mem: ((3 integer)): 5498 <= 166
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 166
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 166
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1198 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 5501 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 166
run: find-next/read-line/parse-traces/main 10: 167 => ((3 integer))
mem: ((3 integer)): 5498 <= 167
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 167
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 167
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1199 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 5501 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 167
run: find-next/read-line/parse-traces/main 10: 168 => ((3 integer))
mem: ((3 integer)): 5498 <= 168
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 168
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
schedule: scheduling find-next/read-line/parse-traces/main for further processing
schedule: find-next/read-line/parse-traces/main
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 168
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1200 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 5501 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 168
run: find-next/read-line/parse-traces/main 10: 169 => ((3 integer))
mem: ((3 integer)): 5498 <= 169
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 169
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 169
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1201 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 5501 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 169
run: find-next/read-line/parse-traces/main 10: 170 => ((3 integer))
mem: ((3 integer)): 5498 <= 170
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 170
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 170
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1202 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 5501 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 170
run: find-next/read-line/parse-traces/main 10: 171 => ((3 integer))
mem: ((3 integer)): 5498 <= 171
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 171
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 171
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1203 byte) (raw)) => 3
run: find-next/read-line/parse-traces/main 7: #\3 => ((6 byte))
mem: ((6 byte)): 5501 <= #\3
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 3
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 171
run: find-next/read-line/parse-traces/main 10: 172 => ((3 integer))
mem: ((3 integer)): 5498 <= 172
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 172
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 172
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1204 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 5501 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 172
run: find-next/read-line/parse-traces/main 10: 173 => ((3 integer))
mem: ((3 integer)): 5498 <= 173
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 173
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 173
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1205 byte) (raw)) => l
run: find-next/read-line/parse-traces/main 7: #\l => ((6 byte))
mem: ((6 byte)): 5501 <= #\l
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => l
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 173
run: find-next/read-line/parse-traces/main 10: 174 => ((3 integer))
mem: ((3 integer)): 5498 <= 174
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 174
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 174
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1206 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 5501 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 174
run: find-next/read-line/parse-traces/main 10: 175 => ((3 integer))
mem: ((3 integer)): 5498 <= 175
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 175
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 175
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1207 byte) (raw)) => t
run: find-next/read-line/parse-traces/main 7: #\t => ((6 byte))
mem: ((6 byte)): 5501 <= #\t
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => t
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 175
run: find-next/read-line/parse-traces/main 10: 176 => ((3 integer))
mem: ((3 integer)): 5498 <= 176
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 176
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 176
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1208 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 5501 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 176
run: find-next/read-line/parse-traces/main 10: 177 => ((3 integer))
mem: ((3 integer)): 5498 <= 177
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 177
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 177
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1209 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 5501 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 177
run: find-next/read-line/parse-traces/main 10: 178 => ((3 integer))
mem: ((3 integer)): 5498 <= 178
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 178
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 178
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1210 byte) (raw)) => a
run: find-next/read-line/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 5501 <= #\a
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 178
run: find-next/read-line/parse-traces/main 10: 179 => ((3 integer))
mem: ((3 integer)): 5498 <= 179
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 179
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 179
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1211 byte) (raw)) => l
run: find-next/read-line/parse-traces/main 7: #\l => ((6 byte))
mem: ((6 byte)): 5501 <= #\l
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => l
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 179
run: find-next/read-line/parse-traces/main 10: 180 => ((3 integer))
mem: ((3 integer)): 5498 <= 180
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 180
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 180
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1212 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 5501 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 180
run: find-next/read-line/parse-traces/main 10: 181 => ((3 integer))
mem: ((3 integer)): 5498 <= 181
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 181
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 181
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1213 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 5501 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 181
run: find-next/read-line/parse-traces/main 10: 182 => ((3 integer))
mem: ((3 integer)): 5498 <= 182
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 182
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 182
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1214 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 5501 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5502 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 182
run: find-next/read-line/parse-traces/main 10: 183 => ((3 integer))
mem: ((3 integer)): 5498 <= 183
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 183
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5500 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 183
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1215 byte) (raw)) => 

run: find-next/read-line/parse-traces/main 7: #\newline => ((6 byte))
mem: ((6 byte)): 5501 <= #\newline
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 

mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 5502 <= t
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/read-line/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 183
run: read-line/parse-traces/main 4: 183 => ((4 integer))
mem: ((4 integer)): 5468 <= 183
run: read-line/parse-traces/main 5: (((5 string-address)) <- ((string-copy)) ((3 string-address)) ((2 integer-address) (deref)) ((4 integer)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 129
mem: ((4 integer)) => 183
run: string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/read-line/parse-traces/main 0: 5525 => ((default-space space-address))
run: string-copy/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 129 183)
run: string-copy/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 5527 <= 1031
run: string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1031 129 183)
run: string-copy/read-line/parse-traces/main 2: 129 => ((2 integer))
mem: ((2 integer)): 5528 <= 129
run: string-copy/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 129 183)
run: string-copy/read-line/parse-traces/main 3: 183 => ((3 integer))
mem: ((3 integer)): 5529 <= 183
run: string-copy/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: string-copy/read-line/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 5530 <= 242
run: string-copy/read-line/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 242
mem: ((3 integer)) => 183
run: min/string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/read-line/parse-traces/main 0: 5556 => ((default-space space-address))
run: min/string-copy/read-line/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (242 183)
run: min/string-copy/read-line/parse-traces/main 1: 242 => ((1 integer))
mem: ((1 integer)): 5558 <= 242
run: min/string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (242 183)
run: min/string-copy/read-line/parse-traces/main 2: 183 => ((2 integer))
mem: ((2 integer)): 5559 <= 183
run: min/string-copy/read-line/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 242
mem: ((2 integer)) => 183
run: min/string-copy/read-line/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 5560 <= nil
run: min/string-copy/read-line/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/read-line/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 183
run: string-copy/read-line/parse-traces/main 5: 183 => ((3 integer))
mem: ((3 integer)): 5529 <= 183
run: string-copy/read-line/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 183
mem: ((2 integer)) => 129
run: string-copy/read-line/parse-traces/main 6: 54 => ((4 integer))
mem: ((4 integer)): 5530 <= 54
run: string-copy/read-line/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 54
run: string-copy/read-line/parse-traces/main 7: 5587 => ((5 string-address))
mem: ((5 string-address)): 5531 <= 5587
run: string-copy/read-line/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 129
run: string-copy/read-line/parse-traces/main 8: 129 => ((6 integer))
mem: ((6 integer)): 5532 <= 129
run: string-copy/read-line/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/read-line/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 5533 <= 0
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 129
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 129
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1161 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 5535 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5588 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5588
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5588 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 129
run: string-copy/read-line/parse-traces/main 15: 130 => ((6 integer))
mem: ((6 integer)): 5532 <= 130
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/read-line/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 5533 <= 1
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 130
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 130
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1162 byte) (raw)) => u
run: string-copy/read-line/parse-traces/main 12: #\u => ((9 character))
mem: ((9 character)): 5535 <= #\u
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5589 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5589
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => u
run: string-copy/read-line/parse-traces/main 14: #\u => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5589 <= #\u
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 130
run: string-copy/read-line/parse-traces/main 15: 131 => ((6 integer))
mem: ((6 integer)): 5532 <= 131
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/read-line/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 5533 <= 2
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 131
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 131
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1163 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 5535 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5590 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5590
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5590 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 131
run: string-copy/read-line/parse-traces/main 15: 132 => ((6 integer))
mem: ((6 integer)): 5532 <= 132
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/read-line/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 5533 <= 3
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 132
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 132
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1164 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 5535 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5591 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5591
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5591 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 132
run: string-copy/read-line/parse-traces/main 15: 133 => ((6 integer))
mem: ((6 integer)): 5532 <= 133
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/read-line/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 5533 <= 4
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 133
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 133
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1165 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5535 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5592 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5592
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5592 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 133
run: string-copy/read-line/parse-traces/main 15: 134 => ((6 integer))
mem: ((6 integer)): 5532 <= 134
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/read-line/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 5533 <= 5
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 134
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 134
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1166 byte) (raw)) => m
run: string-copy/read-line/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 5535 <= #\m
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5593 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5593
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/read-line/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5593 <= #\m
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 134
run: string-copy/read-line/parse-traces/main 15: 135 => ((6 integer))
mem: ((6 integer)): 5532 <= 135
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/read-line/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 5533 <= 6
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 135
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 135
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1167 byte) (raw)) => a
run: string-copy/read-line/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 5535 <= #\a
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5594 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5594
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/read-line/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5594 <= #\a
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 135
run: string-copy/read-line/parse-traces/main 15: 136 => ((6 integer))
mem: ((6 integer)): 5532 <= 136
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/read-line/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 5533 <= 7
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 136
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 136
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1168 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 5535 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5595 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5595
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5595 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 136
run: string-copy/read-line/parse-traces/main 15: 137 => ((6 integer))
mem: ((6 integer)): 5532 <= 137
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/read-line/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 5533 <= 8
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 137
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 137
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1169 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 5535 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5596 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5596
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5596 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 137
run: string-copy/read-line/parse-traces/main 15: 138 => ((6 integer))
mem: ((6 integer)): 5532 <= 138
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/read-line/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 5533 <= 9
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 138
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 138
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1170 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5535 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5597 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5597
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5597 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 138
run: string-copy/read-line/parse-traces/main 15: 139 => ((6 integer))
mem: ((6 integer)): 5532 <= 139
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/read-line/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 5533 <= 10
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 139
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 139
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1171 byte) (raw)) => 1
run: string-copy/read-line/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 5535 <= #\1
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5598 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5598
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/read-line/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5598 <= #\1
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 139
run: string-copy/read-line/parse-traces/main 15: 140 => ((6 integer))
mem: ((6 integer)): 5532 <= 140
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/read-line/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 5533 <= 11
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 140
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 140
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1172 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 5535 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5599 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5599
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5599 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 140
run: string-copy/read-line/parse-traces/main 15: 141 => ((6 integer))
mem: ((6 integer)): 5532 <= 141
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/read-line/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 5533 <= 12
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 141
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 141
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1173 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5535 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5600 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5600
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5600 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 141
run: string-copy/read-line/parse-traces/main 15: 142 => ((6 integer))
mem: ((6 integer)): 5532 <= 142
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/read-line/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 5533 <= 13
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 142
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 142
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1174 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5535 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5601 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5601
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5601 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 142
run: string-copy/read-line/parse-traces/main 15: 143 => ((6 integer))
mem: ((6 integer)): 5532 <= 143
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/read-line/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 5533 <= 14
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 143
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 143
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1175 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5535 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5602 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5602
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5602 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 143
run: string-copy/read-line/parse-traces/main 15: 144 => ((6 integer))
mem: ((6 integer)): 5532 <= 144
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/read-line/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 5533 <= 15
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 144
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 144
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1176 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5535 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5603 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5603
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5603 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 144
run: string-copy/read-line/parse-traces/main 15: 145 => ((6 integer))
mem: ((6 integer)): 5532 <= 145
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/read-line/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 5533 <= 16
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 145
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 145
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1177 byte) (raw)) => 2
run: string-copy/read-line/parse-traces/main 12: #\2 => ((9 character))
mem: ((9 character)): 5535 <= #\2
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5604 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5604
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 2
run: string-copy/read-line/parse-traces/main 14: #\2 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5604 <= #\2
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 145
run: string-copy/read-line/parse-traces/main 15: 146 => ((6 integer))
mem: ((6 integer)): 5532 <= 146
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/read-line/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 5533 <= 17
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 146
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 146
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1178 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5535 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5605 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5605
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5605 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 146
run: string-copy/read-line/parse-traces/main 15: 147 => ((6 integer))
mem: ((6 integer)): 5532 <= 147
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/read-line/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 5533 <= 18
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 147
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 147
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1179 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 5535 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5606 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5606
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5606 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 147
run: string-copy/read-line/parse-traces/main 15: 148 => ((6 integer))
mem: ((6 integer)): 5532 <= 148
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/read-line/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 5533 <= 19
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 148
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 148
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1180 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 5535 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5607 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5607
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5607 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 148
run: string-copy/read-line/parse-traces/main 15: 149 => ((6 integer))
mem: ((6 integer)): 5532 <= 149
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/read-line/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 5533 <= 20
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 149
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 149
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1181 byte) (raw)) => t
run: string-copy/read-line/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 5535 <= #\t
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5608 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5608
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/read-line/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5608 <= #\t
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 149
run: string-copy/read-line/parse-traces/main 15: 150 => ((6 integer))
mem: ((6 integer)): 5532 <= 150
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/read-line/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 5533 <= 21
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 150
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 150
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1182 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 5535 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5609 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5609
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5609 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 150
run: string-copy/read-line/parse-traces/main 15: 151 => ((6 integer))
mem: ((6 integer)): 5532 <= 151
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/read-line/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 5533 <= 22
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 151
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 151
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1183 byte) (raw)) => g
run: string-copy/read-line/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 5535 <= #\g
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5610 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5610
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/read-line/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5610 <= #\g
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 151
run: string-copy/read-line/parse-traces/main 15: 152 => ((6 integer))
mem: ((6 integer)): 5532 <= 152
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/read-line/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 5533 <= 23
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 152
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 152
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1184 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 5535 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5611 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5611
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5611 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 152
run: string-copy/read-line/parse-traces/main 15: 153 => ((6 integer))
mem: ((6 integer)): 5532 <= 153
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/read-line/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 5533 <= 24
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 153
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 153
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1185 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 5535 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5612 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5612
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5612 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 153
run: string-copy/read-line/parse-traces/main 15: 154 => ((6 integer))
mem: ((6 integer)): 5532 <= 154
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/read-line/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 5533 <= 25
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 154
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 154
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1186 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5535 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5613 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5613
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5613 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 154
run: string-copy/read-line/parse-traces/main 15: 155 => ((6 integer))
mem: ((6 integer)): 5532 <= 155
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/read-line/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 5533 <= 26
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 155
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 155
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1187 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5535 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 26
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5614 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5614
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5614 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 155
run: string-copy/read-line/parse-traces/main 15: 156 => ((6 integer))
mem: ((6 integer)): 5532 <= 156
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 26
run: string-copy/read-line/parse-traces/main 16: 27 => ((7 integer))
mem: ((7 integer)): 5533 <= 27
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 156
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 156
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1188 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5535 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 27
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5615 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5615
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5615 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 156
run: string-copy/read-line/parse-traces/main 15: 157 => ((6 integer))
mem: ((6 integer)): 5532 <= 157
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 27
run: string-copy/read-line/parse-traces/main 16: 28 => ((7 integer))
mem: ((7 integer)): 5533 <= 28
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 157
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 157
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1189 byte) (raw)) => <
run: string-copy/read-line/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 5535 <= #\<
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 28
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5616 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5616
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/read-line/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5616 <= #\<
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 157
run: string-copy/read-line/parse-traces/main 15: 158 => ((6 integer))
mem: ((6 integer)): 5532 <= 158
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 28
run: string-copy/read-line/parse-traces/main 16: 29 => ((7 integer))
mem: ((7 integer)): 5533 <= 29
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 158
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 158
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1190 byte) (raw)) => -
run: string-copy/read-line/parse-traces/main 12: #\- => ((9 character))
mem: ((9 character)): 5535 <= #\-
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 29
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5617 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5617
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => -
run: string-copy/read-line/parse-traces/main 14: #\- => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5617 <= #\-
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 158
run: string-copy/read-line/parse-traces/main 15: 159 => ((6 integer))
mem: ((6 integer)): 5532 <= 159
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 29
run: string-copy/read-line/parse-traces/main 16: 30 => ((7 integer))
mem: ((7 integer)): 5533 <= 30
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 159
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 159
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1191 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5535 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 30
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5618 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5618
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5618 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 159
run: string-copy/read-line/parse-traces/main 15: 160 => ((6 integer))
mem: ((6 integer)): 5532 <= 160
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 30
run: string-copy/read-line/parse-traces/main 16: 31 => ((7 integer))
mem: ((7 integer)): 5533 <= 31
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 160
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 160
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1192 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5535 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 31
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5619 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5619
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5619 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 160
run: string-copy/read-line/parse-traces/main 15: 161 => ((6 integer))
mem: ((6 integer)): 5532 <= 161
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 31
run: string-copy/read-line/parse-traces/main 16: 32 => ((7 integer))
mem: ((7 integer)): 5533 <= 32
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 161
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 161
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1193 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5535 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 32
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5620 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5620
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5620 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 161
run: string-copy/read-line/parse-traces/main 15: 162 => ((6 integer))
mem: ((6 integer)): 5532 <= 162
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 32
run: string-copy/read-line/parse-traces/main 16: 33 => ((7 integer))
mem: ((7 integer)): 5533 <= 33
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 162
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 162
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1194 byte) (raw)) => c
run: string-copy/read-line/parse-traces/main 12: #\c => ((9 character))
mem: ((9 character)): 5535 <= #\c
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 33
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5621 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5621
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => c
run: string-copy/read-line/parse-traces/main 14: #\c => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5621 <= #\c
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 162
run: string-copy/read-line/parse-traces/main 15: 163 => ((6 integer))
mem: ((6 integer)): 5532 <= 163
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 33
run: string-copy/read-line/parse-traces/main 16: 34 => ((7 integer))
mem: ((7 integer)): 5533 <= 34
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 163
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 163
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1195 byte) (raw)) => o
run: string-copy/read-line/parse-traces/main 12: #\o => ((9 character))
mem: ((9 character)): 5535 <= #\o
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 34
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5622 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5622
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => o
run: string-copy/read-line/parse-traces/main 14: #\o => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5622 <= #\o
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 163
run: string-copy/read-line/parse-traces/main 15: 164 => ((6 integer))
mem: ((6 integer)): 5532 <= 164
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 34
run: string-copy/read-line/parse-traces/main 16: 35 => ((7 integer))
mem: ((7 integer)): 5533 <= 35
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 164
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 164
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1196 byte) (raw)) => p
run: string-copy/read-line/parse-traces/main 12: #\p => ((9 character))
mem: ((9 character)): 5535 <= #\p
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 35
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5623 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5623
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => p
run: string-copy/read-line/parse-traces/main 14: #\p => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5623 <= #\p
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 164
run: string-copy/read-line/parse-traces/main 15: 165 => ((6 integer))
mem: ((6 integer)): 5532 <= 165
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 35
run: string-copy/read-line/parse-traces/main 16: 36 => ((7 integer))
mem: ((7 integer)): 5533 <= 36
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 165
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 165
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1197 byte) (raw)) => y
run: string-copy/read-line/parse-traces/main 12: #\y => ((9 character))
mem: ((9 character)): 5535 <= #\y
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 36
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5624 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5624
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => y
run: string-copy/read-line/parse-traces/main 14: #\y => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5624 <= #\y
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 165
run: string-copy/read-line/parse-traces/main 15: 166 => ((6 integer))
mem: ((6 integer)): 5532 <= 166
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 36
run: string-copy/read-line/parse-traces/main 16: 37 => ((7 integer))
mem: ((7 integer)): 5533 <= 37
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 166
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 166
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1198 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5535 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 37
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5625 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5625
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5625 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 166
run: string-copy/read-line/parse-traces/main 15: 167 => ((6 integer))
mem: ((6 integer)): 5532 <= 167
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 37
run: string-copy/read-line/parse-traces/main 16: 38 => ((7 integer))
mem: ((7 integer)): 5533 <= 38
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 167
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 167
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1199 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5535 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 38
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5626 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5626
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5626 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 167
run: string-copy/read-line/parse-traces/main 15: 168 => ((6 integer))
mem: ((6 integer)): 5532 <= 168
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 38
run: string-copy/read-line/parse-traces/main 16: 39 => ((7 integer))
mem: ((7 integer)): 5533 <= 39
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 168
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 168
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1200 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5535 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 39
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5627 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5627
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5627 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 168
run: string-copy/read-line/parse-traces/main 15: 169 => ((6 integer))
mem: ((6 integer)): 5532 <= 169
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 39
run: string-copy/read-line/parse-traces/main 16: 40 => ((7 integer))
mem: ((7 integer)): 5533 <= 40
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 169
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 169
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1201 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5535 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 40
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5628 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5628
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5628 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 169
run: string-copy/read-line/parse-traces/main 15: 170 => ((6 integer))
mem: ((6 integer)): 5532 <= 170
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 40
run: string-copy/read-line/parse-traces/main 16: 41 => ((7 integer))
mem: ((7 integer)): 5533 <= 41
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 170
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 170
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1202 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5535 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 41
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5629 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5629
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5629 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 170
run: string-copy/read-line/parse-traces/main 15: 171 => ((6 integer))
mem: ((6 integer)): 5532 <= 171
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 41
run: string-copy/read-line/parse-traces/main 16: 42 => ((7 integer))
mem: ((7 integer)): 5533 <= 42
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 171
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 171
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1203 byte) (raw)) => 3
run: string-copy/read-line/parse-traces/main 12: #\3 => ((9 character))
mem: ((9 character)): 5535 <= #\3
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 42
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5630 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5630
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 3
run: string-copy/read-line/parse-traces/main 14: #\3 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5630 <= #\3
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 171
run: string-copy/read-line/parse-traces/main 15: 172 => ((6 integer))
mem: ((6 integer)): 5532 <= 172
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 42
run: string-copy/read-line/parse-traces/main 16: 43 => ((7 integer))
mem: ((7 integer)): 5533 <= 43
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 172
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 172
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1204 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5535 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 43
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5631 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5631
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5631 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 172
run: string-copy/read-line/parse-traces/main 15: 173 => ((6 integer))
mem: ((6 integer)): 5532 <= 173
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 43
run: string-copy/read-line/parse-traces/main 16: 44 => ((7 integer))
mem: ((7 integer)): 5533 <= 44
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 173
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 173
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1205 byte) (raw)) => l
run: string-copy/read-line/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 5535 <= #\l
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 44
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5632 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5632
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/read-line/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5632 <= #\l
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 173
run: string-copy/read-line/parse-traces/main 15: 174 => ((6 integer))
mem: ((6 integer)): 5532 <= 174
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 44
run: string-copy/read-line/parse-traces/main 16: 45 => ((7 integer))
mem: ((7 integer)): 5533 <= 45
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 174
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 174
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1206 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 5535 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 45
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5633 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5633
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5633 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 174
run: string-copy/read-line/parse-traces/main 15: 175 => ((6 integer))
mem: ((6 integer)): 5532 <= 175
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 45
run: string-copy/read-line/parse-traces/main 16: 46 => ((7 integer))
mem: ((7 integer)): 5533 <= 46
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 175
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 175
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1207 byte) (raw)) => t
run: string-copy/read-line/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 5535 <= #\t
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 46
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5634 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5634
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/read-line/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5634 <= #\t
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 175
run: string-copy/read-line/parse-traces/main 15: 176 => ((6 integer))
mem: ((6 integer)): 5532 <= 176
schedule: scheduling string-copy/read-line/parse-traces/main for further processing
schedule: string-copy/read-line/parse-traces/main
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 46
run: string-copy/read-line/parse-traces/main 16: 47 => ((7 integer))
mem: ((7 integer)): 5533 <= 47
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 176
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 176
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1208 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 5535 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 47
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5635 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5635
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5635 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 176
run: string-copy/read-line/parse-traces/main 15: 177 => ((6 integer))
mem: ((6 integer)): 5532 <= 177
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 47
run: string-copy/read-line/parse-traces/main 16: 48 => ((7 integer))
mem: ((7 integer)): 5533 <= 48
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 177
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 177
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1209 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 5535 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 48
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5636 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5636
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5636 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 177
run: string-copy/read-line/parse-traces/main 15: 178 => ((6 integer))
mem: ((6 integer)): 5532 <= 178
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 48
run: string-copy/read-line/parse-traces/main 16: 49 => ((7 integer))
mem: ((7 integer)): 5533 <= 49
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 178
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 178
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1210 byte) (raw)) => a
run: string-copy/read-line/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 5535 <= #\a
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 49
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5637 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5637
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/read-line/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5637 <= #\a
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 178
run: string-copy/read-line/parse-traces/main 15: 179 => ((6 integer))
mem: ((6 integer)): 5532 <= 179
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 49
run: string-copy/read-line/parse-traces/main 16: 50 => ((7 integer))
mem: ((7 integer)): 5533 <= 50
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 179
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 179
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1211 byte) (raw)) => l
run: string-copy/read-line/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 5535 <= #\l
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 50
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5638 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5638
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/read-line/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5638 <= #\l
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 179
run: string-copy/read-line/parse-traces/main 15: 180 => ((6 integer))
mem: ((6 integer)): 5532 <= 180
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 50
run: string-copy/read-line/parse-traces/main 16: 51 => ((7 integer))
mem: ((7 integer)): 5533 <= 51
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 180
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 180
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1212 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5535 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 51
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5639 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5639
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5639 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 180
run: string-copy/read-line/parse-traces/main 15: 181 => ((6 integer))
mem: ((6 integer)): 5532 <= 181
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 51
run: string-copy/read-line/parse-traces/main 16: 52 => ((7 integer))
mem: ((7 integer)): 5533 <= 52
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 181
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 181
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1213 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5535 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 52
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5640 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5640
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5640 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 181
run: string-copy/read-line/parse-traces/main 15: 182 => ((6 integer))
mem: ((6 integer)): 5532 <= 182
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 52
run: string-copy/read-line/parse-traces/main 16: 53 => ((7 integer))
mem: ((7 integer)): 5533 <= 53
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 182
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5534 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 182
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1214 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5535 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 53
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 5641 => ((10 character-address))
mem: ((10 character-address)): 5536 <= 5641
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5641 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 182
run: string-copy/read-line/parse-traces/main 15: 183 => ((6 integer))
mem: ((6 integer)): 5532 <= 183
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 53
run: string-copy/read-line/parse-traces/main 16: 54 => ((7 integer))
mem: ((7 integer)): 5533 <= 54
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 183
mem: ((3 integer)) => 183
run: string-copy/read-line/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 5534 <= t
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/read-line/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 5587
run: read-line/parse-traces/main 5: 5587 => ((5 string-address))
mem: ((5 string-address)): 5469 <= 5587
run: read-line/parse-traces/main 6: (((2 integer-address) (deref)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 183
run: read-line/parse-traces/main 6: 184 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1305 <= 184
run: read-line/parse-traces/main 7: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 5587
run: parse-traces/main 9: 5587 => ((7 string-address))
mem: ((7 string-address)): 1315 <= 5587
run: parse-traces/main 10: (((8 trace-address)) <- ((parse-trace)) ((7 string-address)))
mem: ((7 string-address)) => 5587
run: parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-trace/parse-traces/main 0: 5642 => ((default-space space-address))
run: parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (5587)
run: parse-trace/parse-traces/main 1: 5587 => ((1 string-address))
mem: ((1 string-address)): 5644 <= 5587
run: parse-trace/parse-traces/main 2: (((2 trace-address)) <- ((new)) ((trace literal)))
run: parse-trace/parse-traces/main 2: 5673 => ((2 trace-address))
mem: ((2 trace-address)): 5645 <= 5673
run: parse-trace/parse-traces/main 3: (((3 string-address)) <- ((new)) : )
run: parse-trace/parse-traces/main 3: 5675 => ((3 string-address))
mem: ((3 string-address)): 5646 <= 5675
run: parse-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first-at-substring)) ((1 string-address)) ((3 string-address)))
mem: ((1 string-address)) => 5587
mem: ((3 string-address)) => 5675
run: split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-trace/parse-traces/main 0: 5678 => ((default-space space-address))
run: split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (5587 5675)
run: split-first-at-substring/parse-trace/parse-traces/main 1: 5587 => ((1 string-address))
mem: ((1 string-address)): 5680 <= 5587
run: split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (5587 5675)
run: split-first-at-substring/parse-trace/parse-traces/main 2: 5675 => ((2 string-address))
mem: ((2 string-address)): 5681 <= 5675
run: split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((5587 integer) (raw)) => 54
run: split-first-at-substring/parse-trace/parse-traces/main 3: 54 => ((3 integer))
mem: ((3 integer)): 5682 <= 54
run: split-first-at-substring/parse-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 54
run: split-first-at-substring/parse-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 5683 <= nil
run: split-first-at-substring/parse-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 5587
mem: ((2 string-address)) => 5675
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 5709 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (5587 5675 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 5587 => ((1 string-address))
mem: ((1 string-address)): 5711 <= 5587
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (5587 5675 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 5675 => ((2 string-address))
mem: ((2 string-address)): 5712 <= 5675
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (5587 5675 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 5713 <= 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((5675 string) (raw))
mem: ((5675 integer) (raw)) => 2
mem: ((5676 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 5714 <= #\:
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((5587 integer) (raw)) => 54
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 54 => ((5 integer))
mem: ((5 integer)): 5715 <= 54
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 54
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 5716 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 5587
mem: ((2 string-address)) => 5675
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 5740 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (5587 5675 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 5587 => ((1 string-address))
mem: ((1 string-address)): 5742 <= 5587
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (5587 5675 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 5675 => ((2 string-address))
mem: ((2 string-address)): 5743 <= 5675
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (5587 5675 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 5744 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((5675 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 5745 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((5587 integer) (raw)) => 54
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 54 => ((5 integer))
mem: ((5 integer)): 5746 <= 54
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 54
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 52 => ((5 integer))
mem: ((5 integer)): 5746 <= 52
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 52
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 5747 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 5748 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 5749 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5588 byte) (raw)) => r
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\r => ((9 character))
mem: ((9 character)): 5750 <= #\r
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((5675 string) (raw))
mem: ((5675 integer) (raw)) => 2
mem: ((5676 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 5751 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => r
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 5752 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5717 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 5713 <= 1
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 5587
mem: ((4 character)) => :
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 5771 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (5587 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 5587 => ((1 string-address))
mem: ((1 string-address)): 5773 <= 5587
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (5587 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 5774 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (5587 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 5775 <= 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((5587 integer) (raw)) => 54
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 54 => ((4 integer))
mem: ((4 integer)): 5776 <= 54
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 54
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5777 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5589 byte) (raw)) => u
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\u => ((6 byte))
mem: ((6 byte)): 5778 <= #\u
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => u
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5779 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 5775 <= 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 54
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5777 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5590 byte) (raw)) => n
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 5778 <= #\n
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5779 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 5775 <= 3
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 54
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5777 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5591 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 5778 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 5779 <= t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: 3 => ((3 integer))
mem: ((3 integer)): 5713 <= 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 54
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 5716 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 5587
mem: ((2 string-address)) => 5675
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 5802 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (5587 5675 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 5587 => ((1 string-address))
mem: ((1 string-address)): 5804 <= 5587
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (5587 5675 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 5675 => ((2 string-address))
mem: ((2 string-address)): 5805 <= 5675
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (5587 5675 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 5806 <= 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((5675 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 5807 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((5587 integer) (raw)) => 54
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 54 => ((5 integer))
mem: ((5 integer)): 5808 <= 54
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 54
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 52 => ((5 integer))
mem: ((5 integer)): 5808 <= 52
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 52
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 5809 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 5810 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 5811 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5591 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 5812 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((5675 string) (raw))
mem: ((5675 integer) (raw)) => 2
mem: ((5676 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 5813 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 5814 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 4 => ((3 integer))
mem: ((3 integer)): 5806 <= 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 5810 <= 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 5811 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5592 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 5812 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((5675 string) (raw))
mem: ((5675 integer) (raw)) => 2
mem: ((5677 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 5813 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 5814 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 5 => ((3 integer))
mem: ((3 integer)): 5806 <= 5
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 5810 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 5811 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 5717 <= t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: split-first-at-substring/parse-trace/parse-traces/main 9: 3 => ((7 integer))
mem: ((7 integer)): 5686 <= 3
run: split-first-at-substring/parse-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 5587
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 5833 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (5587 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 5587 => ((1 string-address))
mem: ((1 string-address)): 5835 <= 5587
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (5587 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 5836 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (5587 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 5837 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((5587 integer) (raw)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 54 => ((4 integer))
mem: ((4 integer)): 5838 <= 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 54
mem: ((3 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 5864 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (54 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 54 => ((1 integer))
mem: ((1 integer)): 5866 <= 54
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (54 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 5867 <= 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 54
mem: ((2 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 5868 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 3 => ((3 integer))
mem: ((3 integer)): 5837 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 3
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 3 => ((4 integer))
mem: ((4 integer)): 5838 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 5895 => ((5 string-address))
mem: ((5 string-address)): 5839 <= 5895
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 5840 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 5841 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5842 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5588 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 5843 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((5895 string) (raw))
mem: ((5895 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5896 => ((10 character-address))
mem: ((10 character-address)): 5844 <= 5896
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5896 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 5840 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 5841 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5842 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5589 byte) (raw)) => u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\u => ((9 character))
mem: ((9 character)): 5843 <= #\u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((5895 string) (raw))
mem: ((5895 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5897 => ((10 character-address))
mem: ((10 character-address)): 5844 <= 5897
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\u => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5897 <= #\u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 5840 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 5841 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5842 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5590 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 5843 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((5895 string) (raw))
mem: ((5895 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5898 => ((10 character-address))
mem: ((10 character-address)): 5844 <= 5898
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5898 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 5840 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 5841 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 5842 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 5895
run: split-first-at-substring/parse-trace/parse-traces/main 10: 5895 => ((5 string-address))
mem: ((5 string-address)): 5684 <= 5895
run: split-first-at-substring/parse-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((5675 integer) (raw)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 5687 <= 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 3
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: 5 => ((7 integer))
mem: ((7 integer)): 5686 <= 5
run: split-first-at-substring/parse-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 5587
mem: ((7 integer)) => 5
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 5899 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (5587 5 54)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 5587 => ((1 string-address))
mem: ((1 string-address)): 5901 <= 5587
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (5587 5 54)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 5 => ((2 integer))
mem: ((2 integer)): 5902 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (5587 5 54)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 54 => ((3 integer))
mem: ((3 integer)): 5903 <= 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((5587 integer) (raw)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 54 => ((4 integer))
mem: ((4 integer)): 5904 <= 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 54
mem: ((3 integer)) => 54
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 5930 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (54 54)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 54 => ((1 integer))
mem: ((1 integer)): 5932 <= 54
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (54 54)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 54 => ((2 integer))
mem: ((2 integer)): 5933 <= 54
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 54
mem: ((2 integer)) => 54
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 5934 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 54 => ((3 integer))
mem: ((3 integer)): 5903 <= 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 54
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 49 => ((4 integer))
mem: ((4 integer)): 5904 <= 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 5961 => ((5 string-address))
mem: ((5 string-address)): 5905 <= 5961
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 5 => ((6 integer))
mem: ((6 integer)): 5906 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 5907 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5593 byte) (raw)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 5909 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5962 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5962
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5962 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 5906 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 5907 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5594 byte) (raw)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 5909 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5963 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5963
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5963 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 5906 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 5907 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5595 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 5909 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5964 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5964
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5964 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 5906 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 5907 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5596 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 5909 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5965 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5965
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5965 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 5906 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 5907 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5597 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5909 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5966 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5966
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5966 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 5906 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 5907 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5598 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 5909 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5967 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5967
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5967 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 5906 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 5907 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5599 byte) (raw)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 5909 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5968 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5968
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5968 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 5906 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 5907 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5600 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5909 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5969 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5969
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5969 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 5906 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 5907 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5601 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5909 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5970 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5970
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5970 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 5906 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 5907 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5602 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5909 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5971 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5971
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5971 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 5906 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 5907 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5603 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5909 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5972 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5972
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5972 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 5906 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 5907 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5604 byte) (raw)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\2 => ((9 character))
mem: ((9 character)): 5909 <= #\2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5973 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5973
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\2 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5973 <= #\2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 5906 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 5907 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5605 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5909 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5974 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5974
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5974 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 5906 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 5907 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5606 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 5909 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5975 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5975
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5975 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 5906 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 5907 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5607 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 5909 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5976 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5976
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5976 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 5906 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 5907 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5608 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 5909 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5977 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5977
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5977 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 5906 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 5907 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5609 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 5909 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5978 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5978
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5978 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 5906 <= 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 5907 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5610 byte) (raw)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 5909 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5979 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5979
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5979 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 5906 <= 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 5907 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5611 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 5909 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5980 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5980
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5980 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 5906 <= 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 5907 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5612 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 5909 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5981 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5981
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5981 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 5906 <= 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 5907 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5613 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5909 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5982 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5982
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5982 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 5906 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 5907 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 26
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5614 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5909 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5983 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5983
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5983 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 27 => ((6 integer))
mem: ((6 integer)): 5906 <= 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 5907 <= 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 27
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 27
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5615 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5909 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5984 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5984
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5984 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 28 => ((6 integer))
mem: ((6 integer)): 5906 <= 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 5907 <= 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 28
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 28
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5616 byte) (raw)) => <
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 5909 <= #\<
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5985 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5985
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5985 <= #\<
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 29 => ((6 integer))
mem: ((6 integer)): 5906 <= 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 5907 <= 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 29
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 29
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5617 byte) (raw)) => -
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\- => ((9 character))
mem: ((9 character)): 5909 <= #\-
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5986 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5986
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => -
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\- => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5986 <= #\-
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 30 => ((6 integer))
mem: ((6 integer)): 5906 <= 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 5907 <= 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 30
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 30
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5618 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5909 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5987 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5987
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5987 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 31 => ((6 integer))
mem: ((6 integer)): 5906 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 5907 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 31
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 31
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5619 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5909 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 26
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5988 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5988
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5988 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 32 => ((6 integer))
mem: ((6 integer)): 5906 <= 32
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 27 => ((7 integer))
mem: ((7 integer)): 5907 <= 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 32
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 32
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5620 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5909 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 27
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5989 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5989
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5989 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 32
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 33 => ((6 integer))
mem: ((6 integer)): 5906 <= 33
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 28 => ((7 integer))
mem: ((7 integer)): 5907 <= 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 33
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 33
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5621 byte) (raw)) => c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\c => ((9 character))
mem: ((9 character)): 5909 <= #\c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 28
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5990 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5990
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\c => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5990 <= #\c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 33
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 34 => ((6 integer))
mem: ((6 integer)): 5906 <= 34
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 29 => ((7 integer))
mem: ((7 integer)): 5907 <= 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 34
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 34
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5622 byte) (raw)) => o
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\o => ((9 character))
mem: ((9 character)): 5909 <= #\o
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 29
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5991 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5991
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => o
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\o => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5991 <= #\o
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 34
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 35 => ((6 integer))
mem: ((6 integer)): 5906 <= 35
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 30 => ((7 integer))
mem: ((7 integer)): 5907 <= 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 35
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 35
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5623 byte) (raw)) => p
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\p => ((9 character))
mem: ((9 character)): 5909 <= #\p
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 30
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5992 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5992
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => p
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\p => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5992 <= #\p
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 35
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 36 => ((6 integer))
mem: ((6 integer)): 5906 <= 36
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 31 => ((7 integer))
mem: ((7 integer)): 5907 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 36
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 36
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5624 byte) (raw)) => y
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\y => ((9 character))
mem: ((9 character)): 5909 <= #\y
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 31
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5993 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5993
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => y
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\y => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5993 <= #\y
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 36
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 37 => ((6 integer))
mem: ((6 integer)): 5906 <= 37
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 32 => ((7 integer))
mem: ((7 integer)): 5907 <= 32
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 37
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 37
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5625 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5909 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 32
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5994 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5994
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5994 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 37
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 38 => ((6 integer))
mem: ((6 integer)): 5906 <= 38
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 32
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 33 => ((7 integer))
mem: ((7 integer)): 5907 <= 33
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 38
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 38
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5626 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5909 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 33
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5995 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5995
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5995 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 38
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 39 => ((6 integer))
mem: ((6 integer)): 5906 <= 39
schedule: scheduling string-copy/split-first-at-substring/parse-trace/parse-traces/main for further processing
schedule: string-copy/split-first-at-substring/parse-trace/parse-traces/main
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 33
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 34 => ((7 integer))
mem: ((7 integer)): 5907 <= 34
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 39
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 39
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5627 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5909 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 34
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5996 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5996
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5996 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 39
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 40 => ((6 integer))
mem: ((6 integer)): 5906 <= 40
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 34
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 35 => ((7 integer))
mem: ((7 integer)): 5907 <= 35
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 40
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 40
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5628 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5909 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 35
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5997 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5997
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5997 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 40
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 41 => ((6 integer))
mem: ((6 integer)): 5906 <= 41
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 35
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 36 => ((7 integer))
mem: ((7 integer)): 5907 <= 36
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 41
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 41
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5629 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5909 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 36
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5998 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5998
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5998 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 41
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 42 => ((6 integer))
mem: ((6 integer)): 5906 <= 42
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 36
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 37 => ((7 integer))
mem: ((7 integer)): 5907 <= 37
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 42
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 42
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5630 byte) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\3 => ((9 character))
mem: ((9 character)): 5909 <= #\3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 37
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5999 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 5999
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\3 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5999 <= #\3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 42
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 43 => ((6 integer))
mem: ((6 integer)): 5906 <= 43
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 37
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 38 => ((7 integer))
mem: ((7 integer)): 5907 <= 38
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 43
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 43
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5631 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5909 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 38
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 6000 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 6000
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6000 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 43
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 44 => ((6 integer))
mem: ((6 integer)): 5906 <= 44
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 38
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 39 => ((7 integer))
mem: ((7 integer)): 5907 <= 39
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 44
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 44
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5632 byte) (raw)) => l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 5909 <= #\l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 39
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 6001 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 6001
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6001 <= #\l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 44
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 45 => ((6 integer))
mem: ((6 integer)): 5906 <= 45
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 39
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 40 => ((7 integer))
mem: ((7 integer)): 5907 <= 40
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 45
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 45
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5633 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 5909 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 40
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 6002 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 6002
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6002 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 45
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 46 => ((6 integer))
mem: ((6 integer)): 5906 <= 46
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 40
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 41 => ((7 integer))
mem: ((7 integer)): 5907 <= 41
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 46
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 46
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5634 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 5909 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 41
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 6003 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 6003
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6003 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 46
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 47 => ((6 integer))
mem: ((6 integer)): 5906 <= 47
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 41
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 42 => ((7 integer))
mem: ((7 integer)): 5907 <= 42
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 47
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 47
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5635 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 5909 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 42
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 6004 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 6004
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6004 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 47
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 48 => ((6 integer))
mem: ((6 integer)): 5906 <= 48
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 42
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 43 => ((7 integer))
mem: ((7 integer)): 5907 <= 43
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 48
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 48
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5636 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 5909 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 43
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 6005 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 6005
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6005 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 48
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 49 => ((6 integer))
mem: ((6 integer)): 5906 <= 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 43
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 44 => ((7 integer))
mem: ((7 integer)): 5907 <= 44
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 49
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 49
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5637 byte) (raw)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 5909 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 44
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 6006 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 6006
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6006 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 50 => ((6 integer))
mem: ((6 integer)): 5906 <= 50
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 44
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 45 => ((7 integer))
mem: ((7 integer)): 5907 <= 45
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 50
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 50
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5638 byte) (raw)) => l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 5909 <= #\l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 45
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 6007 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 6007
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6007 <= #\l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 50
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 51 => ((6 integer))
mem: ((6 integer)): 5906 <= 51
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 45
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 46 => ((7 integer))
mem: ((7 integer)): 5907 <= 46
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 51
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 51
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5639 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5909 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 46
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 6008 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 6008
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6008 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 51
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 52 => ((6 integer))
mem: ((6 integer)): 5906 <= 52
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 46
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 47 => ((7 integer))
mem: ((7 integer)): 5907 <= 47
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 52
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 52
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5640 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5909 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 47
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 6009 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 6009
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6009 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 52
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 53 => ((6 integer))
mem: ((6 integer)): 5906 <= 53
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 47
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 48 => ((7 integer))
mem: ((7 integer)): 5907 <= 48
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 53
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5908 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 53
array-len: ((5587 string) (raw))
mem: ((5587 integer) (raw)) => 54
mem: ((5641 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5909 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 48
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 6010 => ((10 character-address))
mem: ((10 character-address)): 5910 <= 6010
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6010 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 53
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 54 => ((6 integer))
mem: ((6 integer)): 5906 <= 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 48
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 49 => ((7 integer))
mem: ((7 integer)): 5907 <= 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 54
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 5908 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 5961
run: split-first-at-substring/parse-trace/parse-traces/main 13: 5961 => ((6 string-address))
mem: ((6 string-address)): 5685 <= 5961
run: split-first-at-substring/parse-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 5895
mem: ((6 string-address)) => 5961
run: parse-trace/parse-traces/main 4: 5895 => ((4 string-address))
mem: ((4 string-address)): 5647 <= 5895
run: parse-trace/parse-traces/main 4: 5961 => ((5 string-address))
mem: ((5 string-address)): 5648 <= 5961
run: parse-trace/parse-traces/main 5: (((6 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((0 offset)))
run: parse-trace/parse-traces/main 5: 5673 => ((6 string-address-address))
mem: ((6 string-address-address)): 5649 <= 5673
run: parse-trace/parse-traces/main 6: (((6 string-address-address) (deref)) <- ((copy)) ((4 string-address)))
mem: ((4 string-address)) => 5895
run: parse-trace/parse-traces/main 6: 5895 => ((6 string-address-address) (deref))
mem: ((6 string-address-address) (deref)): 5673 <= 5895
run: parse-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((1 offset)))
run: parse-trace/parse-traces/main 7: 5674 => ((7 string-address-address))
mem: ((7 string-address-address)): 5650 <= 5674
run: parse-trace/parse-traces/main 8: (((7 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 5961
run: parse-trace/parse-traces/main 8: 5961 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 5674 <= 5961
run: parse-trace/parse-traces/main 9: (((reply)) ((2 trace-address)))
mem: ((2 trace-address)) => 5673
run: parse-traces/main 10: 5673 => ((8 trace-address))
mem: ((8 trace-address)): 1316 <= 5673
run: parse-traces/main 11: (((9 string-address)) <- ((get)) ((8 trace-address) (deref)) ((0 offset)))
mem: ((5673 string-address) (raw)) => 5895
run: parse-traces/main 11: 5895 => ((9 string-address))
mem: ((9 string-address)): 1317 <= 5895
run: parse-traces/main 12: (((10 boolean)) <- ((string-equal)) ((9 string-address)) ((5 string-address) (const)))
mem: ((9 string-address)) => 5895
mem: ((5 string-address) (const)) => 1441
run: string-equal/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-equal/parse-traces/main 0: 6011 => ((default-space space-address))
run: string-equal/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (5895 1441)
run: string-equal/parse-traces/main 1: 5895 => ((1 string-address))
mem: ((1 string-address)): 6013 <= 5895
run: string-equal/parse-traces/main 2: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((5895 integer) (raw)) => 3
run: string-equal/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 6014 <= 3
run: string-equal/parse-traces/main 3: (((3 string-address)) <- ((next-input)))
arg: nil 1 (5895 1441)
run: string-equal/parse-traces/main 3: 1441 => ((3 string-address))
mem: ((3 string-address)): 6015 <= 1441
run: string-equal/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1441 integer) (raw)) => 3
run: string-equal/parse-traces/main 4: 3 => ((4 integer))
mem: ((4 integer)): 6016 <= 3
run: string-equal/parse-traces/main 5: (((5 boolean)) <- ((equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 3
mem: ((4 integer)) => 3
run: string-equal/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 6017 <= t
run: string-equal/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((1 offset)))
mem: ((5 boolean)) => t
run: string-equal/parse-traces/main 8: (((6 integer)) <- ((copy)) ((0 literal)))
run: string-equal/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 6018 <= 0
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 0
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 6019 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((5895 string) (raw))
mem: ((5895 integer) (raw)) => 3
mem: ((5896 byte) (raw)) => r
run: string-equal/parse-traces/main 11: #\r => ((8 byte))
mem: ((8 byte)): 6020 <= #\r
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((1441 string) (raw))
mem: ((1441 integer) (raw)) => 3
mem: ((1442 byte) (raw)) => r
run: string-equal/parse-traces/main 12: #\r => ((9 byte))
mem: ((9 byte)): 6021 <= #\r
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => r
mem: ((9 byte)) => r
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 6022 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-equal/parse-traces/main 16: 1 => ((6 integer))
mem: ((6 integer)): 6018 <= 1
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 1
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 6019 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((5895 string) (raw))
mem: ((5895 integer) (raw)) => 3
mem: ((5897 byte) (raw)) => u
run: string-equal/parse-traces/main 11: #\u => ((8 byte))
mem: ((8 byte)): 6020 <= #\u
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((1441 string) (raw))
mem: ((1441 integer) (raw)) => 3
mem: ((1443 byte) (raw)) => u
run: string-equal/parse-traces/main 12: #\u => ((9 byte))
mem: ((9 byte)): 6021 <= #\u
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => u
mem: ((9 byte)) => u
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 6022 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-equal/parse-traces/main 16: 2 => ((6 integer))
mem: ((6 integer)): 6018 <= 2
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 2
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 6019 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((5895 string) (raw))
mem: ((5895 integer) (raw)) => 3
mem: ((5898 byte) (raw)) => n
run: string-equal/parse-traces/main 11: #\n => ((8 byte))
mem: ((8 byte)): 6020 <= #\n
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((1441 string) (raw))
mem: ((1441 integer) (raw)) => 3
mem: ((1444 byte) (raw)) => n
run: string-equal/parse-traces/main 12: #\n => ((9 byte))
mem: ((9 byte)): 6021 <= #\n
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => n
mem: ((9 byte)) => n
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 6022 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-equal/parse-traces/main 16: 3 => ((6 integer))
mem: ((6 integer)): 6018 <= 3
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 3
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: t => ((7 boolean))
mem: ((7 boolean)): 6019 <= t
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => t
run: string-equal/parse-traces/main 18: (((reply)) ((t literal)))
run: parse-traces/main 12: t => ((10 boolean))
mem: ((10 boolean)): 1318 <= t
run: parse-traces/main 13: (((jump-unless)) ((10 boolean)) ((7 offset)))
mem: ((10 boolean)) => t
run: parse-traces/main 14: (((jump-unless)) ((3 instruction-trace-address)) ((3 offset)))
mem: ((3 instruction-trace-address)) => 4072
run: parse-traces/main 15: (((11 trace-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((3 offset)))
run: parse-traces/main 15: 4075 => ((11 trace-address-array-address-address))
mem: ((11 trace-address-array-address-address)): 1319 <= 4075
run: parse-traces/main 16: (((11 trace-address-array-address-address) (deref)) <- ((to-array)) ((4 buffer-address)))
mem: ((4 buffer-address)) => 4033
run: to-array/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: to-array/parse-traces/main 0: 6042 => ((default-space space-address))
run: to-array/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (4033)
run: to-array/parse-traces/main 1: 4033 => ((1 buffer-address))
mem: ((1 buffer-address)): 6044 <= 4033
run: to-array/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((4033 integer) (raw)) => 1
run: to-array/parse-traces/main 2: 1 => ((2 integer))
mem: ((2 integer)): 6045 <= 1
run: to-array/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((4034 string-address) (raw)) => 4035
run: to-array/parse-traces/main 3: 4035 => ((3 string-address))
mem: ((3 string-address)): 6046 <= 4035
run: to-array/parse-traces/main 4: (((jump-if)) ((3 string-address)) ((1 offset)))
mem: ((3 string-address)) => 4035
run: to-array/parse-traces/main 6: (((4 string-address)) <- ((new)) ((string literal)) ((2 integer)))
mem: ((2 integer)) => 1
run: to-array/parse-traces/main 6: 6073 => ((4 string-address))
mem: ((4 string-address)): 6047 <= 6073
run: to-array/parse-traces/main 7: (((5 integer)) <- ((copy)) ((0 literal)))
run: to-array/parse-traces/main 7: 0 => ((5 integer))
mem: ((5 integer)): 6048 <= 0
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 0
mem: ((2 integer)) => 1
run: to-array/parse-traces/main 8: nil => ((6 boolean))
mem: ((6 boolean)): 6049 <= nil
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: to-array/parse-traces/main 10: (((7 byte)) <- ((index)) ((3 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((4035 string) (raw))
mem: ((4035 integer) (raw)) => 5
mem: ((4036 byte) (raw)) => 5029
run: to-array/parse-traces/main 10: 5029 => ((7 byte))
mem: ((7 byte)): 6050 <= 5029
run: to-array/parse-traces/main 11: (((8 byte-address)) <- ((index-address)) ((4 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((6073 string) (raw))
mem: ((6073 integer) (raw)) => 1
run: to-array/parse-traces/main 11: 6074 => ((8 byte-address))
mem: ((8 byte-address)): 6051 <= 6074
run: to-array/parse-traces/main 12: (((8 byte-address) (deref)) <- ((copy)) ((7 byte)))
mem: ((7 byte)) => 5029
run: to-array/parse-traces/main 12: 5029 => ((8 byte-address) (deref))
mem: ((8 byte-address) (deref)): 6074 <= 5029
run: to-array/parse-traces/main 13: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 0
run: to-array/parse-traces/main 13: 1 => ((5 integer))
mem: ((5 integer)): 6048 <= 1
run: to-array/parse-traces/main 14: (((jump)) ((-7 offset)))
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 1
mem: ((2 integer)) => 1
run: to-array/parse-traces/main 8: t => ((6 boolean))
mem: ((6 boolean)): 6049 <= t
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => t
run: to-array/parse-traces/main 15: (((reply)) ((4 string-address)))
mem: ((4 string-address)) => 6073
run: parse-traces/main 16: 6073 => ((11 trace-address-array-address-address) (deref))
mem: ((11 trace-address-array-address-address) (deref)): 4075 <= 6073
run: parse-traces/main 17: (((4 buffer-address)) <- ((init-buffer)) ((5 literal)))
run: init-buffer/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/parse-traces/main 0: 6075 => ((default-space space-address))
run: init-buffer/parse-traces/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/parse-traces/main 1: 6106 => ((1 buffer-address))
mem: ((1 buffer-address)): 6077 <= 6106
run: init-buffer/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/parse-traces/main 2: 6106 => ((2 integer-address))
mem: ((2 integer-address)): 6078 <= 6106
run: init-buffer/parse-traces/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/parse-traces/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 6106 <= 0
run: init-buffer/parse-traces/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/parse-traces/main 4: 6107 => ((3 string-address-address))
mem: ((3 string-address-address)): 6079 <= 6107
run: init-buffer/parse-traces/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (5)
run: init-buffer/parse-traces/main 5: 5 => ((4 integer))
mem: ((4 integer)): 6080 <= 5
run: init-buffer/parse-traces/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 5
run: init-buffer/parse-traces/main 6: 6108 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 6107 <= 6108
run: init-buffer/parse-traces/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 6106
run: parse-traces/main 17: 6106 => ((4 buffer-address))
mem: ((4 buffer-address)): 1312 <= 6106
run: parse-traces/main 18: (((3 instruction-trace-address)) <- ((parse-instruction-trace)) ((8 trace-address)))
mem: ((8 trace-address)) => 5673
run: parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-instruction-trace/parse-traces/main 0: 6114 => ((default-space space-address))
run: parse-instruction-trace/parse-traces/main 1: (((1 trace-address)) <- ((next-input)))
arg: nil 0 (5673)
run: parse-instruction-trace/parse-traces/main 1: 5673 => ((1 trace-address))
mem: ((1 trace-address)): 6116 <= 5673
run: parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((get)) ((1 trace-address) (deref)) ((1 offset)))
mem: ((5674 string-address) (raw)) => 5961
run: parse-instruction-trace/parse-traces/main 2: 5961 => ((2 string-address))
mem: ((2 string-address)): 6117 <= 5961
run: parse-instruction-trace/parse-traces/main 3: (((3 instruction-trace-address)) <- ((new)) ((instruction-trace literal)))
run: parse-instruction-trace/parse-traces/main 3: 6145 => ((3 instruction-trace-address))
mem: ((3 instruction-trace-address)): 6118 <= 6145
run: parse-instruction-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first)) ((2 string-address)) ((  literal)))
mem: ((2 string-address)) => 5961
run: split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first/parse-instruction-trace/parse-traces/main 0: 6149 => ((default-space space-address))
run: split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (5961 #\space)
run: split-first/parse-instruction-trace/parse-traces/main 1: 5961 => ((1 string-address))
mem: ((1 string-address)): 6151 <= 5961
run: split-first/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (5961 #\space)
run: split-first/parse-instruction-trace/parse-traces/main 2: #\space => ((2 character))
mem: ((2 character)): 6152 <= #\space
run: split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((5961 integer) (raw)) => 49
run: split-first/parse-instruction-trace/parse-traces/main 3: 49 => ((3 integer))
mem: ((3 integer)): 6153 <= 49
run: split-first/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 49
run: split-first/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 6154 <= nil
run: split-first/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((0 literal)))
mem: ((1 string-address)) => 5961
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 0: 6180 => ((default-space space-address))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (5961 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 1: 5961 => ((1 string-address))
mem: ((1 string-address)): 6182 <= 5961
run: find-next/split-first/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (5961 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 2: #\space => ((2 character))
mem: ((2 character)): 6183 <= #\space
run: find-next/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (5961 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 6184 <= 0
run: find-next/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((5961 integer) (raw)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 4: 49 => ((4 integer))
mem: ((4 integer)): 6185 <= 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6186 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5962 byte) (raw)) => m
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 6187 <= #\m
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 6188 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 6184 <= 1
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6186 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5963 byte) (raw)) => a
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 6187 <= #\a
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 6188 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 6184 <= 2
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6186 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5964 byte) (raw)) => i
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 6187 <= #\i
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 6188 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 6184 <= 3
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6186 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5965 byte) (raw)) => n
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 6187 <= #\n
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 6188 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 6184 <= 4
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6186 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5966 byte) (raw)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 6187 <= #\space
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 6188 <= t
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/split-first/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split-first/parse-instruction-trace/parse-traces/main 9: 4 => ((7 integer))
mem: ((7 integer)): 6157 <= 4
run: split-first/parse-instruction-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 5961
mem: ((7 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 6211 => ((default-space space-address))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (5961 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 5961 => ((1 string-address))
mem: ((1 string-address)): 6213 <= 5961
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (5961 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 6214 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (5961 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 6215 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: 49 => ((4 integer))
mem: ((4 integer)): 6216 <= 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 49
mem: ((3 integer)) => 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 6242 => ((default-space space-address))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (49 4)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 49 => ((1 integer))
mem: ((1 integer)): 6244 <= 49
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (49 4)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 4 => ((2 integer))
mem: ((2 integer)): 6245 <= 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 49
mem: ((2 integer)) => 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 6246 <= nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: 4 => ((3 integer))
mem: ((3 integer)): 6215 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 4
mem: ((2 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: 4 => ((4 integer))
mem: ((4 integer)): 6216 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: 6273 => ((5 string-address))
mem: ((5 string-address)): 6217 <= 6273
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 6218 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 6219 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6220 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5962 byte) (raw)) => m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 6221 <= #\m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((6273 string) (raw))
mem: ((6273 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6274 => ((10 character-address))
mem: ((10 character-address)): 6222 <= 6274
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6274 <= #\m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 6218 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 6219 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6220 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5963 byte) (raw)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 6221 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((6273 string) (raw))
mem: ((6273 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6275 => ((10 character-address))
mem: ((10 character-address)): 6222 <= 6275
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6275 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 6218 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 6219 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6220 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5964 byte) (raw)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 6221 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((6273 string) (raw))
mem: ((6273 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6276 => ((10 character-address))
mem: ((10 character-address)): 6222 <= 6276
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6276 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 6218 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 6219 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6220 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5965 byte) (raw)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 6221 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((6273 string) (raw))
mem: ((6273 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6277 => ((10 character-address))
mem: ((10 character-address)): 6222 <= 6277
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6277 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 6218 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 6219 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 6220 <= t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 6273
run: split-first/parse-instruction-trace/parse-traces/main 10: 6273 => ((5 string-address))
mem: ((5 string-address)): 6155 <= 6273
run: split-first/parse-instruction-trace/parse-traces/main 11: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: split-first/parse-instruction-trace/parse-traces/main 11: 5 => ((7 integer))
mem: ((7 integer)): 6157 <= 5
run: split-first/parse-instruction-trace/parse-traces/main 12: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 5961
mem: ((7 integer)) => 5
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 6278 => ((default-space space-address))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (5961 5 49)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 5961 => ((1 string-address))
mem: ((1 string-address)): 6280 <= 5961
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (5961 5 49)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 5 => ((2 integer))
mem: ((2 integer)): 6281 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (5961 5 49)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: 49 => ((3 integer))
mem: ((3 integer)): 6282 <= 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((5961 integer) (raw)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: 49 => ((4 integer))
mem: ((4 integer)): 6283 <= 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 49
mem: ((3 integer)) => 49
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 6309 => ((default-space space-address))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (49 49)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 49 => ((1 integer))
mem: ((1 integer)): 6311 <= 49
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (49 49)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 49 => ((2 integer))
mem: ((2 integer)): 6312 <= 49
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 49
mem: ((2 integer)) => 49
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 6313 <= nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: 49 => ((3 integer))
mem: ((3 integer)): 6282 <= 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 49
mem: ((2 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: 44 => ((4 integer))
mem: ((4 integer)): 6283 <= 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: 6340 => ((5 string-address))
mem: ((5 string-address)): 6284 <= 6340
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: 5 => ((6 integer))
mem: ((6 integer)): 6285 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 6286 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5967 byte) (raw)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 6288 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6341 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6341
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6341 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 6285 <= 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 6286 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5968 byte) (raw)) => :
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 6288 <= #\:
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6342 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6342
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6342 <= #\:
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 6285 <= 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 6286 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5969 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 6288 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6343 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6343
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6343 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 6285 <= 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 6286 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5970 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 6288 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6344 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6344
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6344 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 6285 <= 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 6286 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5971 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 6288 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6345 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6345
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6345 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 6285 <= 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 6286 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5972 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 6288 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6346 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6346
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6346 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 6285 <= 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 6286 <= 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5973 byte) (raw)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\2 => ((9 character))
mem: ((9 character)): 6288 <= #\2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6347 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6347
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\2 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6347 <= #\2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 6285 <= 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 6286 <= 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5974 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 6288 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6348 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6348
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6348 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 6285 <= 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 6286 <= 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5975 byte) (raw)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 6288 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6349 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6349
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6349 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 6285 <= 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 6286 <= 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5976 byte) (raw)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 6288 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6350 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6350
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6350 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 6285 <= 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 6286 <= 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5977 byte) (raw)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 6288 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6351 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6351
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6351 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 6285 <= 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 6286 <= 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5978 byte) (raw)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 6288 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6352 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6352
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6352 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 6285 <= 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 6286 <= 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5979 byte) (raw)) => g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 6288 <= #\g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6353 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6353
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6353 <= #\g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 6285 <= 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 6286 <= 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5980 byte) (raw)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 6288 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6354 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6354
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6354 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 6285 <= 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 6286 <= 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5981 byte) (raw)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 6288 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6355 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6355
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6355 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 6285 <= 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 6286 <= 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5982 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 6288 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6356 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6356
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6356 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 6285 <= 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 6286 <= 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5983 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 6288 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6357 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6357
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6357 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 6285 <= 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 6286 <= 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5984 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 6288 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6358 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6358
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6358 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 6285 <= 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 6286 <= 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5985 byte) (raw)) => <
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 6288 <= #\<
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6359 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6359
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6359 <= #\<
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 6285 <= 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 6286 <= 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5986 byte) (raw)) => -
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\- => ((9 character))
mem: ((9 character)): 6288 <= #\-
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6360 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6360
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => -
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\- => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6360 <= #\-
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 6285 <= 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 6286 <= 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5987 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 6288 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6361 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6361
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6361 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 6285 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 6286 <= 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 26
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5988 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 6288 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6362 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6362
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6362 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 27 => ((6 integer))
mem: ((6 integer)): 6285 <= 27
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 6286 <= 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 27
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 27
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5989 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 6288 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6363 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6363
schedule: scheduling string-copy/split-first/parse-instruction-trace/parse-traces/main for further processing
schedule: string-copy/split-first/parse-instruction-trace/parse-traces/main
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6363 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 27
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 28 => ((6 integer))
mem: ((6 integer)): 6285 <= 28
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 6286 <= 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 28
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 28
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5990 byte) (raw)) => c
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\c => ((9 character))
mem: ((9 character)): 6288 <= #\c
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6364 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6364
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => c
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\c => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6364 <= #\c
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 28
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 29 => ((6 integer))
mem: ((6 integer)): 6285 <= 29
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 6286 <= 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 29
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 29
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5991 byte) (raw)) => o
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\o => ((9 character))
mem: ((9 character)): 6288 <= #\o
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6365 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6365
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => o
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\o => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6365 <= #\o
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 29
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 30 => ((6 integer))
mem: ((6 integer)): 6285 <= 30
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 6286 <= 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 30
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 30
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5992 byte) (raw)) => p
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\p => ((9 character))
mem: ((9 character)): 6288 <= #\p
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6366 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6366
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => p
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\p => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6366 <= #\p
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 30
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 31 => ((6 integer))
mem: ((6 integer)): 6285 <= 31
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 6286 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 31
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 31
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5993 byte) (raw)) => y
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\y => ((9 character))
mem: ((9 character)): 6288 <= #\y
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 26
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6367 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6367
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => y
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\y => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6367 <= #\y
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 31
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 32 => ((6 integer))
mem: ((6 integer)): 6285 <= 32
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 27 => ((7 integer))
mem: ((7 integer)): 6286 <= 27
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 32
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 32
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5994 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 6288 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 27
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6368 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6368
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6368 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 32
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 33 => ((6 integer))
mem: ((6 integer)): 6285 <= 33
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 27
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 28 => ((7 integer))
mem: ((7 integer)): 6286 <= 28
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 33
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 33
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5995 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 6288 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 28
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6369 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6369
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6369 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 33
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 34 => ((6 integer))
mem: ((6 integer)): 6285 <= 34
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 28
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 29 => ((7 integer))
mem: ((7 integer)): 6286 <= 29
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 34
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 34
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5996 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 6288 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 29
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6370 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6370
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6370 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 34
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 35 => ((6 integer))
mem: ((6 integer)): 6285 <= 35
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 29
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 30 => ((7 integer))
mem: ((7 integer)): 6286 <= 30
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 35
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 35
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5997 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 6288 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 30
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6371 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6371
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6371 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 35
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 36 => ((6 integer))
mem: ((6 integer)): 6285 <= 36
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 30
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 31 => ((7 integer))
mem: ((7 integer)): 6286 <= 31
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 36
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 36
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5998 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 6288 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 31
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6372 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6372
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6372 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 36
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 37 => ((6 integer))
mem: ((6 integer)): 6285 <= 37
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 31
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 32 => ((7 integer))
mem: ((7 integer)): 6286 <= 32
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 37
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 37
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((5999 byte) (raw)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\3 => ((9 character))
mem: ((9 character)): 6288 <= #\3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 32
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6373 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6373
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\3 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6373 <= #\3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 37
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 38 => ((6 integer))
mem: ((6 integer)): 6285 <= 38
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 32
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 33 => ((7 integer))
mem: ((7 integer)): 6286 <= 33
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 38
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 38
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((6000 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 6288 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 33
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6374 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6374
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6374 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 38
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 39 => ((6 integer))
mem: ((6 integer)): 6285 <= 39
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 33
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 34 => ((7 integer))
mem: ((7 integer)): 6286 <= 34
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 39
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 39
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((6001 byte) (raw)) => l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 6288 <= #\l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 34
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6375 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6375
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6375 <= #\l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 39
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 40 => ((6 integer))
mem: ((6 integer)): 6285 <= 40
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 34
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 35 => ((7 integer))
mem: ((7 integer)): 6286 <= 35
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 40
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 40
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((6002 byte) (raw)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 6288 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 35
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6376 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6376
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6376 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 40
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 41 => ((6 integer))
mem: ((6 integer)): 6285 <= 41
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 35
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 36 => ((7 integer))
mem: ((7 integer)): 6286 <= 36
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 41
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 41
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((6003 byte) (raw)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 6288 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 36
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6377 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6377
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6377 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 41
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 42 => ((6 integer))
mem: ((6 integer)): 6285 <= 42
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 36
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 37 => ((7 integer))
mem: ((7 integer)): 6286 <= 37
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 42
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 42
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((6004 byte) (raw)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 6288 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 37
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6378 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6378
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6378 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 42
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 43 => ((6 integer))
mem: ((6 integer)): 6285 <= 43
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 37
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 38 => ((7 integer))
mem: ((7 integer)): 6286 <= 38
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 43
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 43
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((6005 byte) (raw)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 6288 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 38
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6379 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6379
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6379 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 43
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 44 => ((6 integer))
mem: ((6 integer)): 6285 <= 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 38
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 39 => ((7 integer))
mem: ((7 integer)): 6286 <= 39
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 44
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 44
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((6006 byte) (raw)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 6288 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 39
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6380 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6380
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6380 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 45 => ((6 integer))
mem: ((6 integer)): 6285 <= 45
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 39
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 40 => ((7 integer))
mem: ((7 integer)): 6286 <= 40
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 45
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 45
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((6007 byte) (raw)) => l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 6288 <= #\l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 40
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6381 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6381
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6381 <= #\l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 45
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 46 => ((6 integer))
mem: ((6 integer)): 6285 <= 46
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 40
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 41 => ((7 integer))
mem: ((7 integer)): 6286 <= 41
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 46
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 46
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((6008 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 6288 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 41
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6382 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6382
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6382 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 46
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 47 => ((6 integer))
mem: ((6 integer)): 6285 <= 47
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 41
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 42 => ((7 integer))
mem: ((7 integer)): 6286 <= 42
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 47
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 47
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((6009 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 6288 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 42
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6383 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6383
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6383 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 47
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 48 => ((6 integer))
mem: ((6 integer)): 6285 <= 48
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 42
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 43 => ((7 integer))
mem: ((7 integer)): 6286 <= 43
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 48
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6287 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 48
array-len: ((5961 string) (raw))
mem: ((5961 integer) (raw)) => 49
mem: ((6010 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 6288 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 43
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 6384 => ((10 character-address))
mem: ((10 character-address)): 6289 <= 6384
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6384 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 48
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 49 => ((6 integer))
mem: ((6 integer)): 6285 <= 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 43
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 44 => ((7 integer))
mem: ((7 integer)): 6286 <= 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 49
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 6287 <= t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 6340
run: split-first/parse-instruction-trace/parse-traces/main 12: 6340 => ((6 string-address))
mem: ((6 string-address)): 6156 <= 6340
run: split-first/parse-instruction-trace/parse-traces/main 13: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 6273
mem: ((6 string-address)) => 6340
run: parse-instruction-trace/parse-traces/main 4: 6273 => ((4 string-address))
mem: ((4 string-address)): 6119 <= 6273
run: parse-instruction-trace/parse-traces/main 4: 6340 => ((5 string-address))
mem: ((5 string-address)): 6120 <= 6340
run: parse-instruction-trace/parse-traces/main 5: (((6 string-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((0 offset)))
run: parse-instruction-trace/parse-traces/main 5: 6145 => ((6 string-address-array-address-address))
mem: ((6 string-address-array-address-address)): 6121 <= 6145
run: parse-instruction-trace/parse-traces/main 6: (((6 string-address-array-address-address) (deref)) <- ((split)) ((4 string-address)) ((/ literal)))
mem: ((4 string-address)) => 6273
run: split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split/parse-instruction-trace/parse-traces/main 0: 6385 => ((default-space space-address))
run: split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (6273 #\/)
run: split/parse-instruction-trace/parse-traces/main 1: 6273 => ((1 string-address))
mem: ((1 string-address)): 6387 <= 6273
run: split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (6273 #\/)
run: split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 6388 <= #\/
run: split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((6273 integer) (raw)) => 4
run: split/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 6389 <= 4
run: split/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 6390 <= nil
run: split/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => nil
run: split/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((1 literal)))
run: split/parse-instruction-trace/parse-traces/main 8: 1 => ((6 integer))
mem: ((6 integer)): 6392 <= 1
run: split/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 6393 <= 0
run: split/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((7 integer)))
mem: ((1 string-address)) => 6273
mem: ((2 character)) => /
mem: ((7 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split/parse-instruction-trace/parse-traces/main 0: 6416 => ((default-space space-address))
run: find-next/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (6273 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 1: 6273 => ((1 string-address))
mem: ((1 string-address)): 6418 <= 6273
run: find-next/split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (6273 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 6419 <= #\/
run: find-next/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (6273 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 6420 <= 0
run: find-next/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((6273 integer) (raw)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 6421 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6422 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((6273 string) (raw))
mem: ((6273 integer) (raw)) => 4
mem: ((6274 byte) (raw)) => m
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 6423 <= #\m
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 6424 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 6420 <= 1
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6422 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((6273 string) (raw))
mem: ((6273 integer) (raw)) => 4
mem: ((6275 byte) (raw)) => a
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 6423 <= #\a
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 6424 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 6420 <= 2
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6422 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((6273 string) (raw))
mem: ((6273 integer) (raw)) => 4
mem: ((6276 byte) (raw)) => i
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 6423 <= #\i
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 6424 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 6420 <= 3
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6422 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((6273 string) (raw))
mem: ((6273 integer) (raw)) => 4
mem: ((6277 byte) (raw)) => n
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 6423 <= #\n
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 6424 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 6420 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 6422 <= t
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: find-next/split/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 10: 4 => ((7 integer))
mem: ((7 integer)): 6393 <= 4
run: split/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((3 integer)))
mem: ((7 integer)) => 4
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 6394 <= t
run: split/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((3 offset)))
mem: ((8 boolean)) => t
run: split/parse-instruction-trace/parse-traces/main 16: (((5 string-address-array-address)) <- ((new)) ((string-address-array literal)) ((6 integer)))
mem: ((6 integer)) => 1
run: split/parse-instruction-trace/parse-traces/main 16: 6447 => ((5 string-address-array-address))
mem: ((5 string-address-array-address)): 6391 <= 6447
run: split/parse-instruction-trace/parse-traces/main 17: (((9 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 17: 0 => ((9 integer))
mem: ((9 integer)): 6395 <= 0
run: split/parse-instruction-trace/parse-traces/main 18: (((10 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 18: 0 => ((10 integer))
mem: ((10 integer)): 6396 <= 0
run: split/parse-instruction-trace/parse-traces/main 19: (((8 boolean)) <- ((greater-or-equal)) ((10 integer)) ((3 integer)))
mem: ((10 integer)) => 0
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 19: nil => ((8 boolean))
mem: ((8 boolean)): 6394 <= nil
run: split/parse-instruction-trace/parse-traces/main 20: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: split/parse-instruction-trace/parse-traces/main 21: (((11 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((10 integer)))
mem: ((1 string-address)) => 6273
mem: ((2 character)) => /
mem: ((10 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split/parse-instruction-trace/parse-traces/main 0: 6449 => ((default-space space-address))
run: find-next/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (6273 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 1: 6273 => ((1 string-address))
mem: ((1 string-address)): 6451 <= 6273
run: find-next/split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (6273 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 6452 <= #\/
run: find-next/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (6273 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 6453 <= 0
run: find-next/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((6273 integer) (raw)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 6454 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6455 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((6273 string) (raw))
mem: ((6273 integer) (raw)) => 4
mem: ((6274 byte) (raw)) => m
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 6456 <= #\m
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 6457 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 6453 <= 1
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6455 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((6273 string) (raw))
mem: ((6273 integer) (raw)) => 4
mem: ((6275 byte) (raw)) => a
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 6456 <= #\a
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 6457 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 6453 <= 2
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6455 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((6273 string) (raw))
mem: ((6273 integer) (raw)) => 4
mem: ((6276 byte) (raw)) => i
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 6456 <= #\i
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 6457 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 6453 <= 3
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6455 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((6273 string) (raw))
mem: ((6273 integer) (raw)) => 4
mem: ((6277 byte) (raw)) => n
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 6456 <= #\n
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 6457 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 6453 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 6455 <= t
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: find-next/split/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 21: 4 => ((11 integer))
mem: ((11 integer)): 6397 <= 4
run: split/parse-instruction-trace/parse-traces/main 22: (((12 string-address-address)) <- ((index-address)) ((5 string-address-array-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 0
array-len: ((6447 string-address-array) (raw))
mem: ((6447 integer) (raw)) => 1
run: split/parse-instruction-trace/parse-traces/main 22: 6448 => ((12 string-address-address))
mem: ((12 string-address-address)): 6398 <= 6448
run: split/parse-instruction-trace/parse-traces/main 23: (((12 string-address-address) (deref)) <- ((string-copy)) ((1 string-address)) ((10 integer)) ((11 integer)))
mem: ((1 string-address)) => 6273
mem: ((10 integer)) => 0
mem: ((11 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 0: 6480 => ((default-space space-address))
run: string-copy/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (6273 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 1: 6273 => ((1 string-address))
mem: ((1 string-address)): 6482 <= 6273
run: string-copy/split/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (6273 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 6483 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (6273 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 6484 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((6273 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 6485 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 0: 6511 => ((default-space space-address))
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (4 4)
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 1: 4 => ((1 integer))
mem: ((1 integer)): 6513 <= 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (4 4)
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 2: 4 => ((2 integer))
mem: ((2 integer)): 6514 <= 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 4
mem: ((2 integer)) => 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 6515 <= nil
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 5: 4 => ((3 integer))
mem: ((3 integer)): 6484 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 4
mem: ((2 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 6: 4 => ((4 integer))
mem: ((4 integer)): 6485 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 7: 6542 => ((5 string-address))
mem: ((5 string-address)): 6486 <= 6542
run: string-copy/split/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 6487 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 6488 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6489 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((6273 string) (raw))
mem: ((6273 integer) (raw)) => 4
mem: ((6274 byte) (raw)) => m
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 6490 <= #\m
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((6542 string) (raw))
mem: ((6542 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 6543 => ((10 character-address))
mem: ((10 character-address)): 6491 <= 6543
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6543 <= #\m
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 6487 <= 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 6488 <= 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6489 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((6273 string) (raw))
mem: ((6273 integer) (raw)) => 4
mem: ((6275 byte) (raw)) => a
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 6490 <= #\a
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((6542 string) (raw))
mem: ((6542 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 6544 => ((10 character-address))
mem: ((10 character-address)): 6491 <= 6544
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6544 <= #\a
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 6487 <= 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 6488 <= 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6489 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((6273 string) (raw))
mem: ((6273 integer) (raw)) => 4
mem: ((6276 byte) (raw)) => i
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 6490 <= #\i
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((6542 string) (raw))
mem: ((6542 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 6545 => ((10 character-address))
mem: ((10 character-address)): 6491 <= 6545
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6545 <= #\i
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 6487 <= 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 6488 <= 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6489 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((6273 string) (raw))
mem: ((6273 integer) (raw)) => 4
mem: ((6277 byte) (raw)) => n
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 6490 <= #\n
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((6542 string) (raw))
mem: ((6542 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 6546 => ((10 character-address))
mem: ((10 character-address)): 6491 <= 6546
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6546 <= #\n
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 6487 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 6488 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 6489 <= t
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 6542
run: split/parse-instruction-trace/parse-traces/main 23: 6542 => ((12 string-address-address) (deref))
mem: ((12 string-address-address) (deref)): 6448 <= 6542
run: split/parse-instruction-trace/parse-traces/main 24: (((10 integer)) <- ((add)) ((11 integer)) ((1 literal)))
mem: ((11 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 24: 5 => ((10 integer))
mem: ((10 integer)): 6396 <= 5
run: split/parse-instruction-trace/parse-traces/main 25: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
mem: ((9 integer)) => 0
run: split/parse-instruction-trace/parse-traces/main 25: 1 => ((9 integer))
mem: ((9 integer)): 6395 <= 1
run: split/parse-instruction-trace/parse-traces/main 26: (((jump)) ((-8 offset)))
run: split/parse-instruction-trace/parse-traces/main 19: (((8 boolean)) <- ((greater-or-equal)) ((10 integer)) ((3 integer)))
mem: ((10 integer)) => 5
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 19: t => ((8 boolean))
mem: ((8 boolean)): 6394 <= t
run: split/parse-instruction-trace/parse-traces/main 20: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: split/parse-instruction-trace/parse-traces/main 27: (((reply)) ((5 string-address-array-address)))
mem: ((5 string-address-array-address)) => 6447
run: parse-instruction-trace/parse-traces/main 6: 6447 => ((6 string-address-array-address-address) (deref))
mem: ((6 string-address-array-address-address) (deref)): 6145 <= 6447
run: parse-instruction-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((1 offset)))
run: parse-instruction-trace/parse-traces/main 7: 6146 => ((7 string-address-address))
mem: ((7 string-address-address)): 6122 <= 6146
run: parse-instruction-trace/parse-traces/main 8: (((8 string-address)) <- ((new)) : )
run: parse-instruction-trace/parse-traces/main 8: 6547 => ((8 string-address))
mem: ((8 string-address)): 6123 <= 6547
run: parse-instruction-trace/parse-traces/main 9: (((7 string-address-address) (deref)) ((5 string-address)) <- ((split-first-at-substring)) ((5 string-address)) ((8 string-address)))
mem: ((5 string-address)) => 6340
mem: ((8 string-address)) => 6547
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 6550 => ((default-space space-address))
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (6340 6547)
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 6340 => ((1 string-address))
mem: ((1 string-address)): 6552 <= 6340
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (6340 6547)
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 6547 => ((2 string-address))
mem: ((2 string-address)): 6553 <= 6547
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((6340 integer) (raw)) => 44
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 44 => ((3 integer))
mem: ((3 integer)): 6554 <= 44
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 44
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 6555 <= nil
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 6340
mem: ((2 string-address)) => 6547
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 6581 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (6340 6547 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 6340 => ((1 string-address))
mem: ((1 string-address)): 6583 <= 6340
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (6340 6547 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 6547 => ((2 string-address))
mem: ((2 string-address)): 6584 <= 6547
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (6340 6547 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 6585 <= 0
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((6547 string) (raw))
mem: ((6547 integer) (raw)) => 2
mem: ((6548 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 6586 <= #\:
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((6340 integer) (raw)) => 44
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 44 => ((5 integer))
mem: ((5 integer)): 6587 <= 44
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 44
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 6588 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 6340
mem: ((2 string-address)) => 6547
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 6612 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (6340 6547 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 6340 => ((1 string-address))
mem: ((1 string-address)): 6614 <= 6340
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (6340 6547 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 6547 => ((2 string-address))
mem: ((2 string-address)): 6615 <= 6547
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (6340 6547 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 6616 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((6547 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 6617 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((6340 integer) (raw)) => 44
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 44 => ((5 integer))
mem: ((5 integer)): 6618 <= 44
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 44
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 42 => ((5 integer))
mem: ((5 integer)): 6618 <= 42
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 42
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 6619 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 6620 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 6621 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6341 byte) (raw)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\1 => ((9 character))
mem: ((9 character)): 6622 <= #\1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((6547 string) (raw))
mem: ((6547 integer) (raw)) => 2
mem: ((6548 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 6623 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => 1
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 6624 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 6589 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 6585 <= 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 6340
mem: ((4 character)) => :
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 6643 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (6340 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 6340 => ((1 string-address))
mem: ((1 string-address)): 6645 <= 6340
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (6340 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 6646 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (6340 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 6647 <= 1
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((6340 integer) (raw)) => 44
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 44 => ((4 integer))
mem: ((4 integer)): 6648 <= 44
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 44
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6649 <= nil
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6342 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 6650 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 6651 <= t
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: 1 => ((3 integer))
mem: ((3 integer)): 6585 <= 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 1
mem: ((5 integer)) => 44
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 6588 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 6340
mem: ((2 string-address)) => 6547
mem: ((3 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 6674 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (6340 6547 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 6340 => ((1 string-address))
mem: ((1 string-address)): 6676 <= 6340
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (6340 6547 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 6547 => ((2 string-address))
mem: ((2 string-address)): 6677 <= 6547
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (6340 6547 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 6678 <= 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((6547 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 6679 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((6340 integer) (raw)) => 44
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 44 => ((5 integer))
mem: ((5 integer)): 6680 <= 44
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 44
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 42 => ((5 integer))
mem: ((5 integer)): 6680 <= 42
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 1
mem: ((5 integer)) => 42
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 6681 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 6682 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 6683 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6342 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 6684 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((6547 string) (raw))
mem: ((6547 integer) (raw)) => 2
mem: ((6548 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 6685 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 6686 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: 2 => ((3 integer))
mem: ((3 integer)): 6678 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 6682 <= 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 6683 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6343 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 6684 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((6547 string) (raw))
mem: ((6547 integer) (raw)) => 2
mem: ((6549 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 6685 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 6686 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: 3 => ((3 integer))
mem: ((3 integer)): 6678 <= 3
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 6682 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 6683 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 6589 <= t
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 1
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 1 => ((7 integer))
mem: ((7 integer)): 6558 <= 1
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 6340
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 6705 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (6340 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 6340 => ((1 string-address))
mem: ((1 string-address)): 6707 <= 6340
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (6340 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 6708 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (6340 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 6709 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 44 => ((4 integer))
mem: ((4 integer)): 6710 <= 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 44
mem: ((3 integer)) => 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 6736 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (44 1)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 44 => ((1 integer))
mem: ((1 integer)): 6738 <= 44
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (44 1)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 1 => ((2 integer))
mem: ((2 integer)): 6739 <= 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 44
mem: ((2 integer)) => 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 6740 <= nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 1 => ((3 integer))
mem: ((3 integer)): 6709 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 1
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 1 => ((4 integer))
mem: ((4 integer)): 6710 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: 6767 => ((5 string-address))
mem: ((5 string-address)): 6711 <= 6767
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 6712 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 6713 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6714 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6341 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 6715 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((6767 string) (raw))
mem: ((6767 integer) (raw)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6768 => ((10 character-address))
mem: ((10 character-address)): 6716 <= 6768
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6768 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 6712 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 6713 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 6714 <= t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 6767
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 6767 => ((5 string-address))
mem: ((5 string-address)): 6556 <= 6767
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((6547 integer) (raw)) => 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 6559 <= 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 1
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 12: 3 => ((7 integer))
mem: ((7 integer)): 6558 <= 3
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 6340
mem: ((7 integer)) => 3
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 6769 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (6340 3 44)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 6340 => ((1 string-address))
mem: ((1 string-address)): 6771 <= 6340
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (6340 3 44)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 6772 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (6340 3 44)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 44 => ((3 integer))
mem: ((3 integer)): 6773 <= 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((6340 integer) (raw)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 44 => ((4 integer))
mem: ((4 integer)): 6774 <= 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 44
mem: ((3 integer)) => 44
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 6800 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (44 44)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 44 => ((1 integer))
mem: ((1 integer)): 6802 <= 44
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (44 44)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 44 => ((2 integer))
mem: ((2 integer)): 6803 <= 44
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 44
mem: ((2 integer)) => 44
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 6804 <= nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 44 => ((3 integer))
mem: ((3 integer)): 6773 <= 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 44
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 41 => ((4 integer))
mem: ((4 integer)): 6774 <= 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: 6831 => ((5 string-address))
mem: ((5 string-address)): 6775 <= 6831
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: 3 => ((6 integer))
mem: ((6 integer)): 6776 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 6777 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6344 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 6779 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6832 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6832
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6832 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 6776 <= 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 6777 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 4
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6345 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 6779 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6833 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6833
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6833 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 5 => ((6 integer))
mem: ((6 integer)): 6776 <= 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 6777 <= 2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6346 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 6779 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6834 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6834
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6834 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 6776 <= 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 6777 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6347 byte) (raw)) => 2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\2 => ((9 character))
mem: ((9 character)): 6779 <= #\2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6835 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6835
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\2 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6835 <= #\2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 6776 <= 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 6777 <= 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6348 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 6779 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6836 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6836
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6836 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 6776 <= 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 6777 <= 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
schedule: scheduling string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main for further processing
schedule: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6349 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 6779 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6837 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6837
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6837 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 6776 <= 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 6777 <= 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6350 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 6779 <= #\n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6838 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6838
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6838 <= #\n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 6776 <= 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 6777 <= 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6351 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 6779 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6839 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6839
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6839 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 6776 <= 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 6777 <= 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6352 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 6779 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6840 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6840
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6840 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 6776 <= 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 6777 <= 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6353 byte) (raw)) => g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 6779 <= #\g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6841 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6841
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6841 <= #\g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 6776 <= 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 6777 <= 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6354 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 6779 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6842 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6842
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6842 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 6776 <= 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 6777 <= 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6355 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 6779 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6843 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6843
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6843 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 6776 <= 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 6777 <= 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6356 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 6779 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6844 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6844
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6844 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 6776 <= 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 6777 <= 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6357 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 6779 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6845 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6845
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6845 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 6776 <= 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 6777 <= 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6358 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 6779 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6846 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6846
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6846 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 6776 <= 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 6777 <= 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6359 byte) (raw)) => <
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 6779 <= #\<
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6847 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6847
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6847 <= #\<
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 6776 <= 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 6777 <= 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6360 byte) (raw)) => -
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\- => ((9 character))
mem: ((9 character)): 6779 <= #\-
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6848 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6848
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => -
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\- => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6848 <= #\-
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 6776 <= 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 6777 <= 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6361 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 6779 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6849 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6849
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6849 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 6776 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 6777 <= 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6362 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 6779 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6850 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6850
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6850 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 6776 <= 22
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 6777 <= 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6363 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 6779 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6851 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6851
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6851 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 6776 <= 23
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 6777 <= 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6364 byte) (raw)) => c
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\c => ((9 character))
mem: ((9 character)): 6779 <= #\c
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6852 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6852
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => c
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\c => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6852 <= #\c
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 6776 <= 24
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 6777 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6365 byte) (raw)) => o
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\o => ((9 character))
mem: ((9 character)): 6779 <= #\o
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6853 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6853
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => o
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\o => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6853 <= #\o
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 6776 <= 25
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 6777 <= 22
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6366 byte) (raw)) => p
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\p => ((9 character))
mem: ((9 character)): 6779 <= #\p
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6854 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6854
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => p
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\p => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6854 <= #\p
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 6776 <= 26
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 6777 <= 23
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 26
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6367 byte) (raw)) => y
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\y => ((9 character))
mem: ((9 character)): 6779 <= #\y
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6855 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6855
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => y
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\y => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6855 <= #\y
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 26
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 27 => ((6 integer))
mem: ((6 integer)): 6776 <= 27
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 6777 <= 24
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 27
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 27
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6368 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 6779 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6856 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6856
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6856 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 27
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 28 => ((6 integer))
mem: ((6 integer)): 6776 <= 28
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 6777 <= 25
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 28
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 28
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6369 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 6779 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6857 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6857
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6857 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 28
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 29 => ((6 integer))
mem: ((6 integer)): 6776 <= 29
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 6777 <= 26
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 29
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 29
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6370 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 6779 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 26
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6858 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6858
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6858 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 29
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 30 => ((6 integer))
mem: ((6 integer)): 6776 <= 30
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 26
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 27 => ((7 integer))
mem: ((7 integer)): 6777 <= 27
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 30
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 30
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6371 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 6779 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 27
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6859 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6859
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6859 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 30
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 31 => ((6 integer))
mem: ((6 integer)): 6776 <= 31
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 27
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 28 => ((7 integer))
mem: ((7 integer)): 6777 <= 28
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 31
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 31
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6372 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 6779 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 28
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6860 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6860
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6860 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 31
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 32 => ((6 integer))
mem: ((6 integer)): 6776 <= 32
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 28
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 29 => ((7 integer))
mem: ((7 integer)): 6777 <= 29
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 32
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 32
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6373 byte) (raw)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\3 => ((9 character))
mem: ((9 character)): 6779 <= #\3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 29
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6861 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6861
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\3 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6861 <= #\3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 32
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 33 => ((6 integer))
mem: ((6 integer)): 6776 <= 33
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 29
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 30 => ((7 integer))
mem: ((7 integer)): 6777 <= 30
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 33
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 33
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6374 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 6779 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 30
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6862 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6862
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6862 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 33
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 34 => ((6 integer))
mem: ((6 integer)): 6776 <= 34
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 30
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 31 => ((7 integer))
mem: ((7 integer)): 6777 <= 31
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 34
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 34
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6375 byte) (raw)) => l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 6779 <= #\l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 31
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6863 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6863
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6863 <= #\l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 34
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 35 => ((6 integer))
mem: ((6 integer)): 6776 <= 35
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 31
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 32 => ((7 integer))
mem: ((7 integer)): 6777 <= 32
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 35
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 35
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6376 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 6779 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 32
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6864 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6864
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6864 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 35
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 36 => ((6 integer))
mem: ((6 integer)): 6776 <= 36
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 32
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 33 => ((7 integer))
mem: ((7 integer)): 6777 <= 33
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 36
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 36
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6377 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 6779 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 33
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6865 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6865
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6865 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 36
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 37 => ((6 integer))
mem: ((6 integer)): 6776 <= 37
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 33
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 34 => ((7 integer))
mem: ((7 integer)): 6777 <= 34
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 37
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 37
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6378 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 6779 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 34
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6866 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6866
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6866 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 37
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 38 => ((6 integer))
mem: ((6 integer)): 6776 <= 38
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 34
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 35 => ((7 integer))
mem: ((7 integer)): 6777 <= 35
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 38
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 38
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6379 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 6779 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 35
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6867 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6867
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6867 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 38
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 39 => ((6 integer))
mem: ((6 integer)): 6776 <= 39
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 35
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 36 => ((7 integer))
mem: ((7 integer)): 6777 <= 36
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 39
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 39
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6380 byte) (raw)) => a
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 6779 <= #\a
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 36
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6868 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6868
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6868 <= #\a
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 39
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 40 => ((6 integer))
mem: ((6 integer)): 6776 <= 40
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 36
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 37 => ((7 integer))
mem: ((7 integer)): 6777 <= 37
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 40
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 40
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6381 byte) (raw)) => l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 6779 <= #\l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 37
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6869 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6869
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6869 <= #\l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 40
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 41 => ((6 integer))
mem: ((6 integer)): 6776 <= 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 37
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 38 => ((7 integer))
mem: ((7 integer)): 6777 <= 38
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 41
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 41
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6382 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 6779 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 38
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6870 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6870
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6870 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 42 => ((6 integer))
mem: ((6 integer)): 6776 <= 42
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 38
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 39 => ((7 integer))
mem: ((7 integer)): 6777 <= 39
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 42
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 42
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6383 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 6779 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 39
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6871 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6871
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6871 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 42
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 43 => ((6 integer))
mem: ((6 integer)): 6776 <= 43
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 39
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 40 => ((7 integer))
mem: ((7 integer)): 6777 <= 40
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 43
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 6778 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 43
array-len: ((6340 string) (raw))
mem: ((6340 integer) (raw)) => 44
mem: ((6384 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 6779 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 40
array-len: ((6831 string) (raw))
mem: ((6831 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6872 => ((10 character-address))
mem: ((10 character-address)): 6780 <= 6872
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 6872 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 43
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 44 => ((6 integer))
mem: ((6 integer)): 6776 <= 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 40
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 41 => ((7 integer))
mem: ((7 integer)): 6777 <= 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 44
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 6778 <= t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 6831
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 6831 => ((6 string-address))
mem: ((6 string-address)): 6557 <= 6831
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 6767
mem: ((6 string-address)) => 6831
run: parse-instruction-trace/parse-traces/main 9: 6767 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 6146 <= 6767
run: parse-instruction-trace/parse-traces/main 9: 6831 => ((5 string-address))
mem: ((5 string-address)): 6120 <= 6831
run: parse-instruction-trace/parse-traces/main 10: (((9 string-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((2 offset)))
run: parse-instruction-trace/parse-traces/main 10: 6147 => ((9 string-address-address))
mem: ((9 string-address-address)): 6124 <= 6147
run: parse-instruction-trace/parse-traces/main 11: (((9 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 6831
run: parse-instruction-trace/parse-traces/main 11: 6831 => ((9 string-address-address) (deref))
mem: ((9 string-address-address) (deref)): 6147 <= 6831
run: parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 instruction-trace-address)))
mem: ((3 instruction-trace-address)) => 6145
run: parse-traces/main 18: 6145 => ((3 instruction-trace-address))
mem: ((3 instruction-trace-address)): 1311 <= 6145
run: parse-traces/main 19: (((2 buffer-address)) <- ((append)) ((2 buffer-address)) ((3 instruction-trace-address)))
mem: ((2 buffer-address)) => 1369
mem: ((3 instruction-trace-address)) => 6145
run: append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/parse-traces/main 0: 6873 => ((default-space space-address))
run: append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1369 6145)
run: append/parse-traces/main 1: 1369 => ((1 buffer-address))
mem: ((1 buffer-address)): 6875 <= 1369
run: append/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1369 6145)
run: append/parse-traces/main 2: 6145 => ((2 character))
mem: ((2 character)): 6876 <= 6145
run: append/parse-traces/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1369
run: buffer-full?/append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/parse-traces/main 0: 6904 => ((default-space space-address))
run: buffer-full?/append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1369)
run: buffer-full?/append/parse-traces/main 1: 1369 => ((1 buffer-address))
mem: ((1 buffer-address)): 6906 <= 1369
run: buffer-full?/append/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((1369 integer) (raw)) => 2
run: buffer-full?/append/parse-traces/main 2: 2 => ((2 integer))
mem: ((2 integer)): 6907 <= 2
run: buffer-full?/append/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1370 string-address) (raw)) => 1371
run: buffer-full?/append/parse-traces/main 3: 1371 => ((3 string-address))
mem: ((3 string-address)): 6908 <= 1371
run: buffer-full?/append/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1371 integer) (raw)) => 30
run: buffer-full?/append/parse-traces/main 4: 30 => ((4 integer))
mem: ((4 integer)): 6909 <= 30
run: buffer-full?/append/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 2
mem: ((4 integer)) => 30
run: buffer-full?/append/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6910 <= nil
run: buffer-full?/append/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 6877 <= nil
run: append/parse-traces/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/parse-traces/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/parse-traces/main 6: 1369 => ((4 integer-address))
mem: ((4 integer-address)): 6878 <= 1369
run: append/parse-traces/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1370 string-address) (raw)) => 1371
run: append/parse-traces/main 7: 1371 => ((5 string-address))
mem: ((5 string-address)): 6879 <= 1371
run: append/parse-traces/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 2
array-len: ((1371 string) (raw))
mem: ((1371 integer) (raw)) => 30
run: append/parse-traces/main 8: 1374 => ((6 byte-address))
mem: ((6 byte-address)): 6880 <= 1374
run: append/parse-traces/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 6145
run: append/parse-traces/main 9: 6145 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 1374 <= 6145
run: append/parse-traces/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 2
run: append/parse-traces/main 10: 3 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1369 <= 3
run: append/parse-traces/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 1369
run: parse-traces/main 19: 1369 => ((2 buffer-address))
mem: ((2 buffer-address)): 1310 <= 1369
run: parse-traces/main 20: (((jump)) ((-15 offset)))
run: parse-traces/main 6: next-line
run: parse-traces/main 7: (((6 boolean)) <- ((end-of-stream?)) ((1 stream-address)))
mem: ((1 stream-address)) => 1305
run: end-of-stream?/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: end-of-stream?/parse-traces/main 0: 6935 => ((default-space space-address))
run: end-of-stream?/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1305)
run: end-of-stream?/parse-traces/main 1: 1305 => ((1 stream-address))
mem: ((1 stream-address)): 6937 <= 1305
run: end-of-stream?/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 stream-address) (deref)) ((0 offset)))
mem: ((1305 integer) (raw)) => 184
run: end-of-stream?/parse-traces/main 2: 184 => ((2 integer))
mem: ((2 integer)): 6938 <= 184
run: end-of-stream?/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1306 string-address) (raw)) => 1031
run: end-of-stream?/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 6939 <= 1031
run: end-of-stream?/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: end-of-stream?/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 6940 <= 242
run: end-of-stream?/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 184
mem: ((4 integer)) => 242
run: end-of-stream?/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6941 <= nil
run: end-of-stream?/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: parse-traces/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1314 <= nil
run: parse-traces/main 8: (((jump-if)) ((6 boolean)) ((15 offset)))
mem: ((6 boolean)) => nil
run: parse-traces/main 9: (((7 string-address)) <- ((read-line)) ((1 stream-address)))
mem: ((1 stream-address)) => 1305
run: read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-line/parse-traces/main 0: 6966 => ((default-space space-address))
run: read-line/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1305)
run: read-line/parse-traces/main 1: 1305 => ((1 stream-address))
mem: ((1 stream-address)): 6968 <= 1305
run: read-line/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 stream-address) (deref)) ((0 offset)))
run: read-line/parse-traces/main 2: 1305 => ((2 integer-address))
mem: ((2 integer-address)): 6969 <= 1305
run: read-line/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1306 string-address) (raw)) => 1031
run: read-line/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 6970 <= 1031
run: read-line/parse-traces/main 4: (((4 integer)) <- ((find-next)) ((3 string-address)) ((
 literal)) ((2 integer-address) (deref)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 184
run: find-next/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/read-line/parse-traces/main 0: 6997 => ((default-space space-address))
run: find-next/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 #\newline 184)
run: find-next/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 6999 <= 1031
run: find-next/read-line/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1031 #\newline 184)
run: find-next/read-line/parse-traces/main 2: #\newline => ((2 character))
mem: ((2 character)): 7000 <= #\newline
run: find-next/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 #\newline 184)
run: find-next/read-line/parse-traces/main 3: 184 => ((3 integer))
mem: ((3 integer)): 7001 <= 184
run: find-next/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: find-next/read-line/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 7002 <= 242
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 184
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 184
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1216 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 7004 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 184
run: find-next/read-line/parse-traces/main 10: 185 => ((3 integer))
mem: ((3 integer)): 7001 <= 185
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 185
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 185
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1217 byte) (raw)) => u
run: find-next/read-line/parse-traces/main 7: #\u => ((6 byte))
mem: ((6 byte)): 7004 <= #\u
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => u
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 185
run: find-next/read-line/parse-traces/main 10: 186 => ((3 integer))
mem: ((3 integer)): 7001 <= 186
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 186
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 186
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1218 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 7004 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 186
run: find-next/read-line/parse-traces/main 10: 187 => ((3 integer))
mem: ((3 integer)): 7001 <= 187
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 187
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 187
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1219 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 7004 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 187
run: find-next/read-line/parse-traces/main 10: 188 => ((3 integer))
mem: ((3 integer)): 7001 <= 188
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 188
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 188
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1220 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 7004 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 188
run: find-next/read-line/parse-traces/main 10: 189 => ((3 integer))
mem: ((3 integer)): 7001 <= 189
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 189
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 189
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1221 byte) (raw)) => m
run: find-next/read-line/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 7004 <= #\m
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 189
run: find-next/read-line/parse-traces/main 10: 190 => ((3 integer))
mem: ((3 integer)): 7001 <= 190
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 190
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 190
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1222 byte) (raw)) => a
run: find-next/read-line/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 7004 <= #\a
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 190
run: find-next/read-line/parse-traces/main 10: 191 => ((3 integer))
mem: ((3 integer)): 7001 <= 191
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 191
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 191
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1223 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 7004 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 191
run: find-next/read-line/parse-traces/main 10: 192 => ((3 integer))
mem: ((3 integer)): 7001 <= 192
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 192
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 192
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1224 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 7004 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 192
run: find-next/read-line/parse-traces/main 10: 193 => ((3 integer))
mem: ((3 integer)): 7001 <= 193
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 193
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 193
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1225 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 7004 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 193
run: find-next/read-line/parse-traces/main 10: 194 => ((3 integer))
mem: ((3 integer)): 7001 <= 194
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 194
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 194
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1226 byte) (raw)) => 1
run: find-next/read-line/parse-traces/main 7: #\1 => ((6 byte))
mem: ((6 byte)): 7004 <= #\1
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 1
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 194
run: find-next/read-line/parse-traces/main 10: 195 => ((3 integer))
mem: ((3 integer)): 7001 <= 195
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 195
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 195
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1227 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 7004 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 195
run: find-next/read-line/parse-traces/main 10: 196 => ((3 integer))
mem: ((3 integer)): 7001 <= 196
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 196
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 196
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1228 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 7004 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 196
run: find-next/read-line/parse-traces/main 10: 197 => ((3 integer))
mem: ((3 integer)): 7001 <= 197
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 197
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 197
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1229 byte) (raw)) => 3
run: find-next/read-line/parse-traces/main 7: #\3 => ((6 byte))
mem: ((6 byte)): 7004 <= #\3
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 3
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 197
run: find-next/read-line/parse-traces/main 10: 198 => ((3 integer))
mem: ((3 integer)): 7001 <= 198
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 198
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 198
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1230 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 7004 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 198
run: find-next/read-line/parse-traces/main 10: 199 => ((3 integer))
mem: ((3 integer)): 7001 <= 199
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 199
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 199
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1231 byte) (raw)) => =
run: find-next/read-line/parse-traces/main 7: #\= => ((6 byte))
mem: ((6 byte)): 7004 <= #\=
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => =
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 199
run: find-next/read-line/parse-traces/main 10: 200 => ((3 integer))
mem: ((3 integer)): 7001 <= 200
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 200
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 200
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1232 byte) (raw)) => >
run: find-next/read-line/parse-traces/main 7: #\> => ((6 byte))
mem: ((6 byte)): 7004 <= #\>
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => >
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 200
run: find-next/read-line/parse-traces/main 10: 201 => ((3 integer))
mem: ((3 integer)): 7001 <= 201
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 201
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 201
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1233 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 7004 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 201
run: find-next/read-line/parse-traces/main 10: 202 => ((3 integer))
mem: ((3 integer)): 7001 <= 202
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 202
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 202
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1234 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 7004 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 202
run: find-next/read-line/parse-traces/main 10: 203 => ((3 integer))
mem: ((3 integer)): 7001 <= 203
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 203
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 203
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1235 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 7004 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 203
run: find-next/read-line/parse-traces/main 10: 204 => ((3 integer))
mem: ((3 integer)): 7001 <= 204
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 204
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 204
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1236 byte) (raw)) => 2
run: find-next/read-line/parse-traces/main 7: #\2 => ((6 byte))
mem: ((6 byte)): 7004 <= #\2
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 2
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 204
run: find-next/read-line/parse-traces/main 10: 205 => ((3 integer))
mem: ((3 integer)): 7001 <= 205
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 205
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 205
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1237 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 7004 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 205
run: find-next/read-line/parse-traces/main 10: 206 => ((3 integer))
mem: ((3 integer)): 7001 <= 206
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 206
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 206
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1238 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 7004 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 206
run: find-next/read-line/parse-traces/main 10: 207 => ((3 integer))
mem: ((3 integer)): 7001 <= 207
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 207
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 207
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1239 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 7004 <= #\n
schedule: scheduling find-next/read-line/parse-traces/main for further processing
schedule: find-next/read-line/parse-traces/main
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 207
run: find-next/read-line/parse-traces/main 10: 208 => ((3 integer))
mem: ((3 integer)): 7001 <= 208
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 208
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 208
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1240 byte) (raw)) => t
run: find-next/read-line/parse-traces/main 7: #\t => ((6 byte))
mem: ((6 byte)): 7004 <= #\t
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => t
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 208
run: find-next/read-line/parse-traces/main 10: 209 => ((3 integer))
mem: ((3 integer)): 7001 <= 209
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 209
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 209
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1241 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 7004 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 209
run: find-next/read-line/parse-traces/main 10: 210 => ((3 integer))
mem: ((3 integer)): 7001 <= 210
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 210
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 210
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1242 byte) (raw)) => g
run: find-next/read-line/parse-traces/main 7: #\g => ((6 byte))
mem: ((6 byte)): 7004 <= #\g
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => g
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 210
run: find-next/read-line/parse-traces/main 10: 211 => ((3 integer))
mem: ((3 integer)): 7001 <= 211
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 211
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 211
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1243 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 7004 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 211
run: find-next/read-line/parse-traces/main 10: 212 => ((3 integer))
mem: ((3 integer)): 7001 <= 212
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 212
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 212
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1244 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 7004 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 212
run: find-next/read-line/parse-traces/main 10: 213 => ((3 integer))
mem: ((3 integer)): 7001 <= 213
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 213
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 213
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1245 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 7004 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 213
run: find-next/read-line/parse-traces/main 10: 214 => ((3 integer))
mem: ((3 integer)): 7001 <= 214
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 214
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 214
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1246 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 7004 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7005 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 214
run: find-next/read-line/parse-traces/main 10: 215 => ((3 integer))
mem: ((3 integer)): 7001 <= 215
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 215
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7003 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 215
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1247 byte) (raw)) => 

run: find-next/read-line/parse-traces/main 7: #\newline => ((6 byte))
mem: ((6 byte)): 7004 <= #\newline
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 

mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 7005 <= t
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/read-line/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 215
run: read-line/parse-traces/main 4: 215 => ((4 integer))
mem: ((4 integer)): 6971 <= 215
run: read-line/parse-traces/main 5: (((5 string-address)) <- ((string-copy)) ((3 string-address)) ((2 integer-address) (deref)) ((4 integer)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 184
mem: ((4 integer)) => 215
run: string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/read-line/parse-traces/main 0: 7028 => ((default-space space-address))
run: string-copy/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 184 215)
run: string-copy/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 7030 <= 1031
run: string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1031 184 215)
run: string-copy/read-line/parse-traces/main 2: 184 => ((2 integer))
mem: ((2 integer)): 7031 <= 184
run: string-copy/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 184 215)
run: string-copy/read-line/parse-traces/main 3: 215 => ((3 integer))
mem: ((3 integer)): 7032 <= 215
run: string-copy/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: string-copy/read-line/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 7033 <= 242
run: string-copy/read-line/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 242
mem: ((3 integer)) => 215
run: min/string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/read-line/parse-traces/main 0: 7059 => ((default-space space-address))
run: min/string-copy/read-line/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (242 215)
run: min/string-copy/read-line/parse-traces/main 1: 242 => ((1 integer))
mem: ((1 integer)): 7061 <= 242
run: min/string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (242 215)
run: min/string-copy/read-line/parse-traces/main 2: 215 => ((2 integer))
mem: ((2 integer)): 7062 <= 215
run: min/string-copy/read-line/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 242
mem: ((2 integer)) => 215
run: min/string-copy/read-line/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 7063 <= nil
run: min/string-copy/read-line/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/read-line/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 215
run: string-copy/read-line/parse-traces/main 5: 215 => ((3 integer))
mem: ((3 integer)): 7032 <= 215
run: string-copy/read-line/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 215
mem: ((2 integer)) => 184
run: string-copy/read-line/parse-traces/main 6: 31 => ((4 integer))
mem: ((4 integer)): 7033 <= 31
run: string-copy/read-line/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 31
run: string-copy/read-line/parse-traces/main 7: 7090 => ((5 string-address))
mem: ((5 string-address)): 7034 <= 7090
run: string-copy/read-line/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 184
run: string-copy/read-line/parse-traces/main 8: 184 => ((6 integer))
mem: ((6 integer)): 7035 <= 184
run: string-copy/read-line/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/read-line/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 7036 <= 0
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 184
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 184
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1216 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 7038 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7091 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7091
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7091 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 184
run: string-copy/read-line/parse-traces/main 15: 185 => ((6 integer))
mem: ((6 integer)): 7035 <= 185
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/read-line/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 7036 <= 1
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 185
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 185
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1217 byte) (raw)) => u
run: string-copy/read-line/parse-traces/main 12: #\u => ((9 character))
mem: ((9 character)): 7038 <= #\u
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7092 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7092
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => u
run: string-copy/read-line/parse-traces/main 14: #\u => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7092 <= #\u
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 185
run: string-copy/read-line/parse-traces/main 15: 186 => ((6 integer))
mem: ((6 integer)): 7035 <= 186
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/read-line/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 7036 <= 2
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 186
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 186
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1218 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 7038 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7093 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7093
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7093 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 186
run: string-copy/read-line/parse-traces/main 15: 187 => ((6 integer))
mem: ((6 integer)): 7035 <= 187
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/read-line/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 7036 <= 3
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 187
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 187
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1219 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 7038 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7094 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7094
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7094 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 187
run: string-copy/read-line/parse-traces/main 15: 188 => ((6 integer))
mem: ((6 integer)): 7035 <= 188
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/read-line/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 7036 <= 4
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 188
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 188
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1220 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 7038 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7095 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7095
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7095 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 188
run: string-copy/read-line/parse-traces/main 15: 189 => ((6 integer))
mem: ((6 integer)): 7035 <= 189
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/read-line/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 7036 <= 5
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 189
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 189
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1221 byte) (raw)) => m
run: string-copy/read-line/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 7038 <= #\m
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7096 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7096
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/read-line/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7096 <= #\m
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 189
run: string-copy/read-line/parse-traces/main 15: 190 => ((6 integer))
mem: ((6 integer)): 7035 <= 190
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/read-line/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 7036 <= 6
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 190
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 190
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1222 byte) (raw)) => a
run: string-copy/read-line/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 7038 <= #\a
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7097 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7097
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/read-line/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7097 <= #\a
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 190
run: string-copy/read-line/parse-traces/main 15: 191 => ((6 integer))
mem: ((6 integer)): 7035 <= 191
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/read-line/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 7036 <= 7
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 191
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 191
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1223 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 7038 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7098 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7098
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7098 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 191
run: string-copy/read-line/parse-traces/main 15: 192 => ((6 integer))
mem: ((6 integer)): 7035 <= 192
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/read-line/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 7036 <= 8
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 192
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 192
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1224 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 7038 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7099 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7099
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7099 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 192
run: string-copy/read-line/parse-traces/main 15: 193 => ((6 integer))
mem: ((6 integer)): 7035 <= 193
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/read-line/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 7036 <= 9
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 193
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 193
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1225 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 7038 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7100 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7100
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7100 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 193
run: string-copy/read-line/parse-traces/main 15: 194 => ((6 integer))
mem: ((6 integer)): 7035 <= 194
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/read-line/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 7036 <= 10
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 194
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 194
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1226 byte) (raw)) => 1
run: string-copy/read-line/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 7038 <= #\1
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7101 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7101
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/read-line/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7101 <= #\1
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 194
run: string-copy/read-line/parse-traces/main 15: 195 => ((6 integer))
mem: ((6 integer)): 7035 <= 195
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/read-line/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 7036 <= 11
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 195
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 195
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1227 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 7038 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7102 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7102
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7102 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 195
run: string-copy/read-line/parse-traces/main 15: 196 => ((6 integer))
mem: ((6 integer)): 7035 <= 196
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/read-line/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 7036 <= 12
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 196
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 196
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1228 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 7038 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7103 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7103
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7103 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 196
run: string-copy/read-line/parse-traces/main 15: 197 => ((6 integer))
mem: ((6 integer)): 7035 <= 197
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/read-line/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 7036 <= 13
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 197
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 197
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1229 byte) (raw)) => 3
run: string-copy/read-line/parse-traces/main 12: #\3 => ((9 character))
mem: ((9 character)): 7038 <= #\3
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7104 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7104
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 3
run: string-copy/read-line/parse-traces/main 14: #\3 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7104 <= #\3
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 197
run: string-copy/read-line/parse-traces/main 15: 198 => ((6 integer))
mem: ((6 integer)): 7035 <= 198
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/read-line/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 7036 <= 14
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 198
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 198
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1230 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 7038 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7105 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7105
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7105 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 198
run: string-copy/read-line/parse-traces/main 15: 199 => ((6 integer))
mem: ((6 integer)): 7035 <= 199
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/read-line/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 7036 <= 15
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 199
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 199
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1231 byte) (raw)) => =
run: string-copy/read-line/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 7038 <= #\=
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7106 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7106
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/read-line/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7106 <= #\=
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 199
run: string-copy/read-line/parse-traces/main 15: 200 => ((6 integer))
mem: ((6 integer)): 7035 <= 200
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/read-line/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 7036 <= 16
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 200
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 200
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1232 byte) (raw)) => >
run: string-copy/read-line/parse-traces/main 12: #\> => ((9 character))
mem: ((9 character)): 7038 <= #\>
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7107 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7107
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => >
run: string-copy/read-line/parse-traces/main 14: #\> => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7107 <= #\>
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 200
run: string-copy/read-line/parse-traces/main 15: 201 => ((6 integer))
mem: ((6 integer)): 7035 <= 201
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/read-line/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 7036 <= 17
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 201
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 201
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1233 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 7038 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7108 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7108
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7108 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 201
run: string-copy/read-line/parse-traces/main 15: 202 => ((6 integer))
mem: ((6 integer)): 7035 <= 202
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/read-line/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 7036 <= 18
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 202
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 202
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1234 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 7038 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7109 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7109
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7109 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 202
run: string-copy/read-line/parse-traces/main 15: 203 => ((6 integer))
mem: ((6 integer)): 7035 <= 203
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/read-line/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 7036 <= 19
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 203
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 203
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1235 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 7038 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7110 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7110
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7110 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 203
run: string-copy/read-line/parse-traces/main 15: 204 => ((6 integer))
mem: ((6 integer)): 7035 <= 204
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/read-line/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 7036 <= 20
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 204
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 204
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1236 byte) (raw)) => 2
run: string-copy/read-line/parse-traces/main 12: #\2 => ((9 character))
mem: ((9 character)): 7038 <= #\2
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7111 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7111
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 2
run: string-copy/read-line/parse-traces/main 14: #\2 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7111 <= #\2
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 204
run: string-copy/read-line/parse-traces/main 15: 205 => ((6 integer))
mem: ((6 integer)): 7035 <= 205
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/read-line/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 7036 <= 21
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 205
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 205
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1237 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 7038 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7112 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7112
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7112 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 205
run: string-copy/read-line/parse-traces/main 15: 206 => ((6 integer))
mem: ((6 integer)): 7035 <= 206
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/read-line/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 7036 <= 22
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 206
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 206
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1238 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 7038 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7113 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7113
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7113 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 206
run: string-copy/read-line/parse-traces/main 15: 207 => ((6 integer))
mem: ((6 integer)): 7035 <= 207
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/read-line/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 7036 <= 23
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 207
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 207
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1239 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 7038 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7114 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7114
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7114 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 207
run: string-copy/read-line/parse-traces/main 15: 208 => ((6 integer))
mem: ((6 integer)): 7035 <= 208
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/read-line/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 7036 <= 24
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 208
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 208
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1240 byte) (raw)) => t
run: string-copy/read-line/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 7038 <= #\t
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7115 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7115
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/read-line/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7115 <= #\t
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 208
run: string-copy/read-line/parse-traces/main 15: 209 => ((6 integer))
mem: ((6 integer)): 7035 <= 209
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/read-line/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 7036 <= 25
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 209
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 209
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1241 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 7038 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7116 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7116
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7116 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 209
run: string-copy/read-line/parse-traces/main 15: 210 => ((6 integer))
mem: ((6 integer)): 7035 <= 210
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/read-line/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 7036 <= 26
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 210
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 210
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1242 byte) (raw)) => g
run: string-copy/read-line/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 7038 <= #\g
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 26
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7117 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7117
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/read-line/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7117 <= #\g
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 210
run: string-copy/read-line/parse-traces/main 15: 211 => ((6 integer))
mem: ((6 integer)): 7035 <= 211
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 26
run: string-copy/read-line/parse-traces/main 16: 27 => ((7 integer))
mem: ((7 integer)): 7036 <= 27
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 211
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 211
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1243 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 7038 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 27
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7118 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7118
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7118 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 211
run: string-copy/read-line/parse-traces/main 15: 212 => ((6 integer))
mem: ((6 integer)): 7035 <= 212
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 27
run: string-copy/read-line/parse-traces/main 16: 28 => ((7 integer))
mem: ((7 integer)): 7036 <= 28
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 212
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 212
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1244 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 7038 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 28
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7119 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7119
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7119 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 212
run: string-copy/read-line/parse-traces/main 15: 213 => ((6 integer))
mem: ((6 integer)): 7035 <= 213
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 28
run: string-copy/read-line/parse-traces/main 16: 29 => ((7 integer))
mem: ((7 integer)): 7036 <= 29
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 213
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 213
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1245 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 7038 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 29
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7120 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7120
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7120 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 213
run: string-copy/read-line/parse-traces/main 15: 214 => ((6 integer))
mem: ((6 integer)): 7035 <= 214
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 29
run: string-copy/read-line/parse-traces/main 16: 30 => ((7 integer))
mem: ((7 integer)): 7036 <= 30
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 214
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7037 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 214
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1246 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 7038 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 30
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 7121 => ((10 character-address))
mem: ((10 character-address)): 7039 <= 7121
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7121 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 214
run: string-copy/read-line/parse-traces/main 15: 215 => ((6 integer))
mem: ((6 integer)): 7035 <= 215
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 30
run: string-copy/read-line/parse-traces/main 16: 31 => ((7 integer))
mem: ((7 integer)): 7036 <= 31
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 215
mem: ((3 integer)) => 215
run: string-copy/read-line/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 7037 <= t
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/read-line/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 7090
run: read-line/parse-traces/main 5: 7090 => ((5 string-address))
mem: ((5 string-address)): 6972 <= 7090
run: read-line/parse-traces/main 6: (((2 integer-address) (deref)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 215
run: read-line/parse-traces/main 6: 216 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1305 <= 216
run: read-line/parse-traces/main 7: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 7090
run: parse-traces/main 9: 7090 => ((7 string-address))
mem: ((7 string-address)): 1315 <= 7090
run: parse-traces/main 10: (((8 trace-address)) <- ((parse-trace)) ((7 string-address)))
mem: ((7 string-address)) => 7090
run: parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-trace/parse-traces/main 0: 7122 => ((default-space space-address))
run: parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7090)
run: parse-trace/parse-traces/main 1: 7090 => ((1 string-address))
mem: ((1 string-address)): 7124 <= 7090
run: parse-trace/parse-traces/main 2: (((2 trace-address)) <- ((new)) ((trace literal)))
run: parse-trace/parse-traces/main 2: 7153 => ((2 trace-address))
mem: ((2 trace-address)): 7125 <= 7153
run: parse-trace/parse-traces/main 3: (((3 string-address)) <- ((new)) : )
run: parse-trace/parse-traces/main 3: 7155 => ((3 string-address))
mem: ((3 string-address)): 7126 <= 7155
run: parse-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first-at-substring)) ((1 string-address)) ((3 string-address)))
mem: ((1 string-address)) => 7090
mem: ((3 string-address)) => 7155
run: split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-trace/parse-traces/main 0: 7158 => ((default-space space-address))
run: split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7090 7155)
run: split-first-at-substring/parse-trace/parse-traces/main 1: 7090 => ((1 string-address))
mem: ((1 string-address)): 7160 <= 7090
run: split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (7090 7155)
run: split-first-at-substring/parse-trace/parse-traces/main 2: 7155 => ((2 string-address))
mem: ((2 string-address)): 7161 <= 7155
run: split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7090 integer) (raw)) => 31
run: split-first-at-substring/parse-trace/parse-traces/main 3: 31 => ((3 integer))
mem: ((3 integer)): 7162 <= 31
run: split-first-at-substring/parse-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 31
run: split-first-at-substring/parse-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 7163 <= nil
run: split-first-at-substring/parse-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 7090
mem: ((2 string-address)) => 7155
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 7189 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7090 7155 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 7090 => ((1 string-address))
mem: ((1 string-address)): 7191 <= 7090
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (7090 7155 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 7155 => ((2 string-address))
mem: ((2 string-address)): 7192 <= 7155
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7090 7155 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 7193 <= 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((7155 string) (raw))
mem: ((7155 integer) (raw)) => 2
mem: ((7156 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 7194 <= #\:
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7090 integer) (raw)) => 31
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 31 => ((5 integer))
mem: ((5 integer)): 7195 <= 31
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 31
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 7196 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 7090
mem: ((2 string-address)) => 7155
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 7220 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7090 7155 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 7090 => ((1 string-address))
mem: ((1 string-address)): 7222 <= 7090
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (7090 7155 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 7155 => ((2 string-address))
mem: ((2 string-address)): 7223 <= 7155
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7090 7155 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 7224 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((7155 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 7225 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7090 integer) (raw)) => 31
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 31 => ((5 integer))
mem: ((5 integer)): 7226 <= 31
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 31
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 29 => ((5 integer))
mem: ((5 integer)): 7226 <= 29
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 29
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 7227 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 7228 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 7229 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7091 byte) (raw)) => r
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\r => ((9 character))
mem: ((9 character)): 7230 <= #\r
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((7155 string) (raw))
mem: ((7155 integer) (raw)) => 2
mem: ((7156 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 7231 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => r
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 7232 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7197 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 7193 <= 1
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 7090
mem: ((4 character)) => :
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 7251 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7090 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 7090 => ((1 string-address))
mem: ((1 string-address)): 7253 <= 7090
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (7090 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 7254 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7090 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 7255 <= 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7090 integer) (raw)) => 31
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 31 => ((4 integer))
mem: ((4 integer)): 7256 <= 31
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 31
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7257 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7092 byte) (raw)) => u
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\u => ((6 byte))
mem: ((6 byte)): 7258 <= #\u
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => u
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7259 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 7255 <= 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 31
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7257 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7093 byte) (raw)) => n
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 7258 <= #\n
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7259 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 7255 <= 3
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 31
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7257 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7094 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 7258 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 7259 <= t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: 3 => ((3 integer))
mem: ((3 integer)): 7193 <= 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 31
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 7196 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 7090
mem: ((2 string-address)) => 7155
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 7282 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7090 7155 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 7090 => ((1 string-address))
mem: ((1 string-address)): 7284 <= 7090
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (7090 7155 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 7155 => ((2 string-address))
mem: ((2 string-address)): 7285 <= 7155
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7090 7155 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 7286 <= 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((7155 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 7287 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7090 integer) (raw)) => 31
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 31 => ((5 integer))
mem: ((5 integer)): 7288 <= 31
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 31
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 29 => ((5 integer))
mem: ((5 integer)): 7288 <= 29
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 29
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 7289 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 7290 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 7291 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7094 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 7292 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((7155 string) (raw))
mem: ((7155 integer) (raw)) => 2
mem: ((7156 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 7293 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 7294 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 4 => ((3 integer))
mem: ((3 integer)): 7286 <= 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 7290 <= 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 7291 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7095 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 7292 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((7155 string) (raw))
mem: ((7155 integer) (raw)) => 2
mem: ((7157 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 7293 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 7294 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 5 => ((3 integer))
mem: ((3 integer)): 7286 <= 5
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 7290 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 7291 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 7197 <= t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: split-first-at-substring/parse-trace/parse-traces/main 9: 3 => ((7 integer))
mem: ((7 integer)): 7166 <= 3
run: split-first-at-substring/parse-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 7090
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 7313 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7090 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 7090 => ((1 string-address))
mem: ((1 string-address)): 7315 <= 7090
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (7090 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 7316 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7090 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 7317 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7090 integer) (raw)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 31 => ((4 integer))
mem: ((4 integer)): 7318 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 31
mem: ((3 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 7344 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (31 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 31 => ((1 integer))
mem: ((1 integer)): 7346 <= 31
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (31 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 7347 <= 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 31
mem: ((2 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 7348 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 3 => ((3 integer))
mem: ((3 integer)): 7317 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 3
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 3 => ((4 integer))
mem: ((4 integer)): 7318 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 7375 => ((5 string-address))
mem: ((5 string-address)): 7319 <= 7375
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 7320 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 7321 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7322 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7091 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 7323 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((7375 string) (raw))
mem: ((7375 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7376 => ((10 character-address))
mem: ((10 character-address)): 7324 <= 7376
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7376 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 7320 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 7321 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7322 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7092 byte) (raw)) => u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\u => ((9 character))
mem: ((9 character)): 7323 <= #\u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((7375 string) (raw))
mem: ((7375 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7377 => ((10 character-address))
mem: ((10 character-address)): 7324 <= 7377
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\u => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7377 <= #\u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 7320 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 7321 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7322 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7093 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 7323 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((7375 string) (raw))
mem: ((7375 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7378 => ((10 character-address))
mem: ((10 character-address)): 7324 <= 7378
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7378 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 7320 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 7321 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 7322 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 7375
run: split-first-at-substring/parse-trace/parse-traces/main 10: 7375 => ((5 string-address))
mem: ((5 string-address)): 7164 <= 7375
run: split-first-at-substring/parse-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((7155 integer) (raw)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 7167 <= 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 3
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: 5 => ((7 integer))
mem: ((7 integer)): 7166 <= 5
run: split-first-at-substring/parse-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 7090
mem: ((7 integer)) => 5
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 7379 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7090 5 31)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 7090 => ((1 string-address))
mem: ((1 string-address)): 7381 <= 7090
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (7090 5 31)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 5 => ((2 integer))
mem: ((2 integer)): 7382 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7090 5 31)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 31 => ((3 integer))
mem: ((3 integer)): 7383 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7090 integer) (raw)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 31 => ((4 integer))
mem: ((4 integer)): 7384 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 31
mem: ((3 integer)) => 31
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 7410 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (31 31)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 31 => ((1 integer))
mem: ((1 integer)): 7412 <= 31
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (31 31)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 31 => ((2 integer))
mem: ((2 integer)): 7413 <= 31
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 31
mem: ((2 integer)) => 31
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 7414 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 31 => ((3 integer))
mem: ((3 integer)): 7383 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 31
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 26 => ((4 integer))
mem: ((4 integer)): 7384 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 7441 => ((5 string-address))
mem: ((5 string-address)): 7385 <= 7441
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 5 => ((6 integer))
mem: ((6 integer)): 7386 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 7387 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7096 byte) (raw)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 7389 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7442 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7442
schedule: scheduling string-copy/split-first-at-substring/parse-trace/parse-traces/main for further processing
schedule: string-copy/split-first-at-substring/parse-trace/parse-traces/main
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7442 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 7386 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 7387 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7097 byte) (raw)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 7389 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7443 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7443
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7443 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 7386 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 7387 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7098 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 7389 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7444 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7444
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7444 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 7386 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 7387 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7099 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 7389 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7445 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7445
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7445 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 7386 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 7387 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7100 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 7389 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7446 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7446
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7446 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 7386 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 7387 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7101 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 7389 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7447 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7447
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7447 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 7386 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 7387 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7102 byte) (raw)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 7389 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7448 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7448
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7448 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 7386 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 7387 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7103 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 7389 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7449 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7449
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7449 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 7386 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 7387 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7104 byte) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\3 => ((9 character))
mem: ((9 character)): 7389 <= #\3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7450 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7450
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\3 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7450 <= #\3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 7386 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 7387 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7105 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 7389 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7451 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7451
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7451 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 7386 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 7387 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7106 byte) (raw)) => =
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 7389 <= #\=
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7452 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7452
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7452 <= #\=
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 7386 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 7387 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7107 byte) (raw)) => >
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\> => ((9 character))
mem: ((9 character)): 7389 <= #\>
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7453 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7453
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => >
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\> => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7453 <= #\>
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 7386 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 7387 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7108 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 7389 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7454 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7454
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7454 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 7386 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 7387 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7109 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 7389 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7455 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7455
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7455 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 7386 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 7387 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7110 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 7389 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7456 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7456
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7456 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 7386 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 7387 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7111 byte) (raw)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\2 => ((9 character))
mem: ((9 character)): 7389 <= #\2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7457 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7457
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\2 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7457 <= #\2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 7386 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 7387 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7112 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 7389 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7458 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7458
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7458 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 7386 <= 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 7387 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7113 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 7389 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7459 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7459
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7459 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 7386 <= 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 7387 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7114 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 7389 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7460 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7460
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7460 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 7386 <= 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 7387 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7115 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 7389 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7461 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7461
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7461 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 7386 <= 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 7387 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7116 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 7389 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7462 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7462
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7462 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 7386 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 7387 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 26
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7117 byte) (raw)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 7389 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7463 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7463
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7463 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 27 => ((6 integer))
mem: ((6 integer)): 7386 <= 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 7387 <= 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 27
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 27
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7118 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 7389 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7464 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7464
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7464 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 28 => ((6 integer))
mem: ((6 integer)): 7386 <= 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 7387 <= 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 28
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 28
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7119 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 7389 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7465 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7465
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7465 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 29 => ((6 integer))
mem: ((6 integer)): 7386 <= 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 7387 <= 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 29
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 29
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7120 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 7389 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7466 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7466
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7466 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 30 => ((6 integer))
mem: ((6 integer)): 7386 <= 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 7387 <= 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 30
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7388 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 30
array-len: ((7090 string) (raw))
mem: ((7090 integer) (raw)) => 31
mem: ((7121 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 7389 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 7467 => ((10 character-address))
mem: ((10 character-address)): 7390 <= 7467
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7467 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 31 => ((6 integer))
mem: ((6 integer)): 7386 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 7387 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 31
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 7388 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 7441
run: split-first-at-substring/parse-trace/parse-traces/main 13: 7441 => ((6 string-address))
mem: ((6 string-address)): 7165 <= 7441
run: split-first-at-substring/parse-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 7375
mem: ((6 string-address)) => 7441
run: parse-trace/parse-traces/main 4: 7375 => ((4 string-address))
mem: ((4 string-address)): 7127 <= 7375
run: parse-trace/parse-traces/main 4: 7441 => ((5 string-address))
mem: ((5 string-address)): 7128 <= 7441
run: parse-trace/parse-traces/main 5: (((6 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((0 offset)))
run: parse-trace/parse-traces/main 5: 7153 => ((6 string-address-address))
mem: ((6 string-address-address)): 7129 <= 7153
run: parse-trace/parse-traces/main 6: (((6 string-address-address) (deref)) <- ((copy)) ((4 string-address)))
mem: ((4 string-address)) => 7375
run: parse-trace/parse-traces/main 6: 7375 => ((6 string-address-address) (deref))
mem: ((6 string-address-address) (deref)): 7153 <= 7375
run: parse-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((1 offset)))
run: parse-trace/parse-traces/main 7: 7154 => ((7 string-address-address))
mem: ((7 string-address-address)): 7130 <= 7154
run: parse-trace/parse-traces/main 8: (((7 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 7441
run: parse-trace/parse-traces/main 8: 7441 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 7154 <= 7441
run: parse-trace/parse-traces/main 9: (((reply)) ((2 trace-address)))
mem: ((2 trace-address)) => 7153
run: parse-traces/main 10: 7153 => ((8 trace-address))
mem: ((8 trace-address)): 1316 <= 7153
run: parse-traces/main 11: (((9 string-address)) <- ((get)) ((8 trace-address) (deref)) ((0 offset)))
mem: ((7153 string-address) (raw)) => 7375
run: parse-traces/main 11: 7375 => ((9 string-address))
mem: ((9 string-address)): 1317 <= 7375
run: parse-traces/main 12: (((10 boolean)) <- ((string-equal)) ((9 string-address)) ((5 string-address) (const)))
mem: ((9 string-address)) => 7375
mem: ((5 string-address) (const)) => 1441
run: string-equal/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-equal/parse-traces/main 0: 7468 => ((default-space space-address))
run: string-equal/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7375 1441)
run: string-equal/parse-traces/main 1: 7375 => ((1 string-address))
mem: ((1 string-address)): 7470 <= 7375
run: string-equal/parse-traces/main 2: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7375 integer) (raw)) => 3
run: string-equal/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 7471 <= 3
run: string-equal/parse-traces/main 3: (((3 string-address)) <- ((next-input)))
arg: nil 1 (7375 1441)
run: string-equal/parse-traces/main 3: 1441 => ((3 string-address))
mem: ((3 string-address)): 7472 <= 1441
run: string-equal/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1441 integer) (raw)) => 3
run: string-equal/parse-traces/main 4: 3 => ((4 integer))
mem: ((4 integer)): 7473 <= 3
run: string-equal/parse-traces/main 5: (((5 boolean)) <- ((equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 3
mem: ((4 integer)) => 3
run: string-equal/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 7474 <= t
run: string-equal/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((1 offset)))
mem: ((5 boolean)) => t
run: string-equal/parse-traces/main 8: (((6 integer)) <- ((copy)) ((0 literal)))
run: string-equal/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 7475 <= 0
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 0
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 7476 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((7375 string) (raw))
mem: ((7375 integer) (raw)) => 3
mem: ((7376 byte) (raw)) => r
run: string-equal/parse-traces/main 11: #\r => ((8 byte))
mem: ((8 byte)): 7477 <= #\r
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((1441 string) (raw))
mem: ((1441 integer) (raw)) => 3
mem: ((1442 byte) (raw)) => r
run: string-equal/parse-traces/main 12: #\r => ((9 byte))
mem: ((9 byte)): 7478 <= #\r
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => r
mem: ((9 byte)) => r
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 7479 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-equal/parse-traces/main 16: 1 => ((6 integer))
mem: ((6 integer)): 7475 <= 1
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 1
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 7476 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((7375 string) (raw))
mem: ((7375 integer) (raw)) => 3
mem: ((7377 byte) (raw)) => u
run: string-equal/parse-traces/main 11: #\u => ((8 byte))
mem: ((8 byte)): 7477 <= #\u
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((1441 string) (raw))
mem: ((1441 integer) (raw)) => 3
mem: ((1443 byte) (raw)) => u
run: string-equal/parse-traces/main 12: #\u => ((9 byte))
mem: ((9 byte)): 7478 <= #\u
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => u
mem: ((9 byte)) => u
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 7479 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-equal/parse-traces/main 16: 2 => ((6 integer))
mem: ((6 integer)): 7475 <= 2
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 2
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 7476 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((7375 string) (raw))
mem: ((7375 integer) (raw)) => 3
mem: ((7378 byte) (raw)) => n
run: string-equal/parse-traces/main 11: #\n => ((8 byte))
mem: ((8 byte)): 7477 <= #\n
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((1441 string) (raw))
mem: ((1441 integer) (raw)) => 3
mem: ((1444 byte) (raw)) => n
run: string-equal/parse-traces/main 12: #\n => ((9 byte))
mem: ((9 byte)): 7478 <= #\n
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => n
mem: ((9 byte)) => n
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 7479 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-equal/parse-traces/main 16: 3 => ((6 integer))
mem: ((6 integer)): 7475 <= 3
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 3
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: t => ((7 boolean))
mem: ((7 boolean)): 7476 <= t
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => t
run: string-equal/parse-traces/main 18: (((reply)) ((t literal)))
run: parse-traces/main 12: t => ((10 boolean))
mem: ((10 boolean)): 1318 <= t
run: parse-traces/main 13: (((jump-unless)) ((10 boolean)) ((7 offset)))
mem: ((10 boolean)) => t
run: parse-traces/main 14: (((jump-unless)) ((3 instruction-trace-address)) ((3 offset)))
mem: ((3 instruction-trace-address)) => 6145
run: parse-traces/main 15: (((11 trace-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((3 offset)))
run: parse-traces/main 15: 6148 => ((11 trace-address-array-address-address))
mem: ((11 trace-address-array-address-address)): 1319 <= 6148
run: parse-traces/main 16: (((11 trace-address-array-address-address) (deref)) <- ((to-array)) ((4 buffer-address)))
mem: ((4 buffer-address)) => 6106
run: to-array/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: to-array/parse-traces/main 0: 7499 => ((default-space space-address))
run: to-array/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (6106)
run: to-array/parse-traces/main 1: 6106 => ((1 buffer-address))
mem: ((1 buffer-address)): 7501 <= 6106
run: to-array/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((6106 integer) (raw)) => 0
run: to-array/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 7502 <= 0
run: to-array/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((6107 string-address) (raw)) => 6108
run: to-array/parse-traces/main 3: 6108 => ((3 string-address))
mem: ((3 string-address)): 7503 <= 6108
run: to-array/parse-traces/main 4: (((jump-if)) ((3 string-address)) ((1 offset)))
mem: ((3 string-address)) => 6108
run: to-array/parse-traces/main 6: (((4 string-address)) <- ((new)) ((string literal)) ((2 integer)))
mem: ((2 integer)) => 0
run: to-array/parse-traces/main 6: 7530 => ((4 string-address))
mem: ((4 string-address)): 7504 <= 7530
run: to-array/parse-traces/main 7: (((5 integer)) <- ((copy)) ((0 literal)))
run: to-array/parse-traces/main 7: 0 => ((5 integer))
mem: ((5 integer)): 7505 <= 0
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 0
mem: ((2 integer)) => 0
run: to-array/parse-traces/main 8: t => ((6 boolean))
mem: ((6 boolean)): 7506 <= t
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => t
run: to-array/parse-traces/main 15: (((reply)) ((4 string-address)))
mem: ((4 string-address)) => 7530
run: parse-traces/main 16: 7530 => ((11 trace-address-array-address-address) (deref))
mem: ((11 trace-address-array-address-address) (deref)): 6148 <= 7530
run: parse-traces/main 17: (((4 buffer-address)) <- ((init-buffer)) ((5 literal)))
run: init-buffer/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/parse-traces/main 0: 7531 => ((default-space space-address))
run: init-buffer/parse-traces/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/parse-traces/main 1: 7562 => ((1 buffer-address))
mem: ((1 buffer-address)): 7533 <= 7562
run: init-buffer/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/parse-traces/main 2: 7562 => ((2 integer-address))
mem: ((2 integer-address)): 7534 <= 7562
run: init-buffer/parse-traces/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/parse-traces/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 7562 <= 0
run: init-buffer/parse-traces/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/parse-traces/main 4: 7563 => ((3 string-address-address))
mem: ((3 string-address-address)): 7535 <= 7563
run: init-buffer/parse-traces/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (5)
run: init-buffer/parse-traces/main 5: 5 => ((4 integer))
mem: ((4 integer)): 7536 <= 5
run: init-buffer/parse-traces/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 5
run: init-buffer/parse-traces/main 6: 7564 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 7563 <= 7564
run: init-buffer/parse-traces/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 7562
run: parse-traces/main 17: 7562 => ((4 buffer-address))
mem: ((4 buffer-address)): 1312 <= 7562
run: parse-traces/main 18: (((3 instruction-trace-address)) <- ((parse-instruction-trace)) ((8 trace-address)))
mem: ((8 trace-address)) => 7153
run: parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-instruction-trace/parse-traces/main 0: 7570 => ((default-space space-address))
run: parse-instruction-trace/parse-traces/main 1: (((1 trace-address)) <- ((next-input)))
arg: nil 0 (7153)
run: parse-instruction-trace/parse-traces/main 1: 7153 => ((1 trace-address))
mem: ((1 trace-address)): 7572 <= 7153
run: parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((get)) ((1 trace-address) (deref)) ((1 offset)))
mem: ((7154 string-address) (raw)) => 7441
run: parse-instruction-trace/parse-traces/main 2: 7441 => ((2 string-address))
mem: ((2 string-address)): 7573 <= 7441
run: parse-instruction-trace/parse-traces/main 3: (((3 instruction-trace-address)) <- ((new)) ((instruction-trace literal)))
run: parse-instruction-trace/parse-traces/main 3: 7601 => ((3 instruction-trace-address))
mem: ((3 instruction-trace-address)): 7574 <= 7601
run: parse-instruction-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first)) ((2 string-address)) ((  literal)))
mem: ((2 string-address)) => 7441
run: split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first/parse-instruction-trace/parse-traces/main 0: 7605 => ((default-space space-address))
run: split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7441 #\space)
run: split-first/parse-instruction-trace/parse-traces/main 1: 7441 => ((1 string-address))
mem: ((1 string-address)): 7607 <= 7441
run: split-first/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (7441 #\space)
run: split-first/parse-instruction-trace/parse-traces/main 2: #\space => ((2 character))
mem: ((2 character)): 7608 <= #\space
run: split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7441 integer) (raw)) => 26
run: split-first/parse-instruction-trace/parse-traces/main 3: 26 => ((3 integer))
mem: ((3 integer)): 7609 <= 26
run: split-first/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 26
run: split-first/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 7610 <= nil
run: split-first/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((0 literal)))
mem: ((1 string-address)) => 7441
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 0: 7636 => ((default-space space-address))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7441 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 1: 7441 => ((1 string-address))
mem: ((1 string-address)): 7638 <= 7441
run: find-next/split-first/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (7441 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 2: #\space => ((2 character))
mem: ((2 character)): 7639 <= #\space
run: find-next/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7441 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 7640 <= 0
run: find-next/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7441 integer) (raw)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 7641 <= 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7642 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7442 byte) (raw)) => m
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 7643 <= #\m
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7644 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 7640 <= 1
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7642 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7443 byte) (raw)) => a
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 7643 <= #\a
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7644 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 7640 <= 2
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7642 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7444 byte) (raw)) => i
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 7643 <= #\i
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7644 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 7640 <= 3
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7642 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7445 byte) (raw)) => n
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 7643 <= #\n
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7644 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 7640 <= 4
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7642 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7446 byte) (raw)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 7643 <= #\space
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 7644 <= t
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/split-first/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split-first/parse-instruction-trace/parse-traces/main 9: 4 => ((7 integer))
mem: ((7 integer)): 7613 <= 4
run: split-first/parse-instruction-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 7441
mem: ((7 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 7667 => ((default-space space-address))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7441 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 7441 => ((1 string-address))
mem: ((1 string-address)): 7669 <= 7441
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (7441 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 7670 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7441 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 7671 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 7672 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 7698 => ((default-space space-address))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (26 4)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 26 => ((1 integer))
mem: ((1 integer)): 7700 <= 26
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (26 4)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 4 => ((2 integer))
mem: ((2 integer)): 7701 <= 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 26
mem: ((2 integer)) => 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 7702 <= nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: 4 => ((3 integer))
mem: ((3 integer)): 7671 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 4
mem: ((2 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: 4 => ((4 integer))
mem: ((4 integer)): 7672 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: 7729 => ((5 string-address))
mem: ((5 string-address)): 7673 <= 7729
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 7674 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 7675 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7676 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7442 byte) (raw)) => m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 7677 <= #\m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((7729 string) (raw))
mem: ((7729 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7730 => ((10 character-address))
mem: ((10 character-address)): 7678 <= 7730
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7730 <= #\m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 7674 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 7675 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7676 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7443 byte) (raw)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 7677 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((7729 string) (raw))
mem: ((7729 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7731 => ((10 character-address))
mem: ((10 character-address)): 7678 <= 7731
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7731 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 7674 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 7675 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7676 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7444 byte) (raw)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 7677 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((7729 string) (raw))
mem: ((7729 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7732 => ((10 character-address))
mem: ((10 character-address)): 7678 <= 7732
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7732 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 7674 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 7675 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7676 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7445 byte) (raw)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 7677 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((7729 string) (raw))
mem: ((7729 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7733 => ((10 character-address))
mem: ((10 character-address)): 7678 <= 7733
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7733 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 7674 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 7675 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 7676 <= t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 7729
run: split-first/parse-instruction-trace/parse-traces/main 10: 7729 => ((5 string-address))
mem: ((5 string-address)): 7611 <= 7729
run: split-first/parse-instruction-trace/parse-traces/main 11: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: split-first/parse-instruction-trace/parse-traces/main 11: 5 => ((7 integer))
mem: ((7 integer)): 7613 <= 5
run: split-first/parse-instruction-trace/parse-traces/main 12: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 7441
mem: ((7 integer)) => 5
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 7734 => ((default-space space-address))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7441 5 26)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 7441 => ((1 string-address))
mem: ((1 string-address)): 7736 <= 7441
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (7441 5 26)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 5 => ((2 integer))
mem: ((2 integer)): 7737 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7441 5 26)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: 26 => ((3 integer))
mem: ((3 integer)): 7738 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7441 integer) (raw)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 7739 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 26
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 7765 => ((default-space space-address))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (26 26)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 26 => ((1 integer))
mem: ((1 integer)): 7767 <= 26
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (26 26)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 26 => ((2 integer))
mem: ((2 integer)): 7768 <= 26
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 26
mem: ((2 integer)) => 26
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 7769 <= nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: 26 => ((3 integer))
mem: ((3 integer)): 7738 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 26
mem: ((2 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: 21 => ((4 integer))
mem: ((4 integer)): 7739 <= 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: 7796 => ((5 string-address))
mem: ((5 string-address)): 7740 <= 7796
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: 5 => ((6 integer))
mem: ((6 integer)): 7741 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 7742 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7447 byte) (raw)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 7744 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7797 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7797
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7797 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 7741 <= 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 7742 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7448 byte) (raw)) => :
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 7744 <= #\:
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7798 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7798
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7798 <= #\:
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 7741 <= 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 7742 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7449 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 7744 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7799 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7799
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7799 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 7741 <= 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 7742 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7450 byte) (raw)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\3 => ((9 character))
mem: ((9 character)): 7744 <= #\3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7800 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7800
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\3 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7800 <= #\3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 7741 <= 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 7742 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7451 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 7744 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7801 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7801
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7801 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 7741 <= 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 7742 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7452 byte) (raw)) => =
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 7744 <= #\=
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7802 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7802
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7802 <= #\=
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 7741 <= 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 7742 <= 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7453 byte) (raw)) => >
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\> => ((9 character))
mem: ((9 character)): 7744 <= #\>
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7803 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7803
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => >
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\> => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7803 <= #\>
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 7741 <= 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 7742 <= 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7454 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 7744 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7804 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7804
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7804 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 7741 <= 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 7742 <= 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7455 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 7744 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7805 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7805
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7805 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 7741 <= 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 7742 <= 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7456 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 7744 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7806 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7806
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7806 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 7741 <= 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 7742 <= 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7457 byte) (raw)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\2 => ((9 character))
mem: ((9 character)): 7744 <= #\2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7807 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7807
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\2 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7807 <= #\2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 7741 <= 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 7742 <= 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7458 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 7744 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7808 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7808
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7808 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 7741 <= 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 7742 <= 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7459 byte) (raw)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 7744 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7809 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7809
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7809 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 7741 <= 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 7742 <= 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
schedule: scheduling string-copy/split-first/parse-instruction-trace/parse-traces/main for further processing
schedule: string-copy/split-first/parse-instruction-trace/parse-traces/main
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7460 byte) (raw)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 7744 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7810 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7810
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7810 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 7741 <= 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 7742 <= 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7461 byte) (raw)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 7744 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7811 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7811
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7811 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 7741 <= 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 7742 <= 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7462 byte) (raw)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 7744 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7812 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7812
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7812 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 7741 <= 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 7742 <= 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7463 byte) (raw)) => g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 7744 <= #\g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7813 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7813
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7813 <= #\g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 7741 <= 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 7742 <= 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7464 byte) (raw)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 7744 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7814 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7814
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7814 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 7741 <= 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 7742 <= 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7465 byte) (raw)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 7744 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7815 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7815
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7815 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 7741 <= 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 7742 <= 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7466 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 7744 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7816 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7816
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7816 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 7741 <= 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 7742 <= 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7743 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((7441 string) (raw))
mem: ((7441 integer) (raw)) => 26
mem: ((7467 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 7744 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 7817 => ((10 character-address))
mem: ((10 character-address)): 7745 <= 7817
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7817 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 7741 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 7742 <= 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 7743 <= t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 7796
run: split-first/parse-instruction-trace/parse-traces/main 12: 7796 => ((6 string-address))
mem: ((6 string-address)): 7612 <= 7796
run: split-first/parse-instruction-trace/parse-traces/main 13: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 7729
mem: ((6 string-address)) => 7796
run: parse-instruction-trace/parse-traces/main 4: 7729 => ((4 string-address))
mem: ((4 string-address)): 7575 <= 7729
run: parse-instruction-trace/parse-traces/main 4: 7796 => ((5 string-address))
mem: ((5 string-address)): 7576 <= 7796
run: parse-instruction-trace/parse-traces/main 5: (((6 string-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((0 offset)))
run: parse-instruction-trace/parse-traces/main 5: 7601 => ((6 string-address-array-address-address))
mem: ((6 string-address-array-address-address)): 7577 <= 7601
run: parse-instruction-trace/parse-traces/main 6: (((6 string-address-array-address-address) (deref)) <- ((split)) ((4 string-address)) ((/ literal)))
mem: ((4 string-address)) => 7729
run: split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split/parse-instruction-trace/parse-traces/main 0: 7818 => ((default-space space-address))
run: split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7729 #\/)
run: split/parse-instruction-trace/parse-traces/main 1: 7729 => ((1 string-address))
mem: ((1 string-address)): 7820 <= 7729
run: split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (7729 #\/)
run: split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 7821 <= #\/
run: split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7729 integer) (raw)) => 4
run: split/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 7822 <= 4
run: split/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 7823 <= nil
run: split/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => nil
run: split/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((1 literal)))
run: split/parse-instruction-trace/parse-traces/main 8: 1 => ((6 integer))
mem: ((6 integer)): 7825 <= 1
run: split/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 7826 <= 0
run: split/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((7 integer)))
mem: ((1 string-address)) => 7729
mem: ((2 character)) => /
mem: ((7 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split/parse-instruction-trace/parse-traces/main 0: 7849 => ((default-space space-address))
run: find-next/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7729 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 1: 7729 => ((1 string-address))
mem: ((1 string-address)): 7851 <= 7729
run: find-next/split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (7729 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 7852 <= #\/
run: find-next/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7729 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 7853 <= 0
run: find-next/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7729 integer) (raw)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 7854 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7855 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((7729 string) (raw))
mem: ((7729 integer) (raw)) => 4
mem: ((7730 byte) (raw)) => m
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 7856 <= #\m
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7857 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 7853 <= 1
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7855 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((7729 string) (raw))
mem: ((7729 integer) (raw)) => 4
mem: ((7731 byte) (raw)) => a
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 7856 <= #\a
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7857 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 7853 <= 2
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7855 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((7729 string) (raw))
mem: ((7729 integer) (raw)) => 4
mem: ((7732 byte) (raw)) => i
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 7856 <= #\i
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7857 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 7853 <= 3
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7855 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((7729 string) (raw))
mem: ((7729 integer) (raw)) => 4
mem: ((7733 byte) (raw)) => n
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 7856 <= #\n
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7857 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 7853 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 7855 <= t
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: find-next/split/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 10: 4 => ((7 integer))
mem: ((7 integer)): 7826 <= 4
run: split/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((3 integer)))
mem: ((7 integer)) => 4
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 7827 <= t
run: split/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((3 offset)))
mem: ((8 boolean)) => t
run: split/parse-instruction-trace/parse-traces/main 16: (((5 string-address-array-address)) <- ((new)) ((string-address-array literal)) ((6 integer)))
mem: ((6 integer)) => 1
run: split/parse-instruction-trace/parse-traces/main 16: 7880 => ((5 string-address-array-address))
mem: ((5 string-address-array-address)): 7824 <= 7880
run: split/parse-instruction-trace/parse-traces/main 17: (((9 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 17: 0 => ((9 integer))
mem: ((9 integer)): 7828 <= 0
run: split/parse-instruction-trace/parse-traces/main 18: (((10 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 18: 0 => ((10 integer))
mem: ((10 integer)): 7829 <= 0
run: split/parse-instruction-trace/parse-traces/main 19: (((8 boolean)) <- ((greater-or-equal)) ((10 integer)) ((3 integer)))
mem: ((10 integer)) => 0
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 19: nil => ((8 boolean))
mem: ((8 boolean)): 7827 <= nil
run: split/parse-instruction-trace/parse-traces/main 20: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: split/parse-instruction-trace/parse-traces/main 21: (((11 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((10 integer)))
mem: ((1 string-address)) => 7729
mem: ((2 character)) => /
mem: ((10 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split/parse-instruction-trace/parse-traces/main 0: 7882 => ((default-space space-address))
run: find-next/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7729 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 1: 7729 => ((1 string-address))
mem: ((1 string-address)): 7884 <= 7729
run: find-next/split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (7729 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 7885 <= #\/
run: find-next/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7729 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 7886 <= 0
run: find-next/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7729 integer) (raw)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 7887 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7888 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((7729 string) (raw))
mem: ((7729 integer) (raw)) => 4
mem: ((7730 byte) (raw)) => m
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 7889 <= #\m
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7890 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 7886 <= 1
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7888 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((7729 string) (raw))
mem: ((7729 integer) (raw)) => 4
mem: ((7731 byte) (raw)) => a
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 7889 <= #\a
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7890 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 7886 <= 2
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7888 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((7729 string) (raw))
mem: ((7729 integer) (raw)) => 4
mem: ((7732 byte) (raw)) => i
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 7889 <= #\i
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7890 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 7886 <= 3
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7888 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((7729 string) (raw))
mem: ((7729 integer) (raw)) => 4
mem: ((7733 byte) (raw)) => n
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 7889 <= #\n
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 7890 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 7886 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 7888 <= t
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: find-next/split/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 21: 4 => ((11 integer))
mem: ((11 integer)): 7830 <= 4
run: split/parse-instruction-trace/parse-traces/main 22: (((12 string-address-address)) <- ((index-address)) ((5 string-address-array-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 0
array-len: ((7880 string-address-array) (raw))
mem: ((7880 integer) (raw)) => 1
run: split/parse-instruction-trace/parse-traces/main 22: 7881 => ((12 string-address-address))
mem: ((12 string-address-address)): 7831 <= 7881
run: split/parse-instruction-trace/parse-traces/main 23: (((12 string-address-address) (deref)) <- ((string-copy)) ((1 string-address)) ((10 integer)) ((11 integer)))
mem: ((1 string-address)) => 7729
mem: ((10 integer)) => 0
mem: ((11 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 0: 7913 => ((default-space space-address))
run: string-copy/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7729 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 1: 7729 => ((1 string-address))
mem: ((1 string-address)): 7915 <= 7729
run: string-copy/split/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (7729 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 7916 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7729 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 7917 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7729 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 7918 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 0: 7944 => ((default-space space-address))
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (4 4)
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 1: 4 => ((1 integer))
mem: ((1 integer)): 7946 <= 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (4 4)
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 2: 4 => ((2 integer))
mem: ((2 integer)): 7947 <= 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 4
mem: ((2 integer)) => 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 7948 <= nil
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 5: 4 => ((3 integer))
mem: ((3 integer)): 7917 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 4
mem: ((2 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 6: 4 => ((4 integer))
mem: ((4 integer)): 7918 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 7: 7975 => ((5 string-address))
mem: ((5 string-address)): 7919 <= 7975
run: string-copy/split/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 7920 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 7921 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7922 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((7729 string) (raw))
mem: ((7729 integer) (raw)) => 4
mem: ((7730 byte) (raw)) => m
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 7923 <= #\m
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((7975 string) (raw))
mem: ((7975 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 7976 => ((10 character-address))
mem: ((10 character-address)): 7924 <= 7976
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7976 <= #\m
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 7920 <= 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 7921 <= 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7922 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((7729 string) (raw))
mem: ((7729 integer) (raw)) => 4
mem: ((7731 byte) (raw)) => a
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 7923 <= #\a
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((7975 string) (raw))
mem: ((7975 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 7977 => ((10 character-address))
mem: ((10 character-address)): 7924 <= 7977
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7977 <= #\a
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 7920 <= 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 7921 <= 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7922 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((7729 string) (raw))
mem: ((7729 integer) (raw)) => 4
mem: ((7732 byte) (raw)) => i
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 7923 <= #\i
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((7975 string) (raw))
mem: ((7975 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 7978 => ((10 character-address))
mem: ((10 character-address)): 7924 <= 7978
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7978 <= #\i
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 7920 <= 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 7921 <= 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 7922 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((7729 string) (raw))
mem: ((7729 integer) (raw)) => 4
mem: ((7733 byte) (raw)) => n
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 7923 <= #\n
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((7975 string) (raw))
mem: ((7975 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 7979 => ((10 character-address))
mem: ((10 character-address)): 7924 <= 7979
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 7979 <= #\n
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 7920 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 7921 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 7922 <= t
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 7975
run: split/parse-instruction-trace/parse-traces/main 23: 7975 => ((12 string-address-address) (deref))
mem: ((12 string-address-address) (deref)): 7881 <= 7975
run: split/parse-instruction-trace/parse-traces/main 24: (((10 integer)) <- ((add)) ((11 integer)) ((1 literal)))
mem: ((11 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 24: 5 => ((10 integer))
mem: ((10 integer)): 7829 <= 5
run: split/parse-instruction-trace/parse-traces/main 25: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
mem: ((9 integer)) => 0
run: split/parse-instruction-trace/parse-traces/main 25: 1 => ((9 integer))
mem: ((9 integer)): 7828 <= 1
run: split/parse-instruction-trace/parse-traces/main 26: (((jump)) ((-8 offset)))
run: split/parse-instruction-trace/parse-traces/main 19: (((8 boolean)) <- ((greater-or-equal)) ((10 integer)) ((3 integer)))
mem: ((10 integer)) => 5
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 19: t => ((8 boolean))
mem: ((8 boolean)): 7827 <= t
run: split/parse-instruction-trace/parse-traces/main 20: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: split/parse-instruction-trace/parse-traces/main 27: (((reply)) ((5 string-address-array-address)))
mem: ((5 string-address-array-address)) => 7880
run: parse-instruction-trace/parse-traces/main 6: 7880 => ((6 string-address-array-address-address) (deref))
mem: ((6 string-address-array-address-address) (deref)): 7601 <= 7880
run: parse-instruction-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((1 offset)))
run: parse-instruction-trace/parse-traces/main 7: 7602 => ((7 string-address-address))
mem: ((7 string-address-address)): 7578 <= 7602
run: parse-instruction-trace/parse-traces/main 8: (((8 string-address)) <- ((new)) : )
run: parse-instruction-trace/parse-traces/main 8: 7980 => ((8 string-address))
mem: ((8 string-address)): 7579 <= 7980
run: parse-instruction-trace/parse-traces/main 9: (((7 string-address-address) (deref)) ((5 string-address)) <- ((split-first-at-substring)) ((5 string-address)) ((8 string-address)))
mem: ((5 string-address)) => 7796
mem: ((8 string-address)) => 7980
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 7983 => ((default-space space-address))
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7796 7980)
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 7796 => ((1 string-address))
mem: ((1 string-address)): 7985 <= 7796
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (7796 7980)
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 7980 => ((2 string-address))
mem: ((2 string-address)): 7986 <= 7980
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7796 integer) (raw)) => 21
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 21 => ((3 integer))
mem: ((3 integer)): 7987 <= 21
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 21
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 7988 <= nil
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 7796
mem: ((2 string-address)) => 7980
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 8014 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7796 7980 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 7796 => ((1 string-address))
mem: ((1 string-address)): 8016 <= 7796
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (7796 7980 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 7980 => ((2 string-address))
mem: ((2 string-address)): 8017 <= 7980
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7796 7980 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 8018 <= 0
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((7980 string) (raw))
mem: ((7980 integer) (raw)) => 2
mem: ((7981 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 8019 <= #\:
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7796 integer) (raw)) => 21
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 21 => ((5 integer))
mem: ((5 integer)): 8020 <= 21
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 21
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 8021 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 7796
mem: ((2 string-address)) => 7980
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 8045 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7796 7980 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 7796 => ((1 string-address))
mem: ((1 string-address)): 8047 <= 7796
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (7796 7980 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 7980 => ((2 string-address))
mem: ((2 string-address)): 8048 <= 7980
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7796 7980 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 8049 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((7980 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 8050 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7796 integer) (raw)) => 21
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 21 => ((5 integer))
mem: ((5 integer)): 8051 <= 21
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 21
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 19 => ((5 integer))
mem: ((5 integer)): 8051 <= 19
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 19
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 8052 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 8053 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 8054 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7797 byte) (raw)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\1 => ((9 character))
mem: ((9 character)): 8055 <= #\1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((7980 string) (raw))
mem: ((7980 integer) (raw)) => 2
mem: ((7981 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 8056 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => 1
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 8057 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8022 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 8018 <= 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 7796
mem: ((4 character)) => :
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 8076 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7796 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 7796 => ((1 string-address))
mem: ((1 string-address)): 8078 <= 7796
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (7796 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 8079 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7796 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 8080 <= 1
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7796 integer) (raw)) => 21
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 21 => ((4 integer))
mem: ((4 integer)): 8081 <= 21
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 21
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8082 <= nil
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7798 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 8083 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 8084 <= t
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: 1 => ((3 integer))
mem: ((3 integer)): 8018 <= 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 1
mem: ((5 integer)) => 21
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 8021 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 7796
mem: ((2 string-address)) => 7980
mem: ((3 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 8107 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7796 7980 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 7796 => ((1 string-address))
mem: ((1 string-address)): 8109 <= 7796
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (7796 7980 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 7980 => ((2 string-address))
mem: ((2 string-address)): 8110 <= 7980
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7796 7980 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 8111 <= 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((7980 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 8112 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7796 integer) (raw)) => 21
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 21 => ((5 integer))
mem: ((5 integer)): 8113 <= 21
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 21
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 19 => ((5 integer))
mem: ((5 integer)): 8113 <= 19
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 1
mem: ((5 integer)) => 19
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 8114 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 8115 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 8116 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7798 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 8117 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((7980 string) (raw))
mem: ((7980 integer) (raw)) => 2
mem: ((7981 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 8118 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 8119 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: 2 => ((3 integer))
mem: ((3 integer)): 8111 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 8115 <= 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 8116 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7799 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 8117 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((7980 string) (raw))
mem: ((7980 integer) (raw)) => 2
mem: ((7982 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 8118 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 8119 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: 3 => ((3 integer))
mem: ((3 integer)): 8111 <= 3
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 8115 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 8116 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 8022 <= t
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 1
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 1 => ((7 integer))
mem: ((7 integer)): 7991 <= 1
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 7796
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 8138 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7796 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 7796 => ((1 string-address))
mem: ((1 string-address)): 8140 <= 7796
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (7796 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 8141 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7796 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 8142 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 21 => ((4 integer))
mem: ((4 integer)): 8143 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 21
mem: ((3 integer)) => 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 8169 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (21 1)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 21 => ((1 integer))
mem: ((1 integer)): 8171 <= 21
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (21 1)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 1 => ((2 integer))
mem: ((2 integer)): 8172 <= 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 21
mem: ((2 integer)) => 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 8173 <= nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 1 => ((3 integer))
mem: ((3 integer)): 8142 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 1
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 1 => ((4 integer))
mem: ((4 integer)): 8143 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: 8200 => ((5 string-address))
mem: ((5 string-address)): 8144 <= 8200
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 8145 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 8146 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8147 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7797 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 8148 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((8200 string) (raw))
mem: ((8200 integer) (raw)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8201 => ((10 character-address))
mem: ((10 character-address)): 8149 <= 8201
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8201 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 8145 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 8146 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 8147 <= t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 8200
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 8200 => ((5 string-address))
mem: ((5 string-address)): 7989 <= 8200
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((7980 integer) (raw)) => 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 7992 <= 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 1
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 12: 3 => ((7 integer))
mem: ((7 integer)): 7991 <= 3
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 7796
mem: ((7 integer)) => 3
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 8202 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (7796 3 21)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 7796 => ((1 string-address))
mem: ((1 string-address)): 8204 <= 7796
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (7796 3 21)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 8205 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (7796 3 21)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 21 => ((3 integer))
mem: ((3 integer)): 8206 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((7796 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 21 => ((4 integer))
mem: ((4 integer)): 8207 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 21
mem: ((3 integer)) => 21
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 8233 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (21 21)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 21 => ((1 integer))
mem: ((1 integer)): 8235 <= 21
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (21 21)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 21 => ((2 integer))
mem: ((2 integer)): 8236 <= 21
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 21
mem: ((2 integer)) => 21
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 8237 <= nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 21 => ((3 integer))
mem: ((3 integer)): 8206 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 21
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 18 => ((4 integer))
mem: ((4 integer)): 8207 <= 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: 8264 => ((5 string-address))
mem: ((5 string-address)): 8208 <= 8264
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: 3 => ((6 integer))
mem: ((6 integer)): 8209 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 8210 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7800 byte) (raw)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\3 => ((9 character))
mem: ((9 character)): 8212 <= #\3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8265 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8265
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\3 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8265 <= #\3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 8209 <= 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 8210 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 4
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7801 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 8212 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8266 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8266
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8266 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 5 => ((6 integer))
mem: ((6 integer)): 8209 <= 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 8210 <= 2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7802 byte) (raw)) => =
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 8212 <= #\=
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8267 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8267
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8267 <= #\=
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 8209 <= 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 8210 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7803 byte) (raw)) => >
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\> => ((9 character))
mem: ((9 character)): 8212 <= #\>
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8268 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8268
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => >
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\> => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8268 <= #\>
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 8209 <= 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 8210 <= 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7804 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 8212 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8269 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8269
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8269 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 8209 <= 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 8210 <= 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7805 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 8212 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8270 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8270
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8270 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 8209 <= 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 8210 <= 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7806 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 8212 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8271 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8271
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8271 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 8209 <= 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 8210 <= 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7807 byte) (raw)) => 2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\2 => ((9 character))
mem: ((9 character)): 8212 <= #\2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8272 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8272
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\2 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8272 <= #\2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 8209 <= 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 8210 <= 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7808 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 8212 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8273 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8273
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8273 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 8209 <= 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 8210 <= 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7809 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 8212 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8274 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8274
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8274 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 8209 <= 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 8210 <= 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7810 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 8212 <= #\n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8275 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8275
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8275 <= #\n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 8209 <= 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 8210 <= 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7811 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 8212 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8276 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8276
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8276 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 8209 <= 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 8210 <= 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7812 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 8212 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8277 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8277
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8277 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 8209 <= 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 8210 <= 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7813 byte) (raw)) => g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 8212 <= #\g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8278 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8278
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8278 <= #\g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 8209 <= 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 8210 <= 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7814 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 8212 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8279 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8279
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8279 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 8209 <= 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 8210 <= 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7815 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 8212 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8280 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8280
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8280 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 8209 <= 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 8210 <= 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7816 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 8212 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8281 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8281
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8281 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 8209 <= 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 8210 <= 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8211 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((7796 string) (raw))
mem: ((7796 integer) (raw)) => 21
mem: ((7817 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 8212 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((8264 string) (raw))
mem: ((8264 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8282 => ((10 character-address))
mem: ((10 character-address)): 8213 <= 8282
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8282 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 8209 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 8210 <= 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 8211 <= t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 8264
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 8264 => ((6 string-address))
mem: ((6 string-address)): 7990 <= 8264
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 8200
mem: ((6 string-address)) => 8264
run: parse-instruction-trace/parse-traces/main 9: 8200 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 7602 <= 8200
run: parse-instruction-trace/parse-traces/main 9: 8264 => ((5 string-address))
mem: ((5 string-address)): 7576 <= 8264
run: parse-instruction-trace/parse-traces/main 10: (((9 string-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((2 offset)))
run: parse-instruction-trace/parse-traces/main 10: 7603 => ((9 string-address-address))
mem: ((9 string-address-address)): 7580 <= 7603
schedule: scheduling parse-instruction-trace/parse-traces/main for further processing
schedule: parse-instruction-trace/parse-traces/main
run: parse-instruction-trace/parse-traces/main 11: (((9 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 8264
run: parse-instruction-trace/parse-traces/main 11: 8264 => ((9 string-address-address) (deref))
mem: ((9 string-address-address) (deref)): 7603 <= 8264
run: parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 instruction-trace-address)))
mem: ((3 instruction-trace-address)) => 7601
run: parse-traces/main 18: 7601 => ((3 instruction-trace-address))
mem: ((3 instruction-trace-address)): 1311 <= 7601
run: parse-traces/main 19: (((2 buffer-address)) <- ((append)) ((2 buffer-address)) ((3 instruction-trace-address)))
mem: ((2 buffer-address)) => 1369
mem: ((3 instruction-trace-address)) => 7601
run: append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/parse-traces/main 0: 8283 => ((default-space space-address))
run: append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1369 7601)
run: append/parse-traces/main 1: 1369 => ((1 buffer-address))
mem: ((1 buffer-address)): 8285 <= 1369
run: append/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1369 7601)
run: append/parse-traces/main 2: 7601 => ((2 character))
mem: ((2 character)): 8286 <= 7601
run: append/parse-traces/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1369
run: buffer-full?/append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/parse-traces/main 0: 8314 => ((default-space space-address))
run: buffer-full?/append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1369)
run: buffer-full?/append/parse-traces/main 1: 1369 => ((1 buffer-address))
mem: ((1 buffer-address)): 8316 <= 1369
run: buffer-full?/append/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((1369 integer) (raw)) => 3
run: buffer-full?/append/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 8317 <= 3
run: buffer-full?/append/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1370 string-address) (raw)) => 1371
run: buffer-full?/append/parse-traces/main 3: 1371 => ((3 string-address))
mem: ((3 string-address)): 8318 <= 1371
run: buffer-full?/append/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1371 integer) (raw)) => 30
run: buffer-full?/append/parse-traces/main 4: 30 => ((4 integer))
mem: ((4 integer)): 8319 <= 30
run: buffer-full?/append/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 3
mem: ((4 integer)) => 30
run: buffer-full?/append/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8320 <= nil
run: buffer-full?/append/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 8287 <= nil
run: append/parse-traces/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/parse-traces/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/parse-traces/main 6: 1369 => ((4 integer-address))
mem: ((4 integer-address)): 8288 <= 1369
run: append/parse-traces/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1370 string-address) (raw)) => 1371
run: append/parse-traces/main 7: 1371 => ((5 string-address))
mem: ((5 string-address)): 8289 <= 1371
run: append/parse-traces/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 3
array-len: ((1371 string) (raw))
mem: ((1371 integer) (raw)) => 30
run: append/parse-traces/main 8: 1375 => ((6 byte-address))
mem: ((6 byte-address)): 8290 <= 1375
run: append/parse-traces/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 7601
run: append/parse-traces/main 9: 7601 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 1375 <= 7601
run: append/parse-traces/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 3
run: append/parse-traces/main 10: 4 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1369 <= 4
run: append/parse-traces/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 1369
run: parse-traces/main 19: 1369 => ((2 buffer-address))
mem: ((2 buffer-address)): 1310 <= 1369
run: parse-traces/main 20: (((jump)) ((-15 offset)))
run: parse-traces/main 6: next-line
run: parse-traces/main 7: (((6 boolean)) <- ((end-of-stream?)) ((1 stream-address)))
mem: ((1 stream-address)) => 1305
run: end-of-stream?/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: end-of-stream?/parse-traces/main 0: 8345 => ((default-space space-address))
run: end-of-stream?/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1305)
run: end-of-stream?/parse-traces/main 1: 1305 => ((1 stream-address))
mem: ((1 stream-address)): 8347 <= 1305
run: end-of-stream?/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 stream-address) (deref)) ((0 offset)))
mem: ((1305 integer) (raw)) => 216
run: end-of-stream?/parse-traces/main 2: 216 => ((2 integer))
mem: ((2 integer)): 8348 <= 216
run: end-of-stream?/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1306 string-address) (raw)) => 1031
run: end-of-stream?/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 8349 <= 1031
run: end-of-stream?/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: end-of-stream?/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 8350 <= 242
run: end-of-stream?/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 216
mem: ((4 integer)) => 242
run: end-of-stream?/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8351 <= nil
run: end-of-stream?/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: parse-traces/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1314 <= nil
run: parse-traces/main 8: (((jump-if)) ((6 boolean)) ((15 offset)))
mem: ((6 boolean)) => nil
run: parse-traces/main 9: (((7 string-address)) <- ((read-line)) ((1 stream-address)))
mem: ((1 stream-address)) => 1305
run: read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-line/parse-traces/main 0: 8376 => ((default-space space-address))
run: read-line/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1305)
run: read-line/parse-traces/main 1: 1305 => ((1 stream-address))
mem: ((1 stream-address)): 8378 <= 1305
run: read-line/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 stream-address) (deref)) ((0 offset)))
run: read-line/parse-traces/main 2: 1305 => ((2 integer-address))
mem: ((2 integer-address)): 8379 <= 1305
run: read-line/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1306 string-address) (raw)) => 1031
run: read-line/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 8380 <= 1031
run: read-line/parse-traces/main 4: (((4 integer)) <- ((find-next)) ((3 string-address)) ((
 literal)) ((2 integer-address) (deref)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 216
run: find-next/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/read-line/parse-traces/main 0: 8407 => ((default-space space-address))
run: find-next/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 #\newline 216)
run: find-next/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 8409 <= 1031
run: find-next/read-line/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1031 #\newline 216)
run: find-next/read-line/parse-traces/main 2: #\newline => ((2 character))
mem: ((2 character)): 8410 <= #\newline
run: find-next/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 #\newline 216)
run: find-next/read-line/parse-traces/main 3: 216 => ((3 integer))
mem: ((3 integer)): 8411 <= 216
run: find-next/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: find-next/read-line/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 8412 <= 242
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 216
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 216
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1248 byte) (raw)) => m
run: find-next/read-line/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 8414 <= #\m
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 216
run: find-next/read-line/parse-traces/main 10: 217 => ((3 integer))
mem: ((3 integer)): 8411 <= 217
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 217
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 217
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1249 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 8414 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 217
run: find-next/read-line/parse-traces/main 10: 218 => ((3 integer))
mem: ((3 integer)): 8411 <= 218
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 218
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 218
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1250 byte) (raw)) => m
run: find-next/read-line/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 8414 <= #\m
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 218
run: find-next/read-line/parse-traces/main 10: 219 => ((3 integer))
mem: ((3 integer)): 8411 <= 219
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 219
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 219
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1251 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 8414 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 219
run: find-next/read-line/parse-traces/main 10: 220 => ((3 integer))
mem: ((3 integer)): 8411 <= 220
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 220
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 220
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1252 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 8414 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 220
run: find-next/read-line/parse-traces/main 10: 221 => ((3 integer))
mem: ((3 integer)): 8411 <= 221
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 221
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 221
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1253 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 8414 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 221
run: find-next/read-line/parse-traces/main 10: 222 => ((3 integer))
mem: ((3 integer)): 8411 <= 222
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 222
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 222
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1254 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 8414 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 222
run: find-next/read-line/parse-traces/main 10: 223 => ((3 integer))
mem: ((3 integer)): 8411 <= 223
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 223
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 223
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1255 byte) (raw)) => 2
run: find-next/read-line/parse-traces/main 7: #\2 => ((6 byte))
mem: ((6 byte)): 8414 <= #\2
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 2
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 223
run: find-next/read-line/parse-traces/main 10: 224 => ((3 integer))
mem: ((3 integer)): 8411 <= 224
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 224
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 224
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1256 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 8414 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 224
run: find-next/read-line/parse-traces/main 10: 225 => ((3 integer))
mem: ((3 integer)): 8411 <= 225
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 225
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 225
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1257 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 8414 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 225
run: find-next/read-line/parse-traces/main 10: 226 => ((3 integer))
mem: ((3 integer)): 8411 <= 226
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 226
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 226
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1258 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 8414 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 226
run: find-next/read-line/parse-traces/main 10: 227 => ((3 integer))
mem: ((3 integer)): 8411 <= 227
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 227
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 227
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1259 byte) (raw)) => t
run: find-next/read-line/parse-traces/main 7: #\t => ((6 byte))
mem: ((6 byte)): 8414 <= #\t
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => t
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 227
run: find-next/read-line/parse-traces/main 10: 228 => ((3 integer))
mem: ((3 integer)): 8411 <= 228
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 228
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 228
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1260 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 8414 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 228
run: find-next/read-line/parse-traces/main 10: 229 => ((3 integer))
mem: ((3 integer)): 8411 <= 229
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 229
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 229
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1261 byte) (raw)) => g
run: find-next/read-line/parse-traces/main 7: #\g => ((6 byte))
mem: ((6 byte)): 8414 <= #\g
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => g
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 229
run: find-next/read-line/parse-traces/main 10: 230 => ((3 integer))
mem: ((3 integer)): 8411 <= 230
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 230
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 230
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1262 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 8414 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 230
run: find-next/read-line/parse-traces/main 10: 231 => ((3 integer))
mem: ((3 integer)): 8411 <= 231
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 231
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 231
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1263 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 8414 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 231
run: find-next/read-line/parse-traces/main 10: 232 => ((3 integer))
mem: ((3 integer)): 8411 <= 232
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 232
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 232
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1264 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 8414 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 232
run: find-next/read-line/parse-traces/main 10: 233 => ((3 integer))
mem: ((3 integer)): 8411 <= 233
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 233
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 233
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1265 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 8414 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 233
run: find-next/read-line/parse-traces/main 10: 234 => ((3 integer))
mem: ((3 integer)): 8411 <= 234
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 234
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 234
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1266 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 8414 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 234
run: find-next/read-line/parse-traces/main 10: 235 => ((3 integer))
mem: ((3 integer)): 8411 <= 235
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 235
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 235
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1267 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 8414 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 235
run: find-next/read-line/parse-traces/main 10: 236 => ((3 integer))
mem: ((3 integer)): 8411 <= 236
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 236
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 236
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1268 byte) (raw)) => 2
run: find-next/read-line/parse-traces/main 7: #\2 => ((6 byte))
mem: ((6 byte)): 8414 <= #\2
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 2
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 236
run: find-next/read-line/parse-traces/main 10: 237 => ((3 integer))
mem: ((3 integer)): 8411 <= 237
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 237
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 237
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1269 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 8414 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 237
run: find-next/read-line/parse-traces/main 10: 238 => ((3 integer))
mem: ((3 integer)): 8411 <= 238
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 238
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 238
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1270 byte) (raw)) => <
run: find-next/read-line/parse-traces/main 7: #\< => ((6 byte))
mem: ((6 byte)): 8414 <= #\<
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => <
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 238
run: find-next/read-line/parse-traces/main 10: 239 => ((3 integer))
mem: ((3 integer)): 8411 <= 239
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 239
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 239
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1271 byte) (raw)) => =
run: find-next/read-line/parse-traces/main 7: #\= => ((6 byte))
mem: ((6 byte)): 8414 <= #\=
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => =
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 239
run: find-next/read-line/parse-traces/main 10: 240 => ((3 integer))
mem: ((3 integer)): 8411 <= 240
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 240
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 240
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1272 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 8414 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 240
run: find-next/read-line/parse-traces/main 10: 241 => ((3 integer))
mem: ((3 integer)): 8411 <= 241
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 241
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8413 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 241
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1273 byte) (raw)) => 3
run: find-next/read-line/parse-traces/main 7: #\3 => ((6 byte))
mem: ((6 byte)): 8414 <= #\3
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 3
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8415 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 241
run: find-next/read-line/parse-traces/main 10: 242 => ((3 integer))
mem: ((3 integer)): 8411 <= 242
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 242
mem: ((4 integer)) => 242
run: find-next/read-line/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 8413 <= t
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: find-next/read-line/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 242
run: read-line/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 8381 <= 242
run: read-line/parse-traces/main 5: (((5 string-address)) <- ((string-copy)) ((3 string-address)) ((2 integer-address) (deref)) ((4 integer)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 216
mem: ((4 integer)) => 242
run: string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/read-line/parse-traces/main 0: 8438 => ((default-space space-address))
run: string-copy/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 216 242)
run: string-copy/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 8440 <= 1031
run: string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1031 216 242)
run: string-copy/read-line/parse-traces/main 2: 216 => ((2 integer))
mem: ((2 integer)): 8441 <= 216
run: string-copy/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 216 242)
run: string-copy/read-line/parse-traces/main 3: 242 => ((3 integer))
mem: ((3 integer)): 8442 <= 242
run: string-copy/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: string-copy/read-line/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 8443 <= 242
run: string-copy/read-line/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 242
mem: ((3 integer)) => 242
run: min/string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/read-line/parse-traces/main 0: 8469 => ((default-space space-address))
run: min/string-copy/read-line/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (242 242)
run: min/string-copy/read-line/parse-traces/main 1: 242 => ((1 integer))
mem: ((1 integer)): 8471 <= 242
run: min/string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (242 242)
run: min/string-copy/read-line/parse-traces/main 2: 242 => ((2 integer))
mem: ((2 integer)): 8472 <= 242
run: min/string-copy/read-line/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 242
mem: ((2 integer)) => 242
run: min/string-copy/read-line/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 8473 <= nil
run: min/string-copy/read-line/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/read-line/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 242
run: string-copy/read-line/parse-traces/main 5: 242 => ((3 integer))
mem: ((3 integer)): 8442 <= 242
run: string-copy/read-line/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 242
mem: ((2 integer)) => 216
run: string-copy/read-line/parse-traces/main 6: 26 => ((4 integer))
mem: ((4 integer)): 8443 <= 26
run: string-copy/read-line/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 26
run: string-copy/read-line/parse-traces/main 7: 8500 => ((5 string-address))
mem: ((5 string-address)): 8444 <= 8500
run: string-copy/read-line/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 216
run: string-copy/read-line/parse-traces/main 8: 216 => ((6 integer))
mem: ((6 integer)): 8445 <= 216
run: string-copy/read-line/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/read-line/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 8446 <= 0
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 216
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 216
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1248 byte) (raw)) => m
run: string-copy/read-line/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 8448 <= #\m
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8501 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8501
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/read-line/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8501 <= #\m
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 216
run: string-copy/read-line/parse-traces/main 15: 217 => ((6 integer))
mem: ((6 integer)): 8445 <= 217
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/read-line/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 8446 <= 1
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 217
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 217
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1249 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 8448 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8502 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8502
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8502 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 217
run: string-copy/read-line/parse-traces/main 15: 218 => ((6 integer))
mem: ((6 integer)): 8445 <= 218
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/read-line/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 8446 <= 2
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 218
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 218
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1250 byte) (raw)) => m
run: string-copy/read-line/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 8448 <= #\m
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8503 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8503
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/read-line/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8503 <= #\m
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 218
run: string-copy/read-line/parse-traces/main 15: 219 => ((6 integer))
mem: ((6 integer)): 8445 <= 219
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/read-line/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 8446 <= 3
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 219
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 219
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1251 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 8448 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8504 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8504
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8504 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 219
run: string-copy/read-line/parse-traces/main 15: 220 => ((6 integer))
mem: ((6 integer)): 8445 <= 220
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/read-line/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 8446 <= 4
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 220
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 220
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1252 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 8448 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8505 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8505
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8505 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 220
run: string-copy/read-line/parse-traces/main 15: 221 => ((6 integer))
mem: ((6 integer)): 8445 <= 221
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/read-line/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 8446 <= 5
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 221
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 221
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1253 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 8448 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8506 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8506
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8506 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 221
run: string-copy/read-line/parse-traces/main 15: 222 => ((6 integer))
mem: ((6 integer)): 8445 <= 222
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/read-line/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 8446 <= 6
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 222
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 222
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1254 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 8448 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8507 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8507
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8507 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 222
run: string-copy/read-line/parse-traces/main 15: 223 => ((6 integer))
mem: ((6 integer)): 8445 <= 223
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/read-line/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 8446 <= 7
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 223
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 223
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1255 byte) (raw)) => 2
run: string-copy/read-line/parse-traces/main 12: #\2 => ((9 character))
mem: ((9 character)): 8448 <= #\2
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8508 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8508
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 2
run: string-copy/read-line/parse-traces/main 14: #\2 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8508 <= #\2
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 223
run: string-copy/read-line/parse-traces/main 15: 224 => ((6 integer))
mem: ((6 integer)): 8445 <= 224
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/read-line/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 8446 <= 8
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 224
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 224
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1256 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 8448 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8509 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8509
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8509 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 224
run: string-copy/read-line/parse-traces/main 15: 225 => ((6 integer))
mem: ((6 integer)): 8445 <= 225
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/read-line/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 8446 <= 9
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 225
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 225
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1257 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 8448 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8510 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8510
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8510 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 225
run: string-copy/read-line/parse-traces/main 15: 226 => ((6 integer))
mem: ((6 integer)): 8445 <= 226
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/read-line/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 8446 <= 10
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 226
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 226
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1258 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 8448 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8511 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8511
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8511 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 226
run: string-copy/read-line/parse-traces/main 15: 227 => ((6 integer))
mem: ((6 integer)): 8445 <= 227
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/read-line/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 8446 <= 11
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 227
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 227
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1259 byte) (raw)) => t
run: string-copy/read-line/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 8448 <= #\t
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8512 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8512
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/read-line/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8512 <= #\t
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 227
run: string-copy/read-line/parse-traces/main 15: 228 => ((6 integer))
mem: ((6 integer)): 8445 <= 228
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/read-line/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 8446 <= 12
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 228
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 228
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1260 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 8448 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8513 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8513
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8513 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 228
run: string-copy/read-line/parse-traces/main 15: 229 => ((6 integer))
mem: ((6 integer)): 8445 <= 229
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/read-line/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 8446 <= 13
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 229
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 229
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1261 byte) (raw)) => g
run: string-copy/read-line/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 8448 <= #\g
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8514 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8514
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/read-line/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8514 <= #\g
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 229
run: string-copy/read-line/parse-traces/main 15: 230 => ((6 integer))
mem: ((6 integer)): 8445 <= 230
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/read-line/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 8446 <= 14
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 230
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 230
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1262 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 8448 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8515 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8515
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8515 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 230
run: string-copy/read-line/parse-traces/main 15: 231 => ((6 integer))
mem: ((6 integer)): 8445 <= 231
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/read-line/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 8446 <= 15
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 231
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 231
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1263 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 8448 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8516 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8516
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8516 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 231
run: string-copy/read-line/parse-traces/main 15: 232 => ((6 integer))
mem: ((6 integer)): 8445 <= 232
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/read-line/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 8446 <= 16
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 232
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 232
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1264 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 8448 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8517 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8517
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8517 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 232
run: string-copy/read-line/parse-traces/main 15: 233 => ((6 integer))
mem: ((6 integer)): 8445 <= 233
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/read-line/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 8446 <= 17
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 233
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 233
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1265 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 8448 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8518 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8518
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8518 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 233
run: string-copy/read-line/parse-traces/main 15: 234 => ((6 integer))
mem: ((6 integer)): 8445 <= 234
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/read-line/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 8446 <= 18
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 234
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 234
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1266 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 8448 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8519 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8519
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8519 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 234
run: string-copy/read-line/parse-traces/main 15: 235 => ((6 integer))
mem: ((6 integer)): 8445 <= 235
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/read-line/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 8446 <= 19
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 235
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 235
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1267 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 8448 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8520 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8520
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8520 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 235
run: string-copy/read-line/parse-traces/main 15: 236 => ((6 integer))
mem: ((6 integer)): 8445 <= 236
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/read-line/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 8446 <= 20
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 236
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 236
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1268 byte) (raw)) => 2
run: string-copy/read-line/parse-traces/main 12: #\2 => ((9 character))
mem: ((9 character)): 8448 <= #\2
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8521 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8521
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 2
run: string-copy/read-line/parse-traces/main 14: #\2 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8521 <= #\2
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 236
run: string-copy/read-line/parse-traces/main 15: 237 => ((6 integer))
mem: ((6 integer)): 8445 <= 237
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/read-line/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 8446 <= 21
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 237
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 237
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1269 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 8448 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8522 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8522
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8522 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 237
run: string-copy/read-line/parse-traces/main 15: 238 => ((6 integer))
mem: ((6 integer)): 8445 <= 238
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/read-line/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 8446 <= 22
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 238
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 238
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1270 byte) (raw)) => <
run: string-copy/read-line/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 8448 <= #\<
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8523 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8523
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/read-line/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8523 <= #\<
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 238
run: string-copy/read-line/parse-traces/main 15: 239 => ((6 integer))
mem: ((6 integer)): 8445 <= 239
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/read-line/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 8446 <= 23
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 239
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 239
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1271 byte) (raw)) => =
run: string-copy/read-line/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 8448 <= #\=
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8524 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8524
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/read-line/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8524 <= #\=
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 239
run: string-copy/read-line/parse-traces/main 15: 240 => ((6 integer))
mem: ((6 integer)): 8445 <= 240
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/read-line/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 8446 <= 24
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 240
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 240
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1272 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 8448 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8525 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8525
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8525 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 240
run: string-copy/read-line/parse-traces/main 15: 241 => ((6 integer))
mem: ((6 integer)): 8445 <= 241
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/read-line/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 8446 <= 25
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 241
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8447 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 241
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 242
mem: ((1273 byte) (raw)) => 3
run: string-copy/read-line/parse-traces/main 12: #\3 => ((9 character))
mem: ((9 character)): 8448 <= #\3
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 8526 => ((10 character-address))
mem: ((10 character-address)): 8449 <= 8526
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 3
run: string-copy/read-line/parse-traces/main 14: #\3 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8526 <= #\3
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 241
run: string-copy/read-line/parse-traces/main 15: 242 => ((6 integer))
mem: ((6 integer)): 8445 <= 242
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/read-line/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 8446 <= 26
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 242
mem: ((3 integer)) => 242
run: string-copy/read-line/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 8447 <= t
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/read-line/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 8500
run: read-line/parse-traces/main 5: 8500 => ((5 string-address))
mem: ((5 string-address)): 8382 <= 8500
run: read-line/parse-traces/main 6: (((2 integer-address) (deref)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 242
run: read-line/parse-traces/main 6: 243 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1305 <= 243
run: read-line/parse-traces/main 7: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 8500
run: parse-traces/main 9: 8500 => ((7 string-address))
mem: ((7 string-address)): 1315 <= 8500
run: parse-traces/main 10: (((8 trace-address)) <- ((parse-trace)) ((7 string-address)))
mem: ((7 string-address)) => 8500
run: parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-trace/parse-traces/main 0: 8527 => ((default-space space-address))
run: parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (8500)
run: parse-trace/parse-traces/main 1: 8500 => ((1 string-address))
mem: ((1 string-address)): 8529 <= 8500
run: parse-trace/parse-traces/main 2: (((2 trace-address)) <- ((new)) ((trace literal)))
run: parse-trace/parse-traces/main 2: 8558 => ((2 trace-address))
mem: ((2 trace-address)): 8530 <= 8558
run: parse-trace/parse-traces/main 3: (((3 string-address)) <- ((new)) : )
run: parse-trace/parse-traces/main 3: 8560 => ((3 string-address))
mem: ((3 string-address)): 8531 <= 8560
run: parse-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first-at-substring)) ((1 string-address)) ((3 string-address)))
mem: ((1 string-address)) => 8500
mem: ((3 string-address)) => 8560
run: split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-trace/parse-traces/main 0: 8563 => ((default-space space-address))
run: split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (8500 8560)
run: split-first-at-substring/parse-trace/parse-traces/main 1: 8500 => ((1 string-address))
mem: ((1 string-address)): 8565 <= 8500
run: split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (8500 8560)
run: split-first-at-substring/parse-trace/parse-traces/main 2: 8560 => ((2 string-address))
mem: ((2 string-address)): 8566 <= 8560
run: split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((8500 integer) (raw)) => 26
run: split-first-at-substring/parse-trace/parse-traces/main 3: 26 => ((3 integer))
mem: ((3 integer)): 8567 <= 26
run: split-first-at-substring/parse-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 26
run: split-first-at-substring/parse-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 8568 <= nil
run: split-first-at-substring/parse-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 8500
mem: ((2 string-address)) => 8560
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 8594 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (8500 8560 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 8500 => ((1 string-address))
mem: ((1 string-address)): 8596 <= 8500
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (8500 8560 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 8560 => ((2 string-address))
mem: ((2 string-address)): 8597 <= 8560
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (8500 8560 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 8598 <= 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((8560 string) (raw))
mem: ((8560 integer) (raw)) => 2
mem: ((8561 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 8599 <= #\:
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((8500 integer) (raw)) => 26
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 26 => ((5 integer))
mem: ((5 integer)): 8600 <= 26
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 26
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 8601 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 8500
mem: ((2 string-address)) => 8560
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 8625 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (8500 8560 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 8500 => ((1 string-address))
mem: ((1 string-address)): 8627 <= 8500
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (8500 8560 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 8560 => ((2 string-address))
mem: ((2 string-address)): 8628 <= 8560
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (8500 8560 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 8629 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((8560 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 8630 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((8500 integer) (raw)) => 26
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 26 => ((5 integer))
mem: ((5 integer)): 8631 <= 26
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 26
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 24 => ((5 integer))
mem: ((5 integer)): 8631 <= 24
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 24
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 8632 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 8633 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 8634 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8501 byte) (raw)) => m
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\m => ((9 character))
mem: ((9 character)): 8635 <= #\m
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((8560 string) (raw))
mem: ((8560 integer) (raw)) => 2
mem: ((8561 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 8636 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => m
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 8637 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8602 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 8598 <= 1
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 8500
mem: ((4 character)) => :
mem: ((3 integer)) => 1
schedule: scheduling find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main for further processing
schedule: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 8656 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (8500 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 8500 => ((1 string-address))
mem: ((1 string-address)): 8658 <= 8500
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (8500 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 8659 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (8500 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 8660 <= 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((8500 integer) (raw)) => 26
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 8661 <= 26
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 26
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8662 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8502 byte) (raw)) => e
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 8663 <= #\e
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8664 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 8660 <= 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 26
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8662 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8503 byte) (raw)) => m
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 8663 <= #\m
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 8664 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 8660 <= 3
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 26
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8662 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8504 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 8663 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 8664 <= t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: 3 => ((3 integer))
mem: ((3 integer)): 8598 <= 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 26
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 8601 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 8500
mem: ((2 string-address)) => 8560
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 8687 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (8500 8560 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 8500 => ((1 string-address))
mem: ((1 string-address)): 8689 <= 8500
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (8500 8560 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 8560 => ((2 string-address))
mem: ((2 string-address)): 8690 <= 8560
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (8500 8560 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 8691 <= 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((8560 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 8692 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((8500 integer) (raw)) => 26
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 26 => ((5 integer))
mem: ((5 integer)): 8693 <= 26
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 26
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 24 => ((5 integer))
mem: ((5 integer)): 8693 <= 24
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 24
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 8694 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 8695 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 8696 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8504 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 8697 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((8560 string) (raw))
mem: ((8560 integer) (raw)) => 2
mem: ((8561 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 8698 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 8699 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 4 => ((3 integer))
mem: ((3 integer)): 8691 <= 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 8695 <= 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 8696 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8505 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 8697 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((8560 string) (raw))
mem: ((8560 integer) (raw)) => 2
mem: ((8562 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 8698 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 8699 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 5 => ((3 integer))
mem: ((3 integer)): 8691 <= 5
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 8695 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 8696 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 8602 <= t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: split-first-at-substring/parse-trace/parse-traces/main 9: 3 => ((7 integer))
mem: ((7 integer)): 8571 <= 3
run: split-first-at-substring/parse-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 8500
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 8718 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (8500 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 8500 => ((1 string-address))
mem: ((1 string-address)): 8720 <= 8500
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (8500 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 8721 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (8500 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 8722 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((8500 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 8723 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 8749 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (26 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 26 => ((1 integer))
mem: ((1 integer)): 8751 <= 26
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (26 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 8752 <= 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 26
mem: ((2 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 8753 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 3 => ((3 integer))
mem: ((3 integer)): 8722 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 3
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 3 => ((4 integer))
mem: ((4 integer)): 8723 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 8780 => ((5 string-address))
mem: ((5 string-address)): 8724 <= 8780
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 8725 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 8726 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8727 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8501 byte) (raw)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 8728 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((8780 string) (raw))
mem: ((8780 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8781 => ((10 character-address))
mem: ((10 character-address)): 8729 <= 8781
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8781 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 8725 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 8726 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8727 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8502 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 8728 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((8780 string) (raw))
mem: ((8780 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8782 => ((10 character-address))
mem: ((10 character-address)): 8729 <= 8782
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8782 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 8725 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 8726 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8727 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8503 byte) (raw)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 8728 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((8780 string) (raw))
mem: ((8780 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8783 => ((10 character-address))
mem: ((10 character-address)): 8729 <= 8783
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8783 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 8725 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 8726 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 8727 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 8780
run: split-first-at-substring/parse-trace/parse-traces/main 10: 8780 => ((5 string-address))
mem: ((5 string-address)): 8569 <= 8780
run: split-first-at-substring/parse-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((8560 integer) (raw)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 8572 <= 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 3
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: 5 => ((7 integer))
mem: ((7 integer)): 8571 <= 5
run: split-first-at-substring/parse-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 8500
mem: ((7 integer)) => 5
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 8784 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (8500 5 26)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 8500 => ((1 string-address))
mem: ((1 string-address)): 8786 <= 8500
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (8500 5 26)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 5 => ((2 integer))
mem: ((2 integer)): 8787 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (8500 5 26)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 26 => ((3 integer))
mem: ((3 integer)): 8788 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((8500 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 8789 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 26
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 8815 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (26 26)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 26 => ((1 integer))
mem: ((1 integer)): 8817 <= 26
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (26 26)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 26 => ((2 integer))
mem: ((2 integer)): 8818 <= 26
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 26
mem: ((2 integer)) => 26
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 8819 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 26 => ((3 integer))
mem: ((3 integer)): 8788 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 26
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 21 => ((4 integer))
mem: ((4 integer)): 8789 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 8846 => ((5 string-address))
mem: ((5 string-address)): 8790 <= 8846
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 5 => ((6 integer))
mem: ((6 integer)): 8791 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 8792 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8506 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 8794 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8847 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8847
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8847 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 8791 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 8792 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8507 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 8794 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8848 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8848
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8848 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 8791 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 8792 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8508 byte) (raw)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\2 => ((9 character))
mem: ((9 character)): 8794 <= #\2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8849 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8849
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\2 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8849 <= #\2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 8791 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 8792 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8509 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 8794 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8850 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8850
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8850 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 8791 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 8792 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8510 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 8794 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8851 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8851
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8851 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 8791 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 8792 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8511 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 8794 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8852 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8852
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8852 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 8791 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 8792 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8512 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 8794 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8853 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8853
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8853 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 8791 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 8792 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8513 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 8794 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8854 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8854
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8854 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 8791 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 8792 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8514 byte) (raw)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 8794 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8855 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8855
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8855 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 8791 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 8792 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8515 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 8794 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8856 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8856
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8856 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 8791 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 8792 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8516 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 8794 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8857 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8857
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8857 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 8791 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 8792 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8517 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 8794 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8858 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8858
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8858 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 8791 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 8792 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8518 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 8794 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8859 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8859
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8859 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 8791 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 8792 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8519 byte) (raw)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 8794 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8860 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8860
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8860 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 8791 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 8792 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8520 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 8794 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8861 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8861
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8861 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 8791 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 8792 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8521 byte) (raw)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\2 => ((9 character))
mem: ((9 character)): 8794 <= #\2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8862 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8862
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\2 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8862 <= #\2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 8791 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 8792 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8522 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 8794 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8863 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8863
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8863 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 8791 <= 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 8792 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8523 byte) (raw)) => <
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 8794 <= #\<
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8864 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8864
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8864 <= #\<
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 8791 <= 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 8792 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8524 byte) (raw)) => =
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 8794 <= #\=
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8865 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8865
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8865 <= #\=
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 8791 <= 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 8792 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8525 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 8794 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8866 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8866
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8866 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 8791 <= 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 8792 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 8793 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((8500 string) (raw))
mem: ((8500 integer) (raw)) => 26
mem: ((8526 byte) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\3 => ((9 character))
mem: ((9 character)): 8794 <= #\3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((8846 string) (raw))
mem: ((8846 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 8867 => ((10 character-address))
mem: ((10 character-address)): 8795 <= 8867
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\3 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 8867 <= #\3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 8791 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 8792 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 8793 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 8846
run: split-first-at-substring/parse-trace/parse-traces/main 13: 8846 => ((6 string-address))
mem: ((6 string-address)): 8570 <= 8846
run: split-first-at-substring/parse-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 8780
mem: ((6 string-address)) => 8846
run: parse-trace/parse-traces/main 4: 8780 => ((4 string-address))
mem: ((4 string-address)): 8532 <= 8780
run: parse-trace/parse-traces/main 4: 8846 => ((5 string-address))
mem: ((5 string-address)): 8533 <= 8846
run: parse-trace/parse-traces/main 5: (((6 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((0 offset)))
run: parse-trace/parse-traces/main 5: 8558 => ((6 string-address-address))
mem: ((6 string-address-address)): 8534 <= 8558
run: parse-trace/parse-traces/main 6: (((6 string-address-address) (deref)) <- ((copy)) ((4 string-address)))
mem: ((4 string-address)) => 8780
run: parse-trace/parse-traces/main 6: 8780 => ((6 string-address-address) (deref))
mem: ((6 string-address-address) (deref)): 8558 <= 8780
run: parse-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((1 offset)))
run: parse-trace/parse-traces/main 7: 8559 => ((7 string-address-address))
mem: ((7 string-address-address)): 8535 <= 8559
run: parse-trace/parse-traces/main 8: (((7 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 8846
run: parse-trace/parse-traces/main 8: 8846 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 8559 <= 8846
run: parse-trace/parse-traces/main 9: (((reply)) ((2 trace-address)))
mem: ((2 trace-address)) => 8558
run: parse-traces/main 10: 8558 => ((8 trace-address))
mem: ((8 trace-address)): 1316 <= 8558
run: parse-traces/main 11: (((9 string-address)) <- ((get)) ((8 trace-address) (deref)) ((0 offset)))
mem: ((8558 string-address) (raw)) => 8780
run: parse-traces/main 11: 8780 => ((9 string-address))
mem: ((9 string-address)): 1317 <= 8780
run: parse-traces/main 12: (((10 boolean)) <- ((string-equal)) ((9 string-address)) ((5 string-address) (const)))
mem: ((9 string-address)) => 8780
mem: ((5 string-address) (const)) => 1441
run: string-equal/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-equal/parse-traces/main 0: 8868 => ((default-space space-address))
run: string-equal/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (8780 1441)
run: string-equal/parse-traces/main 1: 8780 => ((1 string-address))
mem: ((1 string-address)): 8870 <= 8780
run: string-equal/parse-traces/main 2: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((8780 integer) (raw)) => 3
run: string-equal/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 8871 <= 3
run: string-equal/parse-traces/main 3: (((3 string-address)) <- ((next-input)))
arg: nil 1 (8780 1441)
run: string-equal/parse-traces/main 3: 1441 => ((3 string-address))
mem: ((3 string-address)): 8872 <= 1441
run: string-equal/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1441 integer) (raw)) => 3
run: string-equal/parse-traces/main 4: 3 => ((4 integer))
mem: ((4 integer)): 8873 <= 3
run: string-equal/parse-traces/main 5: (((5 boolean)) <- ((equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 3
mem: ((4 integer)) => 3
run: string-equal/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 8874 <= t
run: string-equal/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((1 offset)))
mem: ((5 boolean)) => t
run: string-equal/parse-traces/main 8: (((6 integer)) <- ((copy)) ((0 literal)))
run: string-equal/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 8875 <= 0
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 0
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 8876 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((8780 string) (raw))
mem: ((8780 integer) (raw)) => 3
mem: ((8781 byte) (raw)) => m
run: string-equal/parse-traces/main 11: #\m => ((8 byte))
mem: ((8 byte)): 8877 <= #\m
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((1441 string) (raw))
mem: ((1441 integer) (raw)) => 3
mem: ((1442 byte) (raw)) => r
run: string-equal/parse-traces/main 12: #\r => ((9 byte))
mem: ((9 byte)): 8878 <= #\r
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => m
mem: ((9 byte)) => r
run: string-equal/parse-traces/main 13: nil => ((10 boolean))
mem: ((10 boolean)): 8879 <= nil
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => nil
run: string-equal/parse-traces/main 15: (((reply)) ((nil literal)))
run: parse-traces/main 12: nil => ((10 boolean))
mem: ((10 boolean)): 1318 <= nil
run: parse-traces/main 13: (((jump-unless)) ((10 boolean)) ((7 offset)))
mem: ((10 boolean)) => nil
run: parse-traces/main 21: (((jump-unless)) ((3 instruction-trace-address)) ((-16 offset)))
mem: ((3 instruction-trace-address)) => 7601
run: parse-traces/main 22: (((4 buffer-address)) <- ((append)) ((4 buffer-address)) ((8 trace-address)))
mem: ((4 buffer-address)) => 7562
mem: ((8 trace-address)) => 8558
run: append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/parse-traces/main 0: 8899 => ((default-space space-address))
run: append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (7562 8558)
run: append/parse-traces/main 1: 7562 => ((1 buffer-address))
mem: ((1 buffer-address)): 8901 <= 7562
run: append/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (7562 8558)
run: append/parse-traces/main 2: 8558 => ((2 character))
mem: ((2 character)): 8902 <= 8558
run: append/parse-traces/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 7562
run: buffer-full?/append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/parse-traces/main 0: 8930 => ((default-space space-address))
run: buffer-full?/append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (7562)
run: buffer-full?/append/parse-traces/main 1: 7562 => ((1 buffer-address))
mem: ((1 buffer-address)): 8932 <= 7562
run: buffer-full?/append/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((7562 integer) (raw)) => 0
run: buffer-full?/append/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 8933 <= 0
run: buffer-full?/append/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((7563 string-address) (raw)) => 7564
run: buffer-full?/append/parse-traces/main 3: 7564 => ((3 string-address))
mem: ((3 string-address)): 8934 <= 7564
run: buffer-full?/append/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((7564 integer) (raw)) => 5
run: buffer-full?/append/parse-traces/main 4: 5 => ((4 integer))
mem: ((4 integer)): 8935 <= 5
run: buffer-full?/append/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 5
run: buffer-full?/append/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8936 <= nil
run: buffer-full?/append/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 8903 <= nil
run: append/parse-traces/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/parse-traces/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/parse-traces/main 6: 7562 => ((4 integer-address))
mem: ((4 integer-address)): 8904 <= 7562
run: append/parse-traces/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((7563 string-address) (raw)) => 7564
run: append/parse-traces/main 7: 7564 => ((5 string-address))
mem: ((5 string-address)): 8905 <= 7564
run: append/parse-traces/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((7564 string) (raw))
mem: ((7564 integer) (raw)) => 5
run: append/parse-traces/main 8: 7565 => ((6 byte-address))
mem: ((6 byte-address)): 8906 <= 7565
run: append/parse-traces/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 8558
run: append/parse-traces/main 9: 8558 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 7565 <= 8558
run: append/parse-traces/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/parse-traces/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 7562 <= 1
run: append/parse-traces/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 7562
run: parse-traces/main 22: 7562 => ((4 buffer-address))
mem: ((4 buffer-address)): 1312 <= 7562
run: parse-traces/main 23: (((jump)) ((-18 offset)))
run: parse-traces/main 6: next-line
run: parse-traces/main 7: (((6 boolean)) <- ((end-of-stream?)) ((1 stream-address)))
mem: ((1 stream-address)) => 1305
run: end-of-stream?/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: end-of-stream?/parse-traces/main 0: 8961 => ((default-space space-address))
run: end-of-stream?/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1305)
run: end-of-stream?/parse-traces/main 1: 1305 => ((1 stream-address))
mem: ((1 stream-address)): 8963 <= 1305
run: end-of-stream?/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 stream-address) (deref)) ((0 offset)))
mem: ((1305 integer) (raw)) => 243
run: end-of-stream?/parse-traces/main 2: 243 => ((2 integer))
mem: ((2 integer)): 8964 <= 243
run: end-of-stream?/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1306 string-address) (raw)) => 1031
run: end-of-stream?/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 8965 <= 1031
run: end-of-stream?/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1031 integer) (raw)) => 242
run: end-of-stream?/parse-traces/main 4: 242 => ((4 integer))
mem: ((4 integer)): 8966 <= 242
run: end-of-stream?/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 243
mem: ((4 integer)) => 242
run: end-of-stream?/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 8967 <= t
run: end-of-stream?/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => t
run: parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 1314 <= t
run: parse-traces/main 8: (((jump-if)) ((6 boolean)) ((15 offset)))
mem: ((6 boolean)) => t
run: parse-traces/main 24: (((jump-unless)) ((3 instruction-trace-address)) ((2 offset)))
mem: ((3 instruction-trace-address)) => 7601
run: parse-traces/main 25: (((11 trace-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((3 offset)))
run: parse-traces/main 25: 7604 => ((11 trace-address-array-address-address))
mem: ((11 trace-address-array-address-address)): 1319 <= 7604
run: parse-traces/main 26: (((11 trace-address-array-address-address) (deref)) <- ((to-array)) ((4 buffer-address)))
mem: ((4 buffer-address)) => 7562
run: to-array/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: to-array/parse-traces/main 0: 8992 => ((default-space space-address))
run: to-array/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (7562)
run: to-array/parse-traces/main 1: 7562 => ((1 buffer-address))
mem: ((1 buffer-address)): 8994 <= 7562
run: to-array/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((7562 integer) (raw)) => 1
run: to-array/parse-traces/main 2: 1 => ((2 integer))
mem: ((2 integer)): 8995 <= 1
run: to-array/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((7563 string-address) (raw)) => 7564
run: to-array/parse-traces/main 3: 7564 => ((3 string-address))
mem: ((3 string-address)): 8996 <= 7564
run: to-array/parse-traces/main 4: (((jump-if)) ((3 string-address)) ((1 offset)))
mem: ((3 string-address)) => 7564
run: to-array/parse-traces/main 6: (((4 string-address)) <- ((new)) ((string literal)) ((2 integer)))
mem: ((2 integer)) => 1
run: to-array/parse-traces/main 6: 9023 => ((4 string-address))
mem: ((4 string-address)): 8997 <= 9023
run: to-array/parse-traces/main 7: (((5 integer)) <- ((copy)) ((0 literal)))
run: to-array/parse-traces/main 7: 0 => ((5 integer))
mem: ((5 integer)): 8998 <= 0
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 0
mem: ((2 integer)) => 1
run: to-array/parse-traces/main 8: nil => ((6 boolean))
mem: ((6 boolean)): 8999 <= nil
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: to-array/parse-traces/main 10: (((7 byte)) <- ((index)) ((3 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((7564 string) (raw))
mem: ((7564 integer) (raw)) => 5
mem: ((7565 byte) (raw)) => 8558
run: to-array/parse-traces/main 10: 8558 => ((7 byte))
mem: ((7 byte)): 9000 <= 8558
run: to-array/parse-traces/main 11: (((8 byte-address)) <- ((index-address)) ((4 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((9023 string) (raw))
mem: ((9023 integer) (raw)) => 1
run: to-array/parse-traces/main 11: 9024 => ((8 byte-address))
mem: ((8 byte-address)): 9001 <= 9024
run: to-array/parse-traces/main 12: (((8 byte-address) (deref)) <- ((copy)) ((7 byte)))
mem: ((7 byte)) => 8558
run: to-array/parse-traces/main 12: 8558 => ((8 byte-address) (deref))
mem: ((8 byte-address) (deref)): 9024 <= 8558
run: to-array/parse-traces/main 13: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 0
run: to-array/parse-traces/main 13: 1 => ((5 integer))
mem: ((5 integer)): 8998 <= 1
run: to-array/parse-traces/main 14: (((jump)) ((-7 offset)))
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 1
mem: ((2 integer)) => 1
run: to-array/parse-traces/main 8: t => ((6 boolean))
mem: ((6 boolean)): 8999 <= t
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => t
run: to-array/parse-traces/main 15: (((reply)) ((4 string-address)))
mem: ((4 string-address)) => 9023
run: parse-traces/main 26: 9023 => ((11 trace-address-array-address-address) (deref))
mem: ((11 trace-address-array-address-address) (deref)): 7604 <= 9023
run: parse-traces/main 27: (((12 instruction-trace-address-array-address)) <- ((to-array)) ((2 buffer-address)))
mem: ((2 buffer-address)) => 1369
run: to-array/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: to-array/parse-traces/main 0: 9025 => ((default-space space-address))
run: to-array/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1369)
run: to-array/parse-traces/main 1: 1369 => ((1 buffer-address))
mem: ((1 buffer-address)): 9027 <= 1369
run: to-array/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((1369 integer) (raw)) => 4
run: to-array/parse-traces/main 2: 4 => ((2 integer))
mem: ((2 integer)): 9028 <= 4
run: to-array/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1370 string-address) (raw)) => 1371
run: to-array/parse-traces/main 3: 1371 => ((3 string-address))
mem: ((3 string-address)): 9029 <= 1371
run: to-array/parse-traces/main 4: (((jump-if)) ((3 string-address)) ((1 offset)))
mem: ((3 string-address)) => 1371
run: to-array/parse-traces/main 6: (((4 string-address)) <- ((new)) ((string literal)) ((2 integer)))
mem: ((2 integer)) => 4
run: to-array/parse-traces/main 6: 9056 => ((4 string-address))
mem: ((4 string-address)): 9030 <= 9056
run: to-array/parse-traces/main 7: (((5 integer)) <- ((copy)) ((0 literal)))
run: to-array/parse-traces/main 7: 0 => ((5 integer))
mem: ((5 integer)): 9031 <= 0
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 0
mem: ((2 integer)) => 4
run: to-array/parse-traces/main 8: nil => ((6 boolean))
mem: ((6 boolean)): 9032 <= nil
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: to-array/parse-traces/main 10: (((7 byte)) <- ((index)) ((3 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((1371 string) (raw))
mem: ((1371 integer) (raw)) => 30
mem: ((1372 byte) (raw)) => 2616
run: to-array/parse-traces/main 10: 2616 => ((7 byte))
mem: ((7 byte)): 9033 <= 2616
run: to-array/parse-traces/main 11: (((8 byte-address)) <- ((index-address)) ((4 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((9056 string) (raw))
mem: ((9056 integer) (raw)) => 4
run: to-array/parse-traces/main 11: 9057 => ((8 byte-address))
mem: ((8 byte-address)): 9034 <= 9057
run: to-array/parse-traces/main 12: (((8 byte-address) (deref)) <- ((copy)) ((7 byte)))
mem: ((7 byte)) => 2616
run: to-array/parse-traces/main 12: 2616 => ((8 byte-address) (deref))
mem: ((8 byte-address) (deref)): 9057 <= 2616
run: to-array/parse-traces/main 13: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 0
run: to-array/parse-traces/main 13: 1 => ((5 integer))
mem: ((5 integer)): 9031 <= 1
run: to-array/parse-traces/main 14: (((jump)) ((-7 offset)))
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 1
mem: ((2 integer)) => 4
run: to-array/parse-traces/main 8: nil => ((6 boolean))
mem: ((6 boolean)): 9032 <= nil
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: to-array/parse-traces/main 10: (((7 byte)) <- ((index)) ((3 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 1
array-len: ((1371 string) (raw))
mem: ((1371 integer) (raw)) => 30
mem: ((1373 byte) (raw)) => 4072
run: to-array/parse-traces/main 10: 4072 => ((7 byte))
mem: ((7 byte)): 9033 <= 4072
run: to-array/parse-traces/main 11: (((8 byte-address)) <- ((index-address)) ((4 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 1
array-len: ((9056 string) (raw))
mem: ((9056 integer) (raw)) => 4
run: to-array/parse-traces/main 11: 9058 => ((8 byte-address))
mem: ((8 byte-address)): 9034 <= 9058
run: to-array/parse-traces/main 12: (((8 byte-address) (deref)) <- ((copy)) ((7 byte)))
mem: ((7 byte)) => 4072
run: to-array/parse-traces/main 12: 4072 => ((8 byte-address) (deref))
mem: ((8 byte-address) (deref)): 9058 <= 4072
run: to-array/parse-traces/main 13: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 1
run: to-array/parse-traces/main 13: 2 => ((5 integer))
mem: ((5 integer)): 9031 <= 2
run: to-array/parse-traces/main 14: (((jump)) ((-7 offset)))
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 2
mem: ((2 integer)) => 4
run: to-array/parse-traces/main 8: nil => ((6 boolean))
mem: ((6 boolean)): 9032 <= nil
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: to-array/parse-traces/main 10: (((7 byte)) <- ((index)) ((3 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 2
array-len: ((1371 string) (raw))
mem: ((1371 integer) (raw)) => 30
mem: ((1374 byte) (raw)) => 6145
run: to-array/parse-traces/main 10: 6145 => ((7 byte))
mem: ((7 byte)): 9033 <= 6145
run: to-array/parse-traces/main 11: (((8 byte-address)) <- ((index-address)) ((4 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 2
array-len: ((9056 string) (raw))
mem: ((9056 integer) (raw)) => 4
run: to-array/parse-traces/main 11: 9059 => ((8 byte-address))
mem: ((8 byte-address)): 9034 <= 9059
run: to-array/parse-traces/main 12: (((8 byte-address) (deref)) <- ((copy)) ((7 byte)))
mem: ((7 byte)) => 6145
run: to-array/parse-traces/main 12: 6145 => ((8 byte-address) (deref))
mem: ((8 byte-address) (deref)): 9059 <= 6145
run: to-array/parse-traces/main 13: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 2
run: to-array/parse-traces/main 13: 3 => ((5 integer))
mem: ((5 integer)): 9031 <= 3
run: to-array/parse-traces/main 14: (((jump)) ((-7 offset)))
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 3
mem: ((2 integer)) => 4
run: to-array/parse-traces/main 8: nil => ((6 boolean))
mem: ((6 boolean)): 9032 <= nil
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: to-array/parse-traces/main 10: (((7 byte)) <- ((index)) ((3 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 3
array-len: ((1371 string) (raw))
mem: ((1371 integer) (raw)) => 30
mem: ((1375 byte) (raw)) => 7601
run: to-array/parse-traces/main 10: 7601 => ((7 byte))
mem: ((7 byte)): 9033 <= 7601
run: to-array/parse-traces/main 11: (((8 byte-address)) <- ((index-address)) ((4 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 3
array-len: ((9056 string) (raw))
mem: ((9056 integer) (raw)) => 4
run: to-array/parse-traces/main 11: 9060 => ((8 byte-address))
mem: ((8 byte-address)): 9034 <= 9060
run: to-array/parse-traces/main 12: (((8 byte-address) (deref)) <- ((copy)) ((7 byte)))
mem: ((7 byte)) => 7601
run: to-array/parse-traces/main 12: 7601 => ((8 byte-address) (deref))
mem: ((8 byte-address) (deref)): 9060 <= 7601
run: to-array/parse-traces/main 13: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 3
run: to-array/parse-traces/main 13: 4 => ((5 integer))
mem: ((5 integer)): 9031 <= 4
run: to-array/parse-traces/main 14: (((jump)) ((-7 offset)))
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 4
mem: ((2 integer)) => 4
run: to-array/parse-traces/main 8: t => ((6 boolean))
mem: ((6 boolean)): 9032 <= t
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => t
run: to-array/parse-traces/main 15: (((reply)) ((4 string-address)))
mem: ((4 string-address)) => 9056
run: parse-traces/main 27: 9056 => ((12 instruction-trace-address-array-address))
mem: ((12 instruction-trace-address-array-address)): 1320 <= 9056
run: parse-traces/main 28: (((reply)) ((12 instruction-trace-address-array-address)))
mem: ((12 instruction-trace-address-array-address)) => 9056
run: main 7: 9056 => ((4 instruction-trace-address-array-address))
mem: ((4 instruction-trace-address-array-address)): 1005 <= 9056
schedule: done with routine nil
