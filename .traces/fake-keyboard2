schedule: main
run: 1 main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2 main 1: (((1 string-address)) <- ((new)) foo)
run: 1031 => ((1 string-address))
setm: ((1 string-address)) <= 1031
setm: size of ((1 string-address)) is 1
setm: ((1 string-address)): setting 1002 to 1031
run: 3 main 2: (((2 keyboard-address)) <- ((init-keyboard)) ((1 string-address)))
m: ((1 string-address))
sizeof: ((1 string-address))
run: 4 init-keyboard 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1035 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5 init-keyboard 1: (((1 keyboard-address)) <- ((new)) ((keyboard literal)))
sizeof: ((_ keyboard))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 1066 => ((1 keyboard-address))
setm: ((1 keyboard-address)) <= 1066
setm: size of ((1 keyboard-address)) is 1
setm: ((1 keyboard-address)): setting 1037 to 1066
run: 6 init-keyboard 2: (((2 string-address-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1067 => ((2 string-address-address))
setm: ((2 string-address-address)) <= 1067
setm: size of ((2 string-address-address)) is 1
setm: ((2 string-address-address)): setting 1038 to 1067
run: 7 init-keyboard 3: (((2 string-address-address) (deref)) <- ((next-input)))
arg: nil 0 (1031)
run: 1031 => ((2 string-address-address) (deref))
setm: ((2 string-address-address) (deref)) <= 1031
setm: size of ((2 string-address-address) (deref)) is 1
setm: ((2 string-address-address) (deref)): setting 1067 to 1031
run: 8 init-keyboard 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: 1066 => ((3 integer-address))
setm: ((3 integer-address)) <= 1066
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 1039 to 1066
run: 9 init-keyboard 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1066 to 0
run: 10 init-keyboard 6: (((reply)) ((1 keyboard-address)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
reply: (((1 keyboard-address))) (((2 keyboard-address)))
reply: 1066 => ((2 keyboard-address))
setm: ((2 keyboard-address)) <= 1066
setm: size of ((2 keyboard-address)) is 1
setm: ((2 keyboard-address)): setting 1003 to 1066
run: 11 main 3: (((1 character-address) (raw)) <- ((read-key)) ((2 keyboard-address)))
m: ((2 keyboard-address))
sizeof: ((2 keyboard-address))
run: 12 read-key 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1068 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 13 read-key 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1066)
run: 1066 => ((1 keyboard-address))
setm: ((1 keyboard-address)) <= 1066
setm: size of ((1 keyboard-address)) is 1
setm: ((1 keyboard-address)): setting 1070 to 1066
run: 14 read-key 2: (((jump-unless)) ((1 keyboard-address)) ((5 offset)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 15 read-key 3: (((2 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: 1066 => ((2 integer-address))
setm: ((2 integer-address)) <= 1066
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 1071 to 1066
run: 16 read-key 4: (((3 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1067 string-address) (raw))
sizeof: ((1067 string-address) (raw))
run: 1031 => ((3 string-address))
setm: ((3 string-address)) <= 1031
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 1072 to 1031
run: 17 read-key 5: (((4 character)) <- ((index)) ((3 string-address) (deref)) ((2 integer-address) (deref)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
array-len: ((1031 string) (raw))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
sizeof: ((_ byte))
m: ((1032 byte) (raw))
sizeof: ((1032 byte) (raw))
run: #\f => ((4 character))
setm: ((4 character)) <= #\f
setm: size of ((4 character)) is 1
setm: ((4 character)): setting 1073 to #\f
run: 18 read-key 6: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 1 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 1
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1066 to 1
run: 19 read-key 7: (((reply)) ((4 character)))
m: ((4 character))
sizeof: ((4 character))
reply: (((4 character))) (((1 character-address) (raw)))
reply: #\f => ((1 character-address) (raw))
setm: ((1 character-address) (raw)) <= #\f
setm: size of ((1 character-address) (raw)) is 1
setm: ((1 character-address) (raw)): setting 1 to #\f
run: 20 main 4: (((1 character-address) (raw)) <- ((read-key)) ((2 keyboard-address)))
m: ((2 keyboard-address))
sizeof: ((2 keyboard-address))
run: 21 read-key 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1099 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 22 read-key 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1066)
run: 1066 => ((1 keyboard-address))
setm: ((1 keyboard-address)) <= 1066
setm: size of ((1 keyboard-address)) is 1
setm: ((1 keyboard-address)): setting 1101 to 1066
run: 23 read-key 2: (((jump-unless)) ((1 keyboard-address)) ((5 offset)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 24 read-key 3: (((2 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: 1066 => ((2 integer-address))
setm: ((2 integer-address)) <= 1066
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 1102 to 1066
run: 25 read-key 4: (((3 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1067 string-address) (raw))
sizeof: ((1067 string-address) (raw))
run: 1031 => ((3 string-address))
setm: ((3 string-address)) <= 1031
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 1103 to 1031
run: 26 read-key 5: (((4 character)) <- ((index)) ((3 string-address) (deref)) ((2 integer-address) (deref)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
array-len: ((1031 string) (raw))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
sizeof: ((_ byte))
m: ((1033 byte) (raw))
sizeof: ((1033 byte) (raw))
run: #\o => ((4 character))
setm: ((4 character)) <= #\o
setm: size of ((4 character)) is 1
setm: ((4 character)): setting 1104 to #\o
run: 27 read-key 6: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 2 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 2
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1066 to 2
run: 28 read-key 7: (((reply)) ((4 character)))
m: ((4 character))
sizeof: ((4 character))
reply: (((4 character))) (((1 character-address) (raw)))
reply: #\o => ((1 character-address) (raw))
setm: ((1 character-address) (raw)) <= #\o
setm: size of ((1 character-address) (raw)) is 1
setm: ((1 character-address) (raw)): setting 1 to #\o
schedule: done with routine 
