9991 parse: --- defining test
9993 parse: instruction: reply
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"34": "literal"}
9992 load: after rewriting: reply 34
9999 parse: recipe has a header; parsing
9999 parse: header ingredient: a:number
9999 parse: header product: z:number
9991 parse: --- defining test
9991 parse: already exists
   1 warn: redefining recipe test

9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   product: {"z": <>}
9992 load: after rewriting: z <- copy 1
9999 parse: recipe test has a header
9990 transform: === transform_all()
9991 transform: --- checking reply instructions against header for test
9991 transform: --- fill in reply ingredients from header for recipe test
9991 transform: --- deduce types for recipe test
9992 transform: z => number
9991 transform: --- deduce types from header for test
9993 transform: type of a is number
9993 transform: type of z is number
9992 transform: instruction: z <- copy 1
9993 transform:   product: z: NULLNULLNULL -- {"z": <>}
9993 transform: type of z is number
9992 transform: instruction: reply z:number
9991 transform: --- resolve ambiguous calls for recipe test
9992 transform: instruction copy
9993 transform: too few ingredients
9992 transform: checking variant 0: -1
9992 transform: no variant found; searching for variant with suitable type ingredients
9992 transform: checking shape-shifting variant 0
9993 transform: no type ingredients
9992 transform: final score: -1
9991 transform: --- compute instruction operations for recipe test
9991 transform: --- transform braces for recipe test
9992 transform: copy ...
9992 transform:  ...
9991 transform: --- collect surrounding spaces for recipe test
9991 transform: --- transform names for recipe test
9993 name: assign z 1
9991 transform: --- perform checks for recipe test
9991 transform: --- convert 'new' to 'allocate' for recipe test
9991 transform: --- checking reply instructions against header for test
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: test
 102 run: z <- copy 1
9999 mem: storing 1 in location 1
 102 run: reply z:number
9999 mem: location 1 is 1
9999 trace: reply: decrementing callstack depth from 1
