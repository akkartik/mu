parse: instruction: assume-screen
parse:   ingredient: {name: "10", properties: ["10": "literal", "width": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "height": ]}
parse: instruction: new
parse:   ingredient: {name: "abcdefghij\nk\nl\nm", properties: [_: "literal-string"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
parse:   product: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    press page-down\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .          .\n    .k         .\n    .l         .\n    .m         .\n    .┈┈┈┈┈     .\n  ", properties: [_: "literal-string"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    press up-arrow\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .          .\n    .ij        .\n    .k         .\n    .l         .\n    .m         .\n  ", properties: [_: "literal-string"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    press up-arrow\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .          .\n    .efgh↩     .\n    .ij        .\n    .k         .\n    .l         .\n  ", properties: [_: "literal-string"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    press up-arrow\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .          .\n    .abcd↩     .\n    .efgh↩     .\n    .ij        .\n    .k         .\n  ", properties: [_: "literal-string"]}
after-brace: recipe scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
after-brace: new-fake-screen ...
after-brace: new ...
after-brace: new-editor ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 101 run: screen:address <- new-fake-screen 10/width, 5/height
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1009
9999 mem: storing 1009 in location 1002
 102 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1010
9999 mem: storing 1010 in location 1003
 102 run: *width <- next-ingredient 
9999 mem: location 1003 is 1010
9999 mem: storing 10 in location 1010
 102 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1009
9999 mem: storing 1009 in location 1004
 102 run: *height <- next-ingredient 
9999 mem: location 1004 is 1009
9999 mem: storing 5 in location 1009
 102 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1005
 102 run: *row <- copy 0
9999 mem: location 1005 is 1011
9999 mem: location 1005 is 1011
9999 mem: storing 0 in location 1011
 102 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1006
 102 run: *column <- copy 0
9999 mem: location 1006 is 1012
9999 mem: location 1006 is 1012
9999 mem: storing 0 in location 1012
 102 run: bufsize:number <- multiply *width, *height
9999 mem: location 1003 is 1010
9999 mem: location 1010 is 10
9999 mem: location 1004 is 1009
9999 mem: location 1009 is 5
9999 mem: storing 50 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1013
9999 mem: storing 1013 in location 1008
 102 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1007 is 50
9999 mem: array size is 50
9999 mem: new alloc: 1014
9999 mem: location 1008 is 1013
9999 mem: storing 1014 in location 1013
 102 run: clear-screen result
9999 mem: location 1002 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1115
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1117
 103 run: break-unless sc, 
9999 mem: location 1117 is 1009
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1118
 103 run: max:number <- length *buf
9999 mem: location 1118 is 1014
9999 mem: storing 50 in location 1119
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1120
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 0
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 0
9999 mem: storing 1015 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1122 is 1015
9999 run: address to copy is 1015
9999 mem: storing 1015 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1015
9999 mem: location 1123 is 1015
9999 mem: storing 0 in location 1015
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1122 is 1015
9999 run: address to copy is 1016
9999 mem: storing 1016 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1016
9999 mem: location 1124 is 1016
9999 mem: storing 7 in location 1016
 103 run: i <- add i, 1
9999 mem: location 1120 is 0
9999 mem: storing 1 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 1
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 1
9999 mem: storing 1017 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1122 is 1017
9999 run: address to copy is 1017
9999 mem: storing 1017 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1017
9999 mem: location 1123 is 1017
9999 mem: storing 0 in location 1017
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1122 is 1017
9999 run: address to copy is 1018
9999 mem: storing 1018 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1018
9999 mem: location 1124 is 1018
9999 mem: storing 7 in location 1018
 103 run: i <- add i, 1
9999 mem: location 1120 is 1
9999 mem: storing 2 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 2
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 2
9999 mem: storing 1019 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1122 is 1019
9999 run: address to copy is 1019
9999 mem: storing 1019 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1019
9999 mem: location 1123 is 1019
9999 mem: storing 0 in location 1019
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1122 is 1019
9999 run: address to copy is 1020
9999 mem: storing 1020 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1020
9999 mem: location 1124 is 1020
9999 mem: storing 7 in location 1020
 103 run: i <- add i, 1
9999 mem: location 1120 is 2
9999 mem: storing 3 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 3
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 3
9999 mem: storing 1021 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1122 is 1021
9999 run: address to copy is 1021
9999 mem: storing 1021 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1021
9999 mem: location 1123 is 1021
9999 mem: storing 0 in location 1021
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1122 is 1021
9999 run: address to copy is 1022
9999 mem: storing 1022 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1022
9999 mem: location 1124 is 1022
9999 mem: storing 7 in location 1022
 103 run: i <- add i, 1
9999 mem: location 1120 is 3
9999 mem: storing 4 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 4
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 4
9999 mem: storing 1023 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1122 is 1023
9999 run: address to copy is 1023
9999 mem: storing 1023 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1023
9999 mem: location 1123 is 1023
9999 mem: storing 0 in location 1023
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1122 is 1023
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1024
9999 mem: location 1124 is 1024
9999 mem: storing 7 in location 1024
 103 run: i <- add i, 1
9999 mem: location 1120 is 4
9999 mem: storing 5 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 5
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 5
9999 mem: storing 1025 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1122 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1025
9999 mem: location 1123 is 1025
9999 mem: storing 0 in location 1025
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1122 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1026
9999 mem: location 1124 is 1026
9999 mem: storing 7 in location 1026
 103 run: i <- add i, 1
9999 mem: location 1120 is 5
9999 mem: storing 6 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 6
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 6
9999 mem: storing 1027 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1122 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1027
9999 mem: location 1123 is 1027
9999 mem: storing 0 in location 1027
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1122 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1028
9999 mem: location 1124 is 1028
9999 mem: storing 7 in location 1028
 103 run: i <- add i, 1
9999 mem: location 1120 is 6
9999 mem: storing 7 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 7
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 7
9999 mem: storing 1029 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1122 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1029
9999 mem: location 1123 is 1029
9999 mem: storing 0 in location 1029
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1122 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1030
9999 mem: location 1124 is 1030
9999 mem: storing 7 in location 1030
 103 run: i <- add i, 1
9999 mem: location 1120 is 7
9999 mem: storing 8 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 8
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 8
9999 mem: storing 1031 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1122 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1031
9999 mem: location 1123 is 1031
9999 mem: storing 0 in location 1031
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1122 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1032
9999 mem: location 1124 is 1032
9999 mem: storing 7 in location 1032
 103 run: i <- add i, 1
9999 mem: location 1120 is 8
9999 mem: storing 9 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 9
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 9
9999 mem: storing 1033 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1122 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1033
9999 mem: location 1123 is 1033
9999 mem: storing 0 in location 1033
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1122 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1034
9999 mem: location 1124 is 1034
9999 mem: storing 7 in location 1034
 103 run: i <- add i, 1
9999 mem: location 1120 is 9
9999 mem: storing 10 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 10
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 10
9999 mem: storing 1035 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1122 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1035
9999 mem: location 1123 is 1035
9999 mem: storing 0 in location 1035
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1122 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1036
9999 mem: location 1124 is 1036
9999 mem: storing 7 in location 1036
 103 run: i <- add i, 1
9999 mem: location 1120 is 10
9999 mem: storing 11 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 11
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 11
9999 mem: storing 1037 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1122 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1037
9999 mem: location 1123 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1122 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1038
9999 mem: location 1124 is 1038
9999 mem: storing 7 in location 1038
 103 run: i <- add i, 1
9999 mem: location 1120 is 11
9999 mem: storing 12 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 12
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 12
9999 mem: storing 1039 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1122 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1039
9999 mem: location 1123 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1122 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1040
9999 mem: location 1124 is 1040
9999 mem: storing 7 in location 1040
 103 run: i <- add i, 1
9999 mem: location 1120 is 12
9999 mem: storing 13 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 13
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 13
9999 mem: storing 1041 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1122 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1041
9999 mem: location 1123 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1122 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1042
9999 mem: location 1124 is 1042
9999 mem: storing 7 in location 1042
 103 run: i <- add i, 1
9999 mem: location 1120 is 13
9999 mem: storing 14 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 14
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 14
9999 mem: storing 1043 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1122 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1043
9999 mem: location 1123 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1122 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1044
9999 mem: location 1124 is 1044
9999 mem: storing 7 in location 1044
 103 run: i <- add i, 1
9999 mem: location 1120 is 14
9999 mem: storing 15 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 15
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 15
9999 mem: storing 1045 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1122 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1045
9999 mem: location 1123 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1122 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1046
9999 mem: location 1124 is 1046
9999 mem: storing 7 in location 1046
 103 run: i <- add i, 1
9999 mem: location 1120 is 15
9999 mem: storing 16 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 16
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 16
9999 mem: storing 1047 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1122 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1047
9999 mem: location 1123 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1122 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1048
9999 mem: location 1124 is 1048
9999 mem: storing 7 in location 1048
 103 run: i <- add i, 1
9999 mem: location 1120 is 16
9999 mem: storing 17 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 17
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 17
9999 mem: storing 1049 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1122 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1049
9999 mem: location 1123 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1122 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1050
9999 mem: location 1124 is 1050
9999 mem: storing 7 in location 1050
 103 run: i <- add i, 1
9999 mem: location 1120 is 17
9999 mem: storing 18 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 18
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 18
9999 mem: storing 1051 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1122 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1051
9999 mem: location 1123 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1122 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1052
9999 mem: location 1124 is 1052
9999 mem: storing 7 in location 1052
 103 run: i <- add i, 1
9999 mem: location 1120 is 18
9999 mem: storing 19 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 19
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 19
9999 mem: storing 1053 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1122 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1053
9999 mem: location 1123 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1122 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1054
9999 mem: location 1124 is 1054
9999 mem: storing 7 in location 1054
 103 run: i <- add i, 1
9999 mem: location 1120 is 19
9999 mem: storing 20 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 20
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 20
9999 mem: storing 1055 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1122 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1055
9999 mem: location 1123 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1122 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1056
9999 mem: location 1124 is 1056
9999 mem: storing 7 in location 1056
 103 run: i <- add i, 1
9999 mem: location 1120 is 20
9999 mem: storing 21 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 21
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 21
9999 mem: storing 1057 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1122 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1057
9999 mem: location 1123 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1122 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1058
9999 mem: location 1124 is 1058
9999 mem: storing 7 in location 1058
 103 run: i <- add i, 1
9999 mem: location 1120 is 21
9999 mem: storing 22 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 22
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 22
9999 mem: storing 1059 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1122 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1059
9999 mem: location 1123 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1122 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1060
9999 mem: location 1124 is 1060
9999 mem: storing 7 in location 1060
 103 run: i <- add i, 1
9999 mem: location 1120 is 22
9999 mem: storing 23 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 23
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 23
9999 mem: storing 1061 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1122 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1061
9999 mem: location 1123 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1122 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1062
9999 mem: location 1124 is 1062
9999 mem: storing 7 in location 1062
 103 run: i <- add i, 1
9999 mem: location 1120 is 23
9999 mem: storing 24 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 24
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 24
9999 mem: storing 1063 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1122 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1063
9999 mem: location 1123 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1122 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1064
9999 mem: location 1124 is 1064
9999 mem: storing 7 in location 1064
 103 run: i <- add i, 1
9999 mem: location 1120 is 24
9999 mem: storing 25 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 25
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 25
9999 mem: storing 1065 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1122 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1065
9999 mem: location 1123 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1122 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1066
9999 mem: location 1124 is 1066
9999 mem: storing 7 in location 1066
 103 run: i <- add i, 1
9999 mem: location 1120 is 25
9999 mem: storing 26 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 26
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 26
9999 mem: storing 1067 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1122 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1067
9999 mem: location 1123 is 1067
9999 mem: storing 0 in location 1067
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1122 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1068
9999 mem: location 1124 is 1068
9999 mem: storing 7 in location 1068
 103 run: i <- add i, 1
9999 mem: location 1120 is 26
9999 mem: storing 27 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 27
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 27
9999 mem: storing 1069 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1122 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1069
9999 mem: location 1123 is 1069
9999 mem: storing 0 in location 1069
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1122 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1070
9999 mem: location 1124 is 1070
9999 mem: storing 7 in location 1070
 103 run: i <- add i, 1
9999 mem: location 1120 is 27
9999 mem: storing 28 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 28
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 28
9999 mem: storing 1071 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1122 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1071
9999 mem: location 1123 is 1071
9999 mem: storing 0 in location 1071
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1122 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1072
9999 mem: location 1124 is 1072
9999 mem: storing 7 in location 1072
 103 run: i <- add i, 1
9999 mem: location 1120 is 28
9999 mem: storing 29 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 29
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 29
9999 mem: storing 1073 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1122 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1073
9999 mem: location 1123 is 1073
9999 mem: storing 0 in location 1073
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1122 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1074
9999 mem: location 1124 is 1074
9999 mem: storing 7 in location 1074
 103 run: i <- add i, 1
9999 mem: location 1120 is 29
9999 mem: storing 30 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 30
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 30
9999 mem: storing 1075 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1122 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1075
9999 mem: location 1123 is 1075
9999 mem: storing 0 in location 1075
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1122 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1076
9999 mem: location 1124 is 1076
9999 mem: storing 7 in location 1076
 103 run: i <- add i, 1
9999 mem: location 1120 is 30
9999 mem: storing 31 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 31
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 31
9999 mem: storing 1077 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1122 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1077
9999 mem: location 1123 is 1077
9999 mem: storing 0 in location 1077
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1122 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1078
9999 mem: location 1124 is 1078
9999 mem: storing 7 in location 1078
 103 run: i <- add i, 1
9999 mem: location 1120 is 31
9999 mem: storing 32 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 32
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 32
9999 mem: storing 1079 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1122 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1079
9999 mem: location 1123 is 1079
9999 mem: storing 0 in location 1079
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1122 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1080
9999 mem: location 1124 is 1080
9999 mem: storing 7 in location 1080
 103 run: i <- add i, 1
9999 mem: location 1120 is 32
9999 mem: storing 33 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 33
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 33
9999 mem: storing 1081 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1122 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1081
9999 mem: location 1123 is 1081
9999 mem: storing 0 in location 1081
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1122 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1082
9999 mem: location 1124 is 1082
9999 mem: storing 7 in location 1082
 103 run: i <- add i, 1
9999 mem: location 1120 is 33
9999 mem: storing 34 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 34
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 34
9999 mem: storing 1083 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1122 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1083
9999 mem: location 1123 is 1083
9999 mem: storing 0 in location 1083
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1122 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1084
9999 mem: location 1124 is 1084
9999 mem: storing 7 in location 1084
 103 run: i <- add i, 1
9999 mem: location 1120 is 34
9999 mem: storing 35 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 35
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 35
9999 mem: storing 1085 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1122 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1085
9999 mem: location 1123 is 1085
9999 mem: storing 0 in location 1085
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1122 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1086
9999 mem: location 1124 is 1086
9999 mem: storing 7 in location 1086
 103 run: i <- add i, 1
9999 mem: location 1120 is 35
9999 mem: storing 36 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 36
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 36
9999 mem: storing 1087 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1122 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1087
9999 mem: location 1123 is 1087
9999 mem: storing 0 in location 1087
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1122 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1088
9999 mem: location 1124 is 1088
9999 mem: storing 7 in location 1088
 103 run: i <- add i, 1
9999 mem: location 1120 is 36
9999 mem: storing 37 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 37
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 37
9999 mem: storing 1089 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1122 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1089
9999 mem: location 1123 is 1089
9999 mem: storing 0 in location 1089
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1122 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1090
9999 mem: location 1124 is 1090
9999 mem: storing 7 in location 1090
 103 run: i <- add i, 1
9999 mem: location 1120 is 37
9999 mem: storing 38 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 38
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 38
9999 mem: storing 1091 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1122 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1091
9999 mem: location 1123 is 1091
9999 mem: storing 0 in location 1091
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1122 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1092
9999 mem: location 1124 is 1092
9999 mem: storing 7 in location 1092
 103 run: i <- add i, 1
9999 mem: location 1120 is 38
9999 mem: storing 39 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 39
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 39
9999 mem: storing 1093 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1122 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1093
9999 mem: location 1123 is 1093
9999 mem: storing 0 in location 1093
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1122 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1094
9999 mem: location 1124 is 1094
9999 mem: storing 7 in location 1094
 103 run: i <- add i, 1
9999 mem: location 1120 is 39
9999 mem: storing 40 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 40
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 40
9999 mem: storing 1095 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1122 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1095
9999 mem: location 1123 is 1095
9999 mem: storing 0 in location 1095
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1122 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1096
9999 mem: location 1124 is 1096
9999 mem: storing 7 in location 1096
 103 run: i <- add i, 1
9999 mem: location 1120 is 40
9999 mem: storing 41 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 41
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 41
9999 mem: storing 1097 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1122 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1097
9999 mem: location 1123 is 1097
9999 mem: storing 0 in location 1097
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1122 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1098
9999 mem: location 1124 is 1098
9999 mem: storing 7 in location 1098
 103 run: i <- add i, 1
9999 mem: location 1120 is 41
9999 mem: storing 42 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 42
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 42
9999 mem: storing 1099 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1122 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1099
9999 mem: location 1123 is 1099
9999 mem: storing 0 in location 1099
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1122 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1100
9999 mem: location 1124 is 1100
9999 mem: storing 7 in location 1100
 103 run: i <- add i, 1
9999 mem: location 1120 is 42
9999 mem: storing 43 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 43
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 43
9999 mem: storing 1101 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1122 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1101
9999 mem: location 1123 is 1101
9999 mem: storing 0 in location 1101
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1122 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1102
9999 mem: location 1124 is 1102
9999 mem: storing 7 in location 1102
 103 run: i <- add i, 1
9999 mem: location 1120 is 43
9999 mem: storing 44 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 44
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 44
9999 mem: storing 1103 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1122 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1103
9999 mem: location 1123 is 1103
9999 mem: storing 0 in location 1103
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1122 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1104
9999 mem: location 1124 is 1104
9999 mem: storing 7 in location 1104
 103 run: i <- add i, 1
9999 mem: location 1120 is 44
9999 mem: storing 45 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 45
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 45
9999 mem: storing 1105 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1122 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1105
9999 mem: location 1123 is 1105
9999 mem: storing 0 in location 1105
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1122 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1106
9999 mem: location 1124 is 1106
9999 mem: storing 7 in location 1106
 103 run: i <- add i, 1
9999 mem: location 1120 is 45
9999 mem: storing 46 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 46
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 46
9999 mem: storing 1107 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1122 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1107
9999 mem: location 1123 is 1107
9999 mem: storing 0 in location 1107
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1122 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1108
9999 mem: location 1124 is 1108
9999 mem: storing 7 in location 1108
 103 run: i <- add i, 1
9999 mem: location 1120 is 46
9999 mem: storing 47 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 47
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 47
9999 mem: storing 1109 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1122 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1109
9999 mem: location 1123 is 1109
9999 mem: storing 0 in location 1109
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1122 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1110
9999 mem: location 1124 is 1110
9999 mem: storing 7 in location 1110
 103 run: i <- add i, 1
9999 mem: location 1120 is 47
9999 mem: storing 48 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 48
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 48
9999 mem: storing 1111 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1122 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1111
9999 mem: location 1123 is 1111
9999 mem: storing 0 in location 1111
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1122 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1112
9999 mem: location 1124 is 1112
9999 mem: storing 7 in location 1112
 103 run: i <- add i, 1
9999 mem: location 1120 is 48
9999 mem: storing 49 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 49
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 49
9999 mem: storing 1113 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1122 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1113
9999 mem: location 1123 is 1113
9999 mem: storing 0 in location 1113
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1122 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1114
9999 mem: location 1124 is 1114
9999 mem: storing 7 in location 1114
 103 run: i <- add i, 1
9999 mem: location 1120 is 49
9999 mem: storing 50 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 50
9999 mem: location 1119 is 50
9999 mem: storing 1 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 1
9999 run: jumping to instruction 17
 103 run: x:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1125
 103 run: *x <- copy 0
9999 mem: location 1125 is 1011
9999 mem: location 1125 is 1011
9999 mem: storing 0 in location 1011
 103 run: x <- get-address *sc, cursor-column:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1125
 103 run: *x <- copy 0
9999 mem: location 1125 is 1012
9999 mem: location 1125 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1117 is 1009
 102 run: reply result
9999 mem: location 1002 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 900
 101 run: 1:address:array:character <- new [abcdefghij
k
l
m]
9999 mem: storing 1126 in location 1
 101 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address, 0/left, 5/right
9999 mem: location 1 is 1126
9999 mem: location 900 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: new alloc: 1143
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1126 in location 1145
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1146
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1147
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1148
 102 run: right <- subtract right, 1
9999 mem: location 1148 is 5
9999 mem: storing 4 in location 1148
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: storing 1115 in location 1149
 102 run: x:address:number <- get-address *result, left:offset
9999 mem: location 1149 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1149 is 1115
9999 run: address to copy is 1119
9999 mem: storing 1119 in location 1150
 102 run: *x <- copy left
9999 mem: location 1147 is 0
9999 mem: location 1150 is 1119
9999 mem: location 1150 is 1119
9999 mem: storing 0 in location 1119
 102 run: x <- get-address *result, right:offset
9999 mem: location 1149 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1149 is 1115
9999 run: address to copy is 1120
9999 mem: storing 1120 in location 1150
 102 run: *x <- copy right
9999 mem: location 1148 is 4
9999 mem: location 1150 is 1120
9999 mem: location 1150 is 1120
9999 mem: storing 4 in location 1120
 102 run: x <- get-address *result, cursor-row:offset
9999 mem: location 1149 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1149 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1150
 102 run: *x <- copy 1/top
9999 mem: location 1150 is 1121
9999 mem: location 1150 is 1121
9999 mem: storing 1 in location 1121
 102 run: x <- get-address *result, cursor-column:offset
9999 mem: location 1149 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1149 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1150
 102 run: *x <- copy left
9999 mem: location 1147 is 0
9999 mem: location 1150 is 1122
9999 mem: location 1150 is 1122
9999 mem: storing 0 in location 1122
 102 run: init:address:address:duplex-list <- get-address *result, data:offset
9999 mem: location 1149 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1149 is 1115
9999 run: address to copy is 1115
9999 mem: storing 1115 in location 1151
schedule: new-editor/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 102 run: *init <- push-duplex 167/§, 0/tail
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1155
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1157
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1158
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1163
9999 mem: storing 1163 in location 1159
 103 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1159 is 1163
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1159 is 1163
9999 run: address to copy is 1163
9999 mem: storing 1163 in location 1160
 103 run: *val <- copy x
9999 mem: location 1157 is 167
9999 mem: location 1160 is 1163
9999 mem: location 1160 is 1163
9999 mem: storing 167 in location 1163
 103 run: next:address:address:duplex-list <- get-address *result, next:offset
9999 mem: location 1159 is 1163
9999 mem: location 1163 is 167
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1159 is 1163
9999 run: address to copy is 1164
9999 mem: storing 1164 in location 1161
 103 run: *next <- copy in
9999 mem: location 1158 is 0
9999 mem: location 1161 is 1164
9999 mem: location 1161 is 1164
9999 mem: storing 0 in location 1164
 103 run: jump-if in, 1:offset
9999 mem: location 1158 is 0
9999 run: jump-if fell through
 103 run: reply result
9999 mem: location 1159 is 1163
9999 run: result 0 is 1163
9999 mem: location 1151 is 1115
9999 mem: storing 1163 in location 1115
 102 run: top-of-screen:address:address:duplex-list <- get-address *result, top-of-screen:offset
9999 mem: location 1149 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1149 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1152
 102 run: *top-of-screen <- copy *init
9999 mem: location 1151 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1151 is 1115
9999 mem: location 1152 is 1116
9999 mem: location 1151 is 1115
9999 mem: location 1152 is 1116
9999 mem: storing 1163 in location 1116
 102 run: y:address:address:duplex-list <- get-address *result, before-cursor:offset
9999 mem: location 1149 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1149 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1153
 102 run: *y <- copy *init
9999 mem: location 1151 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1151 is 1115
9999 mem: location 1153 is 1118
9999 mem: location 1151 is 1115
9999 mem: location 1153 is 1118
9999 mem: storing 1163 in location 1118
 102 run: result <- insert-text result, s
9999 mem: location 1149 is 1115
9999 mem: location 1145 is 1126
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1002
 103 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1126 in location 1003
 103 run: jump-if text, 1:offset
9999 mem: location 1003 is 1126
9999 run: jumping to instruction 5
 103 run: len:number <- length *text
9999 mem: location 1003 is 1126
9999 mem: storing 16 in location 1004
 103 run: jump-if len, 1:offset
9999 mem: location 1004 is 16
9999 run: jumping to instruction 8
 103 run: idx:number <- copy 0
9999 mem: storing 0 in location 1005
 103 run: curr:address:duplex-list <- get *editor, data:offset
9999 mem: location 1002 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1002 is 1115
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1163
9999 mem: storing 1163 in location 1006
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 0
9999 mem: location 1004 is 16
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 0
9999 run: address to copy is 1127
9999 run: its type is character
9999 mem: location 1127 is 97
9999 mem: storing 97 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 97
9999 mem: location 1006 is 1163
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1157
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1158
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1166
9999 mem: storing 1166 in location 1159
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1159 is 1166
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1159 is 1166
9999 run: address to copy is 1166
9999 mem: storing 1166 in location 1160
 104 run: *val <- copy x
9999 mem: location 1157 is 97
9999 mem: location 1160 is 1166
9999 mem: location 1160 is 1166
9999 mem: storing 97 in location 1166
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1163
9999 mem: location 1163 is 167
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1158 is 1163
9999 run: address to copy is 1164
9999 run: its type is address
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1161
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1158 is 1163
9999 mem: location 1163 is 167
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1158 is 1163
9999 run: address to copy is 1164
9999 mem: storing 1164 in location 1162
 104 run: *y <- copy new-node
9999 mem: location 1159 is 1166
9999 mem: location 1162 is 1164
9999 mem: location 1162 is 1164
9999 mem: storing 1166 in location 1164
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1159 is 1166
9999 run: address to copy is 1168
9999 mem: storing 1168 in location 1162
 104 run: *y <- copy in
9999 mem: location 1158 is 1163
9999 mem: location 1162 is 1168
9999 mem: location 1162 is 1168
9999 mem: storing 1163 in location 1168
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1163
9999 mem: location 1159 is 1166
9999 run: address to copy is 1167
9999 mem: storing 1167 in location 1162
 104 run: *y <- copy next-node
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1167
9999 mem: location 1162 is 1167
9999 mem: storing 0 in location 1167
 104 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1159 is 1166
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1163
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1169
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1163
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1163
9999 mem: location 1163 is 167
9999 mem: location 1164 is 1166
9999 mem: location 1165 is 0
9999 mem: location 1171 is 1163
9999 run: address to copy is 1164
9999 run: its type is address
9999 mem: location 1164 is 1166
9999 mem: storing 1166 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1166
9999 run: result 0 is 1166
9999 mem: storing 1166 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 0
9999 mem: storing 1 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 1
9999 mem: location 1004 is 16
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 1
9999 run: address to copy is 1128
9999 run: its type is character
9999 mem: location 1128 is 98
9999 mem: storing 98 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 98
9999 mem: location 1006 is 1166
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1157
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1166 in location 1158
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1173
9999 mem: storing 1173 in location 1159
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1159 is 1173
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1159 is 1173
9999 run: address to copy is 1173
9999 mem: storing 1173 in location 1160
 104 run: *val <- copy x
9999 mem: location 1157 is 98
9999 mem: location 1160 is 1173
9999 mem: location 1160 is 1173
9999 mem: storing 98 in location 1173
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1163
9999 mem: location 1158 is 1166
9999 run: address to copy is 1167
9999 run: its type is address
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1161
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1158 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1163
9999 mem: location 1158 is 1166
9999 run: address to copy is 1167
9999 mem: storing 1167 in location 1162
 104 run: *y <- copy new-node
9999 mem: location 1159 is 1173
9999 mem: location 1162 is 1167
9999 mem: location 1162 is 1167
9999 mem: storing 1173 in location 1167
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1159 is 1173
9999 run: address to copy is 1175
9999 mem: storing 1175 in location 1162
 104 run: *y <- copy in
9999 mem: location 1158 is 1166
9999 mem: location 1162 is 1175
9999 mem: location 1162 is 1175
9999 mem: storing 1166 in location 1175
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1166
9999 mem: location 1159 is 1173
9999 run: address to copy is 1174
9999 mem: storing 1174 in location 1162
 104 run: *y <- copy next-node
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1174
9999 mem: location 1162 is 1174
9999 mem: storing 0 in location 1174
 104 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1159 is 1173
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1166
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1166 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1166
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1163
9999 mem: location 1171 is 1166
9999 run: address to copy is 1167
9999 run: its type is address
9999 mem: location 1167 is 1173
9999 mem: storing 1173 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 1
9999 mem: storing 2 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 2
9999 mem: location 1004 is 16
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 2
9999 run: address to copy is 1129
9999 run: its type is character
9999 mem: location 1129 is 99
9999 mem: storing 99 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 99
9999 mem: location 1006 is 1173
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1157
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1158
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1176
9999 mem: storing 1176 in location 1159
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1159 is 1176
9999 mem: location 1176 is 0
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1159 is 1176
9999 run: address to copy is 1176
9999 mem: storing 1176 in location 1160
 104 run: *val <- copy x
9999 mem: location 1157 is 99
9999 mem: location 1160 is 1176
9999 mem: location 1160 is 1176
9999 mem: storing 99 in location 1176
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1166
9999 mem: location 1158 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 0
9999 mem: storing 0 in location 1161
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1158 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1166
9999 mem: location 1158 is 1173
9999 run: address to copy is 1174
9999 mem: storing 1174 in location 1162
 104 run: *y <- copy new-node
9999 mem: location 1159 is 1176
9999 mem: location 1162 is 1174
9999 mem: location 1162 is 1174
9999 mem: storing 1176 in location 1174
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1159 is 1176
9999 run: address to copy is 1178
9999 mem: storing 1178 in location 1162
 104 run: *y <- copy in
9999 mem: location 1158 is 1173
9999 mem: location 1162 is 1178
9999 mem: location 1162 is 1178
9999 mem: storing 1173 in location 1178
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 0
9999 mem: location 1178 is 1173
9999 mem: location 1159 is 1176
9999 run: address to copy is 1177
9999 mem: storing 1177 in location 1162
 104 run: *y <- copy next-node
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1177
9999 mem: location 1162 is 1177
9999 mem: storing 0 in location 1177
 104 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1159 is 1176
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1173
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1173
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1171 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 2
9999 mem: storing 3 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 3
9999 mem: location 1004 is 16
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 3
9999 run: address to copy is 1130
9999 run: its type is character
9999 mem: location 1130 is 100
9999 mem: storing 100 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 100
9999 mem: location 1006 is 1176
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1157
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1158
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1179
9999 mem: storing 1179 in location 1159
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1159 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1159 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 1160
 104 run: *val <- copy x
9999 mem: location 1157 is 100
9999 mem: location 1160 is 1179
9999 mem: location 1160 is 1179
9999 mem: storing 100 in location 1179
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 0
9999 mem: location 1178 is 1173
9999 mem: location 1158 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 0
9999 mem: storing 0 in location 1161
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1158 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 0
9999 mem: location 1178 is 1173
9999 mem: location 1158 is 1176
9999 run: address to copy is 1177
9999 mem: storing 1177 in location 1162
 104 run: *y <- copy new-node
9999 mem: location 1159 is 1179
9999 mem: location 1162 is 1177
9999 mem: location 1162 is 1177
9999 mem: storing 1179 in location 1177
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1159 is 1179
9999 run: address to copy is 1181
9999 mem: storing 1181 in location 1162
 104 run: *y <- copy in
9999 mem: location 1158 is 1176
9999 mem: location 1162 is 1181
9999 mem: location 1162 is 1181
9999 mem: storing 1176 in location 1181
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1159 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1162
 104 run: *y <- copy next-node
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1162 is 1180
9999 mem: storing 0 in location 1180
 104 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1159 is 1179
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1176
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1176
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1171 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 3
9999 mem: storing 4 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 4
9999 mem: location 1004 is 16
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 4
9999 run: address to copy is 1131
9999 run: its type is character
9999 mem: location 1131 is 101
9999 mem: storing 101 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 101
9999 mem: location 1006 is 1179
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1157
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1158
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1182
9999 mem: storing 1182 in location 1159
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1159 is 1182
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1159 is 1182
9999 run: address to copy is 1182
9999 mem: storing 1182 in location 1160
 104 run: *val <- copy x
9999 mem: location 1157 is 101
9999 mem: location 1160 is 1182
9999 mem: location 1160 is 1182
9999 mem: storing 101 in location 1182
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1158 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1161
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1158 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1158 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1162
 104 run: *y <- copy new-node
9999 mem: location 1159 is 1182
9999 mem: location 1162 is 1180
9999 mem: location 1162 is 1180
9999 mem: storing 1182 in location 1180
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1159 is 1182
9999 run: address to copy is 1184
9999 mem: storing 1184 in location 1162
 104 run: *y <- copy in
9999 mem: location 1158 is 1179
9999 mem: location 1162 is 1184
9999 mem: location 1162 is 1184
9999 mem: storing 1179 in location 1184
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1179
9999 mem: location 1159 is 1182
9999 run: address to copy is 1183
9999 mem: storing 1183 in location 1162
 104 run: *y <- copy next-node
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1183
9999 mem: location 1162 is 1183
9999 mem: storing 0 in location 1183
 104 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1159 is 1182
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1179
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1179
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1171 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 4
9999 mem: storing 5 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 5
9999 mem: location 1004 is 16
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 5
9999 run: address to copy is 1132
9999 run: its type is character
9999 mem: location 1132 is 102
9999 mem: storing 102 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 102
9999 mem: location 1006 is 1182
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 1157
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1158
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1185
9999 mem: storing 1185 in location 1159
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1159 is 1185
9999 mem: location 1185 is 0
9999 mem: location 1186 is 0
9999 mem: location 1187 is 0
9999 mem: location 1159 is 1185
9999 run: address to copy is 1185
9999 mem: storing 1185 in location 1160
 104 run: *val <- copy x
9999 mem: location 1157 is 102
9999 mem: location 1160 is 1185
9999 mem: location 1160 is 1185
9999 mem: storing 102 in location 1185
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1179
9999 mem: location 1158 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 0
9999 mem: storing 0 in location 1161
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1158 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1179
9999 mem: location 1158 is 1182
9999 run: address to copy is 1183
9999 mem: storing 1183 in location 1162
 104 run: *y <- copy new-node
9999 mem: location 1159 is 1185
9999 mem: location 1162 is 1183
9999 mem: location 1162 is 1183
9999 mem: storing 1185 in location 1183
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 0
9999 mem: location 1187 is 0
9999 mem: location 1159 is 1185
9999 run: address to copy is 1187
9999 mem: storing 1187 in location 1162
 104 run: *y <- copy in
9999 mem: location 1158 is 1182
9999 mem: location 1162 is 1187
9999 mem: location 1162 is 1187
9999 mem: storing 1182 in location 1187
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 0
9999 mem: location 1187 is 1182
9999 mem: location 1159 is 1185
9999 run: address to copy is 1186
9999 mem: storing 1186 in location 1162
 104 run: *y <- copy next-node
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1186
9999 mem: location 1162 is 1186
9999 mem: storing 0 in location 1186
 104 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1159 is 1185
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1182
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1182
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1171 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 5
9999 mem: storing 6 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 6
9999 mem: location 1004 is 16
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 6
9999 run: address to copy is 1133
9999 run: its type is character
9999 mem: location 1133 is 103
9999 mem: storing 103 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 103
9999 mem: location 1006 is 1185
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 103 in location 1157
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1158
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1188
9999 mem: storing 1188 in location 1159
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1159 is 1188
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1190 is 0
9999 mem: location 1159 is 1188
9999 run: address to copy is 1188
9999 mem: storing 1188 in location 1160
 104 run: *val <- copy x
9999 mem: location 1157 is 103
9999 mem: location 1160 is 1188
9999 mem: location 1160 is 1188
9999 mem: storing 103 in location 1188
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 0
9999 mem: location 1187 is 1182
9999 mem: location 1158 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 0
9999 mem: storing 0 in location 1161
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1158 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 0
9999 mem: location 1187 is 1182
9999 mem: location 1158 is 1185
9999 run: address to copy is 1186
9999 mem: storing 1186 in location 1162
 104 run: *y <- copy new-node
9999 mem: location 1159 is 1188
9999 mem: location 1162 is 1186
9999 mem: location 1162 is 1186
9999 mem: storing 1188 in location 1186
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 0
9999 mem: location 1190 is 0
9999 mem: location 1159 is 1188
9999 run: address to copy is 1190
9999 mem: storing 1190 in location 1162
 104 run: *y <- copy in
9999 mem: location 1158 is 1185
9999 mem: location 1162 is 1190
9999 mem: location 1162 is 1190
9999 mem: storing 1185 in location 1190
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1185
9999 mem: location 1159 is 1188
9999 run: address to copy is 1189
9999 mem: storing 1189 in location 1162
 104 run: *y <- copy next-node
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1189
9999 mem: location 1162 is 1189
9999 mem: storing 0 in location 1189
 104 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1159 is 1188
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1185
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1185
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1171 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 6
9999 mem: storing 7 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 7
9999 mem: location 1004 is 16
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 7
9999 run: address to copy is 1134
9999 run: its type is character
9999 mem: location 1134 is 104
9999 mem: storing 104 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 104
9999 mem: location 1006 is 1188
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 104 in location 1157
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1158
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1191
9999 mem: storing 1191 in location 1159
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1159 is 1191
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1159 is 1191
9999 run: address to copy is 1191
9999 mem: storing 1191 in location 1160
 104 run: *val <- copy x
9999 mem: location 1157 is 104
9999 mem: location 1160 is 1191
9999 mem: location 1160 is 1191
9999 mem: storing 104 in location 1191
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1185
9999 mem: location 1158 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 0
9999 mem: storing 0 in location 1161
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1158 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1185
9999 mem: location 1158 is 1188
9999 run: address to copy is 1189
9999 mem: storing 1189 in location 1162
 104 run: *y <- copy new-node
9999 mem: location 1159 is 1191
9999 mem: location 1162 is 1189
9999 mem: location 1162 is 1189
9999 mem: storing 1191 in location 1189
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1159 is 1191
9999 run: address to copy is 1193
9999 mem: storing 1193 in location 1162
 104 run: *y <- copy in
9999 mem: location 1158 is 1188
9999 mem: location 1162 is 1193
9999 mem: location 1162 is 1193
9999 mem: storing 1188 in location 1193
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 0
9999 mem: location 1193 is 1188
9999 mem: location 1159 is 1191
9999 run: address to copy is 1192
9999 mem: storing 1192 in location 1162
 104 run: *y <- copy next-node
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1192
9999 mem: location 1162 is 1192
9999 mem: storing 0 in location 1192
 104 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1159 is 1191
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1188
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1188
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1171 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 7
9999 mem: storing 8 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 8
9999 mem: location 1004 is 16
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 8
9999 run: address to copy is 1135
9999 run: its type is character
9999 mem: location 1135 is 105
9999 mem: storing 105 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 105
9999 mem: location 1006 is 1191
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 105 in location 1157
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1158
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1194
9999 mem: storing 1194 in location 1159
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1159 is 1194
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1159 is 1194
9999 run: address to copy is 1194
9999 mem: storing 1194 in location 1160
 104 run: *val <- copy x
9999 mem: location 1157 is 105
9999 mem: location 1160 is 1194
9999 mem: location 1160 is 1194
9999 mem: storing 105 in location 1194
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 0
9999 mem: location 1193 is 1188
9999 mem: location 1158 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 0
9999 mem: storing 0 in location 1161
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1158 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 0
9999 mem: location 1193 is 1188
9999 mem: location 1158 is 1191
9999 run: address to copy is 1192
9999 mem: storing 1192 in location 1162
 104 run: *y <- copy new-node
9999 mem: location 1159 is 1194
9999 mem: location 1162 is 1192
9999 mem: location 1162 is 1192
9999 mem: storing 1194 in location 1192
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1159 is 1194
9999 run: address to copy is 1196
9999 mem: storing 1196 in location 1162
 104 run: *y <- copy in
9999 mem: location 1158 is 1191
9999 mem: location 1162 is 1196
9999 mem: location 1162 is 1196
9999 mem: storing 1191 in location 1196
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 0
9999 mem: location 1196 is 1191
9999 mem: location 1159 is 1194
9999 run: address to copy is 1195
9999 mem: storing 1195 in location 1162
 104 run: *y <- copy next-node
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1195
9999 mem: location 1162 is 1195
9999 mem: storing 0 in location 1195
 104 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1159 is 1194
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1191
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1191
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1171 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 8
9999 mem: storing 9 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 9
9999 mem: location 1004 is 16
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 9
9999 run: address to copy is 1136
9999 run: its type is character
9999 mem: location 1136 is 106
9999 mem: storing 106 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 106
9999 mem: location 1006 is 1194
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 106 in location 1157
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1158
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1197
9999 mem: storing 1197 in location 1159
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1159 is 1197
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1199 is 0
9999 mem: location 1159 is 1197
9999 run: address to copy is 1197
9999 mem: storing 1197 in location 1160
 104 run: *val <- copy x
9999 mem: location 1157 is 106
9999 mem: location 1160 is 1197
9999 mem: location 1160 is 1197
9999 mem: storing 106 in location 1197
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 0
9999 mem: location 1196 is 1191
9999 mem: location 1158 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 0
9999 mem: storing 0 in location 1161
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1158 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 0
9999 mem: location 1196 is 1191
9999 mem: location 1158 is 1194
9999 run: address to copy is 1195
9999 mem: storing 1195 in location 1162
 104 run: *y <- copy new-node
9999 mem: location 1159 is 1197
9999 mem: location 1162 is 1195
9999 mem: location 1162 is 1195
9999 mem: storing 1197 in location 1195
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 0
9999 mem: location 1199 is 0
9999 mem: location 1159 is 1197
9999 run: address to copy is 1199
9999 mem: storing 1199 in location 1162
 104 run: *y <- copy in
9999 mem: location 1158 is 1194
9999 mem: location 1162 is 1199
9999 mem: location 1162 is 1199
9999 mem: storing 1194 in location 1199
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 0
9999 mem: location 1199 is 1194
9999 mem: location 1159 is 1197
9999 run: address to copy is 1198
9999 mem: storing 1198 in location 1162
 104 run: *y <- copy next-node
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1198
9999 mem: location 1162 is 1198
9999 mem: storing 0 in location 1198
 104 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1159 is 1197
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1194
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1171 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 9
9999 mem: storing 10 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 10
9999 mem: location 1004 is 16
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 10
9999 run: address to copy is 1137
9999 run: its type is character
9999 mem: location 1137 is 10
9999 mem: storing 10 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 10
9999 mem: location 1006 is 1197
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1157
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1158
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1200
9999 mem: storing 1200 in location 1159
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1159 is 1200
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1159 is 1200
9999 run: address to copy is 1200
9999 mem: storing 1200 in location 1160
 104 run: *val <- copy x
9999 mem: location 1157 is 10
9999 mem: location 1160 is 1200
9999 mem: location 1160 is 1200
9999 mem: storing 10 in location 1200
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 0
9999 mem: location 1199 is 1194
9999 mem: location 1158 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 0
9999 mem: storing 0 in location 1161
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1158 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 0
9999 mem: location 1199 is 1194
9999 mem: location 1158 is 1197
9999 run: address to copy is 1198
9999 mem: storing 1198 in location 1162
 104 run: *y <- copy new-node
9999 mem: location 1159 is 1200
9999 mem: location 1162 is 1198
9999 mem: location 1162 is 1198
9999 mem: storing 1200 in location 1198
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1159 is 1200
9999 run: address to copy is 1202
9999 mem: storing 1202 in location 1162
 104 run: *y <- copy in
9999 mem: location 1158 is 1197
9999 mem: location 1162 is 1202
9999 mem: location 1162 is 1202
9999 mem: storing 1197 in location 1202
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1197
9999 mem: location 1159 is 1200
9999 run: address to copy is 1201
9999 mem: storing 1201 in location 1162
 104 run: *y <- copy next-node
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1201
9999 mem: location 1162 is 1201
9999 mem: storing 0 in location 1201
 104 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1159 is 1200
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1197
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1197
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1171 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 10
9999 mem: storing 11 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 11
9999 mem: location 1004 is 16
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 11
9999 run: address to copy is 1138
9999 run: its type is character
9999 mem: location 1138 is 107
9999 mem: storing 107 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 107
9999 mem: location 1006 is 1200
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 107 in location 1157
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1158
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1203
9999 mem: storing 1203 in location 1159
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1159 is 1203
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1205 is 0
9999 mem: location 1159 is 1203
9999 run: address to copy is 1203
9999 mem: storing 1203 in location 1160
 104 run: *val <- copy x
9999 mem: location 1157 is 107
9999 mem: location 1160 is 1203
9999 mem: location 1160 is 1203
9999 mem: storing 107 in location 1203
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1197
9999 mem: location 1158 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 0
9999 mem: storing 0 in location 1161
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1158 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1197
9999 mem: location 1158 is 1200
9999 run: address to copy is 1201
9999 mem: storing 1201 in location 1162
 104 run: *y <- copy new-node
9999 mem: location 1159 is 1203
9999 mem: location 1162 is 1201
9999 mem: location 1162 is 1201
9999 mem: storing 1203 in location 1201
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 0
9999 mem: location 1205 is 0
9999 mem: location 1159 is 1203
9999 run: address to copy is 1205
9999 mem: storing 1205 in location 1162
 104 run: *y <- copy in
9999 mem: location 1158 is 1200
9999 mem: location 1162 is 1205
9999 mem: location 1162 is 1205
9999 mem: storing 1200 in location 1205
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 0
9999 mem: location 1205 is 1200
9999 mem: location 1159 is 1203
9999 run: address to copy is 1204
9999 mem: storing 1204 in location 1162
 104 run: *y <- copy next-node
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1204
9999 mem: location 1162 is 1204
9999 mem: storing 0 in location 1204
 104 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1159 is 1203
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1200
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1200
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1171 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 11
9999 mem: storing 12 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 12
9999 mem: location 1004 is 16
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 12
9999 run: address to copy is 1139
9999 run: its type is character
9999 mem: location 1139 is 10
9999 mem: storing 10 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 10
9999 mem: location 1006 is 1203
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1157
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1158
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1206
9999 mem: storing 1206 in location 1159
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1159 is 1206
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: location 1208 is 0
9999 mem: location 1159 is 1206
9999 run: address to copy is 1206
9999 mem: storing 1206 in location 1160
 104 run: *val <- copy x
9999 mem: location 1157 is 10
9999 mem: location 1160 is 1206
9999 mem: location 1160 is 1206
9999 mem: storing 10 in location 1206
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 0
9999 mem: location 1205 is 1200
9999 mem: location 1158 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 0
9999 mem: storing 0 in location 1161
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1158 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 0
9999 mem: location 1205 is 1200
9999 mem: location 1158 is 1203
9999 run: address to copy is 1204
9999 mem: storing 1204 in location 1162
 104 run: *y <- copy new-node
9999 mem: location 1159 is 1206
9999 mem: location 1162 is 1204
9999 mem: location 1162 is 1204
9999 mem: storing 1206 in location 1204
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 0
9999 mem: location 1208 is 0
9999 mem: location 1159 is 1206
9999 run: address to copy is 1208
9999 mem: storing 1208 in location 1162
 104 run: *y <- copy in
9999 mem: location 1158 is 1203
9999 mem: location 1162 is 1208
9999 mem: location 1162 is 1208
9999 mem: storing 1203 in location 1208
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1203
9999 mem: location 1159 is 1206
9999 run: address to copy is 1207
9999 mem: storing 1207 in location 1162
 104 run: *y <- copy next-node
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1162 is 1207
9999 mem: storing 0 in location 1207
 104 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1159 is 1206
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1203
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1203
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1171 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 12
9999 mem: storing 13 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 13
9999 mem: location 1004 is 16
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 13
9999 run: address to copy is 1140
9999 run: its type is character
9999 mem: location 1140 is 108
9999 mem: storing 108 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 108
9999 mem: location 1006 is 1206
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 108 in location 1157
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1158
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1209
9999 mem: storing 1209 in location 1159
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1159 is 1209
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1211 is 0
9999 mem: location 1159 is 1209
9999 run: address to copy is 1209
9999 mem: storing 1209 in location 1160
 104 run: *val <- copy x
9999 mem: location 1157 is 108
9999 mem: location 1160 is 1209
9999 mem: location 1160 is 1209
9999 mem: storing 108 in location 1209
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1203
9999 mem: location 1158 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 0
9999 mem: storing 0 in location 1161
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1158 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1203
9999 mem: location 1158 is 1206
9999 run: address to copy is 1207
9999 mem: storing 1207 in location 1162
 104 run: *y <- copy new-node
9999 mem: location 1159 is 1209
9999 mem: location 1162 is 1207
9999 mem: location 1162 is 1207
9999 mem: storing 1209 in location 1207
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1209
9999 mem: location 1209 is 108
9999 mem: location 1210 is 0
9999 mem: location 1211 is 0
9999 mem: location 1159 is 1209
9999 run: address to copy is 1211
9999 mem: storing 1211 in location 1162
 104 run: *y <- copy in
9999 mem: location 1158 is 1206
9999 mem: location 1162 is 1211
9999 mem: location 1162 is 1211
9999 mem: storing 1206 in location 1211
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1209
9999 mem: location 1209 is 108
9999 mem: location 1210 is 0
9999 mem: location 1211 is 1206
9999 mem: location 1159 is 1209
9999 run: address to copy is 1210
9999 mem: storing 1210 in location 1162
 104 run: *y <- copy next-node
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1210
9999 mem: location 1162 is 1210
9999 mem: storing 0 in location 1210
 104 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1159 is 1209
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1206
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1206
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1171 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1209
9999 run: result 0 is 1209
9999 mem: storing 1209 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 13
9999 mem: storing 14 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 14
9999 mem: location 1004 is 16
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 14
9999 run: address to copy is 1141
9999 run: its type is character
9999 mem: location 1141 is 10
9999 mem: storing 10 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 10
9999 mem: location 1006 is 1209
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1157
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1209 in location 1158
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1212
9999 mem: storing 1212 in location 1159
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1159 is 1212
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1159 is 1212
9999 run: address to copy is 1212
9999 mem: storing 1212 in location 1160
 104 run: *val <- copy x
9999 mem: location 1157 is 10
9999 mem: location 1160 is 1212
9999 mem: location 1160 is 1212
9999 mem: storing 10 in location 1212
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1209
9999 mem: location 1209 is 108
9999 mem: location 1210 is 0
9999 mem: location 1211 is 1206
9999 mem: location 1158 is 1209
9999 run: address to copy is 1210
9999 run: its type is address
9999 mem: location 1210 is 0
9999 mem: storing 0 in location 1161
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1158 is 1209
9999 mem: location 1209 is 108
9999 mem: location 1210 is 0
9999 mem: location 1211 is 1206
9999 mem: location 1158 is 1209
9999 run: address to copy is 1210
9999 mem: storing 1210 in location 1162
 104 run: *y <- copy new-node
9999 mem: location 1159 is 1212
9999 mem: location 1162 is 1210
9999 mem: location 1162 is 1210
9999 mem: storing 1212 in location 1210
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1212
9999 mem: location 1212 is 10
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1159 is 1212
9999 run: address to copy is 1214
9999 mem: storing 1214 in location 1162
 104 run: *y <- copy in
9999 mem: location 1158 is 1209
9999 mem: location 1162 is 1214
9999 mem: location 1162 is 1214
9999 mem: storing 1209 in location 1214
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1212
9999 mem: location 1212 is 10
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1209
9999 mem: location 1159 is 1212
9999 run: address to copy is 1213
9999 mem: storing 1213 in location 1162
 104 run: *y <- copy next-node
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1213
9999 mem: location 1162 is 1213
9999 mem: storing 0 in location 1213
 104 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1159 is 1212
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1209
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1209 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1209
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1209
9999 mem: location 1209 is 108
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1171 is 1209
9999 run: address to copy is 1210
9999 run: its type is address
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1212
9999 run: result 0 is 1212
9999 mem: storing 1212 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 14
9999 mem: storing 15 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 15
9999 mem: location 1004 is 16
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 15
9999 run: address to copy is 1142
9999 run: its type is character
9999 mem: location 1142 is 109
9999 mem: storing 109 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 109
9999 mem: location 1006 is 1212
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 109 in location 1157
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1212 in location 1158
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1215
9999 mem: storing 1215 in location 1159
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1159 is 1215
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: location 1159 is 1215
9999 run: address to copy is 1215
9999 mem: storing 1215 in location 1160
 104 run: *val <- copy x
9999 mem: location 1157 is 109
9999 mem: location 1160 is 1215
9999 mem: location 1160 is 1215
9999 mem: storing 109 in location 1215
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1212
9999 mem: location 1212 is 10
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1209
9999 mem: location 1158 is 1212
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 0
9999 mem: storing 0 in location 1161
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1158 is 1212
9999 mem: location 1212 is 10
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1209
9999 mem: location 1158 is 1212
9999 run: address to copy is 1213
9999 mem: storing 1213 in location 1162
 104 run: *y <- copy new-node
9999 mem: location 1159 is 1215
9999 mem: location 1162 is 1213
9999 mem: location 1162 is 1213
9999 mem: storing 1215 in location 1213
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1159 is 1215
9999 mem: location 1215 is 109
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: location 1159 is 1215
9999 run: address to copy is 1217
9999 mem: storing 1217 in location 1162
 104 run: *y <- copy in
9999 mem: location 1158 is 1212
9999 mem: location 1162 is 1217
9999 mem: location 1162 is 1217
9999 mem: storing 1212 in location 1217
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1159 is 1215
9999 mem: location 1215 is 109
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1212
9999 mem: location 1159 is 1215
9999 run: address to copy is 1216
9999 mem: storing 1216 in location 1162
 104 run: *y <- copy next-node
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1216
9999 mem: location 1162 is 1216
9999 mem: storing 0 in location 1216
 104 run: jump-if next-node, 1:offset
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1159 is 1215
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1212
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1212 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1212
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1212
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1209
9999 mem: location 1171 is 1212
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1215
9999 run: result 0 is 1215
9999 mem: storing 1215 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 15
9999 mem: storing 16 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 16
9999 mem: location 1004 is 16
9999 mem: storing 1 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 1
9999 run: jumping to instruction 18
 103 run: reply editor/same-as-ingredient:0
9999 mem: location 1002 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1149
 102 run: y <- get-address *result, before-cursor:offset
9999 mem: location 1149 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1149 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1153
 102 run: *y <- copy *init
9999 mem: location 1151 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1151 is 1115
9999 mem: location 1153 is 1118
9999 mem: location 1151 is 1115
9999 mem: location 1153 is 1118
9999 mem: storing 1163 in location 1118
 102 run: _, _, screen, result <- render screen, result
9999 mem: location 1146 is 1009
9999 mem: location 1149 is 1115
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1218
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1220
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1221
 103 run: jump-if editor, 1:offset
9999 mem: location 1221 is 1115
9999 run: jumping to instruction 5
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1222
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1220 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1171
 104 run: break-unless sc, 
9999 mem: location 1171 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1171 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1171 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1172
 104 run: reply height
9999 mem: location 1172 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1223
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1224
 103 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1163
9999 mem: storing 1163 in location 1225
 103 run: prev:address:duplex-list <- copy curr
9999 mem: location 1225 is 1163
9999 mem: storing 1163 in location 1226
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1163
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1163
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1163
9999 mem: location 1163 is 167
9999 mem: location 1164 is 1166
9999 mem: location 1165 is 0
9999 mem: location 1171 is 1163
9999 run: address to copy is 1164
9999 run: its type is address
9999 mem: location 1164 is 1166
9999 mem: storing 1166 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1166
9999 run: result 0 is 1166
9999 mem: storing 1166 in location 1225
 103 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1227
 103 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1228
 103 run: column:number <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1230
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1231
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1232
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 1
9999 mem: location 1229 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1245
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1248
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 104 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
schedule: move-cursor/render/new-editor/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 104 run: *row <- copy new-row
9999 mem: location 1248 is 1
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 104 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 103 run: break-unless curr, 
9999 mem: location 1225 is 1166
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1235
 103 run: break-unless at-cursor?, 
9999 mem: location 1235 is 1
9999 run: jump-unless fell through
 103 run: *before-cursor <- copy prev
9999 mem: location 1226 is 1163
9999 mem: location 1232 is 1118
9999 mem: location 1232 is 1118
9999 mem: storing 1163 in location 1118
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1163
9999 mem: location 1225 is 1166
9999 run: address to copy is 1166
9999 run: its type is number
9999 mem: location 1166 is 97
9999 mem: storing 97 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 97
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1252
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1254
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1255
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1254 is 7
9999 mem: storing 1 in location 1256
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1255 is 97
9999 mem: storing 0 in location 1257
 104 run: break-unless starting-comment?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1258
 104 run: break-unless color-is-blue?, 
9999 mem: location 1258 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1255 is 97
9999 mem: storing 0 in location 1260
 104 run: break-unless starting-assignment?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1261
 104 run: break-unless color-is-red?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1254 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 97
9999 mem: location 1227 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: new alloc: 1263
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 97
  90 print-character: 97 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 97
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 97
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 10
9999 mem: storing 1035 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1284 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 97
9999 mem: location 1285 is 1035
9999 mem: location 1285 is 1035
9999 mem: storing 97 in location 1035
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1284 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1036
9999 mem: location 1286 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1166
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1166 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1166
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1163
9999 mem: location 1171 is 1166
9999 run: address to copy is 1167
9999 run: its type is address
9999 mem: location 1167 is 1173
9999 mem: storing 1173 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1163
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1163
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1163
9999 mem: location 1163 is 167
9999 mem: location 1164 is 1166
9999 mem: location 1165 is 0
9999 mem: location 1171 is 1163
9999 run: address to copy is 1164
9999 run: its type is address
9999 mem: location 1164 is 1166
9999 mem: storing 1166 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1166
9999 run: result 0 is 1166
9999 mem: storing 1166 in location 1226
 103 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1225 is 1173
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 1
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1235
 103 run: break-unless at-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1225 is 1173
9999 run: address to copy is 1173
9999 run: its type is number
9999 mem: location 1173 is 98
9999 mem: storing 98 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 98
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1254
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1255
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1254 is 7
9999 mem: storing 1 in location 1256
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1255 is 98
9999 mem: storing 0 in location 1257
 104 run: break-unless starting-comment?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1258
 104 run: break-unless color-is-blue?, 
9999 mem: location 1258 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1255 is 98
9999 mem: storing 0 in location 1260
 104 run: break-unless starting-assignment?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1261
 104 run: break-unless color-is-red?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1254 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 98
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 98
9999 mem: location 1227 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 98
  90 print-character: 98 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 98
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 98
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 11
9999 mem: storing 1037 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1284 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 98
9999 mem: location 1285 is 1037
9999 mem: location 1285 is 1037
9999 mem: storing 98 in location 1037
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1284 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1038
9999 mem: location 1286 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1173
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1173
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1171 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1166
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1166 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1166
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1163
9999 mem: location 1171 is 1166
9999 run: address to copy is 1167
9999 run: its type is address
9999 mem: location 1167 is 1173
9999 mem: storing 1173 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1226
 103 run: column <- add column, 1
9999 mem: location 1229 is 1
9999 mem: storing 2 in location 1229
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1225 is 1176
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 2
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1235
 103 run: break-unless at-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1225 is 1176
9999 run: address to copy is 1176
9999 run: its type is number
9999 mem: location 1176 is 99
9999 mem: storing 99 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 99
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1254
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1255
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1254 is 7
9999 mem: storing 1 in location 1256
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1255 is 99
9999 mem: storing 0 in location 1257
 104 run: break-unless starting-comment?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1258
 104 run: break-unless color-is-blue?, 
9999 mem: location 1258 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1255 is 99
9999 mem: storing 0 in location 1260
 104 run: break-unless starting-assignment?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1261
 104 run: break-unless color-is-red?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1254 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 99
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 2
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 99
9999 mem: location 1227 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 99
  90 print-character: 99 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 99
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 99
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 12
9999 mem: storing 1039 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1284 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 99
9999 mem: location 1285 is 1039
9999 mem: location 1285 is 1039
9999 mem: storing 99 in location 1039
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1284 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1040
9999 mem: location 1286 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1176
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1176
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1171 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1173
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1173
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1171 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1226
 103 run: column <- add column, 1
9999 mem: location 1229 is 2
9999 mem: storing 3 in location 1229
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1225 is 1179
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 3
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1235
 103 run: break-unless at-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1225 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 100
9999 mem: storing 100 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 100
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1254
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1255
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1254 is 7
9999 mem: storing 1 in location 1256
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1255 is 100
9999 mem: storing 0 in location 1257
 104 run: break-unless starting-comment?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1258
 104 run: break-unless color-is-blue?, 
9999 mem: location 1258 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1255 is 100
9999 mem: storing 0 in location 1260
 104 run: break-unless starting-assignment?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1261
 104 run: break-unless color-is-red?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1254 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 100
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 3
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 100
9999 mem: location 1227 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 100
  90 print-character: 100 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 100
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 100
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 13
9999 mem: storing 1041 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1284 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 100
9999 mem: location 1285 is 1041
9999 mem: location 1285 is 1041
9999 mem: storing 100 in location 1041
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1284 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1042
9999 mem: location 1286 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1179
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1179
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1171 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1176
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1176
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1171 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1226
 103 run: column <- add column, 1
9999 mem: location 1229 is 3
9999 mem: storing 4 in location 1229
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1225 is 1182
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 4
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1235
 103 run: break-unless at-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1225 is 1182
9999 run: address to copy is 1182
9999 run: its type is number
9999 mem: location 1182 is 101
9999 mem: storing 101 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 101
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1254
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1255
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1254 is 7
9999 mem: storing 1 in location 1256
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1255 is 101
9999 mem: storing 0 in location 1257
 104 run: break-unless starting-comment?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1258
 104 run: break-unless color-is-blue?, 
9999 mem: location 1258 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1255 is 101
9999 mem: storing 0 in location 1260
 104 run: break-unless starting-assignment?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1261
 104 run: break-unless color-is-red?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1254 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 101
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 4
9999 mem: location 1224 is 4
9999 mem: storing 1 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, 8617/loop-back-to-left, 245/grey
9999 mem: location 1220 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
schedule: print-character/render/new-editor/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 8617
  90 print-character: 8617 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 8617
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 8617
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 14
9999 mem: storing 1043 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1284 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 8617
9999 mem: location 1285 is 1043
9999 mem: location 1285 is 1043
9999 mem: storing 8617 in location 1043
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1043
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 7
9999 mem: location 1284 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 245
9999 mem: location 1286 is 1044
9999 mem: location 1286 is 1044
9999 mem: storing 245 in location 1044
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 103 run: row <- add row, 1
9999 mem: location 1228 is 1
9999 mem: storing 2 in location 1228
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 2
9999 mem: location 1229 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1248
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 104 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 104 run: *row <- copy new-row
9999 mem: location 1248 is 2
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 104 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1225 is 1182
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1225 is 1182
9999 run: address to copy is 1182
9999 run: its type is number
9999 mem: location 1182 is 101
9999 mem: storing 101 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 101
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1254
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1255
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1254 is 7
9999 mem: storing 1 in location 1256
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1255 is 101
9999 mem: storing 0 in location 1257
 104 run: break-unless starting-comment?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1258
 104 run: break-unless color-is-blue?, 
9999 mem: location 1258 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1255 is 101
9999 mem: storing 0 in location 1260
 104 run: break-unless starting-assignment?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1261
 104 run: break-unless color-is-red?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1254 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 101
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 101
9999 mem: location 1227 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 101
  90 print-character: 101 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 101
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 101
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 20
9999 mem: storing 1055 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1284 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 101
9999 mem: location 1285 is 1055
9999 mem: location 1285 is 1055
9999 mem: storing 101 in location 1055
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1055
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1284 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1056
9999 mem: location 1286 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1182
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1182
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1171 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1179
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1179
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1171 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1226
 103 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1225 is 1185
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1225 is 1185
9999 run: address to copy is 1185
9999 run: its type is number
9999 mem: location 1185 is 102
9999 mem: storing 102 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 102
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1254
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1255
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1254 is 7
9999 mem: storing 1 in location 1256
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1255 is 102
9999 mem: storing 0 in location 1257
 104 run: break-unless starting-comment?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1258
 104 run: break-unless color-is-blue?, 
9999 mem: location 1258 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1255 is 102
9999 mem: storing 0 in location 1260
 104 run: break-unless starting-assignment?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1261
 104 run: break-unless color-is-red?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1254 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 102
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 102
9999 mem: location 1227 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 102
  90 print-character: 102 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 102
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 102
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 21
9999 mem: storing 1057 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1284 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 102
9999 mem: location 1285 is 1057
9999 mem: location 1285 is 1057
9999 mem: storing 102 in location 1057
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1057
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1284 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1058
9999 mem: location 1286 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1185
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1185
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1171 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1182
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1182
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1171 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1226
 103 run: column <- add column, 1
9999 mem: location 1229 is 1
9999 mem: storing 2 in location 1229
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1225 is 1188
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1225 is 1188
9999 run: address to copy is 1188
9999 run: its type is number
9999 mem: location 1188 is 103
9999 mem: storing 103 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 103
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1254
 104 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1255
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1254 is 7
9999 mem: storing 1 in location 1256
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1255 is 103
9999 mem: storing 0 in location 1257
 104 run: break-unless starting-comment?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1258
 104 run: break-unless color-is-blue?, 
9999 mem: location 1258 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1255 is 103
9999 mem: storing 0 in location 1260
 104 run: break-unless starting-assignment?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1261
 104 run: break-unless color-is-red?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1254 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 103
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 2
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 103
9999 mem: location 1227 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 103
  90 print-character: 103 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 103
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 103
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 22
9999 mem: storing 1059 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1284 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 103
9999 mem: location 1285 is 1059
9999 mem: location 1285 is 1059
9999 mem: storing 103 in location 1059
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1059
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1284 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1060
9999 mem: location 1286 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1188
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1188
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1171 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1185
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1185
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1171 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1226
 103 run: column <- add column, 1
9999 mem: location 1229 is 2
9999 mem: storing 3 in location 1229
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1225 is 1191
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1225 is 1191
9999 run: address to copy is 1191
9999 run: its type is number
9999 mem: location 1191 is 104
9999 mem: storing 104 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 104
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1254
 104 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1255
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1254 is 7
9999 mem: storing 1 in location 1256
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1255 is 104
9999 mem: storing 0 in location 1257
 104 run: break-unless starting-comment?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1258
 104 run: break-unless color-is-blue?, 
9999 mem: location 1258 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1255 is 104
9999 mem: storing 0 in location 1260
 104 run: break-unless starting-assignment?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1261
 104 run: break-unless color-is-red?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1254 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 104
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 3
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 104
9999 mem: location 1227 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 104
  90 print-character: 104 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 104
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 104
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 23
9999 mem: storing 1061 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1284 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 104
9999 mem: location 1285 is 1061
9999 mem: location 1285 is 1061
9999 mem: storing 104 in location 1061
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1061
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1284 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1062
9999 mem: location 1286 is 1062
9999 mem: storing 7 in location 1062
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1191
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1191
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1171 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1188
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1188
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1171 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1226
 103 run: column <- add column, 1
9999 mem: location 1229 is 3
9999 mem: storing 4 in location 1229
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1225 is 1194
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
schedule: render/new-editor/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1225 is 1194
9999 run: address to copy is 1194
9999 run: its type is number
9999 mem: location 1194 is 105
9999 mem: storing 105 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 105
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1254
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1255
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1254 is 7
9999 mem: storing 1 in location 1256
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1255 is 105
9999 mem: storing 0 in location 1257
 104 run: break-unless starting-comment?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1258
 104 run: break-unless color-is-blue?, 
9999 mem: location 1258 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1255 is 105
9999 mem: storing 0 in location 1260
 104 run: break-unless starting-assignment?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1261
 104 run: break-unless color-is-red?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1254 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 105
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 4
9999 mem: location 1224 is 4
9999 mem: storing 1 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, 8617/loop-back-to-left, 245/grey
9999 mem: location 1220 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 8617
  90 print-character: 8617 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 8617
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 8617
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 24
9999 mem: storing 1063 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1284 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 8617
9999 mem: location 1285 is 1063
9999 mem: location 1285 is 1063
9999 mem: storing 8617 in location 1063
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1063
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 7
9999 mem: location 1284 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 245
9999 mem: location 1286 is 1064
9999 mem: location 1286 is 1064
9999 mem: storing 245 in location 1064
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 103 run: row <- add row, 1
9999 mem: location 1228 is 2
9999 mem: storing 3 in location 1228
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 3
9999 mem: location 1229 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1248
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 104 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 104 run: *row <- copy new-row
9999 mem: location 1248 is 3
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 3 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 104 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1225 is 1194
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 3
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1225 is 1194
9999 run: address to copy is 1194
9999 run: its type is number
9999 mem: location 1194 is 105
9999 mem: storing 105 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 105
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1254
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1255
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1254 is 7
9999 mem: storing 1 in location 1256
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1255 is 105
9999 mem: storing 0 in location 1257
 104 run: break-unless starting-comment?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1258
 104 run: break-unless color-is-blue?, 
9999 mem: location 1258 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1255 is 105
9999 mem: storing 0 in location 1260
 104 run: break-unless starting-assignment?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1261
 104 run: break-unless color-is-red?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1254 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 105
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 105
9999 mem: location 1227 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 105
  90 print-character: 105 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 105
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 105
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 30
9999 mem: storing 1075 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1284 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 105
9999 mem: location 1285 is 1075
9999 mem: location 1285 is 1075
9999 mem: storing 105 in location 1075
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1075
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1284 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1076
9999 mem: location 1286 is 1076
9999 mem: storing 7 in location 1076
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1194
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1171 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1191
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1191
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1171 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1226
 103 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1225 is 1197
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 3
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1225 is 1197
9999 run: address to copy is 1197
9999 run: its type is number
9999 mem: location 1197 is 106
9999 mem: storing 106 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 106
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1254
 104 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1255
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1254 is 7
9999 mem: storing 1 in location 1256
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1255 is 106
9999 mem: storing 0 in location 1257
 104 run: break-unless starting-comment?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1258
 104 run: break-unless color-is-blue?, 
9999 mem: location 1258 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1255 is 106
9999 mem: storing 0 in location 1260
 104 run: break-unless starting-assignment?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1261
 104 run: break-unless color-is-red?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1254 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 106
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 106
9999 mem: location 1227 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 106
  90 print-character: 106 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 106
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 106
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 31
9999 mem: storing 1077 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1284 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 106
9999 mem: location 1285 is 1077
9999 mem: location 1285 is 1077
9999 mem: storing 106 in location 1077
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1077
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1284 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1078
9999 mem: location 1286 is 1078
9999 mem: storing 7 in location 1078
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1197
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1197
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1171 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1194
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1171 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1226
 103 run: column <- add column, 1
9999 mem: location 1229 is 1
9999 mem: storing 2 in location 1229
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1225 is 1200
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 3
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1225 is 1200
9999 run: address to copy is 1200
9999 run: its type is number
9999 mem: location 1200 is 10
9999 mem: storing 10 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1254
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1255
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1254 is 7
9999 mem: storing 1 in location 1256
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1255 is 10
9999 mem: storing 0 in location 1257
 104 run: break-unless starting-comment?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1258
 104 run: break-unless color-is-blue?, 
9999 mem: location 1258 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1255 is 10
9999 mem: storing 0 in location 1260
 104 run: break-unless starting-assignment?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1261
 104 run: break-unless color-is-red?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1254 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1220 is 1009
9999 mem: location 1229 is 2
9999 mem: location 1224 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: new alloc: 1289
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 104 run: column:number <- next-ingredient 
9999 mem: storing 2 in location 1292
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 32
9999 mem: storing 1079 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1284 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1079
9999 mem: location 1285 is 1079
9999 mem: storing 32 in location 1079
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1284 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1080
9999 mem: location 1286 is 1080
9999 mem: storing 7 in location 1080
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 33
9999 mem: storing 1081 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1284 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1081
9999 mem: location 1285 is 1081
9999 mem: storing 32 in location 1081
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1284 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1082
9999 mem: location 1286 is 1082
9999 mem: storing 7 in location 1082
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
schedule: print-character/clear-line-delimited/render/new-editor/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 34
9999 mem: storing 1083 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1284 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1083
9999 mem: location 1285 is 1083
9999 mem: storing 32 in location 1083
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1284 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1084
9999 mem: location 1286 is 1084
9999 mem: storing 7 in location 1084
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1228 is 3
9999 mem: storing 4 in location 1228
 103 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 4
9999 mem: location 1229 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1248
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 104 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 104 run: *row <- copy new-row
9999 mem: location 1248 is 4
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 4 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 104 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1200
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1200
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1171 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1197
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1197
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1171 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1226
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1225 is 1203
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 4
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1225 is 1203
9999 run: address to copy is 1203
9999 run: its type is number
9999 mem: location 1203 is 107
9999 mem: storing 107 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 107
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1254
 104 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1255
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1254 is 7
9999 mem: storing 1 in location 1256
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1255 is 107
9999 mem: storing 0 in location 1257
 104 run: break-unless starting-comment?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1258
 104 run: break-unless color-is-blue?, 
9999 mem: location 1258 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1255 is 107
9999 mem: storing 0 in location 1260
 104 run: break-unless starting-assignment?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1261
 104 run: break-unless color-is-red?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1254 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 107
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 107
9999 mem: location 1227 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 107
  90 print-character: 107 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 107
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 107
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 40
9999 mem: storing 1095 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1284 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 107
9999 mem: location 1285 is 1095
9999 mem: location 1285 is 1095
9999 mem: storing 107 in location 1095
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1095
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1284 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1096
9999 mem: location 1286 is 1096
9999 mem: storing 7 in location 1096
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1203
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1203
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1171 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1200
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1200
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1171 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1226
 103 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1225 is 1206
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 4
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1225 is 1206
9999 run: address to copy is 1206
9999 run: its type is number
9999 mem: location 1206 is 10
9999 mem: storing 10 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1254
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1255
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1254 is 7
9999 mem: storing 1 in location 1256
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1255 is 10
9999 mem: storing 0 in location 1257
 104 run: break-unless starting-comment?, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1258
 104 run: break-unless color-is-blue?, 
9999 mem: location 1258 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1256 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1255 is 10
9999 mem: storing 0 in location 1260
 104 run: break-unless starting-assignment?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1254 is 7
9999 mem: storing 0 in location 1261
 104 run: break-unless color-is-red?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1254 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1220 is 1009
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 104 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1292
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 1
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 41
9999 mem: storing 1097 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1284 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1097
9999 mem: location 1285 is 1097
9999 mem: storing 32 in location 1097
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1284 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1098
9999 mem: location 1286 is 1098
9999 mem: storing 7 in location 1098
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 1
9999 mem: storing 2 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 42
9999 mem: storing 1099 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1284 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1099
9999 mem: location 1285 is 1099
9999 mem: storing 32 in location 1099
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1284 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1100
9999 mem: location 1286 is 1100
9999 mem: storing 7 in location 1100
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 43
9999 mem: storing 1101 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1284 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1101
9999 mem: location 1285 is 1101
9999 mem: storing 32 in location 1101
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1284 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1102
9999 mem: location 1286 is 1102
9999 mem: storing 7 in location 1102
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 44
9999 mem: storing 1103 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1284 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1103
9999 mem: location 1285 is 1103
9999 mem: storing 32 in location 1103
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1284 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1104
9999 mem: location 1286 is 1104
9999 mem: storing 7 in location 1104
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1228 is 4
9999 mem: storing 5 in location 1228
 103 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 5
9999 mem: location 1229 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1248
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 104 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 104 run: *row <- copy new-row
9999 mem: location 1248 is 5
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 5 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 104 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1206
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1206
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1171 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1209
9999 run: result 0 is 1209
9999 mem: storing 1209 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1203
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1171
 104 run: jump-if in, 1:offset
9999 mem: location 1171 is 1203
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1171 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1172
 104 run: reply result
9999 mem: location 1172 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1226
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1225 is 1209
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 5
9999 mem: location 1223 is 5
9999 mem: storing 1 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 1
9999 run: jumping to instruction 67
 103 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1240
 103 run: *bottom-of-screen <- copy curr
9999 mem: location 1225 is 1209
9999 mem: location 1240 is 1117
9999 mem: location 1240 is 1117
9999 mem: storing 1209 in location 1117
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 5
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1241
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1234 is 0
9999 mem: location 1241 is 1
9999 mem: storing 0 in location 1242
 103 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1228 is 5
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1243
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1242 is 0
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1244
 103 run: break-unless before-cursor?, 
9999 mem: location 1244 is 0
9999 run: jumping to instruction 80
 103 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1228 is 5
9999 mem: location 1229 is 0
9999 mem: location 1220 is 1009
9999 mem: location 1221 is 1115
9999 run: result 0 is 5
9999 run: result 1 is 0
9999 run: result 2 is 1009
9999 run: result 3 is 1115
9999 mem: storing 1009 in location 1146
9999 mem: storing 1115 in location 1149
schedule: new-editor/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 102 run: indent:address:boolean <- get-address *result, indent:offset
9999 mem: location 1149 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1149 is 1115
9999 run: address to copy is 1123
9999 mem: storing 1123 in location 1154
 102 run: *indent <- copy 1/true
9999 mem: location 1154 is 1123
9999 mem: location 1154 is 1123
9999 mem: storing 1 in location 1123
 102 run: reply result
9999 mem: location 1149 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 2
 101 run: assume-console [
    press page-down
  ]
parse: instruction: press
parse:   ingredient: {name: "page-down", properties: ["page-down": ]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: editor-event-loop ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1300
9999 mem: location 2 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1302
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1304
 102 run: console:address <- next-ingredient 
9999 mem: storing 1300 in location 1305
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1306
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1300
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1315
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1300 in location 1317
 103 run: break-unless x, 
9999 mem: location 1317 is 1300
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1317 is 1300
9999 mem: location 1300 is 0
9999 mem: location 1301 is 1295
9999 mem: location 1317 is 1300
9999 run: address to copy is 1300
9999 mem: storing 1300 in location 1318
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1317 is 1300
9999 mem: location 1300 is 0
9999 mem: location 1301 is 1295
9999 mem: location 1317 is 1300
9999 run: address to copy is 1301
9999 run: its type is address
9999 mem: location 1301 is 1295
9999 mem: storing 1295 in location 1319
 103 run: max:number <- length *buf
9999 mem: location 1319 is 1295
9999 mem: storing 1 in location 1320
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1318 is 1300
9999 mem: location 1300 is 0
9999 mem: location 1320 is 1
9999 mem: storing 0 in location 1321
 103 run: break-unless done?, 
9999 mem: location 1321 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1319 is 1295
9999 mem: location 1318 is 1300
9999 mem: location 1300 is 0
9999 run: address to copy is 1296
9999 run: its type is event
9999 mem: location 1296 is 1
9999 mem: location 1297 is 65518
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 mem: storing 1 in location 1323
9999 mem: storing 65518 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
 103 run: *idx <- add *idx, 1
9999 mem: location 1318 is 1300
9999 mem: location 1300 is 0
9999 mem: location 1318 is 1300
9999 mem: storing 1 in location 1300
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1323 is 1
9999 mem: location 1324 is 65518
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 mem: location 1317 is 1300
9999 run: result 0 is [1, 65518, 0, 0]
9999 run: result 1 is 1300
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1307
9999 mem: storing 65518 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: storing 1300 in location 1305
9999 mem: storing 1 in location 1311
9999 mem: storing 0 in location 1312
 102 run: loop-unless found?, 
9999 mem: location 1311 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1312 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1307 is 1
9999 mem: location 1308 is 65518
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: storing 0 in location 1313
 102 run: break-unless t, 
9999 mem: location 1313 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1313 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1304 is 1009
9999 mem: location 1306 is 1115
9999 mem: location 1307 is 1
9999 mem: location 1308 is 65518
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: new alloc: 1328
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1330
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1331
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1332
9999 mem: storing 65518 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: storing 0 in location 1335
 103 run: jump-if editor, 1:offset
9999 mem: location 1331 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1330 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1171
 104 run: break-unless sc, 
9999 mem: location 1171 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1171 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1171 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1172
 104 run: reply width
9999 mem: location 1172 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1336
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1330 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1171
 104 run: break-unless sc, 
9999 mem: location 1171 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1171 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1171 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1172
 104 run: reply height
9999 mem: location 1172 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1337
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1338
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1339
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1340
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1341
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1342
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1341 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1341 is 1121
9999 mem: location 1341 is 1121
9999 mem: storing 1 in location 1343
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1342 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1342 is 1122
9999 mem: location 1342 is 1122
9999 mem: storing 0 in location 1344
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1332 is 1
9999 mem: location 1333 is 65518
9999 mem: location 1334 is 0
9999 mem: location 1335 is 0
9999 mem: storing 0 in location 1345
 103 run: break-unless c, 
9999 mem: location 1345 is 0
9999 run: jumping to instruction 432
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1332 is 1
9999 mem: location 1333 is 65518
9999 mem: location 1334 is 0
9999 mem: location 1335 is 0
9999 mem: storing 1333 in location 1400
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1400 is 1333
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65518
9999 mem: storing 0 in location 1362
 103 run: break-unless page-up?, 
9999 mem: location 1362 is 0
9999 run: jumping to instruction 477
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65518
9999 mem: storing 1 in location 1378
 103 run: break-unless page-down?, 
9999 mem: location 1378 is 1
9999 run: jump-unless fell through
 103 run: top-of-screen:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1363
 103 run: old-top:address:duplex-list <- copy *top-of-screen
9999 mem: location 1363 is 1116
9999 mem: location 1116 is 1163
9999 mem: location 1363 is 1116
9999 mem: location 1363 is 1116
9999 mem: storing 1163 in location 1364
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1365
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1366
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1163
9999 mem: storing 1163 in location 1367
 103 run: page-down editor
9999 mem: location 1331 is 1115
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1157
 104 run: bottom-of-screen:address:duplex-list <- get *editor, bottom-of-screen:offset
9999 mem: location 1157 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1157 is 1115
9999 run: address to copy is 1117
9999 run: its type is address
9999 mem: location 1117 is 1209
9999 mem: storing 1209 in location 1158
 104 run: jump-if bottom-of-screen, 1:offset
9999 mem: location 1158 is 1209
9999 run: jumping to instruction 5
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1157 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1157 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1159
 104 run: *before-cursor <- prev-duplex bottom-of-screen
9999 mem: location 1158 is 1209
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1209 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1209
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1171 is 1209
9999 mem: location 1209 is 108
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1171 is 1209
9999 run: address to copy is 1211
9999 run: its type is address
9999 mem: location 1211 is 1206
9999 mem: storing 1206 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1206
9999 run: result 0 is 1206
9999 mem: location 1159 is 1118
9999 mem: storing 1206 in location 1118
 104 run: last:character <- get **before-cursor, value:offset
9999 mem: location 1159 is 1118
9999 mem: location 1118 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1159 is 1118
9999 mem: location 1118 is 1206
9999 run: address to copy is 1206
9999 run: its type is number
9999 mem: location 1206 is 10
9999 mem: storing 10 in location 1160
 104 run: newline?:boolean <- equal last, 10/newline
9999 mem: location 1160 is 10
9999 mem: storing 1 in location 1161
 104 run: break-unless newline?:boolean, 
9999 mem: location 1161 is 1
9999 run: jump-unless fell through
 104 run: *before-cursor <- prev-duplex *before-cursor
9999 mem: location 1159 is 1118
9999 mem: location 1118 is 1206
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1206
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1171 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1171 is 1206
9999 run: address to copy is 1208
9999 run: its type is address
9999 mem: location 1208 is 1203
9999 mem: storing 1203 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1203
9999 run: result 0 is 1203
9999 mem: location 1159 is 1118
9999 mem: storing 1203 in location 1118
 104 run: move-to-start-of-line editor
9999 mem: location 1157 is 1115
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: new alloc: 1414
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1416
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1416 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1203
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1416 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1417
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1416 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1203
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1416 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1418
 105 run: *cursor-column <- copy left
9999 mem: location 1417 is 0
9999 mem: location 1418 is 1122
9999 mem: location 1418 is 1122
9999 mem: storing 0 in location 1122
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1416 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1203
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1416 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1419
 105 run: init:address:duplex-list <- get *editor, data:offset
9999 mem: location 1416 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1203
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1416 is 1115
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1163
9999 mem: storing 1163 in location 1420
 105 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1419 is 1118
9999 mem: location 1118 is 1203
9999 mem: location 1420 is 1163
9999 mem: storing 0 in location 1421
 105 run: break-if at-start-of-text?, 
9999 mem: location 1421 is 0
9999 run: jump-if fell through
 105 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1419 is 1118
9999 mem: location 1118 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1419 is 1118
9999 mem: location 1118 is 1203
9999 run: address to copy is 1203
9999 run: its type is number
9999 mem: location 1203 is 107
9999 mem: storing 107 in location 1422
 105 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1422 is 107
9999 mem: storing 0 in location 1423
 105 run: break-if at-start-of-line?, 
9999 mem: location 1423 is 0
9999 run: jump-if fell through
 105 run: *before-cursor <- prev-duplex *before-cursor
9999 mem: location 1419 is 1118
9999 mem: location 1118 is 1203
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1171
 106 run: jump-if in, 1:offset
9999 mem: location 1171 is 1203
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1171 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1171 is 1203
9999 run: address to copy is 1205
9999 run: its type is address
9999 mem: location 1205 is 1200
9999 mem: storing 1200 in location 1172
 106 run: reply result
9999 mem: location 1172 is 1200
9999 run: result 0 is 1200
9999 mem: location 1419 is 1118
9999 mem: storing 1200 in location 1118
 105 run: assert *before-cursor, [move-to-start-of-line tried to move before start of text]
9999 mem: location 1419 is 1118
9999 mem: location 1118 is 1200
 105 run: loop 
9999 run: jumping to instruction 8
 105 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1419 is 1118
9999 mem: location 1118 is 1200
9999 mem: location 1420 is 1163
9999 mem: storing 0 in location 1421
 105 run: break-if at-start-of-text?, 
9999 mem: location 1421 is 0
9999 run: jump-if fell through
 105 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1419 is 1118
9999 mem: location 1118 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1419 is 1118
9999 mem: location 1118 is 1200
9999 run: address to copy is 1200
9999 run: its type is number
9999 mem: location 1200 is 10
9999 mem: storing 10 in location 1422
 105 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1422 is 10
9999 mem: storing 1 in location 1423
 105 run: break-if at-start-of-line?, 
9999 mem: location 1423 is 1
9999 run: jumping to instruction 16
 104 run: top-of-screen:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1157 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1157 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1162
 104 run: *top-of-screen <- copy *before-cursor
9999 mem: location 1159 is 1118
9999 mem: location 1118 is 1200
9999 mem: location 1159 is 1118
9999 mem: location 1162 is 1116
9999 mem: location 1159 is 1118
9999 mem: location 1162 is 1116
9999 mem: storing 1200 in location 1116
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1157 is 1115
 103 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1368
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1369
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1370
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1200
9999 mem: storing 1200 in location 1371
 103 run: break-unless undo-coalesce-tag, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 509
 103 run: op:address:operation <- new operation:type
9999 mem: storing 1252 in location 1348
 103 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1365 is 1
9999 mem: location 1366 is 0
9999 mem: location 1367 is 1163
9999 mem: location 1369 is 1
9999 mem: location 1370 is 0
9999 mem: location 1371 is 1200
9999 mem: location 1368 is 0
9999 mem: location 1348 is 1252
9999 mem: location 1348 is 1252
9999 mem: storing 1 in location 1252
9999 mem: storing 1 in location 1253
9999 mem: storing 0 in location 1254
9999 mem: storing 1163 in location 1255
9999 mem: storing 1 in location 1256
9999 mem: storing 0 in location 1257
9999 mem: storing 1200 in location 1258
9999 mem: storing 0 in location 1259
 103 run: editor <- add-operation editor, op
9999 mem: location 1331 is 1115
9999 mem: location 1348 is 1252
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1291
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1252 in location 1292
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1291 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1291 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1293
 104 run: *undo <- push op, *undo
9999 mem: location 1292 is 1252
9999 mem: location 1293 is 1124
9999 mem: location 1124 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1252 in location 1247
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1248
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1424
9999 mem: storing 1424 in location 1249
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1249 is 1424
9999 mem: location 1424 is 0
9999 mem: location 1425 is 0
9999 mem: location 1249 is 1424
9999 run: address to copy is 1424
9999 mem: storing 1424 in location 1250
 105 run: *val <- copy x
9999 mem: location 1247 is 1252
9999 mem: location 1250 is 1424
9999 mem: location 1250 is 1424
9999 mem: storing 1252 in location 1424
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1249 is 1424
9999 mem: location 1424 is 1252
9999 mem: location 1425 is 0
9999 mem: location 1249 is 1424
9999 run: address to copy is 1425
9999 mem: storing 1425 in location 1251
 105 run: *next <- copy in
9999 mem: location 1248 is 0
9999 mem: location 1251 is 1425
9999 mem: location 1251 is 1425
9999 mem: storing 0 in location 1425
 105 run: reply result
9999 mem: location 1249 is 1424
9999 run: result 0 is 1424
9999 mem: location 1293 is 1124
9999 mem: storing 1424 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1291 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1291 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1294
 104 run: *redo <- copy 0
9999 mem: location 1294 is 1125
9999 mem: location 1294 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1291 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1331
 103 run: no-movement?:boolean <- equal *top-of-screen, old-top
9999 mem: location 1363 is 1116
9999 mem: location 1116 is 1200
9999 mem: location 1364 is 1163
9999 mem: storing 0 in location 1377
 103 run: jump-unless no-movement?, 1:offset
9999 mem: location 1377 is 0
9999 run: jumping to instruction 518
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1330 is 1009
9999 mem: location 1331 is 1115
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 1
9999 mem: storing 1009 in location 1304
9999 mem: storing 1115 in location 1306
9999 mem: storing 1 in location 1314
 102 run: break-unless go-render?, 
9999 mem: location 1314 is 1
9999 run: jump-unless fell through
 102 run: editor-render screen, editor
9999 mem: location 1304 is 1009
9999 mem: location 1306 is 1115
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1157
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1158
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1158 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1158 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1159
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1158 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1158 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1160
 103 run: row:number, column:number <- render screen, editor
9999 mem: location 1157 is 1009
9999 mem: location 1158 is 1115
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1220
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1221
 104 run: jump-if editor, 1:offset
9999 mem: location 1221 is 1115
9999 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1222
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1220 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1171
 105 run: break-unless sc, 
9999 mem: location 1171 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1171 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1171 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1172
 105 run: reply height
9999 mem: location 1172 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1223
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1224
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1200
9999 mem: storing 1200 in location 1225
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1225 is 1200
9999 mem: storing 1200 in location 1226
 104 run: curr <- next-duplex curr
9999 mem: location 1225 is 1200
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1200
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1171 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1225
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1227
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1228
 104 run: column:number <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1230
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1231
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1232
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 1
9999 mem: location 1229 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1248
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 105 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 105 run: *row <- copy new-row
9999 mem: location 1248 is 1
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 105 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 104 run: break-unless curr, 
9999 mem: location 1225 is 1203
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 104 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1235
 104 run: break-unless at-cursor?, 
9999 mem: location 1235 is 1
9999 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1226 is 1200
9999 mem: location 1232 is 1118
9999 mem: location 1232 is 1118
9999 mem: storing 1200 in location 1118
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1225 is 1203
9999 run: address to copy is 1203
9999 run: its type is number
9999 mem: location 1203 is 107
9999 mem: storing 107 in location 1236
 104 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 107
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1426
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1428
 105 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1429
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1428 is 7
9999 mem: storing 1 in location 1430
 105 run: break-unless color-is-white?, 
9999 mem: location 1430 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1429 is 107
9999 mem: storing 0 in location 1431
 105 run: break-unless starting-comment?, 
9999 mem: location 1431 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1428 is 7
9999 mem: storing 0 in location 1432
 105 run: break-unless color-is-blue?, 
9999 mem: location 1432 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1430 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1429 is 107
9999 mem: storing 0 in location 1434
 105 run: break-unless starting-assignment?, 
9999 mem: location 1434 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1428 is 7
9999 mem: storing 0 in location 1435
 105 run: break-unless color-is-red?, 
9999 mem: location 1435 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1428 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 107
9999 mem: storing 0 in location 1237
 104 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 104 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 107
9999 mem: location 1227 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 107
  90 print-character: 107 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 107
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 107
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 10
9999 mem: storing 1035 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1284 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 107
9999 mem: location 1285 is 1035
9999 mem: location 1285 is 1035
9999 mem: storing 107 in location 1035
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1035
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1284 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1036
9999 mem: location 1286 is 1036
9999 mem: storing 7 in location 1036
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1225 is 1203
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1203
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1171 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1225
 104 run: prev <- next-duplex prev
9999 mem: location 1226 is 1200
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1200
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1171 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1226
 104 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1225 is 1206
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 104 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 1
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1235
 104 run: break-unless at-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1225 is 1206
9999 run: address to copy is 1206
9999 run: its type is number
9999 mem: location 1206 is 10
9999 mem: storing 10 in location 1236
 104 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1428
 105 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1429
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1428 is 7
9999 mem: storing 1 in location 1430
 105 run: break-unless color-is-white?, 
9999 mem: location 1430 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1429 is 10
9999 mem: storing 0 in location 1431
 105 run: break-unless starting-comment?, 
9999 mem: location 1431 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1428 is 7
9999 mem: storing 0 in location 1432
 105 run: break-unless color-is-blue?, 
9999 mem: location 1432 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1430 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1429 is 10
9999 mem: storing 0 in location 1434
 105 run: break-unless starting-assignment?, 
9999 mem: location 1434 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1428 is 7
9999 mem: storing 0 in location 1435
 105 run: break-unless color-is-red?, 
9999 mem: location 1435 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1428 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 104 run: break-unless newline?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 104 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1229 is 1
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1238
 104 run: break-unless left-of-cursor?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1220 is 1009
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 105 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1292
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 1
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 105 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 106 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 106 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 106 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 106 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1279
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 106 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 106 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 11
9999 mem: storing 1037 in location 1284
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1284 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1285
 106 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1037
9999 mem: location 1285 is 1037
9999 mem: storing 32 in location 1037
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1284 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1286
 106 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1038
9999 mem: location 1286 is 1038
9999 mem: storing 7 in location 1038
 106 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 106 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 105 run: column <- add column, 1
9999 mem: location 1292 is 1
9999 mem: storing 2 in location 1292
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 105 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 106 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 106 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 106 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 106 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1279
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 106 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 106 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 12
9999 mem: storing 1039 in location 1284
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1284 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1285
 106 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1039
9999 mem: location 1285 is 1039
9999 mem: storing 32 in location 1039
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1284 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1286
 106 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1040
9999 mem: location 1286 is 1040
9999 mem: storing 7 in location 1040
 106 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 106 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 105 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 105 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
schedule: clear-line-delimited/render/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 105 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 106 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 106 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 106 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 106 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1279
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 106 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 106 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 13
9999 mem: storing 1041 in location 1284
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1284 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1285
 106 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1041
9999 mem: location 1285 is 1041
9999 mem: storing 32 in location 1041
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1284 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1286
 106 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1042
9999 mem: location 1286 is 1042
9999 mem: storing 7 in location 1042
 106 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 106 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 105 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 105 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 106 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 106 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 106 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 106 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1279
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 106 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 106 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 14
9999 mem: storing 1043 in location 1284
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1043
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1284 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1285
 106 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1043
9999 mem: location 1285 is 1043
9999 mem: storing 32 in location 1043
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 245
9999 mem: location 1284 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1286
 106 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1044
9999 mem: location 1286 is 1044
9999 mem: storing 7 in location 1044
 106 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 106 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 105 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 105 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 104 run: row <- add row, 1
9999 mem: location 1228 is 1
9999 mem: storing 2 in location 1228
 104 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 2
9999 mem: location 1229 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1248
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 105 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 105 run: *row <- copy new-row
9999 mem: location 1248 is 2
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 105 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 104 run: curr <- next-duplex curr
9999 mem: location 1225 is 1206
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1206
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1171 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1209
9999 run: result 0 is 1209
9999 mem: storing 1209 in location 1225
 104 run: prev <- next-duplex prev
9999 mem: location 1226 is 1203
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1203
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1171 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1226
 104 run: loop +next-character:label
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1225 is 1209
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 104 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1209
9999 mem: location 1209 is 108
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1225 is 1209
9999 run: address to copy is 1209
9999 run: its type is number
9999 mem: location 1209 is 108
9999 mem: storing 108 in location 1236
 104 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 108
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1428
 105 run: c:character <- next-ingredient 
9999 mem: storing 108 in location 1429
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1428 is 7
9999 mem: storing 1 in location 1430
 105 run: break-unless color-is-white?, 
9999 mem: location 1430 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1429 is 108
9999 mem: storing 0 in location 1431
 105 run: break-unless starting-comment?, 
9999 mem: location 1431 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1428 is 7
9999 mem: storing 0 in location 1432
 105 run: break-unless color-is-blue?, 
9999 mem: location 1432 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1430 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1429 is 108
9999 mem: storing 0 in location 1434
 105 run: break-unless starting-assignment?, 
9999 mem: location 1434 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1428 is 7
9999 mem: storing 0 in location 1435
 105 run: break-unless color-is-red?, 
9999 mem: location 1435 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1428 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 108
9999 mem: storing 0 in location 1237
 104 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 104 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 108
9999 mem: location 1227 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 108 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 108
  90 print-character: 108 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 108
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 108
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 20
9999 mem: storing 1055 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1055
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1284 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 108
9999 mem: location 1285 is 1055
9999 mem: location 1285 is 1055
9999 mem: storing 108 in location 1055
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1055
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1284 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1056
9999 mem: location 1286 is 1056
9999 mem: storing 7 in location 1056
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1225 is 1209
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1209 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1209
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1209
9999 mem: location 1209 is 108
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1171 is 1209
9999 run: address to copy is 1210
9999 run: its type is address
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1212
9999 run: result 0 is 1212
9999 mem: storing 1212 in location 1225
 104 run: prev <- next-duplex prev
9999 mem: location 1226 is 1206
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1206
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1171 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1209
9999 run: result 0 is 1209
9999 mem: storing 1209 in location 1226
 104 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1225 is 1212
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 104 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1212
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1209
9999 mem: location 1225 is 1212
9999 run: address to copy is 1212
9999 run: its type is number
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1236
 104 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1428
 105 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1429
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1428 is 7
9999 mem: storing 1 in location 1430
 105 run: break-unless color-is-white?, 
9999 mem: location 1430 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1429 is 10
9999 mem: storing 0 in location 1431
 105 run: break-unless starting-comment?, 
9999 mem: location 1431 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1428 is 7
9999 mem: storing 0 in location 1432
 105 run: break-unless color-is-blue?, 
9999 mem: location 1432 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1430 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1429 is 10
9999 mem: storing 0 in location 1434
 105 run: break-unless starting-assignment?, 
9999 mem: location 1434 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1428 is 7
9999 mem: storing 0 in location 1435
 105 run: break-unless color-is-red?, 
9999 mem: location 1435 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1428 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 104 run: break-unless newline?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1220 is 1009
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 105 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1292
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 1
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 105 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 106 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 106 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 106 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 106 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1279
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 106 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 106 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 21
9999 mem: storing 1057 in location 1284
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1057
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1284 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1285
 106 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1057
9999 mem: location 1285 is 1057
9999 mem: storing 32 in location 1057
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1284 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1286
 106 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1058
9999 mem: location 1286 is 1058
9999 mem: storing 7 in location 1058
 106 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 106 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 105 run: column <- add column, 1
9999 mem: location 1292 is 1
9999 mem: storing 2 in location 1292
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 105 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 106 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 106 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 106 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 106 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1279
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 106 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 106 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 22
9999 mem: storing 1059 in location 1284
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1059
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1284 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1285
 106 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1059
9999 mem: location 1285 is 1059
9999 mem: storing 32 in location 1059
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1284 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1286
 106 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1060
9999 mem: location 1286 is 1060
9999 mem: storing 7 in location 1060
 106 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 106 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 105 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 105 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 106 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 106 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 106 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 106 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1279
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 106 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 106 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 23
9999 mem: storing 1061 in location 1284
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1061
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1284 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1285
 106 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1061
9999 mem: location 1285 is 1061
9999 mem: storing 32 in location 1061
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1284 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1286
 106 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1062
9999 mem: location 1286 is 1062
9999 mem: storing 7 in location 1062
 106 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 106 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 105 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 105 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 106 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 106 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
schedule: print-character/clear-line-delimited/render/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 106 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 106 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1279
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 106 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 106 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 24
9999 mem: storing 1063 in location 1284
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1063
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1284 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1285
 106 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1063
9999 mem: location 1285 is 1063
9999 mem: storing 32 in location 1063
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1284 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1286
 106 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1064
9999 mem: location 1286 is 1064
9999 mem: storing 7 in location 1064
 106 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 106 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 105 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 105 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 104 run: row <- add row, 1
9999 mem: location 1228 is 2
9999 mem: storing 3 in location 1228
 104 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 3
9999 mem: location 1229 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1248
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 105 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 105 run: *row <- copy new-row
9999 mem: location 1248 is 3
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 3 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 105 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 104 run: curr <- next-duplex curr
9999 mem: location 1225 is 1212
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1212 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1212
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1212
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1209
9999 mem: location 1171 is 1212
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1215
9999 run: result 0 is 1215
9999 mem: storing 1215 in location 1225
 104 run: prev <- next-duplex prev
9999 mem: location 1226 is 1209
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1209 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1209
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1209
9999 mem: location 1209 is 108
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1171 is 1209
9999 run: address to copy is 1210
9999 run: its type is address
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1212
9999 run: result 0 is 1212
9999 mem: storing 1212 in location 1226
 104 run: loop +next-character:label
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1225 is 1215
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 3
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 104 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1215
9999 mem: location 1215 is 109
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1212
9999 mem: location 1225 is 1215
9999 run: address to copy is 1215
9999 run: its type is number
9999 mem: location 1215 is 109
9999 mem: storing 109 in location 1236
 104 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 109
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1428
 105 run: c:character <- next-ingredient 
9999 mem: storing 109 in location 1429
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1428 is 7
9999 mem: storing 1 in location 1430
 105 run: break-unless color-is-white?, 
9999 mem: location 1430 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1429 is 109
9999 mem: storing 0 in location 1431
 105 run: break-unless starting-comment?, 
9999 mem: location 1431 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1428 is 7
9999 mem: storing 0 in location 1432
 105 run: break-unless color-is-blue?, 
9999 mem: location 1432 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1430 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1429 is 109
9999 mem: storing 0 in location 1434
 105 run: break-unless starting-assignment?, 
9999 mem: location 1434 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1428 is 7
9999 mem: storing 0 in location 1435
 105 run: break-unless color-is-red?, 
9999 mem: location 1435 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1428 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 109
9999 mem: storing 0 in location 1237
 104 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 104 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 109
9999 mem: location 1227 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 109 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 109
  90 print-character: 109 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 109
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 109
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 30
9999 mem: storing 1075 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1075
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1284 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 109
9999 mem: location 1285 is 1075
9999 mem: location 1285 is 1075
9999 mem: storing 109 in location 1075
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1075
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1284 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1076
9999 mem: location 1286 is 1076
9999 mem: storing 7 in location 1076
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1225 is 1215
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1215 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1215
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1215
9999 mem: location 1215 is 109
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1212
9999 mem: location 1171 is 1215
9999 run: address to copy is 1216
9999 run: its type is address
9999 mem: location 1216 is 0
9999 mem: storing 0 in location 1172
 105 run: reply result
9999 mem: location 1172 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1225
 104 run: prev <- next-duplex prev
9999 mem: location 1226 is 1212
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1212 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1212
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1212
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1209
9999 mem: location 1171 is 1212
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1215
9999 run: result 0 is 1215
9999 mem: storing 1215 in location 1226
 104 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1225 is 0
9999 run: jumping to instruction 67
 104 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 1209
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1240
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1225 is 0
9999 mem: location 1240 is 1117
9999 mem: location 1240 is 1117
9999 mem: storing 0 in location 1117
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1229 is 1
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1241
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1234 is 0
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1242
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1243
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1242 is 0
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1244
 104 run: break-unless before-cursor?, 
9999 mem: location 1244 is 0
9999 run: jumping to instruction 80
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1228 is 3
9999 mem: location 1229 is 1
9999 mem: location 1220 is 1009
9999 mem: location 1221 is 1115
9999 run: result 0 is 3
9999 run: result 1 is 1
9999 mem: storing 3 in location 1161
9999 mem: storing 1 in location 1162
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1157 is 1009
9999 mem: location 1162 is 1
9999 mem: location 1160 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 104 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1292
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 1
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 31
9999 mem: storing 1077 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1077
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1284 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1077
9999 mem: location 1285 is 1077
9999 mem: storing 32 in location 1077
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1284 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1078
9999 mem: location 1286 is 1078
9999 mem: storing 7 in location 1078
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 1
9999 mem: storing 2 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 32
9999 mem: storing 1079 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1284 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1079
9999 mem: location 1285 is 1079
9999 mem: storing 32 in location 1079
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1284 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1080
9999 mem: location 1286 is 1080
9999 mem: storing 7 in location 1080
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 33
9999 mem: storing 1081 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1284 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1081
9999 mem: location 1285 is 1081
9999 mem: storing 32 in location 1081
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1284 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1082
9999 mem: location 1286 is 1082
9999 mem: storing 7 in location 1082
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 34
9999 mem: storing 1083 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1284 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1083
9999 mem: location 1285 is 1083
9999 mem: storing 32 in location 1083
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1284 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1084
9999 mem: location 1286 is 1084
9999 mem: storing 7 in location 1084
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1161 is 3
9999 mem: storing 4 in location 1161
 103 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1157 is 1009
9999 mem: location 1161 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1317
 104 run: row:number <- next-ingredient 
9999 mem: storing 4 in location 1318
 104 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1319
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1320
 104 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1321
9999 mem: storing 1 in location 1322
 104 run: break-if style-found?, 
9999 mem: location 1322 is 1
9999 run: jumping to instruction 9
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 104 run: break-if color-found?, 
9999 mem: location 1324 is 0
9999 run: jump-if fell through
 104 run: color <- copy 245/grey
9999 mem: storing 245 in location 1323
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
 104 run: break-if bg-color-found?, 
9999 mem: location 1326 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1325
 104 run: screen <- move-cursor screen, row, x
9999 mem: location 1317 is 1009
9999 mem: location 1318 is 4
9999 mem: location 1319 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1248
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 105 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 105 run: *row <- copy new-row
9999 mem: location 1248 is 4
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 4 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 105 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1317
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 0
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 104 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 9480
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 9480
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 40
9999 mem: storing 1095 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1095
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1284 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 9480
9999 mem: location 1285 is 1095
9999 mem: location 1285 is 1095
9999 mem: storing 9480 in location 1095
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1095
9999 mem: location 1095 is 9480
9999 mem: location 1096 is 7
9999 mem: location 1284 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 245
9999 mem: location 1286 is 1096
9999 mem: location 1286 is 1096
9999 mem: storing 245 in location 1096
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
schedule: print-character/draw-horizontal/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: x <- add x, 1
9999 mem: location 1319 is 0
9999 mem: storing 1 in location 1319
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 1
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 104 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 9480
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 9480
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 41
9999 mem: storing 1097 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1284 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 9480
9999 mem: location 1285 is 1097
9999 mem: location 1285 is 1097
9999 mem: storing 9480 in location 1097
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1097
9999 mem: location 1097 is 9480
9999 mem: location 1098 is 7
9999 mem: location 1284 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 245
9999 mem: location 1286 is 1098
9999 mem: location 1286 is 1098
9999 mem: storing 245 in location 1098
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: x <- add x, 1
9999 mem: location 1319 is 1
9999 mem: storing 2 in location 1319
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 2
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 104 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 9480
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 9480
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 42
9999 mem: storing 1099 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1284 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 9480
9999 mem: location 1285 is 1099
9999 mem: location 1285 is 1099
9999 mem: storing 9480 in location 1099
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1099
9999 mem: location 1099 is 9480
9999 mem: location 1100 is 7
9999 mem: location 1284 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 245
9999 mem: location 1286 is 1100
9999 mem: location 1286 is 1100
9999 mem: storing 245 in location 1100
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: x <- add x, 1
9999 mem: location 1319 is 2
9999 mem: storing 3 in location 1319
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 3
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 104 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 9480
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 9480
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 43
9999 mem: storing 1101 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1284 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 9480
9999 mem: location 1285 is 1101
9999 mem: location 1285 is 1101
9999 mem: storing 9480 in location 1101
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1101
9999 mem: location 1101 is 9480
9999 mem: location 1102 is 7
9999 mem: location 1284 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 245
9999 mem: location 1286 is 1102
9999 mem: location 1286 is 1102
9999 mem: storing 245 in location 1102
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: x <- add x, 1
9999 mem: location 1319 is 3
9999 mem: storing 4 in location 1319
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 4
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 104 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 9480
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 9480
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 44
9999 mem: storing 1103 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1284 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 9480
9999 mem: location 1285 is 1103
9999 mem: location 1285 is 1103
9999 mem: storing 9480 in location 1103
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1103
9999 mem: location 1103 is 9480
9999 mem: location 1104 is 7
9999 mem: location 1284 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 245
9999 mem: location 1286 is 1104
9999 mem: location 1286 is 1104
9999 mem: storing 245 in location 1104
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: x <- add x, 1
9999 mem: location 1319 is 4
9999 mem: storing 5 in location 1319
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 5
9999 mem: location 1320 is 4
9999 mem: storing 0 in location 1327
 104 run: break-unless continue?, 
9999 mem: location 1327 is 0
9999 run: jumping to instruction 27
 103 run: row <- add row, 1
9999 mem: location 1161 is 4
9999 mem: storing 5 in location 1161
 103 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1157 is 1009
9999 mem: location 1161 is 5
9999 mem: location 1159 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1247
 104 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1248
 104 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 104 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1250
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 104 run: break-if screen, 
9999 mem: location 1247 is 1009
9999 run: jumping to instruction 10
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1247 is 1009
9999 mem: location 1248 is 5
9999 mem: location 1249 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1437
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1439
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1440
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1441
 105 run: break-unless sc, 
9999 mem: location 1439 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1439 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1439 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1442
 105 run: *row <- copy new-row
9999 mem: location 1440 is 5
9999 mem: location 1442 is 1011
9999 mem: location 1442 is 1011
9999 mem: storing 5 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1439 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1439 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1443
 105 run: *column <- copy new-column
9999 mem: location 1441 is 0
9999 mem: location 1443 is 1012
9999 mem: location 1443 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1439 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1247
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1247 is 1009
9999 mem: location 1249 is 0
9999 mem: location 1251 is 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 105 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1292
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 0
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 105 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 106 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 106 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1265 is 1009
 105 run: column <- add column, 1
9999 mem: location 1292 is 0
9999 mem: storing 1 in location 1292
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 1
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 105 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 106 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 106 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1265 is 1009
 105 run: column <- add column, 1
9999 mem: location 1292 is 1
9999 mem: storing 2 in location 1292
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 105 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 106 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 106 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1265 is 1009
 105 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 105 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 106 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 106 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1265 is 1009
 105 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 105 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 106 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 106 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 106 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1265 is 1009
 105 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 105 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 104 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1247 is 1009
9999 mem: location 1248 is 5
9999 mem: location 1250 is 0
9999 mem: location 1251 is 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1444
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1446
 105 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1447
 105 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1448
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1449
 105 run: row <- add row, 1
9999 mem: location 1447 is 5
9999 mem: storing 6 in location 1447
 105 run: screen <- move-cursor screen, row, left
9999 mem: location 1446 is 1009
9999 mem: location 1447 is 6
9999 mem: location 1448 is 0
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1439
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1440
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1441
 106 run: break-unless sc, 
9999 mem: location 1439 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1439 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1439 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1442
 106 run: *row <- copy new-row
9999 mem: location 1440 is 6
9999 mem: location 1442 is 1011
9999 mem: location 1442 is 1011
9999 mem: storing 6 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1439 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1439 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1443
 106 run: *column <- copy new-column
9999 mem: location 1441 is 0
9999 mem: location 1443 is 1012
9999 mem: location 1443 is 1012
9999 mem: storing 0 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1439 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1446
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1446 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1171
 106 run: break-unless sc, 
9999 mem: location 1171 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1171 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1171 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1172
 106 run: reply height
9999 mem: location 1172 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1450
 105 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1447 is 6
9999 mem: location 1450 is 5
9999 mem: storing 1 in location 1451
 105 run: break-if at-bottom-of-screen?, 
9999 mem: location 1451 is 1
9999 run: jumping to instruction 15
 104 run: reply screen/same-as-ingredient:0
9999 mem: location 1247 is 1009
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1300
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1300 in location 1317
 103 run: break-unless x, 
9999 mem: location 1317 is 1300
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1317 is 1300
9999 mem: location 1300 is 1
9999 mem: location 1301 is 1295
9999 mem: location 1317 is 1300
9999 run: address to copy is 1300
9999 mem: storing 1300 in location 1318
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1317 is 1300
9999 mem: location 1300 is 1
9999 mem: location 1301 is 1295
9999 mem: location 1317 is 1300
9999 run: address to copy is 1301
9999 run: its type is address
9999 mem: location 1301 is 1295
9999 mem: storing 1295 in location 1319
 103 run: max:number <- length *buf
9999 mem: location 1319 is 1295
9999 mem: storing 1 in location 1320
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1318 is 1300
9999 mem: location 1300 is 1
9999 mem: location 1320 is 1
9999 mem: storing 1 in location 1321
 103 run: break-unless done?, 
9999 mem: location 1321 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1169 in location 1322
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1322 is 1169
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1317 is 1300
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1300
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: storing 1300 in location 1305
9999 mem: storing 1 in location 1311
9999 mem: storing 1 in location 1312
 102 run: loop-unless found?, 
9999 mem: location 1311 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1312 is 1
9999 run: jumping to instruction 25
 100 run: screen-should-contain [
    .          .
    .k         .
    .l         .
    .m         .
    .┈┈┈┈┈     .
  ]
 100 run: assume-console [
    press up-arrow
  ]
parse: instruction: press
parse:   ingredient: {name: "up-arrow", properties: ["up-arrow": ]}
 100 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1002
after-brace: editor-event-loop ...
 100 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1457
9999 mem: location 2 is 1115
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1304
 101 run: console:address <- next-ingredient 
9999 mem: storing 1457 in location 1305
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1306
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1457
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1457 in location 1317
 102 run: break-unless x, 
9999 mem: location 1317 is 1457
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1317 is 1457
9999 mem: location 1457 is 0
9999 mem: location 1458 is 1452
9999 mem: location 1317 is 1457
9999 run: address to copy is 1457
9999 mem: storing 1457 in location 1318
 102 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1317 is 1457
9999 mem: location 1457 is 0
9999 mem: location 1458 is 1452
9999 mem: location 1317 is 1457
9999 run: address to copy is 1458
9999 run: its type is address
9999 mem: location 1458 is 1452
9999 mem: storing 1452 in location 1319
 102 run: max:number <- length *buf
9999 mem: location 1319 is 1452
9999 mem: storing 1 in location 1320
 102 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1318 is 1457
9999 mem: location 1457 is 0
9999 mem: location 1320 is 1
9999 mem: storing 0 in location 1321
 102 run: break-unless done?, 
9999 mem: location 1321 is 0
9999 run: jumping to instruction 12
 102 run: result:event <- index *buf, *idx
9999 mem: location 1319 is 1452
9999 mem: location 1318 is 1457
9999 mem: location 1457 is 0
9999 run: address to copy is 1453
9999 run: its type is event
9999 mem: location 1453 is 1
9999 mem: location 1454 is 65517
9999 mem: location 1455 is 0
9999 mem: location 1456 is 0
9999 mem: storing 1 in location 1323
9999 mem: storing 65517 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
 102 run: *idx <- add *idx, 1
9999 mem: location 1318 is 1457
9999 mem: location 1457 is 0
9999 mem: location 1318 is 1457
9999 mem: storing 1 in location 1457
 102 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1323 is 1
9999 mem: location 1324 is 65517
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 mem: location 1317 is 1457
9999 run: result 0 is [1, 65517, 0, 0]
9999 run: result 1 is 1457
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1307
9999 mem: storing 65517 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: storing 1457 in location 1305
9999 mem: storing 1 in location 1311
9999 mem: storing 0 in location 1312
 101 run: loop-unless found?, 
9999 mem: location 1311 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?, 
9999 mem: location 1312 is 0
9999 run: jump-if fell through
 101 run: trace 10, [app], [next-event]
  10 app: next-event 
 101 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1307 is 1
9999 mem: location 1308 is 65517
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: storing 0 in location 1313
 101 run: break-unless t, 
9999 mem: location 1313 is 0
9999 run: jumping to instruction 15
 101 run: break-if t, 
9999 mem: location 1313 is 0
9999 run: jump-if fell through
 101 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1304 is 1009
9999 mem: location 1306 is 1115
9999 mem: location 1307 is 1
9999 mem: location 1308 is 65517
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1330
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1331
 102 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1332
9999 mem: storing 65517 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: storing 0 in location 1335
 102 run: jump-if editor, 1:offset
9999 mem: location 1331 is 1115
9999 run: jumping to instruction 6
 102 run: screen-width:number <- screen-width screen
9999 mem: location 1330 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1459
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1461
 103 run: break-unless sc, 
9999 mem: location 1461 is 1009
9999 run: jump-unless fell through
schedule: screen-width/handle-keyboard-event/editor-event-loop/run1002/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1461 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1461 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1462
 103 run: reply width
9999 mem: location 1462 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1336
 102 run: screen-height:number <- screen-height screen
9999 mem: location 1330 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1461
 103 run: break-unless sc, 
9999 mem: location 1461 is 1009
9999 run: jump-unless fell through
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1461 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1461 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1462
 103 run: reply height
9999 mem: location 1462 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1337
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1338
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1339
 102 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1340
 102 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1341
 102 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1342
 102 run: save-row:number <- copy *cursor-row
9999 mem: location 1341 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1341 is 1121
9999 mem: location 1341 is 1121
9999 mem: storing 1 in location 1343
 102 run: save-column:number <- copy *cursor-column
9999 mem: location 1342 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1342 is 1122
9999 mem: location 1342 is 1122
9999 mem: storing 0 in location 1344
 102 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1332 is 1
9999 mem: location 1333 is 65517
9999 mem: location 1334 is 0
9999 mem: location 1335 is 0
9999 mem: storing 0 in location 1345
 102 run: break-unless c, 
9999 mem: location 1345 is 0
9999 run: jumping to instruction 432
 102 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1332 is 1
9999 mem: location 1333 is 65517
9999 mem: location 1334 is 0
9999 mem: location 1335 is 0
9999 mem: storing 1333 in location 1400
 102 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1400 is 1333
 102 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 0 in location 1362
 102 run: break-unless page-up?, 
9999 mem: location 1362 is 0
9999 run: jumping to instruction 477
 102 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 0 in location 1378
 102 run: break-unless page-down?, 
9999 mem: location 1378 is 0
9999 run: jumping to instruction 519
 102 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 0 in location 1385
 102 run: break-unless move-to-end-of-line?, 
9999 mem: location 1385 is 0
9999 run: jumping to instruction 556
 102 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 0 in location 1386
 102 run: break-unless move-to-start-of-line?, 
9999 mem: location 1386 is 0
9999 run: jumping to instruction 593
 102 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 0 in location 1401
 102 run: break-unless move-to-next-line?, 
9999 mem: location 1401 is 0
9999 run: jumping to instruction 630
 102 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 1 in location 1402
 102 run: break-unless move-to-previous-line?, 
9999 mem: location 1402 is 1
9999 run: jump-unless fell through
 102 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1365
 102 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1366
 102 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1200
9999 mem: storing 1200 in location 1367
 102 run: editor, go-render? <- move-to-previous-line editor
9999 mem: location 1331 is 1115
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 19
9999 mem: new alloc: 1463
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1465
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1466
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1467
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1468
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1469
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1470
 103 run: already-at-top?:boolean <- lesser-or-equal *cursor-row, 1/top
9999 mem: location 1466 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1471
 103 run: break-if already-at-top?, 
9999 mem: location 1471 is 1
9999 run: jumping to instruction 45
 103 run: break-unless already-at-top?, 
9999 mem: location 1471 is 1
9999 run: jump-unless fell through
 103 run: trace 10, [app], [scroll up]
  10 app: scroll up 
 103 run: top-of-screen:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1480
 103 run: old-top:address:duplex-list <- copy *top-of-screen
9999 mem: location 1480 is 1116
9999 mem: location 1116 is 1200
9999 mem: location 1480 is 1116
9999 mem: location 1480 is 1116
9999 mem: storing 1200 in location 1481
 103 run: *top-of-screen <- before-previous-line *top-of-screen, editor
9999 mem: location 1480 is 1116
9999 mem: location 1116 is 1200
9999 mem: location 1465 is 1115
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: new alloc: 1483
 104 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1485
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1485 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1485 is 1200
9999 run: address to copy is 1200
9999 run: its type is number
9999 mem: location 1200 is 10
9999 mem: storing 10 in location 1486
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1487
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1487 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1487 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1488
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1487 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1487 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1489
 104 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1489 is 4
9999 mem: location 1488 is 0
9999 mem: storing 4 in location 1490
 104 run: sentinel:address:duplex-list <- get *editor, data:offset
9999 mem: location 1487 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1200
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1487 is 1115
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1163
9999 mem: storing 1163 in location 1491
 104 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1485 is 1200
9999 mem: location 1491 is 1163
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1157
 105 run: start:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1158
 105 run: result:number <- copy 0
9999 mem: storing 0 in location 1159
 105 run: jump-if curr, 1:offset
9999 mem: location 1157 is 1200
9999 run: jumping to instruction 6
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1200
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 105 run: jump-unless at-start?, 1:offset
9999 mem: location 1160 is 0
9999 run: jumping to instruction 9
 105 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1200
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1461
 106 run: jump-if in, 1:offset
9999 mem: location 1461 is 1200
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1461 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1461 is 1200
9999 run: address to copy is 1202
9999 run: its type is address
9999 mem: location 1202 is 1197
9999 mem: storing 1197 in location 1462
 106 run: reply result
9999 mem: location 1462 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1157
 105 run: break-unless curr, 
9999 mem: location 1157 is 1197
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1197
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 105 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1157 is 1197
9999 run: address to copy is 1197
9999 run: its type is number
9999 mem: location 1197 is 106
9999 mem: storing 106 in location 1161
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 106
9999 mem: storing 0 in location 1162
 105 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 105 run: result <- add result, 1
9999 mem: location 1159 is 0
9999 mem: storing 1 in location 1159
 105 run: loop 
9999 run: jumping to instruction 10
 105 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1197
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1461
 106 run: jump-if in, 1:offset
9999 mem: location 1461 is 1197
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1461 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1461 is 1197
9999 run: address to copy is 1199
9999 run: its type is address
9999 mem: location 1199 is 1194
9999 mem: storing 1194 in location 1462
 106 run: reply result
9999 mem: location 1462 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1157
 105 run: break-unless curr, 
9999 mem: location 1157 is 1194
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1194
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 105 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1157 is 1194
9999 run: address to copy is 1194
9999 run: its type is number
9999 mem: location 1194 is 105
9999 mem: storing 105 in location 1161
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 105
9999 mem: storing 0 in location 1162
 105 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 105 run: result <- add result, 1
9999 mem: location 1159 is 1
9999 mem: storing 2 in location 1159
 105 run: loop 
9999 run: jumping to instruction 10
 105 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1194
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1461
 106 run: jump-if in, 1:offset
9999 mem: location 1461 is 1194
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1461 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1461 is 1194
9999 run: address to copy is 1196
9999 run: its type is address
9999 mem: location 1196 is 1191
9999 mem: storing 1191 in location 1462
 106 run: reply result
9999 mem: location 1462 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1157
 105 run: break-unless curr, 
9999 mem: location 1157 is 1191
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1191
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 105 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1157 is 1191
9999 run: address to copy is 1191
9999 run: its type is number
9999 mem: location 1191 is 104
9999 mem: storing 104 in location 1161
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 104
9999 mem: storing 0 in location 1162
 105 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 105 run: result <- add result, 1
9999 mem: location 1159 is 2
9999 mem: storing 3 in location 1159
 105 run: loop 
9999 run: jumping to instruction 10
 105 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1191
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1461
 106 run: jump-if in, 1:offset
9999 mem: location 1461 is 1191
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1461 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1461 is 1191
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1188
9999 mem: storing 1188 in location 1462
 106 run: reply result
9999 mem: location 1462 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1157
 105 run: break-unless curr, 
9999 mem: location 1157 is 1188
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1188
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 105 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1157 is 1188
9999 run: address to copy is 1188
9999 run: its type is number
9999 mem: location 1188 is 103
9999 mem: storing 103 in location 1161
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 103
9999 mem: storing 0 in location 1162
 105 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 105 run: result <- add result, 1
9999 mem: location 1159 is 3
9999 mem: storing 4 in location 1159
 105 run: loop 
9999 run: jumping to instruction 10
 105 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1188
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1461
 106 run: jump-if in, 1:offset
9999 mem: location 1461 is 1188
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1461 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1461 is 1188
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1185
9999 mem: storing 1185 in location 1462
 106 run: reply result
9999 mem: location 1462 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1157
 105 run: break-unless curr, 
9999 mem: location 1157 is 1185
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1185
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 105 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1157 is 1185
9999 run: address to copy is 1185
9999 run: its type is number
9999 mem: location 1185 is 102
9999 mem: storing 102 in location 1161
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 102
9999 mem: storing 0 in location 1162
 105 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 105 run: result <- add result, 1
9999 mem: location 1159 is 4
9999 mem: storing 5 in location 1159
 105 run: loop 
9999 run: jumping to instruction 10
 105 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1185
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1461
 106 run: jump-if in, 1:offset
9999 mem: location 1461 is 1185
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1461 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1461 is 1185
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1182
9999 mem: storing 1182 in location 1462
 106 run: reply result
9999 mem: location 1462 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1157
 105 run: break-unless curr, 
9999 mem: location 1157 is 1182
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1182
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 105 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1157 is 1182
9999 run: address to copy is 1182
9999 run: its type is number
9999 mem: location 1182 is 101
9999 mem: storing 101 in location 1161
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 101
9999 mem: storing 0 in location 1162
 105 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 105 run: result <- add result, 1
9999 mem: location 1159 is 5
9999 mem: storing 6 in location 1159
 105 run: loop 
9999 run: jumping to instruction 10
 105 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1182
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1461
 106 run: jump-if in, 1:offset
9999 mem: location 1461 is 1182
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1461 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1461 is 1182
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1179
9999 mem: storing 1179 in location 1462
 106 run: reply result
9999 mem: location 1462 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1157
 105 run: break-unless curr, 
9999 mem: location 1157 is 1179
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1179
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 105 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1157 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 100
9999 mem: storing 100 in location 1161
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 100
9999 mem: storing 0 in location 1162
 105 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 105 run: result <- add result, 1
9999 mem: location 1159 is 6
9999 mem: storing 7 in location 1159
 105 run: loop 
9999 run: jumping to instruction 10
 105 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1179
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1461
 106 run: jump-if in, 1:offset
9999 mem: location 1461 is 1179
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1461 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1461 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1176
9999 mem: storing 1176 in location 1462
 106 run: reply result
9999 mem: location 1462 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1157
 105 run: break-unless curr, 
9999 mem: location 1157 is 1176
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1176
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 105 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1157 is 1176
9999 run: address to copy is 1176
9999 run: its type is number
9999 mem: location 1176 is 99
9999 mem: storing 99 in location 1161
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 99
9999 mem: storing 0 in location 1162
 105 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 105 run: result <- add result, 1
9999 mem: location 1159 is 7
9999 mem: storing 8 in location 1159
 105 run: loop 
9999 run: jumping to instruction 10
 105 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1176
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1461
 106 run: jump-if in, 1:offset
9999 mem: location 1461 is 1176
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1461 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1461 is 1176
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1173
9999 mem: storing 1173 in location 1462
 106 run: reply result
9999 mem: location 1462 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1157
 105 run: break-unless curr, 
9999 mem: location 1157 is 1173
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1173
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 105 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1157 is 1173
9999 run: address to copy is 1173
9999 run: its type is number
9999 mem: location 1173 is 98
9999 mem: storing 98 in location 1161
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 98
9999 mem: storing 0 in location 1162
 105 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 105 run: result <- add result, 1
9999 mem: location 1159 is 8
9999 mem: storing 9 in location 1159
 105 run: loop 
9999 run: jumping to instruction 10
 105 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1173
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1461
 106 run: jump-if in, 1:offset
9999 mem: location 1461 is 1173
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1461 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1461 is 1173
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1166
9999 mem: storing 1166 in location 1462
 106 run: reply result
9999 mem: location 1462 is 1166
9999 run: result 0 is 1166
9999 mem: storing 1166 in location 1157
 105 run: break-unless curr, 
9999 mem: location 1157 is 1166
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1166
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 105 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1163
9999 mem: location 1157 is 1166
9999 run: address to copy is 1166
9999 run: its type is number
9999 mem: location 1166 is 97
9999 mem: storing 97 in location 1161
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 97
9999 mem: storing 0 in location 1162
 105 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 105 run: result <- add result, 1
9999 mem: location 1159 is 9
9999 mem: storing 10 in location 1159
 105 run: loop 
9999 run: jumping to instruction 10
 105 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1166
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1166 in location 1461
 106 run: jump-if in, 1:offset
9999 mem: location 1461 is 1166
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1461 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1163
9999 mem: location 1461 is 1166
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1163
9999 mem: storing 1163 in location 1462
 106 run: reply result
9999 mem: location 1462 is 1163
9999 run: result 0 is 1163
9999 mem: storing 1163 in location 1157
 105 run: break-unless curr, 
9999 mem: location 1157 is 1163
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1163
9999 mem: location 1158 is 1163
9999 mem: storing 1 in location 1160
 105 run: break-if at-start?, 
9999 mem: location 1160 is 1
9999 run: jumping to instruction 19
 105 run: reply result
9999 mem: location 1159 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1492
 104 run: break-if len, 
9999 mem: location 1492 is 10
9999 run: jumping to instruction 15
 104 run: _, max:number <- divide-with-remainder len, max-line-length
9999 mem: location 1492 is 10
9999 mem: location 1490 is 4
9999 mem: storing 2 in location 1494
 104 run: break-if max, 
9999 mem: location 1494 is 2
9999 run: jumping to instruction 20
 104 run: max <- add max, 1
9999 mem: location 1494 is 2
9999 mem: storing 3 in location 1494
 104 run: count:number <- copy 0
9999 mem: storing 0 in location 1495
 104 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1495 is 0
9999 mem: location 1494 is 3
9999 mem: storing 0 in location 1496
 104 run: break-if done?, 
9999 mem: location 1496 is 0
9999 run: jump-if fell through
 104 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1485 is 1200
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1461
 105 run: jump-if in, 1:offset
9999 mem: location 1461 is 1200
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1461 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1461 is 1200
9999 run: address to copy is 1202
9999 run: its type is address
9999 mem: location 1202 is 1197
9999 mem: storing 1197 in location 1462
 105 run: reply result
9999 mem: location 1462 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1493
 104 run: break-unless prev, 
9999 mem: location 1493 is 1197
9999 run: jump-unless fell through
 104 run: curr <- copy prev
9999 mem: location 1493 is 1197
9999 mem: storing 1197 in location 1485
 104 run: count <- add count, 1
9999 mem: location 1495 is 0
9999 mem: storing 1 in location 1495
 104 run: loop 
9999 run: jumping to instruction 24
 104 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1495 is 1
9999 mem: location 1494 is 3
9999 mem: storing 0 in location 1496
 104 run: break-if done?, 
9999 mem: location 1496 is 0
9999 run: jump-if fell through
 104 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1485 is 1197
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1461
 105 run: jump-if in, 1:offset
9999 mem: location 1461 is 1197
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1461 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1461 is 1197
9999 run: address to copy is 1199
9999 run: its type is address
9999 mem: location 1199 is 1194
9999 mem: storing 1194 in location 1462
 105 run: reply result
9999 mem: location 1462 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1493
 104 run: break-unless prev, 
9999 mem: location 1493 is 1194
9999 run: jump-unless fell through
 104 run: curr <- copy prev
9999 mem: location 1493 is 1194
9999 mem: storing 1194 in location 1485
 104 run: count <- add count, 1
9999 mem: location 1495 is 1
9999 mem: storing 2 in location 1495
 104 run: loop 
9999 run: jumping to instruction 24
 104 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1495 is 2
9999 mem: location 1494 is 3
9999 mem: storing 0 in location 1496
 104 run: break-if done?, 
9999 mem: location 1496 is 0
9999 run: jump-if fell through
 104 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1485 is 1194
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1461
 105 run: jump-if in, 1:offset
9999 mem: location 1461 is 1194
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1461 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1461 is 1194
9999 run: address to copy is 1196
9999 run: its type is address
9999 mem: location 1196 is 1191
9999 mem: storing 1191 in location 1462
 105 run: reply result
9999 mem: location 1462 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1493
 104 run: break-unless prev, 
9999 mem: location 1493 is 1191
9999 run: jump-unless fell through
 104 run: curr <- copy prev
9999 mem: location 1493 is 1191
9999 mem: storing 1191 in location 1485
 104 run: count <- add count, 1
9999 mem: location 1495 is 2
9999 mem: storing 3 in location 1495
 104 run: loop 
9999 run: jumping to instruction 24
 104 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1495 is 3
9999 mem: location 1494 is 3
9999 mem: storing 1 in location 1496
 104 run: break-if done?, 
9999 mem: location 1496 is 1
9999 run: jumping to instruction 31
 104 run: reply curr
9999 mem: location 1485 is 1191
9999 run: result 0 is 1191
9999 mem: location 1480 is 1116
9999 mem: storing 1191 in location 1116
 103 run: no-movement?:boolean <- equal old-top, *top-of-screen
9999 mem: location 1481 is 1200
9999 mem: location 1480 is 1116
9999 mem: location 1116 is 1191
9999 mem: storing 0 in location 1482
 103 run: jump-unless no-movement?, 1:offset
9999 mem: location 1482 is 0
9999 run: jumping to instruction 56
 103 run: reply editor/same-as-ingredient:0, 1/go-render
9999 mem: location 1465 is 1115
9999 run: result 0 is 1115
9999 run: result 1 is 1
9999 mem: storing 1115 in location 1331
9999 mem: storing 1 in location 1388
 102 run: undo-coalesce-tag:number <- copy 3/up-arrow
9999 mem: storing 3 in location 1368
 102 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1369
 102 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1370
 102 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1191
9999 mem: storing 1191 in location 1371
 102 run: break-unless undo-coalesce-tag, 
9999 mem: location 1368 is 3
9999 run: jump-unless fell through
 102 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1349
 102 run: break-unless *undo, 
9999 mem: location 1349 is 1124
9999 mem: location 1124 is 1424
9999 run: jump-unless fell through
 102 run: op:address:operation <- first *undo
9999 mem: location 1349 is 1124
9999 mem: location 1124 is 1424
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:list <- next-ingredient 
9999 mem: storing 1424 in location 1461
 103 run: result:location <- get *in, value:offset
9999 mem: location 1461 is 1424
9999 mem: location 1424 is 1252
9999 mem: location 1425 is 0
9999 mem: location 1461 is 1424
9999 run: address to copy is 1424
9999 run: its type is number
9999 mem: location 1424 is 1252
9999 mem: storing 1252 in location 1462
 103 run: reply result
9999 mem: location 1462 is 1252
9999 run: result 0 is 1252
9999 mem: storing 1252 in location 1348
 102 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1348 is 1252
9999 mem: location 1252 is 1
9999 mem: location 1253 is 1
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1163
9999 mem: location 1256 is 1
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1200
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1348 is 1252
9999 mem: storing 1253 in location 1354
 102 run: break-unless move, 
9999 mem: location 1354 is 1253
9999 run: jump-unless fell through
 102 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1354 is 1253
9999 mem: location 1253 is 1
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1163
9999 mem: location 1256 is 1
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1200
9999 mem: location 1259 is 0
9999 mem: location 1354 is 1253
9999 run: address to copy is 1259
9999 run: its type is number
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1372
 102 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1368 is 3
9999 mem: location 1372 is 0
9999 mem: storing 0 in location 1373
 102 run: break-unless coalesce?, 
9999 mem: location 1373 is 0
9999 run: jumping to instruction 660
 102 run: op:address:operation <- new operation:type
9999 mem: storing 1426 in location 1348
 102 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1365 is 1
9999 mem: location 1366 is 0
9999 mem: location 1367 is 1200
9999 mem: location 1369 is 1
9999 mem: location 1370 is 0
9999 mem: location 1371 is 1191
9999 mem: location 1368 is 3
9999 mem: location 1348 is 1426
9999 mem: location 1348 is 1426
9999 mem: storing 1 in location 1426
9999 mem: storing 1 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 1200 in location 1429
9999 mem: storing 1 in location 1430
9999 mem: storing 0 in location 1431
9999 mem: storing 1191 in location 1432
9999 mem: storing 3 in location 1433
 102 run: editor <- add-operation editor, op
9999 mem: location 1331 is 1115
9999 mem: location 1348 is 1426
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1291
 103 run: op:address:operation <- next-ingredient 
9999 mem: storing 1426 in location 1292
 103 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1291 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1424
9999 mem: location 1125 is 0
9999 mem: location 1291 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1293
 103 run: *undo <- push op, *undo
9999 mem: location 1292 is 1426
9999 mem: location 1293 is 1124
9999 mem: location 1124 is 1424
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: x:location <- next-ingredient 
9999 mem: storing 1426 in location 1247
 104 run: in:address:list <- next-ingredient 
9999 mem: storing 1424 in location 1248
 104 run: result:address:list <- new list:type
9999 mem: new alloc: 1497
9999 mem: storing 1497 in location 1249
 104 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1249 is 1497
9999 mem: location 1497 is 0
9999 mem: location 1498 is 0
9999 mem: location 1249 is 1497
9999 run: address to copy is 1497
9999 mem: storing 1497 in location 1250
 104 run: *val <- copy x
9999 mem: location 1247 is 1426
9999 mem: location 1250 is 1497
9999 mem: location 1250 is 1497
9999 mem: storing 1426 in location 1497
 104 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1249 is 1497
9999 mem: location 1497 is 1426
9999 mem: location 1498 is 0
9999 mem: location 1249 is 1497
9999 run: address to copy is 1498
9999 mem: storing 1498 in location 1251
 104 run: *next <- copy in
9999 mem: location 1248 is 1424
9999 mem: location 1251 is 1498
9999 mem: location 1251 is 1498
9999 mem: storing 1424 in location 1498
 104 run: reply result
9999 mem: location 1249 is 1497
9999 run: result 0 is 1497
9999 mem: location 1293 is 1124
9999 mem: storing 1497 in location 1124
 103 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1291 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1291 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1294
 103 run: *redo <- copy 0
9999 mem: location 1294 is 1125
9999 mem: location 1294 is 1125
9999 mem: storing 0 in location 1125
 103 run: reply editor/same-as-ingredient:0
9999 mem: location 1291 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1331
 102 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1330 is 1009
9999 mem: location 1331 is 1115
9999 mem: location 1388 is 1
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 1
9999 mem: storing 1009 in location 1304
9999 mem: storing 1115 in location 1306
9999 mem: storing 1 in location 1314
 101 run: break-unless go-render?, 
9999 mem: location 1314 is 1
9999 run: jump-unless fell through
 101 run: editor-render screen, editor
9999 mem: location 1304 is 1009
9999 mem: location 1306 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1157
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1158
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1158 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1158 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1159
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1158 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1158 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1160
 102 run: row:number, column:number <- render screen, editor
9999 mem: location 1157 is 1009
9999 mem: location 1158 is 1115
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1220
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1221
 103 run: jump-if editor, 1:offset
9999 mem: location 1221 is 1115
9999 run: jumping to instruction 5
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1222
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1220 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1461
 104 run: break-unless sc, 
9999 mem: location 1461 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1461 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1461 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1462
 104 run: reply height
9999 mem: location 1462 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1223
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1224
 103 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1191
9999 mem: storing 1191 in location 1225
 103 run: prev:address:duplex-list <- copy curr
9999 mem: location 1225 is 1191
9999 mem: storing 1191 in location 1226
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1191
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1191
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1461 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1462
 104 run: reply result
9999 mem: location 1462 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1225
 103 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1227
 103 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1228
 103 run: column:number <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1230
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1231
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1200
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1232
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 1
9999 mem: location 1229 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1248
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 104 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 104 run: *row <- copy new-row
9999 mem: location 1248 is 1
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 104 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 103 run: break-unless curr, 
9999 mem: location 1225 is 1194
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1235
 103 run: break-unless at-cursor?, 
9999 mem: location 1235 is 1
9999 run: jump-unless fell through
 103 run: *before-cursor <- copy prev
9999 mem: location 1226 is 1191
9999 mem: location 1232 is 1118
9999 mem: location 1232 is 1118
9999 mem: storing 1191 in location 1118
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1225 is 1194
9999 run: address to copy is 1194
9999 run: its type is number
9999 mem: location 1194 is 105
9999 mem: storing 105 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 105
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1499
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1502
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 104 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 105
9999 mem: storing 0 in location 1504
 104 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 104 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 105
9999 mem: storing 0 in location 1507
 104 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 104 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 105
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 105
9999 mem: location 1227 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 105
  90 print-character: 105 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 105
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 105
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 10
9999 mem: storing 1035 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1035
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1284 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 105
9999 mem: location 1285 is 1035
9999 mem: location 1285 is 1035
9999 mem: storing 105 in location 1035
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1035
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1284 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1036
9999 mem: location 1286 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1194
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1461 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1462
 104 run: reply result
9999 mem: location 1462 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1191
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1191
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1461 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1462
 104 run: reply result
9999 mem: location 1462 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1226
 103 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1225 is 1197
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
schedule: render/editor-render/editor-event-loop/run1002/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 1
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1235
 103 run: break-unless at-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1225 is 1197
9999 run: address to copy is 1197
9999 run: its type is number
9999 mem: location 1197 is 106
9999 mem: storing 106 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 106
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 104 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1502
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 104 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 106
9999 mem: storing 0 in location 1504
 104 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 104 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 106
9999 mem: storing 0 in location 1507
 104 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 104 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 106
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 106
9999 mem: location 1227 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 106
  90 print-character: 106 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 106
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 106
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 11
9999 mem: storing 1037 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1284 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 106
9999 mem: location 1285 is 1037
9999 mem: location 1285 is 1037
9999 mem: storing 106 in location 1037
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1037
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1284 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1038
9999 mem: location 1286 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1197
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1197
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1461 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1462
 104 run: reply result
9999 mem: location 1462 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1194
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1461 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1462
 104 run: reply result
9999 mem: location 1462 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1226
 103 run: column <- add column, 1
9999 mem: location 1229 is 1
9999 mem: storing 2 in location 1229
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1225 is 1200
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 2
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1235
 103 run: break-unless at-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1225 is 1200
9999 run: address to copy is 1200
9999 run: its type is number
9999 mem: location 1200 is 10
9999 mem: storing 10 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1502
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 104 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 10
9999 mem: storing 0 in location 1504
 104 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 104 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 10
9999 mem: storing 0 in location 1507
 104 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 104 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 103 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1229 is 2
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1238
 103 run: break-unless left-of-cursor?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1220 is 1009
9999 mem: location 1229 is 2
9999 mem: location 1224 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 104 run: column:number <- next-ingredient 
9999 mem: storing 2 in location 1292
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 12
9999 mem: storing 1039 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1284 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1039
9999 mem: location 1285 is 1039
9999 mem: storing 32 in location 1039
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1284 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1040
9999 mem: location 1286 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 13
9999 mem: storing 1041 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1284 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1041
9999 mem: location 1285 is 1041
9999 mem: storing 32 in location 1041
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1284 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1042
9999 mem: location 1286 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 14
9999 mem: storing 1043 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1284 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1043
9999 mem: location 1285 is 1043
9999 mem: storing 32 in location 1043
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1284 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1044
9999 mem: location 1286 is 1044
9999 mem: storing 7 in location 1044
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1228 is 1
9999 mem: storing 2 in location 1228
 103 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 2
9999 mem: location 1229 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1248
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 104 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 104 run: *row <- copy new-row
9999 mem: location 1248 is 2
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 104 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1200
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1200
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1461 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1462
 104 run: reply result
9999 mem: location 1462 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1197
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1197
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1461 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1462
 104 run: reply result
9999 mem: location 1462 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1226
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1225 is 1203
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1225 is 1203
9999 run: address to copy is 1203
9999 run: its type is number
9999 mem: location 1203 is 107
9999 mem: storing 107 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 107
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 104 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1502
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 104 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 107
9999 mem: storing 0 in location 1504
 104 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 104 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 107
9999 mem: storing 0 in location 1507
 104 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 104 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 107
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 107
9999 mem: location 1227 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 107
  90 print-character: 107 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 107
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 107
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 20
9999 mem: storing 1055 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1055
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1284 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 107
9999 mem: location 1285 is 1055
9999 mem: location 1285 is 1055
9999 mem: storing 107 in location 1055
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1055
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1284 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1056
9999 mem: location 1286 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1203
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1203
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1461 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1462
 104 run: reply result
9999 mem: location 1462 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1200
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1200
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1461 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1462
 104 run: reply result
9999 mem: location 1462 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1226
 103 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1225 is 1206
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1225 is 1206
9999 run: address to copy is 1206
9999 run: its type is number
9999 mem: location 1206 is 10
9999 mem: storing 10 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1502
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 104 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 10
9999 mem: storing 0 in location 1504
 104 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 104 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 10
9999 mem: storing 0 in location 1507
 104 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 104 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
schedule: get-color/render/editor-render/editor-event-loop/run1002/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 104 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1220 is 1009
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 104 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1292
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 1
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 21
9999 mem: storing 1057 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1284 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1057
9999 mem: location 1285 is 1057
9999 mem: storing 32 in location 1057
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1284 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1058
9999 mem: location 1286 is 1058
9999 mem: storing 7 in location 1058
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 1
9999 mem: storing 2 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 22
9999 mem: storing 1059 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1284 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1059
9999 mem: location 1285 is 1059
9999 mem: storing 32 in location 1059
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1284 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1060
9999 mem: location 1286 is 1060
9999 mem: storing 7 in location 1060
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 23
9999 mem: storing 1061 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1284 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1061
9999 mem: location 1285 is 1061
9999 mem: storing 32 in location 1061
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1284 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1062
9999 mem: location 1286 is 1062
9999 mem: storing 7 in location 1062
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 24
9999 mem: storing 1063 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1284 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1063
9999 mem: location 1285 is 1063
9999 mem: storing 32 in location 1063
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1284 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1064
9999 mem: location 1286 is 1064
9999 mem: storing 7 in location 1064
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1228 is 2
9999 mem: storing 3 in location 1228
 103 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 3
9999 mem: location 1229 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1248
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 104 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 104 run: *row <- copy new-row
9999 mem: location 1248 is 3
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 3 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 104 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1206
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1206
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1461 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1462
 104 run: reply result
9999 mem: location 1462 is 1209
9999 run: result 0 is 1209
9999 mem: storing 1209 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1203
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1203
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1461 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1462
 104 run: reply result
9999 mem: location 1462 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1226
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1225 is 1209
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 3
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1209
9999 mem: location 1209 is 108
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1225 is 1209
9999 run: address to copy is 1209
9999 run: its type is number
9999 mem: location 1209 is 108
9999 mem: storing 108 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 108
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 104 run: c:character <- next-ingredient 
9999 mem: storing 108 in location 1502
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 104 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 108
9999 mem: storing 0 in location 1504
 104 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 104 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 108
9999 mem: storing 0 in location 1507
 104 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 104 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 108
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 108
9999 mem: location 1227 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 108 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 108
  90 print-character: 108 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 108
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 108
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 30
9999 mem: storing 1075 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1075
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1284 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 108
9999 mem: location 1285 is 1075
9999 mem: location 1285 is 1075
9999 mem: storing 108 in location 1075
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1075
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1284 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1076
9999 mem: location 1286 is 1076
9999 mem: storing 7 in location 1076
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1209
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1209 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1209
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1209
9999 mem: location 1209 is 108
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1461 is 1209
9999 run: address to copy is 1210
9999 run: its type is address
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1462
 104 run: reply result
9999 mem: location 1462 is 1212
9999 run: result 0 is 1212
9999 mem: storing 1212 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1206
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1206
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1461 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1462
 104 run: reply result
9999 mem: location 1462 is 1209
9999 run: result 0 is 1209
9999 mem: storing 1209 in location 1226
 103 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1225 is 1212
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 3
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1212
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1209
9999 mem: location 1225 is 1212
9999 run: address to copy is 1212
9999 run: its type is number
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1502
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 104 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 10
9999 mem: storing 0 in location 1504
 104 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 104 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 10
9999 mem: storing 0 in location 1507
 104 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 104 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1220 is 1009
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 104 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1292
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 1
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 31
9999 mem: storing 1077 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1284 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1077
9999 mem: location 1285 is 1077
9999 mem: storing 32 in location 1077
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1284 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1078
9999 mem: location 1286 is 1078
9999 mem: storing 7 in location 1078
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 1
9999 mem: storing 2 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
schedule: print-character/clear-line-delimited/render/editor-render/editor-event-loop/run1002/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 32
9999 mem: storing 1079 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1284 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1079
9999 mem: location 1285 is 1079
9999 mem: storing 32 in location 1079
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1284 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1080
9999 mem: location 1286 is 1080
9999 mem: storing 7 in location 1080
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 33
9999 mem: storing 1081 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1284 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1081
9999 mem: location 1285 is 1081
9999 mem: storing 32 in location 1081
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1284 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1082
9999 mem: location 1286 is 1082
9999 mem: storing 7 in location 1082
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 105 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 105 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1279
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 105 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 105 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 34
9999 mem: storing 1083 in location 1284
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1284 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1285
 105 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1083
9999 mem: location 1285 is 1083
9999 mem: storing 32 in location 1083
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1284 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1286
 105 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1084
9999 mem: location 1286 is 1084
9999 mem: storing 7 in location 1084
 105 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 105 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1228 is 3
9999 mem: storing 4 in location 1228
 103 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 4
9999 mem: location 1229 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1248
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 104 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 104 run: *row <- copy new-row
9999 mem: location 1248 is 4
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 4 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 104 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1212
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1212 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1212
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1212
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1209
9999 mem: location 1461 is 1212
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1462
 104 run: reply result
9999 mem: location 1462 is 1215
9999 run: result 0 is 1215
9999 mem: storing 1215 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1209
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1209 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1209
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1209
9999 mem: location 1209 is 108
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1461 is 1209
9999 run: address to copy is 1210
9999 run: its type is address
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1462
 104 run: reply result
9999 mem: location 1462 is 1212
9999 run: result 0 is 1212
9999 mem: storing 1212 in location 1226
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1225 is 1215
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 4
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 103 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1215
9999 mem: location 1215 is 109
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1212
9999 mem: location 1225 is 1215
9999 run: address to copy is 1215
9999 run: its type is number
9999 mem: location 1215 is 109
9999 mem: storing 109 in location 1236
 103 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 109
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 104 run: c:character <- next-ingredient 
9999 mem: storing 109 in location 1502
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 104 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 109
9999 mem: storing 0 in location 1504
 104 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 104 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 109
9999 mem: storing 0 in location 1507
 104 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 104 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 109
9999 mem: storing 0 in location 1237
 103 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 103 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 109
9999 mem: location 1227 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 109 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 109
  90 print-character: 109 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 109
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 109
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 40
9999 mem: storing 1095 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1095
9999 mem: location 1095 is 9480
9999 mem: location 1096 is 245
9999 mem: location 1284 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 109
9999 mem: location 1285 is 1095
9999 mem: location 1285 is 1095
9999 mem: storing 109 in location 1095
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1095
9999 mem: location 1095 is 109
9999 mem: location 1096 is 245
9999 mem: location 1284 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1096
9999 mem: location 1286 is 1096
9999 mem: storing 7 in location 1096
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1225 is 1215
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1215 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1215
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1215
9999 mem: location 1215 is 109
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1212
9999 mem: location 1461 is 1215
9999 run: address to copy is 1216
9999 run: its type is address
9999 mem: location 1216 is 0
9999 mem: storing 0 in location 1462
 104 run: reply result
9999 mem: location 1462 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1225
 103 run: prev <- next-duplex prev
9999 mem: location 1226 is 1212
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1212 in location 1461
 104 run: jump-if in, 1:offset
9999 mem: location 1461 is 1212
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1461 is 1212
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1209
9999 mem: location 1461 is 1212
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1462
 104 run: reply result
9999 mem: location 1462 is 1215
9999 run: result 0 is 1215
9999 mem: storing 1215 in location 1226
 103 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1225 is 0
9999 run: jumping to instruction 67
 103 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1240
 103 run: *bottom-of-screen <- copy curr
9999 mem: location 1225 is 0
9999 mem: location 1240 is 1117
9999 mem: location 1240 is 1117
9999 mem: storing 0 in location 1117
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1229 is 1
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1241
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1234 is 0
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1242
 103 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1243
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1242 is 0
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1244
 103 run: break-unless before-cursor?, 
9999 mem: location 1244 is 0
9999 run: jumping to instruction 80
 103 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1228 is 4
9999 mem: location 1229 is 1
9999 mem: location 1220 is 1009
9999 mem: location 1221 is 1115
9999 run: result 0 is 4
9999 run: result 1 is 1
9999 mem: storing 4 in location 1161
9999 mem: storing 1 in location 1162
 102 run: clear-line-delimited screen, column, right
9999 mem: location 1157 is 1009
9999 mem: location 1162 is 1
9999 mem: location 1160 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 103 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1292
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 1
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 41
9999 mem: storing 1097 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1097
9999 mem: location 1097 is 9480
9999 mem: location 1098 is 245
9999 mem: location 1284 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1097
9999 mem: location 1285 is 1097
9999 mem: storing 32 in location 1097
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 245
9999 mem: location 1284 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1098
9999 mem: location 1286 is 1098
9999 mem: storing 7 in location 1098
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 1
9999 mem: storing 2 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 42
9999 mem: storing 1099 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1099
9999 mem: location 1099 is 9480
9999 mem: location 1100 is 245
9999 mem: location 1284 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1099
9999 mem: location 1285 is 1099
9999 mem: storing 32 in location 1099
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 245
9999 mem: location 1284 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1100
9999 mem: location 1286 is 1100
9999 mem: storing 7 in location 1100
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 43
9999 mem: storing 1101 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1101
9999 mem: location 1101 is 9480
9999 mem: location 1102 is 245
9999 mem: location 1284 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1101
9999 mem: location 1285 is 1101
9999 mem: storing 32 in location 1101
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 245
9999 mem: location 1284 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1102
9999 mem: location 1286 is 1102
9999 mem: storing 7 in location 1102
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
schedule: print-character/clear-line-delimited/editor-render/editor-event-loop/run1002/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 44
9999 mem: storing 1103 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1103
9999 mem: location 1103 is 9480
9999 mem: location 1104 is 245
9999 mem: location 1284 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1103
9999 mem: location 1285 is 1103
9999 mem: storing 32 in location 1103
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 245
9999 mem: location 1284 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1104
9999 mem: location 1286 is 1104
9999 mem: storing 7 in location 1104
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 102 run: row <- add row, 1
9999 mem: location 1161 is 4
9999 mem: storing 5 in location 1161
 102 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1157 is 1009
9999 mem: location 1161 is 5
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1317
 103 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1318
 103 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1319
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1320
 103 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1321
9999 mem: storing 1 in location 1322
 103 run: break-if style-found?, 
9999 mem: location 1322 is 1
9999 run: jumping to instruction 9
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 103 run: break-if color-found?, 
9999 mem: location 1324 is 0
9999 run: jump-if fell through
 103 run: color <- copy 245/grey
9999 mem: storing 245 in location 1323
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
 103 run: break-if bg-color-found?, 
9999 mem: location 1326 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1325
 103 run: screen <- move-cursor screen, row, x
9999 mem: location 1317 is 1009
9999 mem: location 1318 is 5
9999 mem: location 1319 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1248
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 104 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 104 run: *row <- copy new-row
9999 mem: location 1248 is 5
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 5 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 104 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1317
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 0
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 103 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1265 is 1009
 103 run: x <- add x, 1
9999 mem: location 1319 is 0
9999 mem: storing 1 in location 1319
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 1
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 103 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1265 is 1009
 103 run: x <- add x, 1
9999 mem: location 1319 is 1
9999 mem: storing 2 in location 1319
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 2
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 103 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1265 is 1009
 103 run: x <- add x, 1
9999 mem: location 1319 is 2
9999 mem: storing 3 in location 1319
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 3
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 103 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1265 is 1009
 103 run: x <- add x, 1
9999 mem: location 1319 is 3
9999 mem: storing 4 in location 1319
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 4
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 103 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1265 is 1009
 103 run: x <- add x, 1
9999 mem: location 1319 is 4
9999 mem: storing 5 in location 1319
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 5
9999 mem: location 1320 is 4
9999 mem: storing 0 in location 1327
 103 run: break-unless continue?, 
9999 mem: location 1327 is 0
9999 run: jumping to instruction 27
 102 run: row <- add row, 1
9999 mem: location 1161 is 5
9999 mem: storing 6 in location 1161
 102 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1157 is 1009
9999 mem: location 1161 is 6
9999 mem: location 1159 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1247
 103 run: row:number <- next-ingredient 
9999 mem: storing 6 in location 1248
 103 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1250
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 103 run: break-if screen, 
9999 mem: location 1247 is 1009
9999 run: jumping to instruction 10
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1247 is 1009
9999 mem: location 1248 is 6
9999 mem: location 1249 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1439
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1440
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1441
 104 run: break-unless sc, 
9999 mem: location 1439 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1439 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1439 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1442
 104 run: *row <- copy new-row
9999 mem: location 1440 is 6
9999 mem: location 1442 is 1011
9999 mem: location 1442 is 1011
9999 mem: storing 6 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1439 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1439 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1443
 104 run: *column <- copy new-column
9999 mem: location 1441 is 0
9999 mem: location 1443 is 1012
9999 mem: location 1443 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1439 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1247
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1247 is 1009
9999 mem: location 1249 is 0
9999 mem: location 1251 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 104 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1292
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 0
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 0
9999 mem: storing 1 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 1
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 1
9999 mem: storing 2 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 105 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 105 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1265 is 1009
 104 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 104 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 103 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1247 is 1009
9999 mem: location 1248 is 6
9999 mem: location 1250 is 0
9999 mem: location 1251 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1446
 104 run: row:number <- next-ingredient 
9999 mem: storing 6 in location 1447
 104 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1448
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1449
 104 run: row <- add row, 1
9999 mem: location 1447 is 6
9999 mem: storing 7 in location 1447
 104 run: screen <- move-cursor screen, row, left
9999 mem: location 1446 is 1009
9999 mem: location 1447 is 7
9999 mem: location 1448 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1439
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 7 in location 1440
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1441
 105 run: break-unless sc, 
9999 mem: location 1439 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1439 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1439 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1442
 105 run: *row <- copy new-row
9999 mem: location 1440 is 7
9999 mem: location 1442 is 1011
9999 mem: location 1442 is 1011
9999 mem: storing 7 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1439 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1439 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1443
 105 run: *column <- copy new-column
9999 mem: location 1441 is 0
9999 mem: location 1443 is 1012
9999 mem: location 1443 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1439 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1446
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1446 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1461
 105 run: break-unless sc, 
9999 mem: location 1461 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1461 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1461 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1462
 105 run: reply height
9999 mem: location 1462 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1450
 104 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1447 is 7
9999 mem: location 1450 is 5
9999 mem: storing 1 in location 1451
 104 run: break-if at-bottom-of-screen?, 
9999 mem: location 1451 is 1
9999 run: jumping to instruction 15
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1247 is 1009
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1457
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1457 in location 1317
 102 run: break-unless x, 
9999 mem: location 1317 is 1457
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1317 is 1457
9999 mem: location 1457 is 1
9999 mem: location 1458 is 1452
9999 mem: location 1317 is 1457
9999 run: address to copy is 1457
9999 mem: storing 1457 in location 1318
 102 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1317 is 1457
9999 mem: location 1457 is 1
9999 mem: location 1458 is 1452
9999 mem: location 1317 is 1457
9999 run: address to copy is 1458
9999 run: its type is address
9999 mem: location 1458 is 1452
9999 mem: storing 1452 in location 1319
 102 run: max:number <- length *buf
9999 mem: location 1319 is 1452
9999 mem: storing 1 in location 1320
 102 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1318 is 1457
9999 mem: location 1457 is 1
9999 mem: location 1320 is 1
9999 mem: storing 1 in location 1321
 102 run: break-unless done?, 
9999 mem: location 1321 is 1
9999 run: jump-unless fell through
 102 run: dummy:address:event <- new event:type
9999 mem: storing 1459 in location 1322
 102 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1322 is 1459
9999 mem: location 1459 is 0
9999 mem: location 1460 is 0
9999 mem: location 1461 is 0
9999 mem: location 1462 is 0
9999 mem: location 1317 is 1457
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1457
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: storing 1457 in location 1305
9999 mem: storing 1 in location 1311
9999 mem: storing 1 in location 1312
 101 run: loop-unless found?, 
9999 mem: location 1311 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?, 
9999 mem: location 1312 is 1
9999 run: jumping to instruction 25
  99 run: screen-should-contain [
    .          .
    .ij        .
    .k         .
    .l         .
    .m         .
  ]
  99 run: assume-console [
    press up-arrow
  ]
parse: instruction: press
parse:   ingredient: {name: "up-arrow", properties: ["up-arrow": ]}
  99 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1003
after-brace: editor-event-loop ...
  99 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1515
9999 mem: location 2 is 1115
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 100 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1304
 100 run: console:address <- next-ingredient 
9999 mem: storing 1515 in location 1305
 100 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1306
 100 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1515
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 101 run: x:address:console <- next-ingredient 
9999 mem: storing 1515 in location 1317
 101 run: break-unless x, 
9999 mem: location 1317 is 1515
9999 run: jump-unless fell through
 101 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1317 is 1515
9999 mem: location 1515 is 0
9999 mem: location 1516 is 1510
9999 mem: location 1317 is 1515
9999 run: address to copy is 1515
9999 mem: storing 1515 in location 1318
 101 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1317 is 1515
9999 mem: location 1515 is 0
9999 mem: location 1516 is 1510
9999 mem: location 1317 is 1515
9999 run: address to copy is 1516
9999 run: its type is address
9999 mem: location 1516 is 1510
9999 mem: storing 1510 in location 1319
 101 run: max:number <- length *buf
9999 mem: location 1319 is 1510
9999 mem: storing 1 in location 1320
 101 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1318 is 1515
9999 mem: location 1515 is 0
9999 mem: location 1320 is 1
9999 mem: storing 0 in location 1321
 101 run: break-unless done?, 
9999 mem: location 1321 is 0
9999 run: jumping to instruction 12
 101 run: result:event <- index *buf, *idx
9999 mem: location 1319 is 1510
9999 mem: location 1318 is 1515
9999 mem: location 1515 is 0
9999 run: address to copy is 1511
9999 run: its type is event
9999 mem: location 1511 is 1
9999 mem: location 1512 is 65517
9999 mem: location 1513 is 0
9999 mem: location 1514 is 0
9999 mem: storing 1 in location 1323
9999 mem: storing 65517 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
 101 run: *idx <- add *idx, 1
9999 mem: location 1318 is 1515
9999 mem: location 1515 is 0
9999 mem: location 1318 is 1515
9999 mem: storing 1 in location 1515
 101 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1323 is 1
9999 mem: location 1324 is 65517
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 mem: location 1317 is 1515
9999 run: result 0 is [1, 65517, 0, 0]
9999 run: result 1 is 1515
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1307
9999 mem: storing 65517 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: storing 1515 in location 1305
9999 mem: storing 1 in location 1311
9999 mem: storing 0 in location 1312
 100 run: loop-unless found?, 
9999 mem: location 1311 is 1
9999 run: jump-unless fell through
 100 run: break-if quit?, 
9999 mem: location 1312 is 0
9999 run: jump-if fell through
 100 run: trace 10, [app], [next-event]
  10 app: next-event 
 100 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1307 is 1
9999 mem: location 1308 is 65517
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: storing 0 in location 1313
 100 run: break-unless t, 
9999 mem: location 1313 is 0
9999 run: jumping to instruction 15
 100 run: break-if t, 
9999 mem: location 1313 is 0
9999 run: jump-if fell through
 100 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1304 is 1009
9999 mem: location 1306 is 1115
9999 mem: location 1307 is 1
9999 mem: location 1308 is 65517
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1330
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1331
 101 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1332
9999 mem: storing 65517 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: storing 0 in location 1335
 101 run: jump-if editor, 1:offset
9999 mem: location 1331 is 1115
9999 run: jumping to instruction 6
 101 run: screen-width:number <- screen-width screen
9999 mem: location 1330 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1517
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1519
 102 run: break-unless sc, 
9999 mem: location 1519 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1519 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1519 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1520
 102 run: reply width
9999 mem: location 1520 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1336
 101 run: screen-height:number <- screen-height screen
9999 mem: location 1330 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1519
 102 run: break-unless sc, 
9999 mem: location 1519 is 1009
9999 run: jump-unless fell through
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1519 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1519 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1520
 102 run: reply height
9999 mem: location 1520 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1337
 101 run: left:number <- get *editor, left:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1338
schedule: handle-keyboard-event/editor-event-loop/run1003/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 101 run: right:number <- get *editor, right:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1339
 101 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1340
 101 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1341
 101 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1342
 101 run: save-row:number <- copy *cursor-row
9999 mem: location 1341 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1341 is 1121
9999 mem: location 1341 is 1121
9999 mem: storing 1 in location 1343
 101 run: save-column:number <- copy *cursor-column
9999 mem: location 1342 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1342 is 1122
9999 mem: location 1342 is 1122
9999 mem: storing 0 in location 1344
 101 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1332 is 1
9999 mem: location 1333 is 65517
9999 mem: location 1334 is 0
9999 mem: location 1335 is 0
9999 mem: storing 0 in location 1345
 101 run: break-unless c, 
9999 mem: location 1345 is 0
9999 run: jumping to instruction 432
 101 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1332 is 1
9999 mem: location 1333 is 65517
9999 mem: location 1334 is 0
9999 mem: location 1335 is 0
9999 mem: storing 1333 in location 1400
 101 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1400 is 1333
 101 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 0 in location 1362
 101 run: break-unless page-up?, 
9999 mem: location 1362 is 0
9999 run: jumping to instruction 477
 101 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 0 in location 1378
 101 run: break-unless page-down?, 
9999 mem: location 1378 is 0
9999 run: jumping to instruction 519
 101 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 0 in location 1385
 101 run: break-unless move-to-end-of-line?, 
9999 mem: location 1385 is 0
9999 run: jumping to instruction 556
 101 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 0 in location 1386
 101 run: break-unless move-to-start-of-line?, 
9999 mem: location 1386 is 0
9999 run: jumping to instruction 593
 101 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 0 in location 1401
 101 run: break-unless move-to-next-line?, 
9999 mem: location 1401 is 0
9999 run: jumping to instruction 630
 101 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 1 in location 1402
 101 run: break-unless move-to-previous-line?, 
9999 mem: location 1402 is 1
9999 run: jump-unless fell through
 101 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1365
 101 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1366
 101 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1191
9999 mem: storing 1191 in location 1367
 101 run: editor, go-render? <- move-to-previous-line editor
9999 mem: location 1331 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 19
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1465
 102 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1466
 102 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1467
 102 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1468
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1469
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1470
 102 run: already-at-top?:boolean <- lesser-or-equal *cursor-row, 1/top
9999 mem: location 1466 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1471
 102 run: break-if already-at-top?, 
9999 mem: location 1471 is 1
9999 run: jumping to instruction 45
 102 run: break-unless already-at-top?, 
9999 mem: location 1471 is 1
9999 run: jump-unless fell through
 102 run: trace 10, [app], [scroll up]
  10 app: scroll up 
 102 run: top-of-screen:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1480
 102 run: old-top:address:duplex-list <- copy *top-of-screen
9999 mem: location 1480 is 1116
9999 mem: location 1116 is 1191
9999 mem: location 1480 is 1116
9999 mem: location 1480 is 1116
9999 mem: storing 1191 in location 1481
 102 run: *top-of-screen <- before-previous-line *top-of-screen, editor
9999 mem: location 1480 is 1116
9999 mem: location 1116 is 1191
9999 mem: location 1465 is 1115
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 13
 103 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1485
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1485 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1485 is 1191
9999 run: address to copy is 1191
9999 run: its type is number
9999 mem: location 1191 is 104
9999 mem: storing 104 in location 1486
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1487
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1487 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1487 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1488
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1487 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1487 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1489
 103 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1489 is 4
9999 mem: location 1488 is 0
9999 mem: storing 4 in location 1490
 103 run: sentinel:address:duplex-list <- get *editor, data:offset
9999 mem: location 1487 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1191
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1487 is 1115
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1163
9999 mem: storing 1163 in location 1491
 103 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1485 is 1191
9999 mem: location 1491 is 1163
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1157
 104 run: start:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1158
 104 run: result:number <- copy 0
9999 mem: storing 0 in location 1159
 104 run: jump-if curr, 1:offset
9999 mem: location 1157 is 1191
9999 run: jumping to instruction 6
 104 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1191
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 104 run: jump-unless at-start?, 1:offset
9999 mem: location 1160 is 0
9999 run: jumping to instruction 9
 104 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1191
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1519
 105 run: jump-if in, 1:offset
9999 mem: location 1519 is 1191
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1519 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1519 is 1191
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1188
9999 mem: storing 1188 in location 1520
 105 run: reply result
9999 mem: location 1520 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1157
 104 run: break-unless curr, 
9999 mem: location 1157 is 1188
9999 run: jump-unless fell through
 104 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1188
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 104 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1157 is 1188
9999 run: address to copy is 1188
9999 run: its type is number
9999 mem: location 1188 is 103
9999 mem: storing 103 in location 1161
 104 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 103
9999 mem: storing 0 in location 1162
 104 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 104 run: result <- add result, 1
9999 mem: location 1159 is 0
9999 mem: storing 1 in location 1159
 104 run: loop 
9999 run: jumping to instruction 10
 104 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1188
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1519
 105 run: jump-if in, 1:offset
9999 mem: location 1519 is 1188
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1519 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1519 is 1188
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1185
9999 mem: storing 1185 in location 1520
 105 run: reply result
9999 mem: location 1520 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1157
 104 run: break-unless curr, 
9999 mem: location 1157 is 1185
9999 run: jump-unless fell through
 104 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1185
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 104 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1157 is 1185
9999 run: address to copy is 1185
9999 run: its type is number
9999 mem: location 1185 is 102
9999 mem: storing 102 in location 1161
 104 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 102
9999 mem: storing 0 in location 1162
 104 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 104 run: result <- add result, 1
9999 mem: location 1159 is 1
9999 mem: storing 2 in location 1159
 104 run: loop 
9999 run: jumping to instruction 10
 104 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1185
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1519
 105 run: jump-if in, 1:offset
9999 mem: location 1519 is 1185
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1519 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1519 is 1185
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1182
9999 mem: storing 1182 in location 1520
 105 run: reply result
9999 mem: location 1520 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1157
 104 run: break-unless curr, 
9999 mem: location 1157 is 1182
9999 run: jump-unless fell through
 104 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1182
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 104 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1157 is 1182
9999 run: address to copy is 1182
9999 run: its type is number
9999 mem: location 1182 is 101
9999 mem: storing 101 in location 1161
 104 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 101
9999 mem: storing 0 in location 1162
 104 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 104 run: result <- add result, 1
9999 mem: location 1159 is 2
9999 mem: storing 3 in location 1159
 104 run: loop 
9999 run: jumping to instruction 10
 104 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1182
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1519
 105 run: jump-if in, 1:offset
9999 mem: location 1519 is 1182
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1519 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1519 is 1182
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1179
9999 mem: storing 1179 in location 1520
 105 run: reply result
9999 mem: location 1520 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1157
 104 run: break-unless curr, 
9999 mem: location 1157 is 1179
9999 run: jump-unless fell through
 104 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1179
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 104 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1157 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 100
9999 mem: storing 100 in location 1161
 104 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 100
9999 mem: storing 0 in location 1162
 104 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 104 run: result <- add result, 1
9999 mem: location 1159 is 3
9999 mem: storing 4 in location 1159
 104 run: loop 
9999 run: jumping to instruction 10
 104 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1179
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1519
 105 run: jump-if in, 1:offset
9999 mem: location 1519 is 1179
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1519 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1519 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1176
9999 mem: storing 1176 in location 1520
 105 run: reply result
9999 mem: location 1520 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1157
 104 run: break-unless curr, 
9999 mem: location 1157 is 1176
9999 run: jump-unless fell through
 104 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1176
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 104 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1157 is 1176
9999 run: address to copy is 1176
9999 run: its type is number
9999 mem: location 1176 is 99
9999 mem: storing 99 in location 1161
 104 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 99
9999 mem: storing 0 in location 1162
 104 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 104 run: result <- add result, 1
9999 mem: location 1159 is 4
9999 mem: storing 5 in location 1159
 104 run: loop 
9999 run: jumping to instruction 10
 104 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1176
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1519
 105 run: jump-if in, 1:offset
9999 mem: location 1519 is 1176
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1519 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1519 is 1176
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1173
9999 mem: storing 1173 in location 1520
 105 run: reply result
9999 mem: location 1520 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1157
 104 run: break-unless curr, 
9999 mem: location 1157 is 1173
9999 run: jump-unless fell through
 104 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1173
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 104 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1157 is 1173
9999 run: address to copy is 1173
9999 run: its type is number
9999 mem: location 1173 is 98
9999 mem: storing 98 in location 1161
 104 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 98
9999 mem: storing 0 in location 1162
 104 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 104 run: result <- add result, 1
9999 mem: location 1159 is 5
9999 mem: storing 6 in location 1159
 104 run: loop 
9999 run: jumping to instruction 10
 104 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1173
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1519
 105 run: jump-if in, 1:offset
9999 mem: location 1519 is 1173
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1519 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1519 is 1173
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1166
9999 mem: storing 1166 in location 1520
 105 run: reply result
9999 mem: location 1520 is 1166
9999 run: result 0 is 1166
9999 mem: storing 1166 in location 1157
 104 run: break-unless curr, 
9999 mem: location 1157 is 1166
9999 run: jump-unless fell through
 104 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1166
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 104 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1163
9999 mem: location 1157 is 1166
9999 run: address to copy is 1166
9999 run: its type is number
9999 mem: location 1166 is 97
9999 mem: storing 97 in location 1161
 104 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 97
9999 mem: storing 0 in location 1162
 104 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 104 run: result <- add result, 1
9999 mem: location 1159 is 6
9999 mem: storing 7 in location 1159
 104 run: loop 
9999 run: jumping to instruction 10
 104 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1166
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1166 in location 1519
 105 run: jump-if in, 1:offset
9999 mem: location 1519 is 1166
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1519 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1163
9999 mem: location 1519 is 1166
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1163
9999 mem: storing 1163 in location 1520
 105 run: reply result
9999 mem: location 1520 is 1163
9999 run: result 0 is 1163
9999 mem: storing 1163 in location 1157
 104 run: break-unless curr, 
9999 mem: location 1157 is 1163
9999 run: jump-unless fell through
 104 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1163
9999 mem: location 1158 is 1163
9999 mem: storing 1 in location 1160
 104 run: break-if at-start?, 
9999 mem: location 1160 is 1
9999 run: jumping to instruction 19
 104 run: reply result
9999 mem: location 1159 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1492
 103 run: break-if len, 
9999 mem: location 1492 is 7
9999 run: jumping to instruction 15
 103 run: _, max:number <- divide-with-remainder len, max-line-length
9999 mem: location 1492 is 7
9999 mem: location 1490 is 4
9999 mem: storing 3 in location 1494
 103 run: break-if max, 
9999 mem: location 1494 is 3
9999 run: jumping to instruction 20
 103 run: max <- add max, 1
9999 mem: location 1494 is 3
9999 mem: storing 4 in location 1494
 103 run: count:number <- copy 0
9999 mem: storing 0 in location 1495
 103 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1495 is 0
9999 mem: location 1494 is 4
9999 mem: storing 0 in location 1496
 103 run: break-if done?, 
9999 mem: location 1496 is 0
9999 run: jump-if fell through
 103 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1485 is 1191
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1519
 104 run: jump-if in, 1:offset
9999 mem: location 1519 is 1191
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1519 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1519 is 1191
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1188
9999 mem: storing 1188 in location 1520
 104 run: reply result
9999 mem: location 1520 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1493
 103 run: break-unless prev, 
9999 mem: location 1493 is 1188
9999 run: jump-unless fell through
 103 run: curr <- copy prev
9999 mem: location 1493 is 1188
9999 mem: storing 1188 in location 1485
 103 run: count <- add count, 1
9999 mem: location 1495 is 0
9999 mem: storing 1 in location 1495
 103 run: loop 
9999 run: jumping to instruction 24
 103 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1495 is 1
9999 mem: location 1494 is 4
9999 mem: storing 0 in location 1496
 103 run: break-if done?, 
9999 mem: location 1496 is 0
9999 run: jump-if fell through
 103 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1485 is 1188
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1519
 104 run: jump-if in, 1:offset
9999 mem: location 1519 is 1188
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1519 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1519 is 1188
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1185
9999 mem: storing 1185 in location 1520
 104 run: reply result
9999 mem: location 1520 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1493
 103 run: break-unless prev, 
9999 mem: location 1493 is 1185
9999 run: jump-unless fell through
 103 run: curr <- copy prev
9999 mem: location 1493 is 1185
9999 mem: storing 1185 in location 1485
 103 run: count <- add count, 1
9999 mem: location 1495 is 1
9999 mem: storing 2 in location 1495
 103 run: loop 
9999 run: jumping to instruction 24
 103 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1495 is 2
9999 mem: location 1494 is 4
9999 mem: storing 0 in location 1496
 103 run: break-if done?, 
9999 mem: location 1496 is 0
9999 run: jump-if fell through
 103 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1485 is 1185
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1519
 104 run: jump-if in, 1:offset
9999 mem: location 1519 is 1185
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1519 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1519 is 1185
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1182
9999 mem: storing 1182 in location 1520
 104 run: reply result
9999 mem: location 1520 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1493
 103 run: break-unless prev, 
9999 mem: location 1493 is 1182
9999 run: jump-unless fell through
 103 run: curr <- copy prev
9999 mem: location 1493 is 1182
9999 mem: storing 1182 in location 1485
 103 run: count <- add count, 1
9999 mem: location 1495 is 2
9999 mem: storing 3 in location 1495
 103 run: loop 
9999 run: jumping to instruction 24
 103 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1495 is 3
9999 mem: location 1494 is 4
9999 mem: storing 0 in location 1496
 103 run: break-if done?, 
9999 mem: location 1496 is 0
9999 run: jump-if fell through
 103 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1485 is 1182
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1519
 104 run: jump-if in, 1:offset
9999 mem: location 1519 is 1182
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1519 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1519 is 1182
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1179
9999 mem: storing 1179 in location 1520
 104 run: reply result
9999 mem: location 1520 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1493
 103 run: break-unless prev, 
9999 mem: location 1493 is 1179
9999 run: jump-unless fell through
 103 run: curr <- copy prev
9999 mem: location 1493 is 1179
9999 mem: storing 1179 in location 1485
 103 run: count <- add count, 1
9999 mem: location 1495 is 3
9999 mem: storing 4 in location 1495
 103 run: loop 
9999 run: jumping to instruction 24
 103 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1495 is 4
9999 mem: location 1494 is 4
9999 mem: storing 1 in location 1496
 103 run: break-if done?, 
9999 mem: location 1496 is 1
9999 run: jumping to instruction 31
 103 run: reply curr
9999 mem: location 1485 is 1179
9999 run: result 0 is 1179
9999 mem: location 1480 is 1116
9999 mem: storing 1179 in location 1116
 102 run: no-movement?:boolean <- equal old-top, *top-of-screen
9999 mem: location 1481 is 1191
9999 mem: location 1480 is 1116
9999 mem: location 1116 is 1179
9999 mem: storing 0 in location 1482
 102 run: jump-unless no-movement?, 1:offset
9999 mem: location 1482 is 0
9999 run: jumping to instruction 56
 102 run: reply editor/same-as-ingredient:0, 1/go-render
9999 mem: location 1465 is 1115
9999 run: result 0 is 1115
9999 run: result 1 is 1
9999 mem: storing 1115 in location 1331
9999 mem: storing 1 in location 1388
 101 run: undo-coalesce-tag:number <- copy 3/up-arrow
9999 mem: storing 3 in location 1368
 101 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1369
 101 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1370
 101 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1179
9999 mem: storing 1179 in location 1371
 101 run: break-unless undo-coalesce-tag, 
9999 mem: location 1368 is 3
9999 run: jump-unless fell through
 101 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1349
 101 run: break-unless *undo, 
9999 mem: location 1349 is 1124
9999 mem: location 1124 is 1497
9999 run: jump-unless fell through
 101 run: op:address:operation <- first *undo
9999 mem: location 1349 is 1124
9999 mem: location 1124 is 1497
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:list <- next-ingredient 
9999 mem: storing 1497 in location 1519
 102 run: result:location <- get *in, value:offset
9999 mem: location 1519 is 1497
9999 mem: location 1497 is 1426
9999 mem: location 1498 is 1424
9999 mem: location 1519 is 1497
9999 run: address to copy is 1497
9999 run: its type is number
9999 mem: location 1497 is 1426
9999 mem: storing 1426 in location 1520
 102 run: reply result
9999 mem: location 1520 is 1426
9999 run: result 0 is 1426
9999 mem: storing 1426 in location 1348
 101 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1348 is 1426
9999 mem: location 1426 is 1
9999 mem: location 1427 is 1
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1200
9999 mem: location 1430 is 1
9999 mem: location 1431 is 0
9999 mem: location 1432 is 1191
9999 mem: location 1433 is 3
9999 mem: location 1434 is 0
9999 mem: location 1435 is 0
9999 mem: location 1436 is 0
9999 mem: location 1348 is 1426
9999 mem: storing 1427 in location 1354
 101 run: break-unless move, 
9999 mem: location 1354 is 1427
9999 run: jump-unless fell through
 101 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1354 is 1427
9999 mem: location 1427 is 1
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1200
9999 mem: location 1430 is 1
9999 mem: location 1431 is 0
9999 mem: location 1432 is 1191
9999 mem: location 1433 is 3
9999 mem: location 1354 is 1427
9999 run: address to copy is 1433
9999 run: its type is number
9999 mem: location 1433 is 3
9999 mem: storing 3 in location 1372
 101 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1368 is 3
9999 mem: location 1372 is 3
9999 mem: storing 1 in location 1373
 101 run: break-unless coalesce?, 
9999 mem: location 1373 is 1
9999 run: jump-unless fell through
 101 run: after-row:address:number <- get-address *move, after-row:offset
9999 mem: location 1354 is 1427
9999 mem: location 1427 is 1
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1200
9999 mem: location 1430 is 1
9999 mem: location 1431 is 0
9999 mem: location 1432 is 1191
9999 mem: location 1433 is 3
9999 mem: location 1354 is 1427
9999 run: address to copy is 1430
9999 mem: storing 1430 in location 1374
 101 run: *after-row <- copy after-cursor-row
9999 mem: location 1369 is 1
9999 mem: location 1374 is 1430
9999 mem: location 1374 is 1430
9999 mem: storing 1 in location 1430
 101 run: after-column:address:number <- get-address *move, after-column:offset
9999 mem: location 1354 is 1427
9999 mem: location 1427 is 1
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1200
9999 mem: location 1430 is 1
9999 mem: location 1431 is 0
9999 mem: location 1432 is 1191
9999 mem: location 1433 is 3
9999 mem: location 1354 is 1427
9999 run: address to copy is 1431
9999 mem: storing 1431 in location 1375
 101 run: *after-column <- copy after-cursor-column
9999 mem: location 1370 is 0
9999 mem: location 1375 is 1431
9999 mem: location 1375 is 1431
9999 mem: storing 0 in location 1431
 101 run: after-top:address:number <- get-address *move, after-top-of-screen:offset
9999 mem: location 1354 is 1427
9999 mem: location 1427 is 1
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1200
9999 mem: location 1430 is 1
9999 mem: location 1431 is 0
9999 mem: location 1432 is 1191
9999 mem: location 1433 is 3
9999 mem: location 1354 is 1427
9999 run: address to copy is 1432
9999 mem: storing 1432 in location 1376
 101 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1179
9999 mem: location 1376 is 1432
9999 mem: storing 1179 in location 1432
 101 run: break +done-adding-move-operation:label
9999 run: jumping to instruction 748
 101 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1330 is 1009
9999 mem: location 1331 is 1115
9999 mem: location 1388 is 1
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 1
9999 mem: storing 1009 in location 1304
9999 mem: storing 1115 in location 1306
9999 mem: storing 1 in location 1314
 100 run: break-unless go-render?, 
9999 mem: location 1314 is 1
9999 run: jump-unless fell through
 100 run: editor-render screen, editor
9999 mem: location 1304 is 1009
9999 mem: location 1306 is 1115
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1157
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1158
 101 run: left:number <- get *editor, left:offset
9999 mem: location 1158 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1158 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1159
 101 run: right:number <- get *editor, right:offset
9999 mem: location 1158 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1158 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1160
 101 run: row:number, column:number <- render screen, editor
9999 mem: location 1157 is 1009
9999 mem: location 1158 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1220
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1221
 102 run: jump-if editor, 1:offset
9999 mem: location 1221 is 1115
9999 run: jumping to instruction 5
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1222
 102 run: screen-height:number <- screen-height screen
9999 mem: location 1220 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1519
 103 run: break-unless sc, 
9999 mem: location 1519 is 1009
9999 run: jump-unless fell through
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1519 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1519 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1520
 103 run: reply height
9999 mem: location 1520 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1223
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1224
 102 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1179
9999 mem: storing 1179 in location 1225
 102 run: prev:address:duplex-list <- copy curr
9999 mem: location 1225 is 1179
9999 mem: storing 1179 in location 1226
 102 run: curr <- next-duplex curr
9999 mem: location 1225 is 1179
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1179
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1519 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1225
 102 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1227
 102 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1228
 102 run: column:number <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 102 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1230
 102 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1231
 102 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1191
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1232
 102 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 1
9999 mem: location 1229 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1248
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 103 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 103 run: *row <- copy new-row
9999 mem: location 1248 is 1
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 1 in location 1011
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 103 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 102 run: break-unless curr, 
9999 mem: location 1225 is 1182
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 102 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1235
 102 run: break-unless at-cursor?, 
9999 mem: location 1235 is 1
9999 run: jump-unless fell through
 102 run: *before-cursor <- copy prev
9999 mem: location 1226 is 1179
9999 mem: location 1232 is 1118
9999 mem: location 1232 is 1118
9999 mem: storing 1179 in location 1118
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1225 is 1182
9999 run: address to copy is 1182
9999 run: its type is number
9999 mem: location 1182 is 101
9999 mem: storing 101 in location 1236
 102 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 101
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 103 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1502
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 101
9999 mem: storing 0 in location 1504
 103 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 103 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 101
9999 mem: storing 0 in location 1507
 103 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 103 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 103 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 101
9999 mem: storing 0 in location 1237
 102 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 102 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 102 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 101
9999 mem: location 1227 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 101
  90 print-character: 101 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 101
9999 mem: storing 0 in location 1276
 103 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 103 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1279
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 103 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 101
9999 mem: storing 0 in location 1282
 103 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 10
9999 mem: storing 1035 in location 1284
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1035
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1284 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1285
 103 run: *cursor-contents <- copy c
9999 mem: location 1266 is 101
9999 mem: location 1285 is 1035
9999 mem: location 1285 is 1035
9999 mem: storing 101 in location 1035
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1035
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1284 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1286
 103 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1036
9999 mem: location 1286 is 1036
9999 mem: storing 7 in location 1036
 103 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 103 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 102 run: curr <- next-duplex curr
9999 mem: location 1225 is 1182
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1182
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1519 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1225
 102 run: prev <- next-duplex prev
9999 mem: location 1226 is 1179
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1179
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1519 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1226
 102 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 102 run: loop 
9999 run: jumping to instruction 20
 102 run: break-unless curr, 
9999 mem: location 1225 is 1185
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 102 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 1
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1235
 102 run: break-unless at-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 30
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1225 is 1185
9999 run: address to copy is 1185
9999 run: its type is number
9999 mem: location 1185 is 102
9999 mem: storing 102 in location 1236
 102 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 102
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 103 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1502
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 102
9999 mem: storing 0 in location 1504
 103 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 103 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 102
9999 mem: storing 0 in location 1507
 103 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 103 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 103 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 102
9999 mem: storing 0 in location 1237
 102 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 102 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 102 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 102
9999 mem: location 1227 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 102
  90 print-character: 102 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
schedule: print-character/render/editor-render/editor-event-loop/run1003/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 102
9999 mem: storing 0 in location 1276
 103 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 103 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1279
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 103 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 102
9999 mem: storing 0 in location 1282
 103 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 11
9999 mem: storing 1037 in location 1284
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1037
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1284 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1285
 103 run: *cursor-contents <- copy c
9999 mem: location 1266 is 102
9999 mem: location 1285 is 1037
9999 mem: location 1285 is 1037
9999 mem: storing 102 in location 1037
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1037
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1284 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1286
 103 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1038
9999 mem: location 1286 is 1038
9999 mem: storing 7 in location 1038
 103 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 103 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 102 run: curr <- next-duplex curr
9999 mem: location 1225 is 1185
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1185
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1519 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1225
 102 run: prev <- next-duplex prev
9999 mem: location 1226 is 1182
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1182
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1519 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1226
 102 run: column <- add column, 1
9999 mem: location 1229 is 1
9999 mem: storing 2 in location 1229
 102 run: loop 
9999 run: jumping to instruction 20
 102 run: break-unless curr, 
9999 mem: location 1225 is 1188
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 102 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 2
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1235
 102 run: break-unless at-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 30
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1225 is 1188
9999 run: address to copy is 1188
9999 run: its type is number
9999 mem: location 1188 is 103
9999 mem: storing 103 in location 1236
 102 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 103
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 103 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1502
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 103
9999 mem: storing 0 in location 1504
 103 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 103 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 103
9999 mem: storing 0 in location 1507
 103 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 103 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 103 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 103
9999 mem: storing 0 in location 1237
 102 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 2
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 102 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 102 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 103
9999 mem: location 1227 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 103
  90 print-character: 103 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 103
9999 mem: storing 0 in location 1276
 103 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 103 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1279
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 103 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 103
9999 mem: storing 0 in location 1282
 103 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 12
9999 mem: storing 1039 in location 1284
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1284 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1285
 103 run: *cursor-contents <- copy c
9999 mem: location 1266 is 103
9999 mem: location 1285 is 1039
9999 mem: location 1285 is 1039
9999 mem: storing 103 in location 1039
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1039
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1284 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1286
 103 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1040
9999 mem: location 1286 is 1040
9999 mem: storing 7 in location 1040
 103 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 103 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 102 run: curr <- next-duplex curr
9999 mem: location 1225 is 1188
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1188
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1519 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1225
 102 run: prev <- next-duplex prev
9999 mem: location 1226 is 1185
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1185
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1519 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1226
 102 run: column <- add column, 1
9999 mem: location 1229 is 2
9999 mem: storing 3 in location 1229
 102 run: loop 
9999 run: jumping to instruction 20
 102 run: break-unless curr, 
9999 mem: location 1225 is 1191
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 102 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 3
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1235
 102 run: break-unless at-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 30
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1225 is 1191
9999 run: address to copy is 1191
9999 run: its type is number
9999 mem: location 1191 is 104
9999 mem: storing 104 in location 1236
 102 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 104
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 103 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1502
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 104
9999 mem: storing 0 in location 1504
 103 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 103 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 104
9999 mem: storing 0 in location 1507
 103 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 103 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 103 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 104
9999 mem: storing 0 in location 1237
 102 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 3
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 102 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 102 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 104
9999 mem: location 1227 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 104
  90 print-character: 104 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 104
9999 mem: storing 0 in location 1276
 103 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 103 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1279
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 103 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 104
9999 mem: storing 0 in location 1282
 103 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 13
9999 mem: storing 1041 in location 1284
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1284 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1285
 103 run: *cursor-contents <- copy c
9999 mem: location 1266 is 104
9999 mem: location 1285 is 1041
9999 mem: location 1285 is 1041
9999 mem: storing 104 in location 1041
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1041
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1284 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1286
 103 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1042
9999 mem: location 1286 is 1042
9999 mem: storing 7 in location 1042
 103 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 103 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 102 run: curr <- next-duplex curr
9999 mem: location 1225 is 1191
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1191
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1519 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1225
 102 run: prev <- next-duplex prev
9999 mem: location 1226 is 1188
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1188
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1519 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1226
 102 run: column <- add column, 1
9999 mem: location 1229 is 3
9999 mem: storing 4 in location 1229
 102 run: loop 
9999 run: jumping to instruction 20
 102 run: break-unless curr, 
9999 mem: location 1225 is 1194
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 102 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 4
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1235
 102 run: break-unless at-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 30
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1225 is 1194
9999 run: address to copy is 1194
9999 run: its type is number
9999 mem: location 1194 is 105
9999 mem: storing 105 in location 1236
 102 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 105
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 103 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1502
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 105
9999 mem: storing 0 in location 1504
 103 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 103 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 105
9999 mem: storing 0 in location 1507
 103 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 103 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 103 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 105
9999 mem: storing 0 in location 1237
 102 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 4
9999 mem: location 1224 is 4
9999 mem: storing 1 in location 1239
 102 run: break-unless at-right?, 
9999 mem: location 1239 is 1
9999 run: jump-unless fell through
 102 run: print-character screen, 8617/loop-back-to-left, 245/grey
9999 mem: location 1220 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 8617
  90 print-character: 8617 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 8617
9999 mem: storing 0 in location 1276
 103 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 103 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1279
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 103 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 8617
9999 mem: storing 0 in location 1282
 103 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 14
9999 mem: storing 1043 in location 1284
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1284 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1285
 103 run: *cursor-contents <- copy c
9999 mem: location 1266 is 8617
9999 mem: location 1285 is 1043
9999 mem: location 1285 is 1043
9999 mem: storing 8617 in location 1043
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1043
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 7
9999 mem: location 1284 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1286
 103 run: *cursor-color <- copy color
9999 mem: location 1267 is 245
9999 mem: location 1286 is 1044
9999 mem: location 1286 is 1044
9999 mem: storing 245 in location 1044
 103 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 103 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 102 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 102 run: row <- add row, 1
9999 mem: location 1228 is 1
9999 mem: storing 2 in location 1228
 102 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 2
9999 mem: location 1229 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1248
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 103 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 103 run: *row <- copy new-row
9999 mem: location 1248 is 2
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 2 in location 1011
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 103 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 102 run: loop +next-character:label
9999 run: jumping to instruction 21
 102 run: break-unless curr, 
9999 mem: location 1225 is 1194
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 102 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1225 is 1194
9999 run: address to copy is 1194
9999 run: its type is number
9999 mem: location 1194 is 105
9999 mem: storing 105 in location 1236
 102 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 105
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 103 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1502
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 105
9999 mem: storing 0 in location 1504
 103 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 103 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 105
9999 mem: storing 0 in location 1507
 103 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 103 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 103 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 105
9999 mem: storing 0 in location 1237
 102 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 102 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 102 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 105
9999 mem: location 1227 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 105
  90 print-character: 105 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 105
9999 mem: storing 0 in location 1276
 103 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 103 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1279
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 103 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 105
9999 mem: storing 0 in location 1282
 103 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 20
9999 mem: storing 1055 in location 1284
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1055
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1284 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1285
 103 run: *cursor-contents <- copy c
9999 mem: location 1266 is 105
9999 mem: location 1285 is 1055
9999 mem: location 1285 is 1055
9999 mem: storing 105 in location 1055
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1055
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1284 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1286
 103 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1056
9999 mem: location 1286 is 1056
9999 mem: storing 7 in location 1056
 103 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 103 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 102 run: curr <- next-duplex curr
9999 mem: location 1225 is 1194
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1194
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1519 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1225
 102 run: prev <- next-duplex prev
9999 mem: location 1226 is 1191
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1191
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1519 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1226
 102 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 102 run: loop 
9999 run: jumping to instruction 20
 102 run: break-unless curr, 
9999 mem: location 1225 is 1197
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 102 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1225 is 1197
9999 run: address to copy is 1197
9999 run: its type is number
9999 mem: location 1197 is 106
9999 mem: storing 106 in location 1236
schedule: render/editor-render/editor-event-loop/run1003/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 102 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 106
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 103 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1502
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 106
9999 mem: storing 0 in location 1504
 103 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 103 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 106
9999 mem: storing 0 in location 1507
 103 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 103 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 103 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 106
9999 mem: storing 0 in location 1237
 102 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 102 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 102 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 106
9999 mem: location 1227 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 106
  90 print-character: 106 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 106
9999 mem: storing 0 in location 1276
 103 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 103 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1279
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 103 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 106
9999 mem: storing 0 in location 1282
 103 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 21
9999 mem: storing 1057 in location 1284
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1284 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1285
 103 run: *cursor-contents <- copy c
9999 mem: location 1266 is 106
9999 mem: location 1285 is 1057
9999 mem: location 1285 is 1057
9999 mem: storing 106 in location 1057
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1057
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1284 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1286
 103 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1058
9999 mem: location 1286 is 1058
9999 mem: storing 7 in location 1058
 103 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 103 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 102 run: curr <- next-duplex curr
9999 mem: location 1225 is 1197
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1197
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1519 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1225
 102 run: prev <- next-duplex prev
9999 mem: location 1226 is 1194
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1194
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1519 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1226
 102 run: column <- add column, 1
9999 mem: location 1229 is 1
9999 mem: storing 2 in location 1229
 102 run: loop 
9999 run: jumping to instruction 20
 102 run: break-unless curr, 
9999 mem: location 1225 is 1200
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 102 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1225 is 1200
9999 run: address to copy is 1200
9999 run: its type is number
9999 mem: location 1200 is 10
9999 mem: storing 10 in location 1236
 102 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 103 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1502
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 10
9999 mem: storing 0 in location 1504
 103 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 103 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 10
9999 mem: storing 0 in location 1507
 103 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 103 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 103 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 102 run: break-unless newline?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 44
 102 run: clear-line-delimited screen, column, right
9999 mem: location 1220 is 1009
9999 mem: location 1229 is 2
9999 mem: location 1224 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 103 run: column:number <- next-ingredient 
9999 mem: storing 2 in location 1292
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 22
9999 mem: storing 1059 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1284 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1059
9999 mem: location 1285 is 1059
9999 mem: storing 32 in location 1059
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1284 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1060
9999 mem: location 1286 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 23
9999 mem: storing 1061 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1284 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1061
9999 mem: location 1285 is 1061
9999 mem: storing 32 in location 1061
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1284 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1062
9999 mem: location 1286 is 1062
9999 mem: storing 7 in location 1062
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 24
9999 mem: storing 1063 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1284 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1063
9999 mem: location 1285 is 1063
9999 mem: storing 32 in location 1063
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1284 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1064
9999 mem: location 1286 is 1064
9999 mem: storing 7 in location 1064
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 102 run: row <- add row, 1
9999 mem: location 1228 is 2
9999 mem: storing 3 in location 1228
 102 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 102 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 3
9999 mem: location 1229 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1248
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 103 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 103 run: *row <- copy new-row
9999 mem: location 1248 is 3
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 3 in location 1011
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 103 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 102 run: curr <- next-duplex curr
9999 mem: location 1225 is 1200
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1200
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1519 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1225
 102 run: prev <- next-duplex prev
9999 mem: location 1226 is 1197
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1197
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1519 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1226
 102 run: loop +next-character:label
9999 run: jumping to instruction 21
 102 run: break-unless curr, 
9999 mem: location 1225 is 1203
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 3
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 102 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1225 is 1203
9999 run: address to copy is 1203
9999 run: its type is number
9999 mem: location 1203 is 107
9999 mem: storing 107 in location 1236
 102 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 107
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 103 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1502
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 107
9999 mem: storing 0 in location 1504
 103 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 103 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 107
9999 mem: storing 0 in location 1507
 103 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 103 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 103 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 107
9999 mem: storing 0 in location 1237
 102 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 102 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 102 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 107
9999 mem: location 1227 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 107
  90 print-character: 107 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 107
9999 mem: storing 0 in location 1276
 103 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 103 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1279
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 103 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 107
9999 mem: storing 0 in location 1282
 103 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 30
9999 mem: storing 1075 in location 1284
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1075
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1284 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1285
 103 run: *cursor-contents <- copy c
9999 mem: location 1266 is 107
9999 mem: location 1285 is 1075
9999 mem: location 1285 is 1075
9999 mem: storing 107 in location 1075
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1075
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1284 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1286
 103 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1076
9999 mem: location 1286 is 1076
9999 mem: storing 7 in location 1076
 103 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 103 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 102 run: curr <- next-duplex curr
9999 mem: location 1225 is 1203
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1203
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1519 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1225
 102 run: prev <- next-duplex prev
9999 mem: location 1226 is 1200
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1200
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1519 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1226
 102 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 102 run: loop 
9999 run: jumping to instruction 20
 102 run: break-unless curr, 
9999 mem: location 1225 is 1206
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 3
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 102 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1225 is 1206
9999 run: address to copy is 1206
9999 run: its type is number
9999 mem: location 1206 is 10
9999 mem: storing 10 in location 1236
 102 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 103 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1502
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 10
9999 mem: storing 0 in location 1504
 103 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 103 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 10
9999 mem: storing 0 in location 1507
 103 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 103 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 103 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 102 run: break-unless newline?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 44
 102 run: clear-line-delimited screen, column, right
9999 mem: location 1220 is 1009
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
schedule: clear-line-delimited/render/editor-render/editor-event-loop/run1003/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 103 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1292
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 1
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 31
9999 mem: storing 1077 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1284 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1077
9999 mem: location 1285 is 1077
9999 mem: storing 32 in location 1077
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1284 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1078
9999 mem: location 1286 is 1078
9999 mem: storing 7 in location 1078
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 1
9999 mem: storing 2 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 32
9999 mem: storing 1079 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1284 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1079
9999 mem: location 1285 is 1079
9999 mem: storing 32 in location 1079
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1284 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1080
9999 mem: location 1286 is 1080
9999 mem: storing 7 in location 1080
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 33
9999 mem: storing 1081 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1284 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1081
9999 mem: location 1285 is 1081
9999 mem: storing 32 in location 1081
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1284 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1082
9999 mem: location 1286 is 1082
9999 mem: storing 7 in location 1082
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 34
9999 mem: storing 1083 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1284 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1083
9999 mem: location 1285 is 1083
9999 mem: storing 32 in location 1083
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1284 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1084
9999 mem: location 1286 is 1084
9999 mem: storing 7 in location 1084
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 102 run: row <- add row, 1
9999 mem: location 1228 is 3
9999 mem: storing 4 in location 1228
 102 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 102 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 4
9999 mem: location 1229 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1248
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 103 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 103 run: *row <- copy new-row
9999 mem: location 1248 is 4
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 4 in location 1011
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 103 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 102 run: curr <- next-duplex curr
9999 mem: location 1225 is 1206
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1206
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1519 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1209
9999 run: result 0 is 1209
9999 mem: storing 1209 in location 1225
 102 run: prev <- next-duplex prev
9999 mem: location 1226 is 1203
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1203
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1519 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1226
 102 run: loop +next-character:label
9999 run: jumping to instruction 21
 102 run: break-unless curr, 
9999 mem: location 1225 is 1209
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 4
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 102 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1209
9999 mem: location 1209 is 108
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1225 is 1209
9999 run: address to copy is 1209
9999 run: its type is number
9999 mem: location 1209 is 108
9999 mem: storing 108 in location 1236
 102 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 108
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 103 run: c:character <- next-ingredient 
9999 mem: storing 108 in location 1502
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 108
9999 mem: storing 0 in location 1504
 103 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 103 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 108
9999 mem: storing 0 in location 1507
 103 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 103 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 103 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 108
9999 mem: storing 0 in location 1237
 102 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 102 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 102 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 108
9999 mem: location 1227 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 108 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 108
  90 print-character: 108 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 108
9999 mem: storing 0 in location 1276
 103 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 103 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1279
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 103 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 108
9999 mem: storing 0 in location 1282
 103 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 40
9999 mem: storing 1095 in location 1284
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1095
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1284 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1285
 103 run: *cursor-contents <- copy c
9999 mem: location 1266 is 108
9999 mem: location 1285 is 1095
9999 mem: location 1285 is 1095
9999 mem: storing 108 in location 1095
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1095
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1284 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1286
 103 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1096
9999 mem: location 1286 is 1096
9999 mem: storing 7 in location 1096
 103 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 103 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 102 run: curr <- next-duplex curr
9999 mem: location 1225 is 1209
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1209 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1209
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1209
9999 mem: location 1209 is 108
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1519 is 1209
9999 run: address to copy is 1210
9999 run: its type is address
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1212
9999 run: result 0 is 1212
9999 mem: storing 1212 in location 1225
 102 run: prev <- next-duplex prev
9999 mem: location 1226 is 1206
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1206
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1519 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1209
9999 run: result 0 is 1209
9999 mem: storing 1209 in location 1226
 102 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 102 run: loop 
9999 run: jumping to instruction 20
 102 run: break-unless curr, 
9999 mem: location 1225 is 1212
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 4
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 102 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1212
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1209
9999 mem: location 1225 is 1212
9999 run: address to copy is 1212
9999 run: its type is number
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1236
 102 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 103 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1502
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 10
9999 mem: storing 0 in location 1504
 103 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 103 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 103 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 10
9999 mem: storing 0 in location 1507
 103 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 103 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 103 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 102 run: break-unless newline?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 44
 102 run: clear-line-delimited screen, column, right
9999 mem: location 1220 is 1009
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 103 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1292
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 1
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 41
9999 mem: storing 1097 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1284 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1097
9999 mem: location 1285 is 1097
9999 mem: storing 32 in location 1097
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1284 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1098
9999 mem: location 1286 is 1098
9999 mem: storing 7 in location 1098
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 1
9999 mem: storing 2 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
schedule: print-character/clear-line-delimited/render/editor-render/editor-event-loop/run1003/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 42
9999 mem: storing 1099 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1284 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1099
9999 mem: location 1285 is 1099
9999 mem: storing 32 in location 1099
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1284 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1100
9999 mem: location 1286 is 1100
9999 mem: storing 7 in location 1100
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 43
9999 mem: storing 1101 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1284 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1101
9999 mem: location 1285 is 1101
9999 mem: storing 32 in location 1101
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1284 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1102
9999 mem: location 1286 is 1102
9999 mem: storing 7 in location 1102
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 104 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 104 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1279
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 104 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 104 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 44
9999 mem: storing 1103 in location 1284
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1284 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1285
 104 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1103
9999 mem: location 1285 is 1103
9999 mem: storing 32 in location 1103
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1284 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1286
 104 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1104
9999 mem: location 1286 is 1104
9999 mem: storing 7 in location 1104
 104 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 104 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 102 run: row <- add row, 1
9999 mem: location 1228 is 4
9999 mem: storing 5 in location 1228
 102 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 102 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 5
9999 mem: location 1229 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1248
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 103 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 103 run: *row <- copy new-row
9999 mem: location 1248 is 5
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 5 in location 1011
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 103 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 102 run: curr <- next-duplex curr
9999 mem: location 1225 is 1212
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1212 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1212
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1212
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1209
9999 mem: location 1519 is 1212
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1215
9999 run: result 0 is 1215
9999 mem: storing 1215 in location 1225
 102 run: prev <- next-duplex prev
9999 mem: location 1226 is 1209
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1209 in location 1519
 103 run: jump-if in, 1:offset
9999 mem: location 1519 is 1209
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1519 is 1209
9999 mem: location 1209 is 108
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1519 is 1209
9999 run: address to copy is 1210
9999 run: its type is address
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1520
 103 run: reply result
9999 mem: location 1520 is 1212
9999 run: result 0 is 1212
9999 mem: storing 1212 in location 1226
 102 run: loop +next-character:label
9999 run: jumping to instruction 21
 102 run: break-unless curr, 
9999 mem: location 1225 is 1215
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 5
9999 mem: location 1223 is 5
9999 mem: storing 1 in location 1233
 102 run: break-if off-screen?, 
9999 mem: location 1233 is 1
9999 run: jumping to instruction 67
 102 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1240
 102 run: *bottom-of-screen <- copy curr
9999 mem: location 1225 is 1215
9999 mem: location 1240 is 1117
9999 mem: location 1240 is 1117
9999 mem: storing 1215 in location 1117
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 5
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 102 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1241
 102 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1234 is 0
9999 mem: location 1241 is 1
9999 mem: storing 0 in location 1242
 102 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1228 is 5
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1243
 102 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1242 is 0
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1244
 102 run: break-unless before-cursor?, 
9999 mem: location 1244 is 0
9999 run: jumping to instruction 80
 102 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1228 is 5
9999 mem: location 1229 is 0
9999 mem: location 1220 is 1009
9999 mem: location 1221 is 1115
9999 run: result 0 is 5
9999 run: result 1 is 0
9999 mem: storing 5 in location 1161
9999 mem: storing 0 in location 1162
 101 run: clear-line-delimited screen, column, right
9999 mem: location 1157 is 1009
9999 mem: location 1162 is 0
9999 mem: location 1160 is 4
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 102 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1292
 102 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 0
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 0
9999 mem: storing 1 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 1
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 1
9999 mem: storing 2 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 101 run: row <- add row, 1
9999 mem: location 1161 is 5
9999 mem: storing 6 in location 1161
 101 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1157 is 1009
9999 mem: location 1161 is 6
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1317
 102 run: row:number <- next-ingredient 
9999 mem: storing 6 in location 1318
 102 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1319
 102 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1320
 102 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1321
9999 mem: storing 1 in location 1322
 102 run: break-if style-found?, 
9999 mem: location 1322 is 1
9999 run: jumping to instruction 9
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 102 run: break-if color-found?, 
9999 mem: location 1324 is 0
9999 run: jump-if fell through
 102 run: color <- copy 245/grey
9999 mem: storing 245 in location 1323
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
 102 run: break-if bg-color-found?, 
9999 mem: location 1326 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1325
 102 run: screen <- move-cursor screen, row, x
9999 mem: location 1317 is 1009
9999 mem: location 1318 is 6
9999 mem: location 1319 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1248
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 103 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 103 run: *row <- copy new-row
9999 mem: location 1248 is 6
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 6 in location 1011
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 103 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1317
 102 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 0
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 102 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 102 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1265 is 1009
 102 run: x <- add x, 1
9999 mem: location 1319 is 0
9999 mem: storing 1 in location 1319
 102 run: loop 
9999 run: jumping to instruction 22
 102 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 1
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 102 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 102 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1265 is 1009
 102 run: x <- add x, 1
9999 mem: location 1319 is 1
9999 mem: storing 2 in location 1319
 102 run: loop 
9999 run: jumping to instruction 22
 102 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 2
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 102 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 102 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1265 is 1009
 102 run: x <- add x, 1
9999 mem: location 1319 is 2
9999 mem: storing 3 in location 1319
 102 run: loop 
9999 run: jumping to instruction 22
 102 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 3
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 102 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 102 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1265 is 1009
 102 run: x <- add x, 1
9999 mem: location 1319 is 3
9999 mem: storing 4 in location 1319
 102 run: loop 
9999 run: jumping to instruction 22
 102 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 4
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 102 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 102 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
schedule: print-character/draw-horizontal/editor-render/editor-event-loop/run1003/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1265 is 1009
 102 run: x <- add x, 1
9999 mem: location 1319 is 4
9999 mem: storing 5 in location 1319
 102 run: loop 
9999 run: jumping to instruction 22
 102 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 5
9999 mem: location 1320 is 4
9999 mem: storing 0 in location 1327
 102 run: break-unless continue?, 
9999 mem: location 1327 is 0
9999 run: jumping to instruction 27
 101 run: row <- add row, 1
9999 mem: location 1161 is 6
9999 mem: storing 7 in location 1161
 101 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1157 is 1009
9999 mem: location 1161 is 7
9999 mem: location 1159 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1247
 102 run: row:number <- next-ingredient 
9999 mem: storing 7 in location 1248
 102 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1250
 102 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 102 run: break-if screen, 
9999 mem: location 1247 is 1009
9999 run: jumping to instruction 10
 102 run: screen <- move-cursor screen, row, column
9999 mem: location 1247 is 1009
9999 mem: location 1248 is 7
9999 mem: location 1249 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1439
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 7 in location 1440
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1441
 103 run: break-unless sc, 
9999 mem: location 1439 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1439 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1439 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1442
 103 run: *row <- copy new-row
9999 mem: location 1440 is 7
9999 mem: location 1442 is 1011
9999 mem: location 1442 is 1011
9999 mem: storing 7 in location 1011
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1439 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1439 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1443
 103 run: *column <- copy new-column
9999 mem: location 1441 is 0
9999 mem: location 1443 is 1012
9999 mem: location 1443 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1439 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1247
 102 run: clear-line-delimited screen, column, right
9999 mem: location 1247 is 1009
9999 mem: location 1249 is 0
9999 mem: location 1251 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 103 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1292
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 0
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 0
9999 mem: storing 1 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 1
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 1
9999 mem: storing 2 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 104 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 104 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 104 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1265 is 1009
 103 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 103 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 102 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1247 is 1009
9999 mem: location 1248 is 7
9999 mem: location 1250 is 0
9999 mem: location 1251 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1446
 103 run: row:number <- next-ingredient 
9999 mem: storing 7 in location 1447
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1448
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1449
 103 run: row <- add row, 1
9999 mem: location 1447 is 7
9999 mem: storing 8 in location 1447
 103 run: screen <- move-cursor screen, row, left
9999 mem: location 1446 is 1009
9999 mem: location 1447 is 8
9999 mem: location 1448 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1439
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 8 in location 1440
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1441
 104 run: break-unless sc, 
9999 mem: location 1439 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1439 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1439 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1442
 104 run: *row <- copy new-row
9999 mem: location 1440 is 8
9999 mem: location 1442 is 1011
9999 mem: location 1442 is 1011
9999 mem: storing 8 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1439 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1439 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1443
 104 run: *column <- copy new-column
9999 mem: location 1441 is 0
9999 mem: location 1443 is 1012
9999 mem: location 1443 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1439 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1446
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1446 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1519
 104 run: break-unless sc, 
9999 mem: location 1519 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1519 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1519 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1520
 104 run: reply height
9999 mem: location 1520 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1450
 103 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1447 is 8
9999 mem: location 1450 is 5
9999 mem: storing 1 in location 1451
 103 run: break-if at-bottom-of-screen?, 
9999 mem: location 1451 is 1
9999 run: jumping to instruction 15
 102 run: reply screen/same-as-ingredient:0
9999 mem: location 1247 is 1009
 100 run: loop 
9999 run: jumping to instruction 5
 100 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1515
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 101 run: x:address:console <- next-ingredient 
9999 mem: storing 1515 in location 1317
 101 run: break-unless x, 
9999 mem: location 1317 is 1515
9999 run: jump-unless fell through
 101 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1317 is 1515
9999 mem: location 1515 is 1
9999 mem: location 1516 is 1510
9999 mem: location 1317 is 1515
9999 run: address to copy is 1515
9999 mem: storing 1515 in location 1318
 101 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1317 is 1515
9999 mem: location 1515 is 1
9999 mem: location 1516 is 1510
9999 mem: location 1317 is 1515
9999 run: address to copy is 1516
9999 run: its type is address
9999 mem: location 1516 is 1510
9999 mem: storing 1510 in location 1319
 101 run: max:number <- length *buf
9999 mem: location 1319 is 1510
9999 mem: storing 1 in location 1320
 101 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1318 is 1515
9999 mem: location 1515 is 1
9999 mem: location 1320 is 1
9999 mem: storing 1 in location 1321
 101 run: break-unless done?, 
9999 mem: location 1321 is 1
9999 run: jump-unless fell through
 101 run: dummy:address:event <- new event:type
9999 mem: storing 1517 in location 1322
 101 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1322 is 1517
9999 mem: location 1517 is 0
9999 mem: location 1518 is 0
9999 mem: location 1519 is 0
9999 mem: location 1520 is 0
9999 mem: location 1317 is 1515
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1515
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: storing 1515 in location 1305
9999 mem: storing 1 in location 1311
9999 mem: storing 1 in location 1312
 100 run: loop-unless found?, 
9999 mem: location 1311 is 1
9999 run: jump-unless fell through
 100 run: break-if quit?, 
9999 mem: location 1312 is 1
9999 run: jumping to instruction 25
  98 run: screen-should-contain [
    .          .
    .efgh↩     .
    .ij        .
    .k         .
    .l         .
  ]
  98 run: assume-console [
    press up-arrow
  ]
parse: instruction: press
parse:   ingredient: {name: "up-arrow", properties: ["up-arrow": ]}
  98 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1004
after-brace: editor-event-loop ...
  98 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1526
9999 mem: location 2 is 1115
  99 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
  99 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1304
  99 run: console:address <- next-ingredient 
9999 mem: storing 1526 in location 1305
  99 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1306
  99 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1526
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 100 run: x:address:console <- next-ingredient 
9999 mem: storing 1526 in location 1317
 100 run: break-unless x, 
9999 mem: location 1317 is 1526
9999 run: jump-unless fell through
 100 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1317 is 1526
9999 mem: location 1526 is 0
9999 mem: location 1527 is 1521
9999 mem: location 1317 is 1526
9999 run: address to copy is 1526
9999 mem: storing 1526 in location 1318
 100 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1317 is 1526
9999 mem: location 1526 is 0
9999 mem: location 1527 is 1521
9999 mem: location 1317 is 1526
9999 run: address to copy is 1527
9999 run: its type is address
9999 mem: location 1527 is 1521
9999 mem: storing 1521 in location 1319
 100 run: max:number <- length *buf
9999 mem: location 1319 is 1521
9999 mem: storing 1 in location 1320
 100 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1318 is 1526
9999 mem: location 1526 is 0
9999 mem: location 1320 is 1
9999 mem: storing 0 in location 1321
 100 run: break-unless done?, 
9999 mem: location 1321 is 0
9999 run: jumping to instruction 12
 100 run: result:event <- index *buf, *idx
9999 mem: location 1319 is 1521
9999 mem: location 1318 is 1526
9999 mem: location 1526 is 0
9999 run: address to copy is 1522
9999 run: its type is event
9999 mem: location 1522 is 1
9999 mem: location 1523 is 65517
9999 mem: location 1524 is 0
9999 mem: location 1525 is 0
9999 mem: storing 1 in location 1323
9999 mem: storing 65517 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
 100 run: *idx <- add *idx, 1
9999 mem: location 1318 is 1526
9999 mem: location 1526 is 0
9999 mem: location 1318 is 1526
9999 mem: storing 1 in location 1526
 100 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1323 is 1
9999 mem: location 1324 is 65517
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 mem: location 1317 is 1526
9999 run: result 0 is [1, 65517, 0, 0]
9999 run: result 1 is 1526
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1307
9999 mem: storing 65517 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: storing 1526 in location 1305
9999 mem: storing 1 in location 1311
9999 mem: storing 0 in location 1312
  99 run: loop-unless found?, 
9999 mem: location 1311 is 1
9999 run: jump-unless fell through
  99 run: break-if quit?, 
9999 mem: location 1312 is 0
9999 run: jump-if fell through
  99 run: trace 10, [app], [next-event]
  10 app: next-event 
  99 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1307 is 1
9999 mem: location 1308 is 65517
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: storing 0 in location 1313
  99 run: break-unless t, 
9999 mem: location 1313 is 0
9999 run: jumping to instruction 15
  99 run: break-if t, 
9999 mem: location 1313 is 0
9999 run: jump-if fell through
  99 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1304 is 1009
9999 mem: location 1306 is 1115
9999 mem: location 1307 is 1
9999 mem: location 1308 is 65517
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 100 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1330
 100 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1331
 100 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1332
9999 mem: storing 65517 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: storing 0 in location 1335
 100 run: jump-if editor, 1:offset
9999 mem: location 1331 is 1115
9999 run: jumping to instruction 6
 100 run: screen-width:number <- screen-width screen
9999 mem: location 1330 is 1009
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1528
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1530
 101 run: break-unless sc, 
9999 mem: location 1530 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1530 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1530 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1531
 101 run: reply width
9999 mem: location 1531 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1336
 100 run: screen-height:number <- screen-height screen
9999 mem: location 1330 is 1009
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1530
 101 run: break-unless sc, 
9999 mem: location 1530 is 1009
9999 run: jump-unless fell through
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1530 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1530 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1531
 101 run: reply height
9999 mem: location 1531 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1337
 100 run: left:number <- get *editor, left:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1338
 100 run: right:number <- get *editor, right:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1339
 100 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1340
 100 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1341
 100 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1342
 100 run: save-row:number <- copy *cursor-row
9999 mem: location 1341 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1341 is 1121
9999 mem: location 1341 is 1121
9999 mem: storing 1 in location 1343
 100 run: save-column:number <- copy *cursor-column
9999 mem: location 1342 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1342 is 1122
9999 mem: location 1342 is 1122
9999 mem: storing 0 in location 1344
 100 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1332 is 1
9999 mem: location 1333 is 65517
9999 mem: location 1334 is 0
9999 mem: location 1335 is 0
9999 mem: storing 0 in location 1345
 100 run: break-unless c, 
9999 mem: location 1345 is 0
9999 run: jumping to instruction 432
 100 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1332 is 1
9999 mem: location 1333 is 65517
9999 mem: location 1334 is 0
9999 mem: location 1335 is 0
9999 mem: storing 1333 in location 1400
 100 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1400 is 1333
 100 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 0 in location 1362
 100 run: break-unless page-up?, 
9999 mem: location 1362 is 0
9999 run: jumping to instruction 477
 100 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 0 in location 1378
 100 run: break-unless page-down?, 
9999 mem: location 1378 is 0
9999 run: jumping to instruction 519
 100 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 0 in location 1385
 100 run: break-unless move-to-end-of-line?, 
9999 mem: location 1385 is 0
9999 run: jumping to instruction 556
 100 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 0 in location 1386
 100 run: break-unless move-to-start-of-line?, 
9999 mem: location 1386 is 0
9999 run: jumping to instruction 593
 100 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 0 in location 1401
 100 run: break-unless move-to-next-line?, 
9999 mem: location 1401 is 0
9999 run: jumping to instruction 630
 100 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1400 is 1333
9999 mem: location 1333 is 65517
9999 mem: storing 1 in location 1402
 100 run: break-unless move-to-previous-line?, 
9999 mem: location 1402 is 1
9999 run: jump-unless fell through
 100 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1365
 100 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1366
 100 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1179
9999 mem: storing 1179 in location 1367
 100 run: editor, go-render? <- move-to-previous-line editor
9999 mem: location 1331 is 1115
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 19
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1465
 101 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1466
 101 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1467
 101 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1468
 101 run: left:number <- get *editor, left:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1469
 101 run: right:number <- get *editor, right:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1470
 101 run: already-at-top?:boolean <- lesser-or-equal *cursor-row, 1/top
9999 mem: location 1466 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1471
 101 run: break-if already-at-top?, 
9999 mem: location 1471 is 1
9999 run: jumping to instruction 45
 101 run: break-unless already-at-top?, 
9999 mem: location 1471 is 1
9999 run: jump-unless fell through
 101 run: trace 10, [app], [scroll up]
  10 app: scroll up 
 101 run: top-of-screen:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1465 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1465 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1480
 101 run: old-top:address:duplex-list <- copy *top-of-screen
9999 mem: location 1480 is 1116
9999 mem: location 1116 is 1179
9999 mem: location 1480 is 1116
9999 mem: location 1480 is 1116
9999 mem: storing 1179 in location 1481
 101 run: *top-of-screen <- before-previous-line *top-of-screen, editor
9999 mem: location 1480 is 1116
9999 mem: location 1116 is 1179
9999 mem: location 1465 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 13
 102 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1485
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1485 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1485 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 100
9999 mem: storing 100 in location 1486
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1487
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1487 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1487 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1488
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1487 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1487 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1489
 102 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1489 is 4
9999 mem: location 1488 is 0
9999 mem: storing 4 in location 1490
 102 run: sentinel:address:duplex-list <- get *editor, data:offset
9999 mem: location 1487 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1179
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1487 is 1115
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1163
9999 mem: storing 1163 in location 1491
 102 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1485 is 1179
9999 mem: location 1491 is 1163
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 103 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1157
 103 run: start:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1158
 103 run: result:number <- copy 0
9999 mem: storing 0 in location 1159
 103 run: jump-if curr, 1:offset
9999 mem: location 1157 is 1179
9999 run: jumping to instruction 6
 103 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1179
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 103 run: jump-unless at-start?, 1:offset
9999 mem: location 1160 is 0
9999 run: jumping to instruction 9
 103 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1179
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1530
 104 run: jump-if in, 1:offset
9999 mem: location 1530 is 1179
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1530 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1530 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1176
9999 mem: storing 1176 in location 1531
 104 run: reply result
9999 mem: location 1531 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1157
 103 run: break-unless curr, 
9999 mem: location 1157 is 1176
9999 run: jump-unless fell through
 103 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1176
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 103 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1157 is 1176
9999 run: address to copy is 1176
9999 run: its type is number
9999 mem: location 1176 is 99
9999 mem: storing 99 in location 1161
 103 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 99
9999 mem: storing 0 in location 1162
 103 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 103 run: result <- add result, 1
9999 mem: location 1159 is 0
9999 mem: storing 1 in location 1159
 103 run: loop 
9999 run: jumping to instruction 10
 103 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1176
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1530
 104 run: jump-if in, 1:offset
9999 mem: location 1530 is 1176
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1530 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1530 is 1176
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1173
9999 mem: storing 1173 in location 1531
 104 run: reply result
9999 mem: location 1531 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1157
 103 run: break-unless curr, 
9999 mem: location 1157 is 1173
9999 run: jump-unless fell through
 103 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1173
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 103 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1157 is 1173
9999 run: address to copy is 1173
9999 run: its type is number
9999 mem: location 1173 is 98
9999 mem: storing 98 in location 1161
 103 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 98
9999 mem: storing 0 in location 1162
 103 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 103 run: result <- add result, 1
9999 mem: location 1159 is 1
9999 mem: storing 2 in location 1159
 103 run: loop 
9999 run: jumping to instruction 10
 103 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1173
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1530
 104 run: jump-if in, 1:offset
9999 mem: location 1530 is 1173
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1530 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1530 is 1173
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1166
9999 mem: storing 1166 in location 1531
 104 run: reply result
9999 mem: location 1531 is 1166
9999 run: result 0 is 1166
9999 mem: storing 1166 in location 1157
 103 run: break-unless curr, 
9999 mem: location 1157 is 1166
9999 run: jump-unless fell through
 103 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1166
9999 mem: location 1158 is 1163
9999 mem: storing 0 in location 1160
 103 run: break-if at-start?, 
9999 mem: location 1160 is 0
9999 run: jump-if fell through
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1157 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1163
9999 mem: location 1157 is 1166
9999 run: address to copy is 1166
9999 run: its type is number
9999 mem: location 1166 is 97
9999 mem: storing 97 in location 1161
 103 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1161 is 97
9999 mem: storing 0 in location 1162
 103 run: break-if at-newline?, 
9999 mem: location 1162 is 0
9999 run: jump-if fell through
 103 run: result <- add result, 1
9999 mem: location 1159 is 2
9999 mem: storing 3 in location 1159
 103 run: loop 
9999 run: jumping to instruction 10
 103 run: curr <- prev-duplex curr
9999 mem: location 1157 is 1166
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1166 in location 1530
 104 run: jump-if in, 1:offset
9999 mem: location 1530 is 1166
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1530 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1163
9999 mem: location 1530 is 1166
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1163
9999 mem: storing 1163 in location 1531
 104 run: reply result
9999 mem: location 1531 is 1163
9999 run: result 0 is 1163
9999 mem: storing 1163 in location 1157
 103 run: break-unless curr, 
9999 mem: location 1157 is 1163
9999 run: jump-unless fell through
 103 run: at-start?:boolean <- equal curr, start
9999 mem: location 1157 is 1163
9999 mem: location 1158 is 1163
9999 mem: storing 1 in location 1160
 103 run: break-if at-start?, 
9999 mem: location 1160 is 1
9999 run: jumping to instruction 19
 103 run: reply result
9999 mem: location 1159 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1492
 102 run: break-if len, 
9999 mem: location 1492 is 3
9999 run: jumping to instruction 15
 102 run: _, max:number <- divide-with-remainder len, max-line-length
9999 mem: location 1492 is 3
9999 mem: location 1490 is 4
9999 mem: storing 3 in location 1494
 102 run: break-if max, 
9999 mem: location 1494 is 3
9999 run: jumping to instruction 20
 102 run: max <- add max, 1
9999 mem: location 1494 is 3
9999 mem: storing 4 in location 1494
 102 run: count:number <- copy 0
9999 mem: storing 0 in location 1495
 102 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1495 is 0
9999 mem: location 1494 is 4
9999 mem: storing 0 in location 1496
 102 run: break-if done?, 
9999 mem: location 1496 is 0
9999 run: jump-if fell through
 102 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1485 is 1179
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1530
 103 run: jump-if in, 1:offset
9999 mem: location 1530 is 1179
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1530 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1530 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1176
9999 mem: storing 1176 in location 1531
 103 run: reply result
9999 mem: location 1531 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1493
 102 run: break-unless prev, 
9999 mem: location 1493 is 1176
9999 run: jump-unless fell through
 102 run: curr <- copy prev
9999 mem: location 1493 is 1176
9999 mem: storing 1176 in location 1485
 102 run: count <- add count, 1
9999 mem: location 1495 is 0
9999 mem: storing 1 in location 1495
 102 run: loop 
9999 run: jumping to instruction 24
 102 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1495 is 1
9999 mem: location 1494 is 4
9999 mem: storing 0 in location 1496
 102 run: break-if done?, 
9999 mem: location 1496 is 0
9999 run: jump-if fell through
 102 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1485 is 1176
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1530
 103 run: jump-if in, 1:offset
9999 mem: location 1530 is 1176
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1530 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1530 is 1176
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1173
9999 mem: storing 1173 in location 1531
 103 run: reply result
9999 mem: location 1531 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1493
 102 run: break-unless prev, 
9999 mem: location 1493 is 1173
9999 run: jump-unless fell through
 102 run: curr <- copy prev
9999 mem: location 1493 is 1173
9999 mem: storing 1173 in location 1485
 102 run: count <- add count, 1
9999 mem: location 1495 is 1
9999 mem: storing 2 in location 1495
 102 run: loop 
9999 run: jumping to instruction 24
 102 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1495 is 2
9999 mem: location 1494 is 4
9999 mem: storing 0 in location 1496
 102 run: break-if done?, 
9999 mem: location 1496 is 0
9999 run: jump-if fell through
 102 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1485 is 1173
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1530
 103 run: jump-if in, 1:offset
9999 mem: location 1530 is 1173
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1530 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1530 is 1173
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1166
9999 mem: storing 1166 in location 1531
 103 run: reply result
9999 mem: location 1531 is 1166
9999 run: result 0 is 1166
9999 mem: storing 1166 in location 1493
 102 run: break-unless prev, 
9999 mem: location 1493 is 1166
9999 run: jump-unless fell through
 102 run: curr <- copy prev
9999 mem: location 1493 is 1166
9999 mem: storing 1166 in location 1485
 102 run: count <- add count, 1
9999 mem: location 1495 is 2
9999 mem: storing 3 in location 1495
 102 run: loop 
9999 run: jumping to instruction 24
 102 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1495 is 3
9999 mem: location 1494 is 4
9999 mem: storing 0 in location 1496
 102 run: break-if done?, 
9999 mem: location 1496 is 0
9999 run: jump-if fell through
 102 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1485 is 1166
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1166 in location 1530
 103 run: jump-if in, 1:offset
9999 mem: location 1530 is 1166
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1530 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1163
9999 mem: location 1530 is 1166
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1163
9999 mem: storing 1163 in location 1531
 103 run: reply result
9999 mem: location 1531 is 1163
9999 run: result 0 is 1163
9999 mem: storing 1163 in location 1493
 102 run: break-unless prev, 
9999 mem: location 1493 is 1163
9999 run: jump-unless fell through
 102 run: curr <- copy prev
9999 mem: location 1493 is 1163
9999 mem: storing 1163 in location 1485
 102 run: count <- add count, 1
9999 mem: location 1495 is 3
9999 mem: storing 4 in location 1495
 102 run: loop 
9999 run: jumping to instruction 24
 102 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1495 is 4
9999 mem: location 1494 is 4
9999 mem: storing 1 in location 1496
 102 run: break-if done?, 
9999 mem: location 1496 is 1
9999 run: jumping to instruction 31
 102 run: reply curr
9999 mem: location 1485 is 1163
9999 run: result 0 is 1163
9999 mem: location 1480 is 1116
9999 mem: storing 1163 in location 1116
 101 run: no-movement?:boolean <- equal old-top, *top-of-screen
9999 mem: location 1481 is 1179
9999 mem: location 1480 is 1116
9999 mem: location 1116 is 1163
9999 mem: storing 0 in location 1482
 101 run: jump-unless no-movement?, 1:offset
9999 mem: location 1482 is 0
9999 run: jumping to instruction 56
 101 run: reply editor/same-as-ingredient:0, 1/go-render
9999 mem: location 1465 is 1115
9999 run: result 0 is 1115
9999 run: result 1 is 1
9999 mem: storing 1115 in location 1331
9999 mem: storing 1 in location 1388
 100 run: undo-coalesce-tag:number <- copy 3/up-arrow
9999 mem: storing 3 in location 1368
 100 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1369
 100 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1370
 100 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1163
9999 mem: storing 1163 in location 1371
schedule: handle-keyboard-event/editor-event-loop/run1004/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 100 run: break-unless undo-coalesce-tag, 
9999 mem: location 1368 is 3
9999 run: jump-unless fell through
 100 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1349
 100 run: break-unless *undo, 
9999 mem: location 1349 is 1124
9999 mem: location 1124 is 1497
9999 run: jump-unless fell through
 100 run: op:address:operation <- first *undo
9999 mem: location 1349 is 1124
9999 mem: location 1124 is 1497
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:list <- next-ingredient 
9999 mem: storing 1497 in location 1530
 101 run: result:location <- get *in, value:offset
9999 mem: location 1530 is 1497
9999 mem: location 1497 is 1426
9999 mem: location 1498 is 1424
9999 mem: location 1530 is 1497
9999 run: address to copy is 1497
9999 run: its type is number
9999 mem: location 1497 is 1426
9999 mem: storing 1426 in location 1531
 101 run: reply result
9999 mem: location 1531 is 1426
9999 run: result 0 is 1426
9999 mem: storing 1426 in location 1348
 100 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1348 is 1426
9999 mem: location 1426 is 1
9999 mem: location 1427 is 1
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1200
9999 mem: location 1430 is 1
9999 mem: location 1431 is 0
9999 mem: location 1432 is 1179
9999 mem: location 1433 is 3
9999 mem: location 1434 is 0
9999 mem: location 1435 is 0
9999 mem: location 1436 is 0
9999 mem: location 1348 is 1426
9999 mem: storing 1427 in location 1354
 100 run: break-unless move, 
9999 mem: location 1354 is 1427
9999 run: jump-unless fell through
 100 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1354 is 1427
9999 mem: location 1427 is 1
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1200
9999 mem: location 1430 is 1
9999 mem: location 1431 is 0
9999 mem: location 1432 is 1179
9999 mem: location 1433 is 3
9999 mem: location 1354 is 1427
9999 run: address to copy is 1433
9999 run: its type is number
9999 mem: location 1433 is 3
9999 mem: storing 3 in location 1372
 100 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1368 is 3
9999 mem: location 1372 is 3
9999 mem: storing 1 in location 1373
 100 run: break-unless coalesce?, 
9999 mem: location 1373 is 1
9999 run: jump-unless fell through
 100 run: after-row:address:number <- get-address *move, after-row:offset
9999 mem: location 1354 is 1427
9999 mem: location 1427 is 1
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1200
9999 mem: location 1430 is 1
9999 mem: location 1431 is 0
9999 mem: location 1432 is 1179
9999 mem: location 1433 is 3
9999 mem: location 1354 is 1427
9999 run: address to copy is 1430
9999 mem: storing 1430 in location 1374
 100 run: *after-row <- copy after-cursor-row
9999 mem: location 1369 is 1
9999 mem: location 1374 is 1430
9999 mem: location 1374 is 1430
9999 mem: storing 1 in location 1430
 100 run: after-column:address:number <- get-address *move, after-column:offset
9999 mem: location 1354 is 1427
9999 mem: location 1427 is 1
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1200
9999 mem: location 1430 is 1
9999 mem: location 1431 is 0
9999 mem: location 1432 is 1179
9999 mem: location 1433 is 3
9999 mem: location 1354 is 1427
9999 run: address to copy is 1431
9999 mem: storing 1431 in location 1375
 100 run: *after-column <- copy after-cursor-column
9999 mem: location 1370 is 0
9999 mem: location 1375 is 1431
9999 mem: location 1375 is 1431
9999 mem: storing 0 in location 1431
 100 run: after-top:address:number <- get-address *move, after-top-of-screen:offset
9999 mem: location 1354 is 1427
9999 mem: location 1427 is 1
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1200
9999 mem: location 1430 is 1
9999 mem: location 1431 is 0
9999 mem: location 1432 is 1179
9999 mem: location 1433 is 3
9999 mem: location 1354 is 1427
9999 run: address to copy is 1432
9999 mem: storing 1432 in location 1376
 100 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1331 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1331 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1163
9999 mem: location 1376 is 1432
9999 mem: storing 1163 in location 1432
 100 run: break +done-adding-move-operation:label
9999 run: jumping to instruction 748
 100 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1330 is 1009
9999 mem: location 1331 is 1115
9999 mem: location 1388 is 1
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 1
9999 mem: storing 1009 in location 1304
9999 mem: storing 1115 in location 1306
9999 mem: storing 1 in location 1314
  99 run: break-unless go-render?, 
9999 mem: location 1314 is 1
9999 run: jump-unless fell through
  99 run: editor-render screen, editor
9999 mem: location 1304 is 1009
9999 mem: location 1306 is 1115
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 100 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1157
 100 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1158
 100 run: left:number <- get *editor, left:offset
9999 mem: location 1158 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1158 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1159
 100 run: right:number <- get *editor, right:offset
9999 mem: location 1158 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1158 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1160
 100 run: row:number, column:number <- render screen, editor
9999 mem: location 1157 is 1009
9999 mem: location 1158 is 1115
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1220
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1221
 101 run: jump-if editor, 1:offset
9999 mem: location 1221 is 1115
9999 run: jumping to instruction 5
 101 run: left:number <- get *editor, left:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1222
 101 run: screen-height:number <- screen-height screen
9999 mem: location 1220 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1530
 102 run: break-unless sc, 
9999 mem: location 1530 is 1009
9999 run: jump-unless fell through
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1530 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1530 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1531
 102 run: reply height
9999 mem: location 1531 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1223
 101 run: right:number <- get *editor, right:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1224
 101 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1163
9999 mem: storing 1163 in location 1225
 101 run: prev:address:duplex-list <- copy curr
9999 mem: location 1225 is 1163
9999 mem: storing 1163 in location 1226
 101 run: curr <- next-duplex curr
9999 mem: location 1225 is 1163
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1163
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1163
9999 mem: location 1163 is 167
9999 mem: location 1164 is 1166
9999 mem: location 1165 is 0
9999 mem: location 1530 is 1163
9999 run: address to copy is 1164
9999 run: its type is address
9999 mem: location 1164 is 1166
9999 mem: storing 1166 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1166
9999 run: result 0 is 1166
9999 mem: storing 1166 in location 1225
 101 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1227
 101 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1228
 101 run: column:number <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 101 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1230
 101 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1231
 101 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1232
 101 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 1
9999 mem: location 1229 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1248
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 102 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 102 run: *row <- copy new-row
9999 mem: location 1248 is 1
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 1 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 102 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 101 run: break-unless curr, 
9999 mem: location 1225 is 1166
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 101 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 101 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1235
 101 run: break-unless at-cursor?, 
9999 mem: location 1235 is 1
9999 run: jump-unless fell through
 101 run: *before-cursor <- copy prev
9999 mem: location 1226 is 1163
9999 mem: location 1232 is 1118
9999 mem: location 1232 is 1118
9999 mem: storing 1163 in location 1118
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1163
9999 mem: location 1225 is 1166
9999 run: address to copy is 1166
9999 run: its type is number
9999 mem: location 1166 is 97
9999 mem: storing 97 in location 1236
 101 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 97
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 102 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1502
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 97
9999 mem: storing 0 in location 1504
 102 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 102 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 97
9999 mem: storing 0 in location 1507
 102 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 102 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 102 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1237
 101 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 101 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 101 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 97
9999 mem: location 1227 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 97
  90 print-character: 97 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 97
9999 mem: storing 0 in location 1276
 102 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 102 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 102 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1279
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 102 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 97
9999 mem: storing 0 in location 1282
 102 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 10
9999 mem: storing 1035 in location 1284
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1035
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1284 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1285
 102 run: *cursor-contents <- copy c
9999 mem: location 1266 is 97
9999 mem: location 1285 is 1035
9999 mem: location 1285 is 1035
9999 mem: storing 97 in location 1035
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1284 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1286
 102 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1036
9999 mem: location 1286 is 1036
9999 mem: storing 7 in location 1036
 102 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 102 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1225 is 1166
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1166 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1166
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1163
9999 mem: location 1530 is 1166
9999 run: address to copy is 1167
9999 run: its type is address
9999 mem: location 1167 is 1173
9999 mem: storing 1173 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1225
 101 run: prev <- next-duplex prev
9999 mem: location 1226 is 1163
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1163
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1163
9999 mem: location 1163 is 167
9999 mem: location 1164 is 1166
9999 mem: location 1165 is 0
9999 mem: location 1530 is 1163
9999 run: address to copy is 1164
9999 run: its type is address
9999 mem: location 1164 is 1166
9999 mem: storing 1166 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1166
9999 run: result 0 is 1166
9999 mem: storing 1166 in location 1226
 101 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 101 run: loop 
9999 run: jumping to instruction 20
 101 run: break-unless curr, 
9999 mem: location 1225 is 1173
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 101 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 101 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 1
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1235
 101 run: break-unless at-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 30
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1225 is 1173
9999 run: address to copy is 1173
9999 run: its type is number
9999 mem: location 1173 is 98
9999 mem: storing 98 in location 1236
 101 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 98
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 102 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1502
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 98
9999 mem: storing 0 in location 1504
 102 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 102 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 98
9999 mem: storing 0 in location 1507
 102 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 102 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 102 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 98
9999 mem: storing 0 in location 1237
 101 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 101 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 101 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 98
9999 mem: location 1227 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 98
  90 print-character: 98 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 98
9999 mem: storing 0 in location 1276
 102 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 102 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 102 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1279
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 102 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 98
9999 mem: storing 0 in location 1282
 102 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 11
9999 mem: storing 1037 in location 1284
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1037
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1284 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1285
 102 run: *cursor-contents <- copy c
9999 mem: location 1266 is 98
9999 mem: location 1285 is 1037
9999 mem: location 1285 is 1037
9999 mem: storing 98 in location 1037
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1284 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1286
 102 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1038
9999 mem: location 1286 is 1038
9999 mem: storing 7 in location 1038
 102 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 102 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1225 is 1173
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1173
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1530 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1225
 101 run: prev <- next-duplex prev
9999 mem: location 1226 is 1166
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1166 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1166
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1166
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1163
9999 mem: location 1530 is 1166
9999 run: address to copy is 1167
9999 run: its type is address
9999 mem: location 1167 is 1173
9999 mem: storing 1173 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1226
 101 run: column <- add column, 1
9999 mem: location 1229 is 1
9999 mem: storing 2 in location 1229
 101 run: loop 
9999 run: jumping to instruction 20
 101 run: break-unless curr, 
9999 mem: location 1225 is 1176
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 101 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 101 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 2
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1235
 101 run: break-unless at-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 30
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1225 is 1176
9999 run: address to copy is 1176
9999 run: its type is number
9999 mem: location 1176 is 99
9999 mem: storing 99 in location 1236
 101 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 99
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 102 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1502
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 99
9999 mem: storing 0 in location 1504
 102 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 102 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 99
9999 mem: storing 0 in location 1507
 102 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 102 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 102 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 99
9999 mem: storing 0 in location 1237
 101 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 2
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 101 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 101 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 99
9999 mem: location 1227 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 99
  90 print-character: 99 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 99
9999 mem: storing 0 in location 1276
 102 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 102 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 102 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1279
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 102 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 99
9999 mem: storing 0 in location 1282
 102 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 12
9999 mem: storing 1039 in location 1284
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1039
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1284 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1285
 102 run: *cursor-contents <- copy c
9999 mem: location 1266 is 99
9999 mem: location 1285 is 1039
9999 mem: location 1285 is 1039
9999 mem: storing 99 in location 1039
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1284 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1286
 102 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1040
9999 mem: location 1286 is 1040
9999 mem: storing 7 in location 1040
 102 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 102 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1225 is 1176
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1176
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1530 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1225
 101 run: prev <- next-duplex prev
9999 mem: location 1226 is 1173
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1173
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1173
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1530 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1226
 101 run: column <- add column, 1
9999 mem: location 1229 is 2
9999 mem: storing 3 in location 1229
 101 run: loop 
9999 run: jumping to instruction 20
 101 run: break-unless curr, 
9999 mem: location 1225 is 1179
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 101 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 101 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 3
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1235
 101 run: break-unless at-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 30
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1225 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 100
9999 mem: storing 100 in location 1236
 101 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 100
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 102 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1502
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 100
9999 mem: storing 0 in location 1504
 102 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 102 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 100
9999 mem: storing 0 in location 1507
 102 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 102 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 102 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 100
9999 mem: storing 0 in location 1237
 101 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 3
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 101 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 101 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 100
9999 mem: location 1227 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 100
  90 print-character: 100 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 100
9999 mem: storing 0 in location 1276
 102 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 102 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 102 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1279
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 102 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 100
9999 mem: storing 0 in location 1282
 102 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 13
9999 mem: storing 1041 in location 1284
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1041
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1284 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1285
 102 run: *cursor-contents <- copy c
9999 mem: location 1266 is 100
9999 mem: location 1285 is 1041
9999 mem: location 1285 is 1041
9999 mem: storing 100 in location 1041
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1284 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1286
 102 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1042
9999 mem: location 1286 is 1042
9999 mem: storing 7 in location 1042
 102 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 102 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
schedule: print-character/render/editor-render/editor-event-loop/run1004/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 102 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1225 is 1179
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1179
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1530 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1225
 101 run: prev <- next-duplex prev
9999 mem: location 1226 is 1176
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1176
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1176
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1530 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1226
 101 run: column <- add column, 1
9999 mem: location 1229 is 3
9999 mem: storing 4 in location 1229
 101 run: loop 
9999 run: jumping to instruction 20
 101 run: break-unless curr, 
9999 mem: location 1225 is 1182
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 1
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 101 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 101 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1229 is 4
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1235
 101 run: break-unless at-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 30
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1225 is 1182
9999 run: address to copy is 1182
9999 run: its type is number
9999 mem: location 1182 is 101
9999 mem: storing 101 in location 1236
 101 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 101
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 102 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1502
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 101
9999 mem: storing 0 in location 1504
 102 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 102 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 101
9999 mem: storing 0 in location 1507
 102 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 102 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 102 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 101
9999 mem: storing 0 in location 1237
 101 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 4
9999 mem: location 1224 is 4
9999 mem: storing 1 in location 1239
 101 run: break-unless at-right?, 
9999 mem: location 1239 is 1
9999 run: jump-unless fell through
 101 run: print-character screen, 8617/loop-back-to-left, 245/grey
9999 mem: location 1220 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 8617
  90 print-character: 8617 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 8617
9999 mem: storing 0 in location 1276
 102 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 102 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1271 is 10
9999 mem: storing 10 in location 1279
 102 run: index <- add index, *column
9999 mem: location 1279 is 10
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1279
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 102 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 8617
9999 mem: storing 0 in location 1282
 102 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 14
9999 mem: storing 1043 in location 1284
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1043
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1284 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1285
 102 run: *cursor-contents <- copy c
9999 mem: location 1266 is 8617
9999 mem: location 1285 is 1043
9999 mem: location 1285 is 1043
9999 mem: storing 8617 in location 1043
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1043
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1284 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1286
 102 run: *cursor-color <- copy color
9999 mem: location 1267 is 245
9999 mem: location 1286 is 1044
9999 mem: location 1286 is 1044
9999 mem: storing 245 in location 1044
 102 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 102 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 101 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 101 run: row <- add row, 1
9999 mem: location 1228 is 1
9999 mem: storing 2 in location 1228
 101 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 2
9999 mem: location 1229 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1248
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 102 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 102 run: *row <- copy new-row
9999 mem: location 1248 is 2
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 2 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 102 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 101 run: loop +next-character:label
9999 run: jumping to instruction 21
 101 run: break-unless curr, 
9999 mem: location 1225 is 1182
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 101 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1225 is 1182
9999 run: address to copy is 1182
9999 run: its type is number
9999 mem: location 1182 is 101
9999 mem: storing 101 in location 1236
 101 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 101
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 102 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1502
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 101
9999 mem: storing 0 in location 1504
 102 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 102 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 101
9999 mem: storing 0 in location 1507
 102 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 102 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 102 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 101
9999 mem: storing 0 in location 1237
 101 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 101 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 101 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 101
9999 mem: location 1227 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 101
  90 print-character: 101 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 101
9999 mem: storing 0 in location 1276
 102 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 102 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 102 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1279
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 102 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 101
9999 mem: storing 0 in location 1282
 102 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 20
9999 mem: storing 1055 in location 1284
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1055
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1284 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1285
 102 run: *cursor-contents <- copy c
9999 mem: location 1266 is 101
9999 mem: location 1285 is 1055
9999 mem: location 1285 is 1055
9999 mem: storing 101 in location 1055
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1055
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1284 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1286
 102 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1056
9999 mem: location 1286 is 1056
9999 mem: storing 7 in location 1056
 102 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 102 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1225 is 1182
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1182
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1530 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1225
 101 run: prev <- next-duplex prev
9999 mem: location 1226 is 1179
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1179
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1179
9999 mem: location 1179 is 100
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1530 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1226
 101 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 101 run: loop 
9999 run: jumping to instruction 20
 101 run: break-unless curr, 
9999 mem: location 1225 is 1185
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 101 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1225 is 1185
9999 run: address to copy is 1185
9999 run: its type is number
9999 mem: location 1185 is 102
9999 mem: storing 102 in location 1236
 101 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 102
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 102 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1502
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 102
9999 mem: storing 0 in location 1504
 102 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 102 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 102
9999 mem: storing 0 in location 1507
 102 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 102 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 102 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 102
9999 mem: storing 0 in location 1237
 101 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 101 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 101 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 102
9999 mem: location 1227 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 102
  90 print-character: 102 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 102
9999 mem: storing 0 in location 1276
 102 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 102 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 102 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1279
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 102 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 102
9999 mem: storing 0 in location 1282
 102 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 21
9999 mem: storing 1057 in location 1284
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1057
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1284 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1285
 102 run: *cursor-contents <- copy c
9999 mem: location 1266 is 102
9999 mem: location 1285 is 1057
9999 mem: location 1285 is 1057
9999 mem: storing 102 in location 1057
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1057
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1284 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1286
 102 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1058
9999 mem: location 1286 is 1058
9999 mem: storing 7 in location 1058
 102 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 102 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1225 is 1185
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1185
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1530 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1225
 101 run: prev <- next-duplex prev
9999 mem: location 1226 is 1182
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1182
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1530 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1226
 101 run: column <- add column, 1
9999 mem: location 1229 is 1
9999 mem: storing 2 in location 1229
 101 run: loop 
9999 run: jumping to instruction 20
 101 run: break-unless curr, 
9999 mem: location 1225 is 1188
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 101 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1225 is 1188
9999 run: address to copy is 1188
9999 run: its type is number
9999 mem: location 1188 is 103
9999 mem: storing 103 in location 1236
 101 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 103
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 102 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1502
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 103
9999 mem: storing 0 in location 1504
 102 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 102 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 103
9999 mem: storing 0 in location 1507
 102 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 102 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 102 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 103
9999 mem: storing 0 in location 1237
 101 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 2
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 101 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 101 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 103
9999 mem: location 1227 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 103
  90 print-character: 103 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 103
9999 mem: storing 0 in location 1276
 102 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 102 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 102 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1279
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 102 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 103
9999 mem: storing 0 in location 1282
 102 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 22
9999 mem: storing 1059 in location 1284
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1284 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1285
 102 run: *cursor-contents <- copy c
9999 mem: location 1266 is 103
9999 mem: location 1285 is 1059
9999 mem: location 1285 is 1059
9999 mem: storing 103 in location 1059
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1059
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1284 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1286
 102 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1060
9999 mem: location 1286 is 1060
9999 mem: storing 7 in location 1060
 102 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 102 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1225 is 1188
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1188
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1530 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1225
 101 run: prev <- next-duplex prev
9999 mem: location 1226 is 1185
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1185
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1185
9999 mem: location 1185 is 102
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1530 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1226
 101 run: column <- add column, 1
9999 mem: location 1229 is 2
9999 mem: storing 3 in location 1229
 101 run: loop 
9999 run: jumping to instruction 20
 101 run: break-unless curr, 
9999 mem: location 1225 is 1191
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 101 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1225 is 1191
9999 run: address to copy is 1191
9999 run: its type is number
9999 mem: location 1191 is 104
9999 mem: storing 104 in location 1236
 101 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 104
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 102 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1502
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 104
9999 mem: storing 0 in location 1504
 102 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 102 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 104
9999 mem: storing 0 in location 1507
 102 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 102 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 102 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 104
9999 mem: storing 0 in location 1237
 101 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 3
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 101 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 101 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 104
9999 mem: location 1227 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
schedule: print-character/render/editor-render/editor-event-loop/run1004/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 102 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 104
  90 print-character: 104 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 104
9999 mem: storing 0 in location 1276
 102 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 102 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 102 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1279
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 102 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 104
9999 mem: storing 0 in location 1282
 102 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 23
9999 mem: storing 1061 in location 1284
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1284 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1285
 102 run: *cursor-contents <- copy c
9999 mem: location 1266 is 104
9999 mem: location 1285 is 1061
9999 mem: location 1285 is 1061
9999 mem: storing 104 in location 1061
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1061
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1284 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1286
 102 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1062
9999 mem: location 1286 is 1062
9999 mem: storing 7 in location 1062
 102 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 102 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1225 is 1191
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1191
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1530 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1225
 101 run: prev <- next-duplex prev
9999 mem: location 1226 is 1188
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1188
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1188
9999 mem: location 1188 is 103
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1530 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1226
 101 run: column <- add column, 1
9999 mem: location 1229 is 3
9999 mem: storing 4 in location 1229
 101 run: loop 
9999 run: jumping to instruction 20
 101 run: break-unless curr, 
9999 mem: location 1225 is 1194
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 2
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 101 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1225 is 1194
9999 run: address to copy is 1194
9999 run: its type is number
9999 mem: location 1194 is 105
9999 mem: storing 105 in location 1236
 101 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 105
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 102 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1502
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 105
9999 mem: storing 0 in location 1504
 102 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 102 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 105
9999 mem: storing 0 in location 1507
 102 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 102 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 102 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 105
9999 mem: storing 0 in location 1237
 101 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 4
9999 mem: location 1224 is 4
9999 mem: storing 1 in location 1239
 101 run: break-unless at-right?, 
9999 mem: location 1239 is 1
9999 run: jump-unless fell through
 101 run: print-character screen, 8617/loop-back-to-left, 245/grey
9999 mem: location 1220 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 8617
  90 print-character: 8617 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 8617
9999 mem: storing 0 in location 1276
 102 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 102 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 102 run: index <- add index, *column
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1279
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 102 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 8617
9999 mem: storing 0 in location 1282
 102 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 24
9999 mem: storing 1063 in location 1284
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1284 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1285
 102 run: *cursor-contents <- copy c
9999 mem: location 1266 is 8617
9999 mem: location 1285 is 1063
9999 mem: location 1285 is 1063
9999 mem: storing 8617 in location 1063
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1063
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 7
9999 mem: location 1284 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1286
 102 run: *cursor-color <- copy color
9999 mem: location 1267 is 245
9999 mem: location 1286 is 1064
9999 mem: location 1286 is 1064
9999 mem: storing 245 in location 1064
 102 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 102 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 101 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 101 run: row <- add row, 1
9999 mem: location 1228 is 2
9999 mem: storing 3 in location 1228
 101 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 3
9999 mem: location 1229 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1248
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 102 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 102 run: *row <- copy new-row
9999 mem: location 1248 is 3
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 3 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 102 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 101 run: loop +next-character:label
9999 run: jumping to instruction 21
 101 run: break-unless curr, 
9999 mem: location 1225 is 1194
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 3
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 101 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1225 is 1194
9999 run: address to copy is 1194
9999 run: its type is number
9999 mem: location 1194 is 105
9999 mem: storing 105 in location 1236
 101 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 105
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 102 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1502
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 105
9999 mem: storing 0 in location 1504
 102 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 102 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 105
9999 mem: storing 0 in location 1507
 102 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 102 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 102 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 105
9999 mem: storing 0 in location 1237
 101 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 101 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 101 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 105
9999 mem: location 1227 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 105
  90 print-character: 105 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 105
9999 mem: storing 0 in location 1276
 102 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 102 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 102 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1279
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 102 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 105
9999 mem: storing 0 in location 1282
 102 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 30
9999 mem: storing 1075 in location 1284
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1075
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1284 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1285
 102 run: *cursor-contents <- copy c
9999 mem: location 1266 is 105
9999 mem: location 1285 is 1075
9999 mem: location 1285 is 1075
9999 mem: storing 105 in location 1075
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1075
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1284 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1286
 102 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1076
9999 mem: location 1286 is 1076
9999 mem: storing 7 in location 1076
 102 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 102 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1225 is 1194
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1194
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1530 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1225
 101 run: prev <- next-duplex prev
9999 mem: location 1226 is 1191
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1191
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1191
9999 mem: location 1191 is 104
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1530 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1226
 101 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 101 run: loop 
9999 run: jumping to instruction 20
 101 run: break-unless curr, 
9999 mem: location 1225 is 1197
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 3
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 101 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1225 is 1197
9999 run: address to copy is 1197
9999 run: its type is number
9999 mem: location 1197 is 106
9999 mem: storing 106 in location 1236
 101 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 106
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 102 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1502
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 106
9999 mem: storing 0 in location 1504
 102 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 102 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 106
9999 mem: storing 0 in location 1507
 102 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 102 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 102 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 106
9999 mem: storing 0 in location 1237
 101 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 101 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 101 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 106
9999 mem: location 1227 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 106
  90 print-character: 106 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 106
9999 mem: storing 0 in location 1276
 102 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 102 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 102 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1279
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 102 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 106
9999 mem: storing 0 in location 1282
 102 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 31
9999 mem: storing 1077 in location 1284
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1284 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1285
 102 run: *cursor-contents <- copy c
9999 mem: location 1266 is 106
9999 mem: location 1285 is 1077
9999 mem: location 1285 is 1077
9999 mem: storing 106 in location 1077
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1077
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1284 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1286
 102 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1078
9999 mem: location 1286 is 1078
9999 mem: storing 7 in location 1078
 102 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 102 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1225 is 1197
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1197
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1530 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1225
 101 run: prev <- next-duplex prev
9999 mem: location 1226 is 1194
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1194
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1194
9999 mem: location 1194 is 105
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1530 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1226
 101 run: column <- add column, 1
9999 mem: location 1229 is 1
9999 mem: storing 2 in location 1229
 101 run: loop 
9999 run: jumping to instruction 20
 101 run: break-unless curr, 
9999 mem: location 1225 is 1200
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 3
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 101 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1225 is 1200
9999 run: address to copy is 1200
9999 run: its type is number
9999 mem: location 1200 is 10
9999 mem: storing 10 in location 1236
 101 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 102 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1502
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 10
9999 mem: storing 0 in location 1504
 102 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 102 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 10
9999 mem: storing 0 in location 1507
 102 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 102 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 102 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 101 run: break-unless newline?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 44
 101 run: clear-line-delimited screen, column, right
9999 mem: location 1220 is 1009
9999 mem: location 1229 is 2
9999 mem: location 1224 is 4
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 102 run: column:number <- next-ingredient 
9999 mem: storing 2 in location 1292
 102 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 103 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 103 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1279
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 103 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 103 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 32
9999 mem: storing 1079 in location 1284
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1284 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1285
 103 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1079
9999 mem: location 1285 is 1079
9999 mem: storing 32 in location 1079
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1284 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1286
 103 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1080
9999 mem: location 1286 is 1080
9999 mem: storing 7 in location 1080
 103 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 103 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
schedule: print-character/clear-line-delimited/render/editor-render/editor-event-loop/run1004/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 103 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 103 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1279
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 103 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 103 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 33
9999 mem: storing 1081 in location 1284
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1284 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1285
 103 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1081
9999 mem: location 1285 is 1081
9999 mem: storing 32 in location 1081
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1284 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1286
 103 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1082
9999 mem: location 1286 is 1082
9999 mem: storing 7 in location 1082
 103 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 103 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 103 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1271 is 10
9999 mem: storing 30 in location 1279
 103 run: index <- add index, *column
9999 mem: location 1279 is 30
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1279
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 103 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 103 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 34
9999 mem: storing 1083 in location 1284
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1284 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1285
 103 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1083
9999 mem: location 1285 is 1083
9999 mem: storing 32 in location 1083
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1284 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1286
 103 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1084
9999 mem: location 1286 is 1084
9999 mem: storing 7 in location 1084
 103 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 103 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 101 run: row <- add row, 1
9999 mem: location 1228 is 3
9999 mem: storing 4 in location 1228
 101 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 101 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 4
9999 mem: location 1229 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1248
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 102 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 102 run: *row <- copy new-row
9999 mem: location 1248 is 4
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 4 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 102 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 101 run: curr <- next-duplex curr
9999 mem: location 1225 is 1200
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1200
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1530 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1225
 101 run: prev <- next-duplex prev
9999 mem: location 1226 is 1197
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1197
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1197
9999 mem: location 1197 is 106
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1530 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1226
 101 run: loop +next-character:label
9999 run: jumping to instruction 21
 101 run: break-unless curr, 
9999 mem: location 1225 is 1203
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 4
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 101 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1225 is 1203
9999 run: address to copy is 1203
9999 run: its type is number
9999 mem: location 1203 is 107
9999 mem: storing 107 in location 1236
 101 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 107
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 102 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1502
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 107
9999 mem: storing 0 in location 1504
 102 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 102 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 107
9999 mem: storing 0 in location 1507
 102 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 102 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 102 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 107
9999 mem: storing 0 in location 1237
 101 run: break-unless newline?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 52
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 101 run: break-unless at-right?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 61
 101 run: print-character screen, c, color
9999 mem: location 1220 is 1009
9999 mem: location 1236 is 107
9999 mem: location 1227 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 107
  90 print-character: 107 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 107
9999 mem: storing 0 in location 1276
 102 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 102 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 102 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1279
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 102 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 107
9999 mem: storing 0 in location 1282
 102 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 40
9999 mem: storing 1095 in location 1284
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1095
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1284 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1285
 102 run: *cursor-contents <- copy c
9999 mem: location 1266 is 107
9999 mem: location 1285 is 1095
9999 mem: location 1285 is 1095
9999 mem: storing 107 in location 1095
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1095
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1284 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1286
 102 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1096
9999 mem: location 1286 is 1096
9999 mem: storing 7 in location 1096
 102 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 102 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1275 is 1012
9999 mem: storing 1 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1225 is 1203
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1203
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1530 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1225
 101 run: prev <- next-duplex prev
9999 mem: location 1226 is 1200
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1200
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1200
9999 mem: location 1200 is 10
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1530 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1226
 101 run: column <- add column, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 101 run: loop 
9999 run: jumping to instruction 20
 101 run: break-unless curr, 
9999 mem: location 1225 is 1206
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 4
9999 mem: location 1223 is 5
9999 mem: storing 0 in location 1233
 101 run: break-if off-screen?, 
9999 mem: location 1233 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 30
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1225 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1225 is 1206
9999 run: address to copy is 1206
9999 run: its type is number
9999 mem: location 1206 is 10
9999 mem: storing 10 in location 1236
 101 run: color <- get-color color, c
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1501
 102 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1502
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1501 is 7
9999 mem: storing 1 in location 1503
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1502 is 10
9999 mem: storing 0 in location 1504
 102 run: break-unless starting-comment?, 
9999 mem: location 1504 is 0
9999 run: jumping to instruction 11
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1505
 102 run: break-unless color-is-blue?, 
9999 mem: location 1505 is 0
9999 run: jumping to instruction 20
 102 run: break-unless color-is-white?, 
9999 mem: location 1503 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1502 is 10
9999 mem: storing 0 in location 1507
 102 run: break-unless starting-assignment?, 
9999 mem: location 1507 is 0
9999 run: jumping to instruction 27
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1501 is 7
9999 mem: storing 0 in location 1508
 102 run: break-unless color-is-red?, 
9999 mem: location 1508 is 0
9999 run: jumping to instruction 35
 102 run: reply color
9999 mem: location 1501 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1227
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 101 run: break-unless newline?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 44
 101 run: clear-line-delimited screen, column, right
9999 mem: location 1220 is 1009
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 102 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1292
 102 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 1
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 103 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 103 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1279
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 103 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 103 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 41
9999 mem: storing 1097 in location 1284
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1284 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1285
 103 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1097
9999 mem: location 1285 is 1097
9999 mem: storing 32 in location 1097
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1284 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1286
 103 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1098
9999 mem: location 1286 is 1098
9999 mem: storing 7 in location 1098
 103 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 103 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1275 is 1012
9999 mem: storing 2 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 1
9999 mem: storing 2 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 103 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 103 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1279
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 103 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 103 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 42
9999 mem: storing 1099 in location 1284
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1284 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1285
 103 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1099
9999 mem: location 1285 is 1099
9999 mem: storing 32 in location 1099
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1284 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1286
 103 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1100
9999 mem: location 1286 is 1100
9999 mem: storing 7 in location 1100
 103 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 103 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1275 is 1012
9999 mem: storing 3 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 103 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 103 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1279
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 103 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 103 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 43
9999 mem: storing 1101 in location 1284
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1284 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1285
 103 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1101
9999 mem: location 1285 is 1101
9999 mem: storing 32 in location 1101
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1284 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1286
 103 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1102
9999 mem: location 1286 is 1102
9999 mem: storing 7 in location 1102
 103 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 103 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1275 is 1012
9999 mem: storing 4 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1275
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1276
 103 run: break-unless newline?, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 43
schedule: print-character/clear-line-delimited/render/editor-render/editor-event-loop/run1004/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 103 run: index:number <- multiply *row, width
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1271 is 10
9999 mem: storing 40 in location 1279
 103 run: index <- add index, *column
9999 mem: location 1279 is 40
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1279
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
 103 run: len:number <- length *buf
9999 mem: location 1280 is 1014
9999 mem: storing 50 in location 1281
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1266 is 32
9999 mem: storing 0 in location 1282
 103 run: break-unless backspace?, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1280 is 1014
9999 mem: location 1279 is 44
9999 mem: storing 1103 in location 1284
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1284 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1284 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1285
 103 run: *cursor-contents <- copy c
9999 mem: location 1266 is 32
9999 mem: location 1285 is 1103
9999 mem: location 1285 is 1103
9999 mem: storing 32 in location 1103
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1284 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1284 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1286
 103 run: *cursor-color <- copy color
9999 mem: location 1267 is 7
9999 mem: location 1286 is 1104
9999 mem: location 1286 is 1104
9999 mem: storing 7 in location 1104
 103 run: right:number <- subtract width, 1
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1287
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1287 is 9
9999 mem: storing 0 in location 1288
 103 run: break-if at-right?, 
9999 mem: location 1288 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1275 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1275 is 1012
9999 mem: storing 5 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 101 run: row <- add row, 1
9999 mem: location 1228 is 4
9999 mem: storing 5 in location 1228
 101 run: column <- copy left
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 101 run: screen <- move-cursor screen, row, column
9999 mem: location 1220 is 1009
9999 mem: location 1228 is 5
9999 mem: location 1229 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1248
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 102 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 102 run: *row <- copy new-row
9999 mem: location 1248 is 5
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 5 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 102 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1220
 101 run: curr <- next-duplex curr
9999 mem: location 1225 is 1206
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1206
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1206
9999 mem: location 1206 is 10
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1530 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1209
9999 run: result 0 is 1209
9999 mem: storing 1209 in location 1225
 101 run: prev <- next-duplex prev
9999 mem: location 1226 is 1203
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1530
 102 run: jump-if in, 1:offset
9999 mem: location 1530 is 1203
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1530 is 1203
9999 mem: location 1203 is 107
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1530 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1531
 102 run: reply result
9999 mem: location 1531 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1226
 101 run: loop +next-character:label
9999 run: jumping to instruction 21
 101 run: break-unless curr, 
9999 mem: location 1225 is 1209
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1228 is 5
9999 mem: location 1223 is 5
9999 mem: storing 1 in location 1233
 101 run: break-if off-screen?, 
9999 mem: location 1233 is 1
9999 run: jumping to instruction 67
 101 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1221 is 1115
9999 mem: location 1115 is 1163
9999 mem: location 1116 is 1163
9999 mem: location 1117 is 1215
9999 mem: location 1118 is 1163
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1497
9999 mem: location 1125 is 0
9999 mem: location 1221 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1240
 101 run: *bottom-of-screen <- copy curr
9999 mem: location 1225 is 1209
9999 mem: location 1240 is 1117
9999 mem: location 1240 is 1117
9999 mem: storing 1209 in location 1117
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1228 is 5
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1234
 101 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1241
 101 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1234 is 0
9999 mem: location 1241 is 1
9999 mem: storing 0 in location 1242
 101 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1228 is 5
9999 mem: location 1230 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1243
 101 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1242 is 0
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1244
 101 run: break-unless before-cursor?, 
9999 mem: location 1244 is 0
9999 run: jumping to instruction 80
 101 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1228 is 5
9999 mem: location 1229 is 0
9999 mem: location 1220 is 1009
9999 mem: location 1221 is 1115
9999 run: result 0 is 5
9999 run: result 1 is 0
9999 mem: storing 5 in location 1161
9999 mem: storing 0 in location 1162
 100 run: clear-line-delimited screen, column, right
9999 mem: location 1157 is 1009
9999 mem: location 1162 is 0
9999 mem: location 1160 is 4
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 101 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1292
 101 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 0
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 101 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1265 is 1009
 101 run: column <- add column, 1
9999 mem: location 1292 is 0
9999 mem: storing 1 in location 1292
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 1
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 101 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1265 is 1009
 101 run: column <- add column, 1
9999 mem: location 1292 is 1
9999 mem: storing 2 in location 1292
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 101 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1265 is 1009
 101 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 101 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1265 is 1009
 101 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 101 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1265 is 1009
 101 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 101 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 100 run: row <- add row, 1
9999 mem: location 1161 is 5
9999 mem: storing 6 in location 1161
 100 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1157 is 1009
9999 mem: location 1161 is 6
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1317
 101 run: row:number <- next-ingredient 
9999 mem: storing 6 in location 1318
 101 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1319
 101 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1320
 101 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1321
9999 mem: storing 1 in location 1322
 101 run: break-if style-found?, 
9999 mem: location 1322 is 1
9999 run: jumping to instruction 9
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 101 run: break-if color-found?, 
9999 mem: location 1324 is 0
9999 run: jump-if fell through
 101 run: color <- copy 245/grey
9999 mem: storing 245 in location 1323
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
 101 run: break-if bg-color-found?, 
9999 mem: location 1326 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1325
 101 run: screen <- move-cursor screen, row, x
9999 mem: location 1317 is 1009
9999 mem: location 1318 is 6
9999 mem: location 1319 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1247
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1248
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 102 run: break-unless sc, 
9999 mem: location 1247 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1250
 102 run: *row <- copy new-row
9999 mem: location 1248 is 6
9999 mem: location 1250 is 1011
9999 mem: location 1250 is 1011
9999 mem: storing 6 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1247 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1247 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1251
 102 run: *column <- copy new-column
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1012
9999 mem: location 1251 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1247 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1317
 101 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 0
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 101 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 101 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1265 is 1009
 101 run: x <- add x, 1
9999 mem: location 1319 is 0
9999 mem: storing 1 in location 1319
 101 run: loop 
9999 run: jumping to instruction 22
 101 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 1
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 101 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 101 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1265 is 1009
 101 run: x <- add x, 1
9999 mem: location 1319 is 1
9999 mem: storing 2 in location 1319
 101 run: loop 
9999 run: jumping to instruction 22
 101 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 2
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 101 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 101 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1265 is 1009
 101 run: x <- add x, 1
9999 mem: location 1319 is 2
9999 mem: storing 3 in location 1319
 101 run: loop 
9999 run: jumping to instruction 22
 101 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 3
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 101 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 101 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1265 is 1009
 101 run: x <- add x, 1
9999 mem: location 1319 is 3
9999 mem: storing 4 in location 1319
 101 run: loop 
9999 run: jumping to instruction 22
 101 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 4
9999 mem: location 1320 is 4
9999 mem: storing 1 in location 1327
 101 run: break-unless continue?, 
9999 mem: location 1327 is 1
9999 run: jump-unless fell through
 101 run: print-character screen, style, color, bg-color
9999 mem: location 1317 is 1009
9999 mem: location 1321 is 9480
9999 mem: location 1323 is 245
9999 mem: location 1325 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 102 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1266
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1267
9999 mem: storing 1 in location 1268
 102 run: break-if color-found?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 1 in location 1270
 102 run: break-if bg-color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 12
 102 run: trace 90, [print-character], c
9999 mem: location 1266 is 9480
  90 print-character: 9480 
 102 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 102 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1265 is 1009
 101 run: x <- add x, 1
9999 mem: location 1319 is 4
9999 mem: storing 5 in location 1319
 101 run: loop 
9999 run: jumping to instruction 22
 101 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1319 is 5
9999 mem: location 1320 is 4
9999 mem: storing 0 in location 1327
 101 run: break-unless continue?, 
9999 mem: location 1327 is 0
9999 run: jumping to instruction 27
 100 run: row <- add row, 1
9999 mem: location 1161 is 6
9999 mem: storing 7 in location 1161
 100 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1157 is 1009
9999 mem: location 1161 is 7
9999 mem: location 1159 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1247
 101 run: row:number <- next-ingredient 
9999 mem: storing 7 in location 1248
 101 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1249
 101 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1250
 101 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 101 run: break-if screen, 
9999 mem: location 1247 is 1009
9999 run: jumping to instruction 10
 101 run: screen <- move-cursor screen, row, column
9999 mem: location 1247 is 1009
9999 mem: location 1248 is 7
9999 mem: location 1249 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1439
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 7 in location 1440
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1441
 102 run: break-unless sc, 
9999 mem: location 1439 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1439 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1439 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1442
 102 run: *row <- copy new-row
9999 mem: location 1440 is 7
9999 mem: location 1442 is 1011
9999 mem: location 1442 is 1011
9999 mem: storing 7 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1439 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1439 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1443
 102 run: *column <- copy new-column
9999 mem: location 1441 is 0
9999 mem: location 1443 is 1012
9999 mem: location 1443 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1439 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1247
 101 run: clear-line-delimited screen, column, right
9999 mem: location 1247 is 1009
9999 mem: location 1249 is 0
9999 mem: location 1251 is 4
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1291
 102 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1292
 102 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1293
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 0
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 0
9999 mem: storing 1 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 1
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 1
9999 mem: storing 2 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 2
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
schedule: print-character/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1004/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 2
9999 mem: storing 3 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 3
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 3
9999 mem: storing 4 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 4
9999 mem: location 1293 is 4
9999 mem: storing 0 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1291 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1265
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1266
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 103 run: break-if color-found?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1267
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if bg-color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1269
 103 run: trace 90, [print-character], c
9999 mem: location 1266 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1265 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1265 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1273
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1273 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1274
 103 run: jump-if legal?, 1:offset
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1265 is 1009
 102 run: column <- add column, 1
9999 mem: location 1292 is 4
9999 mem: storing 5 in location 1292
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1292 is 5
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 102 run: break-if done?, 
9999 mem: location 1294 is 1
9999 run: jumping to instruction 10
 101 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1247 is 1009
9999 mem: location 1248 is 7
9999 mem: location 1250 is 0
9999 mem: location 1251 is 4
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1446
 102 run: row:number <- next-ingredient 
9999 mem: storing 7 in location 1447
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1448
 102 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1449
 102 run: row <- add row, 1
9999 mem: location 1447 is 7
9999 mem: storing 8 in location 1447
 102 run: screen <- move-cursor screen, row, left
9999 mem: location 1446 is 1009
9999 mem: location 1447 is 8
9999 mem: location 1448 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1439
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 8 in location 1440
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1441
 103 run: break-unless sc, 
9999 mem: location 1439 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1439 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1439 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1442
 103 run: *row <- copy new-row
9999 mem: location 1440 is 8
9999 mem: location 1442 is 1011
9999 mem: location 1442 is 1011
9999 mem: storing 8 in location 1011
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1439 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1439 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1443
 103 run: *column <- copy new-column
9999 mem: location 1441 is 0
9999 mem: location 1443 is 1012
9999 mem: location 1443 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1439 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1446
 102 run: screen-height:number <- screen-height screen
9999 mem: location 1446 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1530
 103 run: break-unless sc, 
9999 mem: location 1530 is 1009
9999 run: jump-unless fell through
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1530 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1530 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1531
 103 run: reply height
9999 mem: location 1531 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1450
 102 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1447 is 8
9999 mem: location 1450 is 5
9999 mem: storing 1 in location 1451
 102 run: break-if at-bottom-of-screen?, 
9999 mem: location 1451 is 1
9999 run: jumping to instruction 15
 101 run: reply screen/same-as-ingredient:0
9999 mem: location 1247 is 1009
  99 run: loop 
9999 run: jumping to instruction 5
  99 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1526
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 100 run: x:address:console <- next-ingredient 
9999 mem: storing 1526 in location 1317
 100 run: break-unless x, 
9999 mem: location 1317 is 1526
9999 run: jump-unless fell through
 100 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1317 is 1526
9999 mem: location 1526 is 1
9999 mem: location 1527 is 1521
9999 mem: location 1317 is 1526
9999 run: address to copy is 1526
9999 mem: storing 1526 in location 1318
 100 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1317 is 1526
9999 mem: location 1526 is 1
9999 mem: location 1527 is 1521
9999 mem: location 1317 is 1526
9999 run: address to copy is 1527
9999 run: its type is address
9999 mem: location 1527 is 1521
9999 mem: storing 1521 in location 1319
 100 run: max:number <- length *buf
9999 mem: location 1319 is 1521
9999 mem: storing 1 in location 1320
 100 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1318 is 1526
9999 mem: location 1526 is 1
9999 mem: location 1320 is 1
9999 mem: storing 1 in location 1321
 100 run: break-unless done?, 
9999 mem: location 1321 is 1
9999 run: jump-unless fell through
 100 run: dummy:address:event <- new event:type
9999 mem: storing 1528 in location 1322
 100 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1322 is 1528
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: location 1530 is 0
9999 mem: location 1531 is 0
9999 mem: location 1317 is 1526
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1526
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: storing 1526 in location 1305
9999 mem: storing 1 in location 1311
9999 mem: storing 1 in location 1312
  99 run: loop-unless found?, 
9999 mem: location 1311 is 1
9999 run: jump-unless fell through
  99 run: break-if quit?, 
9999 mem: location 1312 is 1
9999 run: jumping to instruction 25
  97 run: screen-should-contain [
    .          .
    .abcd↩     .
    .efgh↩     .
    .ij        .
    .k         .
  ]
