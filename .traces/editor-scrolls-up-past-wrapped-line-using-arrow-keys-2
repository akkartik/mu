parse: instruction: assume-screen
parse:   ingredient: {name: "10", properties: ["10": "literal", "width": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "height": ]}
parse: instruction: new
parse:   ingredient: {name: "abcdefghij\nk\nl\nm", properties: [_: "literal-string"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
parse:   product: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    press 65518  # page-down\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .          .\n    .k         .\n    .l         .\n    .m         .\n    .          .\n  ", properties: [_: "literal-string"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    press 65517  # up-arrow\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .          .\n    .ij        .\n    .k         .\n    .l         .\n    .m         .\n  ", properties: [_: "literal-string"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    press 65517  # up-arrow\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .          .\n    .efgh↩     .\n    .ij        .\n    .k         .\n    .l         .\n  ", properties: [_: "literal-string"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    press 65517  # up-arrow\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .          .\n    .abcd↩     .\n    .efgh↩     .\n    .ij        .\n    .k         .\n  ", properties: [_: "literal-string"]}
after-brace: recipe scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
after-brace: new-fake-screen ...
after-brace: new ...
after-brace: new-editor ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 101 run: screen:address <- new-fake-screen 10/width, 5/height
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1009
9999 mem: storing 1009 in location 1002
 102 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1010
9999 mem: storing 1010 in location 1003
 102 run: *width <- next-ingredient 
9999 mem: location 1003 is 1010
9999 mem: storing 10 in location 1010
 102 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1009
9999 mem: storing 1009 in location 1004
 102 run: *height <- next-ingredient 
9999 mem: location 1004 is 1009
9999 mem: storing 5 in location 1009
 102 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1005
 102 run: *row <- copy 0
9999 mem: location 1005 is 1011
9999 mem: location 1005 is 1011
9999 mem: storing 0 in location 1011
 102 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1006
 102 run: *column <- copy 0
9999 mem: location 1006 is 1012
9999 mem: location 1006 is 1012
9999 mem: storing 0 in location 1012
 102 run: bufsize:number <- multiply *width, *height
9999 mem: location 1003 is 1010
9999 mem: location 1010 is 10
9999 mem: location 1004 is 1009
9999 mem: location 1009 is 5
9999 mem: storing 50 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1013
9999 mem: storing 1013 in location 1008
 102 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1007 is 50
9999 mem: array size is 50
9999 mem: new alloc: 1014
9999 mem: location 1008 is 1013
9999 mem: storing 1014 in location 1013
 102 run: clear-screen result
9999 mem: location 1002 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1115
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1117
 103 run: break-unless sc, 
9999 mem: location 1117 is 1009
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1118
 103 run: max:number <- length *buf
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1118 is 1014
9999 mem: storing 50 in location 1119
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1120
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 0
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 0
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 0
9999 mem: storing 1015 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1122 is 1015
9999 run: address to copy is 1015
9999 mem: storing 1015 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1015
9999 mem: location 1123 is 1015
9999 mem: storing 0 in location 1015
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1122 is 1015
9999 run: address to copy is 1016
9999 mem: storing 1016 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1016
9999 mem: location 1124 is 1016
9999 mem: storing 7 in location 1016
 103 run: i <- add i, 1
9999 mem: location 1120 is 0
9999 mem: storing 1 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 1
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 1
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 1
9999 mem: storing 1017 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1122 is 1017
9999 run: address to copy is 1017
9999 mem: storing 1017 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1017
9999 mem: location 1123 is 1017
9999 mem: storing 0 in location 1017
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1122 is 1017
9999 run: address to copy is 1018
9999 mem: storing 1018 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1018
9999 mem: location 1124 is 1018
9999 mem: storing 7 in location 1018
 103 run: i <- add i, 1
9999 mem: location 1120 is 1
9999 mem: storing 2 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 2
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 2
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 2
9999 mem: storing 1019 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1122 is 1019
9999 run: address to copy is 1019
9999 mem: storing 1019 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1019
9999 mem: location 1123 is 1019
9999 mem: storing 0 in location 1019
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1122 is 1019
9999 run: address to copy is 1020
9999 mem: storing 1020 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1020
9999 mem: location 1124 is 1020
9999 mem: storing 7 in location 1020
 103 run: i <- add i, 1
9999 mem: location 1120 is 2
9999 mem: storing 3 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 3
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 3
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 3
9999 mem: storing 1021 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1122 is 1021
9999 run: address to copy is 1021
9999 mem: storing 1021 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1021
9999 mem: location 1123 is 1021
9999 mem: storing 0 in location 1021
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1122 is 1021
9999 run: address to copy is 1022
9999 mem: storing 1022 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1022
9999 mem: location 1124 is 1022
9999 mem: storing 7 in location 1022
 103 run: i <- add i, 1
9999 mem: location 1120 is 3
9999 mem: storing 4 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 4
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 4
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 4
9999 mem: storing 1023 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1122 is 1023
9999 run: address to copy is 1023
9999 mem: storing 1023 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1023
9999 mem: location 1123 is 1023
9999 mem: storing 0 in location 1023
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1122 is 1023
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1024
9999 mem: location 1124 is 1024
9999 mem: storing 7 in location 1024
 103 run: i <- add i, 1
9999 mem: location 1120 is 4
9999 mem: storing 5 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 5
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 5
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 5
9999 mem: storing 1025 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1122 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1025
9999 mem: location 1123 is 1025
9999 mem: storing 0 in location 1025
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1122 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1026
9999 mem: location 1124 is 1026
9999 mem: storing 7 in location 1026
 103 run: i <- add i, 1
9999 mem: location 1120 is 5
9999 mem: storing 6 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 6
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 6
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 6
9999 mem: storing 1027 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1122 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1027
9999 mem: location 1123 is 1027
9999 mem: storing 0 in location 1027
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1122 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1028
9999 mem: location 1124 is 1028
9999 mem: storing 7 in location 1028
 103 run: i <- add i, 1
9999 mem: location 1120 is 6
9999 mem: storing 7 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 7
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 7
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 7
9999 mem: storing 1029 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1122 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1029
9999 mem: location 1123 is 1029
9999 mem: storing 0 in location 1029
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1122 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1030
9999 mem: location 1124 is 1030
9999 mem: storing 7 in location 1030
 103 run: i <- add i, 1
9999 mem: location 1120 is 7
9999 mem: storing 8 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 8
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 8
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 8
9999 mem: storing 1031 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1122 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1031
9999 mem: location 1123 is 1031
9999 mem: storing 0 in location 1031
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1122 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1032
9999 mem: location 1124 is 1032
9999 mem: storing 7 in location 1032
 103 run: i <- add i, 1
9999 mem: location 1120 is 8
9999 mem: storing 9 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 9
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 9
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 9
9999 mem: storing 1033 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1122 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1033
9999 mem: location 1123 is 1033
9999 mem: storing 0 in location 1033
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1122 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1034
9999 mem: location 1124 is 1034
9999 mem: storing 7 in location 1034
 103 run: i <- add i, 1
9999 mem: location 1120 is 9
9999 mem: storing 10 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 10
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 10
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 10
9999 mem: storing 1035 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1122 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1035
9999 mem: location 1123 is 1035
9999 mem: storing 0 in location 1035
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1122 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1036
9999 mem: location 1124 is 1036
9999 mem: storing 7 in location 1036
 103 run: i <- add i, 1
9999 mem: location 1120 is 10
9999 mem: storing 11 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 11
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 11
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 11
9999 mem: storing 1037 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1122 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1037
9999 mem: location 1123 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1122 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1038
9999 mem: location 1124 is 1038
9999 mem: storing 7 in location 1038
 103 run: i <- add i, 1
9999 mem: location 1120 is 11
9999 mem: storing 12 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 12
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 12
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 12
9999 mem: storing 1039 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1122 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1039
9999 mem: location 1123 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1122 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1040
9999 mem: location 1124 is 1040
9999 mem: storing 7 in location 1040
 103 run: i <- add i, 1
9999 mem: location 1120 is 12
9999 mem: storing 13 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 13
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 13
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 13
9999 mem: storing 1041 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1122 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1041
9999 mem: location 1123 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1122 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1042
9999 mem: location 1124 is 1042
9999 mem: storing 7 in location 1042
 103 run: i <- add i, 1
9999 mem: location 1120 is 13
9999 mem: storing 14 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 14
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 14
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 14
9999 mem: storing 1043 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1122 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1043
9999 mem: location 1123 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1122 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1044
9999 mem: location 1124 is 1044
9999 mem: storing 7 in location 1044
 103 run: i <- add i, 1
9999 mem: location 1120 is 14
9999 mem: storing 15 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 15
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 15
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 15
9999 mem: storing 1045 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1122 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1045
9999 mem: location 1123 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1122 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1046
9999 mem: location 1124 is 1046
9999 mem: storing 7 in location 1046
 103 run: i <- add i, 1
9999 mem: location 1120 is 15
9999 mem: storing 16 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 16
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 16
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 16
9999 mem: storing 1047 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1122 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1047
9999 mem: location 1123 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1122 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1048
9999 mem: location 1124 is 1048
9999 mem: storing 7 in location 1048
 103 run: i <- add i, 1
9999 mem: location 1120 is 16
9999 mem: storing 17 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 17
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 17
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 17
9999 mem: storing 1049 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1122 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1049
9999 mem: location 1123 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1122 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1050
9999 mem: location 1124 is 1050
9999 mem: storing 7 in location 1050
 103 run: i <- add i, 1
9999 mem: location 1120 is 17
9999 mem: storing 18 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 18
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 18
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 18
9999 mem: storing 1051 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1122 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1051
9999 mem: location 1123 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1122 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1052
9999 mem: location 1124 is 1052
9999 mem: storing 7 in location 1052
 103 run: i <- add i, 1
9999 mem: location 1120 is 18
9999 mem: storing 19 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 19
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 19
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 19
9999 mem: storing 1053 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1122 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1053
9999 mem: location 1123 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1122 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1054
9999 mem: location 1124 is 1054
9999 mem: storing 7 in location 1054
 103 run: i <- add i, 1
9999 mem: location 1120 is 19
9999 mem: storing 20 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 20
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 20
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 20
9999 mem: storing 1055 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1122 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1055
9999 mem: location 1123 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1122 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1056
9999 mem: location 1124 is 1056
9999 mem: storing 7 in location 1056
 103 run: i <- add i, 1
9999 mem: location 1120 is 20
9999 mem: storing 21 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 21
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 21
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 21
9999 mem: storing 1057 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1122 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1057
9999 mem: location 1123 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1122 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1058
9999 mem: location 1124 is 1058
9999 mem: storing 7 in location 1058
 103 run: i <- add i, 1
9999 mem: location 1120 is 21
9999 mem: storing 22 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 22
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 22
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 22
9999 mem: storing 1059 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1122 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1059
9999 mem: location 1123 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1122 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1060
9999 mem: location 1124 is 1060
9999 mem: storing 7 in location 1060
 103 run: i <- add i, 1
9999 mem: location 1120 is 22
9999 mem: storing 23 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 23
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 23
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 23
9999 mem: storing 1061 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1122 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1061
9999 mem: location 1123 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1122 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1062
9999 mem: location 1124 is 1062
9999 mem: storing 7 in location 1062
 103 run: i <- add i, 1
9999 mem: location 1120 is 23
9999 mem: storing 24 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 24
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 24
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 24
9999 mem: storing 1063 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1122 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1063
9999 mem: location 1123 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1122 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1064
9999 mem: location 1124 is 1064
9999 mem: storing 7 in location 1064
 103 run: i <- add i, 1
9999 mem: location 1120 is 24
9999 mem: storing 25 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 25
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 25
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 25
9999 mem: storing 1065 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1122 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1065
9999 mem: location 1123 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1122 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1066
9999 mem: location 1124 is 1066
9999 mem: storing 7 in location 1066
 103 run: i <- add i, 1
9999 mem: location 1120 is 25
9999 mem: storing 26 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 26
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 26
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 26
9999 mem: storing 1067 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1122 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1067
9999 mem: location 1123 is 1067
9999 mem: storing 0 in location 1067
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1122 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1068
9999 mem: location 1124 is 1068
9999 mem: storing 7 in location 1068
 103 run: i <- add i, 1
9999 mem: location 1120 is 26
9999 mem: storing 27 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 27
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 27
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 27
9999 mem: storing 1069 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1122 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1069
9999 mem: location 1123 is 1069
9999 mem: storing 0 in location 1069
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1122 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1070
9999 mem: location 1124 is 1070
9999 mem: storing 7 in location 1070
 103 run: i <- add i, 1
9999 mem: location 1120 is 27
9999 mem: storing 28 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 28
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 28
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 28
9999 mem: storing 1071 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1122 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1071
9999 mem: location 1123 is 1071
9999 mem: storing 0 in location 1071
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1122 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1072
9999 mem: location 1124 is 1072
9999 mem: storing 7 in location 1072
 103 run: i <- add i, 1
9999 mem: location 1120 is 28
9999 mem: storing 29 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 29
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 29
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 29
9999 mem: storing 1073 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1122 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1073
9999 mem: location 1123 is 1073
9999 mem: storing 0 in location 1073
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1122 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1074
9999 mem: location 1124 is 1074
9999 mem: storing 7 in location 1074
 103 run: i <- add i, 1
9999 mem: location 1120 is 29
9999 mem: storing 30 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 30
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 30
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 30
9999 mem: storing 1075 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1122 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1075
9999 mem: location 1123 is 1075
9999 mem: storing 0 in location 1075
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1122 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1076
9999 mem: location 1124 is 1076
9999 mem: storing 7 in location 1076
 103 run: i <- add i, 1
9999 mem: location 1120 is 30
9999 mem: storing 31 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 31
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 31
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 31
9999 mem: storing 1077 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1122 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1077
9999 mem: location 1123 is 1077
9999 mem: storing 0 in location 1077
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1122 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1078
9999 mem: location 1124 is 1078
9999 mem: storing 7 in location 1078
 103 run: i <- add i, 1
9999 mem: location 1120 is 31
9999 mem: storing 32 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 32
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 32
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 32
9999 mem: storing 1079 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1122 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1079
9999 mem: location 1123 is 1079
9999 mem: storing 0 in location 1079
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1122 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1080
9999 mem: location 1124 is 1080
9999 mem: storing 7 in location 1080
 103 run: i <- add i, 1
9999 mem: location 1120 is 32
9999 mem: storing 33 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 33
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 33
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 33
9999 mem: storing 1081 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1122 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1081
9999 mem: location 1123 is 1081
9999 mem: storing 0 in location 1081
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1122 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1082
9999 mem: location 1124 is 1082
9999 mem: storing 7 in location 1082
 103 run: i <- add i, 1
9999 mem: location 1120 is 33
9999 mem: storing 34 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 34
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 34
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 34
9999 mem: storing 1083 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1122 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1083
9999 mem: location 1123 is 1083
9999 mem: storing 0 in location 1083
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1122 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1084
9999 mem: location 1124 is 1084
9999 mem: storing 7 in location 1084
 103 run: i <- add i, 1
9999 mem: location 1120 is 34
9999 mem: storing 35 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 35
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 35
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 35
9999 mem: storing 1085 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1122 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1085
9999 mem: location 1123 is 1085
9999 mem: storing 0 in location 1085
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1122 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1086
9999 mem: location 1124 is 1086
9999 mem: storing 7 in location 1086
 103 run: i <- add i, 1
9999 mem: location 1120 is 35
9999 mem: storing 36 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 36
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 36
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 36
9999 mem: storing 1087 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1122 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1087
9999 mem: location 1123 is 1087
9999 mem: storing 0 in location 1087
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1122 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1088
9999 mem: location 1124 is 1088
9999 mem: storing 7 in location 1088
 103 run: i <- add i, 1
9999 mem: location 1120 is 36
9999 mem: storing 37 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 37
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 37
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 37
9999 mem: storing 1089 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1122 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1089
9999 mem: location 1123 is 1089
9999 mem: storing 0 in location 1089
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1122 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1090
9999 mem: location 1124 is 1090
9999 mem: storing 7 in location 1090
 103 run: i <- add i, 1
9999 mem: location 1120 is 37
9999 mem: storing 38 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 38
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 38
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 38
9999 mem: storing 1091 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1122 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1091
9999 mem: location 1123 is 1091
9999 mem: storing 0 in location 1091
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1122 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1092
9999 mem: location 1124 is 1092
9999 mem: storing 7 in location 1092
 103 run: i <- add i, 1
9999 mem: location 1120 is 38
9999 mem: storing 39 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 39
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 39
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 39
9999 mem: storing 1093 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1122 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1093
9999 mem: location 1123 is 1093
9999 mem: storing 0 in location 1093
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1122 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1094
9999 mem: location 1124 is 1094
9999 mem: storing 7 in location 1094
 103 run: i <- add i, 1
9999 mem: location 1120 is 39
9999 mem: storing 40 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 40
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 40
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 40
9999 mem: storing 1095 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1122 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1095
9999 mem: location 1123 is 1095
9999 mem: storing 0 in location 1095
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1122 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1096
9999 mem: location 1124 is 1096
9999 mem: storing 7 in location 1096
 103 run: i <- add i, 1
9999 mem: location 1120 is 40
9999 mem: storing 41 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 41
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 41
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 41
9999 mem: storing 1097 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1122 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1097
9999 mem: location 1123 is 1097
9999 mem: storing 0 in location 1097
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1122 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1098
9999 mem: location 1124 is 1098
9999 mem: storing 7 in location 1098
 103 run: i <- add i, 1
9999 mem: location 1120 is 41
9999 mem: storing 42 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 42
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 42
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 42
9999 mem: storing 1099 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1122 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1099
9999 mem: location 1123 is 1099
9999 mem: storing 0 in location 1099
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1122 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1100
9999 mem: location 1124 is 1100
9999 mem: storing 7 in location 1100
 103 run: i <- add i, 1
9999 mem: location 1120 is 42
9999 mem: storing 43 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 43
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 43
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 43
9999 mem: storing 1101 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1122 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1101
9999 mem: location 1123 is 1101
9999 mem: storing 0 in location 1101
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1122 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1102
9999 mem: location 1124 is 1102
9999 mem: storing 7 in location 1102
 103 run: i <- add i, 1
9999 mem: location 1120 is 43
9999 mem: storing 44 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 44
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 44
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 44
9999 mem: storing 1103 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1122 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1103
9999 mem: location 1123 is 1103
9999 mem: storing 0 in location 1103
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1122 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1104
9999 mem: location 1124 is 1104
9999 mem: storing 7 in location 1104
 103 run: i <- add i, 1
9999 mem: location 1120 is 44
9999 mem: storing 45 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 45
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 45
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 45
9999 mem: storing 1105 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1122 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1105
9999 mem: location 1123 is 1105
9999 mem: storing 0 in location 1105
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1122 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1106
9999 mem: location 1124 is 1106
9999 mem: storing 7 in location 1106
 103 run: i <- add i, 1
9999 mem: location 1120 is 45
9999 mem: storing 46 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 46
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 46
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 46
9999 mem: storing 1107 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1122 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1107
9999 mem: location 1123 is 1107
9999 mem: storing 0 in location 1107
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1122 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1108
9999 mem: location 1124 is 1108
9999 mem: storing 7 in location 1108
 103 run: i <- add i, 1
9999 mem: location 1120 is 46
9999 mem: storing 47 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 47
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 47
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 47
9999 mem: storing 1109 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1122 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1109
9999 mem: location 1123 is 1109
9999 mem: storing 0 in location 1109
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1122 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1110
9999 mem: location 1124 is 1110
9999 mem: storing 7 in location 1110
 103 run: i <- add i, 1
9999 mem: location 1120 is 47
9999 mem: storing 48 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 48
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 48
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 48
9999 mem: storing 1111 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1122 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1111
9999 mem: location 1123 is 1111
9999 mem: storing 0 in location 1111
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1122 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1112
9999 mem: location 1124 is 1112
9999 mem: storing 7 in location 1112
 103 run: i <- add i, 1
9999 mem: location 1120 is 48
9999 mem: storing 49 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 49
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 49
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 49
9999 mem: storing 1113 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1122 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1113
9999 mem: location 1123 is 1113
9999 mem: storing 0 in location 1113
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1122 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1114
9999 mem: location 1124 is 1114
9999 mem: storing 7 in location 1114
 103 run: i <- add i, 1
9999 mem: location 1120 is 49
9999 mem: storing 50 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 50
9999 mem: location 1119 is 50
9999 mem: storing 1 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 1
9999 run: jumping to instruction 17
 103 run: x:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1125
 103 run: *x <- copy 0
9999 mem: location 1125 is 1011
9999 mem: location 1125 is 1011
9999 mem: storing 0 in location 1011
 103 run: x <- get-address *sc, cursor-column:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1125
 103 run: *x <- copy 0
9999 mem: location 1125 is 1012
9999 mem: location 1125 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1117 is 1009
 102 run: reply result
9999 mem: location 1002 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 900
 101 run: 1:address:array:character <- new [abcdefghij
k
l
m]
9999 mem: storing 1126 in location 1
 101 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address, 0/left, 5/right
9999 mem: location 1 is 1126
9999 mem: location 900 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1126 in location 1117
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1118
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1119
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1120
 102 run: right <- subtract right, 1
9999 mem: location 1120 is 5
9999 mem: storing 4 in location 1120
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: storing 1000 in location 1121
 102 run: x:address:number <- get-address *result, left:offset
9999 mem: location 1121 is 1000
9999 mem: location 1000 is 0
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 0
9999 mem: location 1006 is 0
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1121 is 1000
9999 run: address to copy is 1004
9999 mem: storing 1004 in location 1122
 102 run: *x <- copy left
9999 mem: location 1119 is 0
9999 mem: location 1122 is 1004
9999 mem: location 1122 is 1004
9999 mem: storing 0 in location 1004
 102 run: x <- get-address *result, right:offset
9999 mem: location 1121 is 1000
9999 mem: location 1000 is 0
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 0
9999 mem: location 1006 is 0
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1121 is 1000
9999 run: address to copy is 1005
9999 mem: storing 1005 in location 1122
 102 run: *x <- copy right
9999 mem: location 1120 is 4
9999 mem: location 1122 is 1005
9999 mem: location 1122 is 1005
9999 mem: storing 4 in location 1005
 102 run: x <- get-address *result, cursor-row:offset
9999 mem: location 1121 is 1000
9999 mem: location 1000 is 0
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 0
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1121 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1122
 102 run: *x <- copy 1/top
9999 mem: location 1122 is 1006
9999 mem: location 1122 is 1006
9999 mem: storing 1 in location 1006
 102 run: x <- get-address *result, cursor-column:offset
9999 mem: location 1121 is 1000
9999 mem: location 1000 is 0
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1121 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1122
 102 run: *x <- copy left
9999 mem: location 1119 is 0
9999 mem: location 1122 is 1007
9999 mem: location 1122 is 1007
9999 mem: storing 0 in location 1007
 102 run: init:address:address:duplex-list <- get-address *result, data:offset
9999 mem: location 1121 is 1000
9999 mem: location 1000 is 0
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1121 is 1000
9999 run: address to copy is 1000
9999 mem: storing 1000 in location 1123
schedule: new-editor/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 102 run: *init <- push-duplex 167/§, 0/tail
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1143
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1145
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1146
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1151
9999 mem: storing 1151 in location 1147
 103 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1147 is 1151
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1147 is 1151
9999 run: address to copy is 1151
9999 mem: storing 1151 in location 1148
 103 run: *val <- copy x
9999 mem: location 1145 is 167
9999 mem: location 1148 is 1151
9999 mem: location 1148 is 1151
9999 mem: storing 167 in location 1151
 103 run: next:address:address:duplex-list <- get-address *result, next:offset
9999 mem: location 1147 is 1151
9999 mem: location 1151 is 167
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1147 is 1151
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 1149
 103 run: *next <- copy in
9999 mem: location 1146 is 0
9999 mem: location 1149 is 1152
9999 mem: location 1149 is 1152
9999 mem: storing 0 in location 1152
 103 run: jump-if in, 1:offset
9999 mem: location 1146 is 0
9999 run: jump-if fell through
 103 run: reply result
9999 mem: location 1147 is 1151
9999 run: result 0 is 1151
9999 mem: location 1123 is 1000
9999 mem: storing 1151 in location 1000
 102 run: top-of-screen:address:address:duplex-list <- get-address *result, top-of-screen:offset
9999 mem: location 1121 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1121 is 1000
9999 run: address to copy is 1001
9999 mem: storing 1001 in location 1124
 102 run: *top-of-screen <- copy *init
9999 mem: location 1123 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1123 is 1000
9999 mem: location 1124 is 1001
9999 mem: location 1123 is 1000
9999 mem: location 1124 is 1001
9999 mem: storing 1151 in location 1001
 102 run: y:address:address:duplex-list <- get-address *result, before-cursor:offset
9999 mem: location 1121 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1121 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1125
 102 run: *y <- copy *init
9999 mem: location 1123 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1123 is 1000
9999 mem: location 1125 is 1003
9999 mem: location 1123 is 1000
9999 mem: location 1125 is 1003
9999 mem: storing 1151 in location 1003
 102 run: result <- insert-text result, s
9999 mem: location 1121 is 1000
9999 mem: location 1117 is 1126
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1154
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1156
 103 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1126 in location 1157
 103 run: jump-if text, 1:offset
9999 mem: location 1157 is 1126
9999 run: jumping to instruction 5
 103 run: len:number <- length *text
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1157 is 1126
9999 mem: storing 16 in location 1158
 103 run: jump-if len, 1:offset
9999 mem: location 1158 is 16
9999 run: jumping to instruction 8
 103 run: idx:number <- copy 0
9999 mem: storing 0 in location 1159
 103 run: curr:address:duplex-list <- get *editor, data:offset
9999 mem: location 1156 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1156 is 1000
9999 run: address to copy is 1000
9999 run: its type is address
9999 mem: location 1000 is 1151
9999 mem: storing 1151 in location 1160
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 0
9999 mem: location 1158 is 16
9999 mem: storing 0 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1126
9999 mem: location 1159 is 0
9999 run: address to copy is 1127
9999 run: its type is character
9999 mem: location 1127 is 97
9999 mem: storing 97 in location 1162
 103 run: insert-duplex c, curr
9999 mem: location 1162 is 97
9999 mem: location 1160 is 1151
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1145
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1151 in location 1146
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1163
9999 mem: storing 1163 in location 1147
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1147 is 1163
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1147 is 1163
9999 run: address to copy is 1163
9999 mem: storing 1163 in location 1148
 104 run: *val <- copy x
9999 mem: location 1145 is 97
9999 mem: location 1148 is 1163
9999 mem: location 1148 is 1163
9999 mem: storing 97 in location 1163
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1146 is 1151
9999 mem: location 1151 is 167
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1146 is 1151
9999 run: address to copy is 1152
9999 run: its type is address
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1149
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1146 is 1151
9999 mem: location 1151 is 167
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1146 is 1151
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 1150
 104 run: *y <- copy new-node
9999 mem: location 1147 is 1163
9999 mem: location 1150 is 1152
9999 mem: location 1150 is 1152
9999 mem: storing 1163 in location 1152
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1163
9999 mem: location 1163 is 97
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1147 is 1163
9999 run: address to copy is 1165
9999 mem: storing 1165 in location 1150
 104 run: *y <- copy in
9999 mem: location 1146 is 1151
9999 mem: location 1150 is 1165
9999 mem: location 1150 is 1165
9999 mem: storing 1151 in location 1165
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1163
9999 mem: location 1163 is 97
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1151
9999 mem: location 1147 is 1163
9999 run: address to copy is 1164
9999 mem: storing 1164 in location 1150
 104 run: *y <- copy next-node
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1164
9999 mem: location 1150 is 1164
9999 mem: storing 0 in location 1164
 104 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1147 is 1163
 103 run: curr <- next-duplex curr
9999 mem: location 1160 is 1151
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1166
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1151 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1151
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1151
9999 mem: location 1151 is 167
9999 mem: location 1152 is 1163
9999 mem: location 1153 is 0
9999 mem: location 1168 is 1151
9999 run: address to copy is 1152
9999 run: its type is address
9999 mem: location 1152 is 1163
9999 mem: storing 1163 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1163
9999 run: result 0 is 1163
9999 mem: storing 1163 in location 1160
 103 run: idx <- add idx, 1
9999 mem: location 1159 is 0
9999 mem: storing 1 in location 1159
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 1
9999 mem: location 1158 is 16
9999 mem: storing 0 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1159 is 1
9999 mem: location 1157 is 1126
9999 mem: location 1159 is 1
9999 run: address to copy is 1128
9999 run: its type is character
9999 mem: location 1128 is 98
9999 mem: storing 98 in location 1162
 103 run: insert-duplex c, curr
9999 mem: location 1162 is 98
9999 mem: location 1160 is 1163
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1145
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1146
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1170
9999 mem: storing 1170 in location 1147
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1147 is 1170
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1147 is 1170
9999 run: address to copy is 1170
9999 mem: storing 1170 in location 1148
 104 run: *val <- copy x
9999 mem: location 1145 is 98
9999 mem: location 1148 is 1170
9999 mem: location 1148 is 1170
9999 mem: storing 98 in location 1170
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1146 is 1163
9999 mem: location 1163 is 97
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1151
9999 mem: location 1146 is 1163
9999 run: address to copy is 1164
9999 run: its type is address
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1149
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1146 is 1163
9999 mem: location 1163 is 97
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1151
9999 mem: location 1146 is 1163
9999 run: address to copy is 1164
9999 mem: storing 1164 in location 1150
 104 run: *y <- copy new-node
9999 mem: location 1147 is 1170
9999 mem: location 1150 is 1164
9999 mem: location 1150 is 1164
9999 mem: storing 1170 in location 1164
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1170
9999 mem: location 1170 is 98
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1147 is 1170
9999 run: address to copy is 1172
9999 mem: storing 1172 in location 1150
 104 run: *y <- copy in
9999 mem: location 1146 is 1163
9999 mem: location 1150 is 1172
9999 mem: location 1150 is 1172
9999 mem: storing 1163 in location 1172
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1170
9999 mem: location 1170 is 98
9999 mem: location 1171 is 0
9999 mem: location 1172 is 1163
9999 mem: location 1147 is 1170
9999 run: address to copy is 1171
9999 mem: storing 1171 in location 1150
 104 run: *y <- copy next-node
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1171
9999 mem: location 1150 is 1171
9999 mem: storing 0 in location 1171
 104 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1147 is 1170
 103 run: curr <- next-duplex curr
9999 mem: location 1160 is 1163
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1163
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1163
9999 mem: location 1163 is 97
9999 mem: location 1164 is 1170
9999 mem: location 1165 is 1151
9999 mem: location 1168 is 1163
9999 run: address to copy is 1164
9999 run: its type is address
9999 mem: location 1164 is 1170
9999 mem: storing 1170 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1170
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1160
 103 run: idx <- add idx, 1
9999 mem: location 1159 is 1
9999 mem: storing 2 in location 1159
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 2
9999 mem: location 1158 is 16
9999 mem: storing 0 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1159 is 2
9999 mem: location 1157 is 1126
9999 mem: location 1159 is 2
9999 run: address to copy is 1129
9999 run: its type is character
9999 mem: location 1129 is 99
9999 mem: storing 99 in location 1162
 103 run: insert-duplex c, curr
9999 mem: location 1162 is 99
9999 mem: location 1160 is 1170
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1145
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1146
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1173
9999 mem: storing 1173 in location 1147
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1147 is 1173
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1147 is 1173
9999 run: address to copy is 1173
9999 mem: storing 1173 in location 1148
 104 run: *val <- copy x
9999 mem: location 1145 is 99
9999 mem: location 1148 is 1173
9999 mem: location 1148 is 1173
9999 mem: storing 99 in location 1173
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1146 is 1170
9999 mem: location 1170 is 98
9999 mem: location 1171 is 0
9999 mem: location 1172 is 1163
9999 mem: location 1146 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 0
9999 mem: storing 0 in location 1149
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1146 is 1170
9999 mem: location 1170 is 98
9999 mem: location 1171 is 0
9999 mem: location 1172 is 1163
9999 mem: location 1146 is 1170
9999 run: address to copy is 1171
9999 mem: storing 1171 in location 1150
 104 run: *y <- copy new-node
9999 mem: location 1147 is 1173
9999 mem: location 1150 is 1171
9999 mem: location 1150 is 1171
9999 mem: storing 1173 in location 1171
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1173
9999 mem: location 1173 is 99
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1147 is 1173
9999 run: address to copy is 1175
9999 mem: storing 1175 in location 1150
 104 run: *y <- copy in
9999 mem: location 1146 is 1170
9999 mem: location 1150 is 1175
9999 mem: location 1150 is 1175
9999 mem: storing 1170 in location 1175
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1173
9999 mem: location 1173 is 99
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1170
9999 mem: location 1147 is 1173
9999 run: address to copy is 1174
9999 mem: storing 1174 in location 1150
 104 run: *y <- copy next-node
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1174
9999 mem: location 1150 is 1174
9999 mem: storing 0 in location 1174
 104 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1147 is 1173
 103 run: curr <- next-duplex curr
9999 mem: location 1160 is 1170
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1170
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1170
9999 mem: location 1170 is 98
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1163
9999 mem: location 1168 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1160
 103 run: idx <- add idx, 1
9999 mem: location 1159 is 2
9999 mem: storing 3 in location 1159
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 3
9999 mem: location 1158 is 16
9999 mem: storing 0 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1159 is 3
9999 mem: location 1157 is 1126
9999 mem: location 1159 is 3
9999 run: address to copy is 1130
9999 run: its type is character
9999 mem: location 1130 is 100
9999 mem: storing 100 in location 1162
 103 run: insert-duplex c, curr
9999 mem: location 1162 is 100
9999 mem: location 1160 is 1173
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1145
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1146
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1176
9999 mem: storing 1176 in location 1147
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1147 is 1176
9999 mem: location 1176 is 0
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1147 is 1176
9999 run: address to copy is 1176
9999 mem: storing 1176 in location 1148
 104 run: *val <- copy x
9999 mem: location 1145 is 100
9999 mem: location 1148 is 1176
9999 mem: location 1148 is 1176
9999 mem: storing 100 in location 1176
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1146 is 1173
9999 mem: location 1173 is 99
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1170
9999 mem: location 1146 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 0
9999 mem: storing 0 in location 1149
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1146 is 1173
9999 mem: location 1173 is 99
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1170
9999 mem: location 1146 is 1173
9999 run: address to copy is 1174
9999 mem: storing 1174 in location 1150
 104 run: *y <- copy new-node
9999 mem: location 1147 is 1176
9999 mem: location 1150 is 1174
9999 mem: location 1150 is 1174
9999 mem: storing 1176 in location 1174
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1176
9999 mem: location 1176 is 100
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1147 is 1176
9999 run: address to copy is 1178
9999 mem: storing 1178 in location 1150
 104 run: *y <- copy in
9999 mem: location 1146 is 1173
9999 mem: location 1150 is 1178
9999 mem: location 1150 is 1178
9999 mem: storing 1173 in location 1178
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1176
9999 mem: location 1176 is 100
9999 mem: location 1177 is 0
9999 mem: location 1178 is 1173
9999 mem: location 1147 is 1176
9999 run: address to copy is 1177
9999 mem: storing 1177 in location 1150
 104 run: *y <- copy next-node
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1177
9999 mem: location 1150 is 1177
9999 mem: storing 0 in location 1177
 104 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1147 is 1176
 103 run: curr <- next-duplex curr
9999 mem: location 1160 is 1173
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1173
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1173
9999 mem: location 1173 is 99
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1168 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1160
 103 run: idx <- add idx, 1
9999 mem: location 1159 is 3
9999 mem: storing 4 in location 1159
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 4
9999 mem: location 1158 is 16
9999 mem: storing 0 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1159 is 4
9999 mem: location 1157 is 1126
9999 mem: location 1159 is 4
9999 run: address to copy is 1131
9999 run: its type is character
9999 mem: location 1131 is 101
9999 mem: storing 101 in location 1162
 103 run: insert-duplex c, curr
9999 mem: location 1162 is 101
9999 mem: location 1160 is 1176
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1145
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1146
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1179
9999 mem: storing 1179 in location 1147
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1147 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1147 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 1148
 104 run: *val <- copy x
9999 mem: location 1145 is 101
9999 mem: location 1148 is 1179
9999 mem: location 1148 is 1179
9999 mem: storing 101 in location 1179
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1146 is 1176
9999 mem: location 1176 is 100
9999 mem: location 1177 is 0
9999 mem: location 1178 is 1173
9999 mem: location 1146 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 0
9999 mem: storing 0 in location 1149
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1146 is 1176
9999 mem: location 1176 is 100
9999 mem: location 1177 is 0
9999 mem: location 1178 is 1173
9999 mem: location 1146 is 1176
9999 run: address to copy is 1177
9999 mem: storing 1177 in location 1150
 104 run: *y <- copy new-node
9999 mem: location 1147 is 1179
9999 mem: location 1150 is 1177
9999 mem: location 1150 is 1177
9999 mem: storing 1179 in location 1177
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1147 is 1179
9999 run: address to copy is 1181
9999 mem: storing 1181 in location 1150
 104 run: *y <- copy in
9999 mem: location 1146 is 1176
9999 mem: location 1150 is 1181
9999 mem: location 1150 is 1181
9999 mem: storing 1176 in location 1181
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1147 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1150
 104 run: *y <- copy next-node
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1180
9999 mem: location 1150 is 1180
9999 mem: storing 0 in location 1180
 104 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1147 is 1179
 103 run: curr <- next-duplex curr
9999 mem: location 1160 is 1176
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1176
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1176
9999 mem: location 1176 is 100
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1168 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1160
 103 run: idx <- add idx, 1
9999 mem: location 1159 is 4
9999 mem: storing 5 in location 1159
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 5
9999 mem: location 1158 is 16
9999 mem: storing 0 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1159 is 5
9999 mem: location 1157 is 1126
9999 mem: location 1159 is 5
9999 run: address to copy is 1132
9999 run: its type is character
9999 mem: location 1132 is 102
9999 mem: storing 102 in location 1162
 103 run: insert-duplex c, curr
9999 mem: location 1162 is 102
9999 mem: location 1160 is 1179
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 1145
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1146
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1182
9999 mem: storing 1182 in location 1147
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1147 is 1182
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1147 is 1182
9999 run: address to copy is 1182
9999 mem: storing 1182 in location 1148
 104 run: *val <- copy x
9999 mem: location 1145 is 102
9999 mem: location 1148 is 1182
9999 mem: location 1148 is 1182
9999 mem: storing 102 in location 1182
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1146 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1146 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1149
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1146 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1146 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1150
 104 run: *y <- copy new-node
9999 mem: location 1147 is 1182
9999 mem: location 1150 is 1180
9999 mem: location 1150 is 1180
9999 mem: storing 1182 in location 1180
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1182
9999 mem: location 1182 is 102
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1147 is 1182
9999 run: address to copy is 1184
9999 mem: storing 1184 in location 1150
 104 run: *y <- copy in
9999 mem: location 1146 is 1179
9999 mem: location 1150 is 1184
9999 mem: location 1150 is 1184
9999 mem: storing 1179 in location 1184
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1182
9999 mem: location 1182 is 102
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1179
9999 mem: location 1147 is 1182
9999 run: address to copy is 1183
9999 mem: storing 1183 in location 1150
 104 run: *y <- copy next-node
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1183
9999 mem: location 1150 is 1183
9999 mem: storing 0 in location 1183
 104 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1147 is 1182
 103 run: curr <- next-duplex curr
9999 mem: location 1160 is 1179
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1179
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1168 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1160
 103 run: idx <- add idx, 1
9999 mem: location 1159 is 5
9999 mem: storing 6 in location 1159
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 6
9999 mem: location 1158 is 16
9999 mem: storing 0 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1159 is 6
9999 mem: location 1157 is 1126
9999 mem: location 1159 is 6
9999 run: address to copy is 1133
9999 run: its type is character
9999 mem: location 1133 is 103
9999 mem: storing 103 in location 1162
 103 run: insert-duplex c, curr
9999 mem: location 1162 is 103
9999 mem: location 1160 is 1182
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 103 in location 1145
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1146
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1185
9999 mem: storing 1185 in location 1147
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1147 is 1185
9999 mem: location 1185 is 0
9999 mem: location 1186 is 0
9999 mem: location 1187 is 0
9999 mem: location 1147 is 1185
9999 run: address to copy is 1185
9999 mem: storing 1185 in location 1148
 104 run: *val <- copy x
9999 mem: location 1145 is 103
9999 mem: location 1148 is 1185
9999 mem: location 1148 is 1185
9999 mem: storing 103 in location 1185
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1146 is 1182
9999 mem: location 1182 is 102
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1179
9999 mem: location 1146 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 0
9999 mem: storing 0 in location 1149
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1146 is 1182
9999 mem: location 1182 is 102
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1179
9999 mem: location 1146 is 1182
9999 run: address to copy is 1183
9999 mem: storing 1183 in location 1150
 104 run: *y <- copy new-node
9999 mem: location 1147 is 1185
9999 mem: location 1150 is 1183
9999 mem: location 1150 is 1183
9999 mem: storing 1185 in location 1183
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1185
9999 mem: location 1185 is 103
9999 mem: location 1186 is 0
9999 mem: location 1187 is 0
9999 mem: location 1147 is 1185
9999 run: address to copy is 1187
9999 mem: storing 1187 in location 1150
 104 run: *y <- copy in
9999 mem: location 1146 is 1182
9999 mem: location 1150 is 1187
9999 mem: location 1150 is 1187
9999 mem: storing 1182 in location 1187
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1185
9999 mem: location 1185 is 103
9999 mem: location 1186 is 0
9999 mem: location 1187 is 1182
9999 mem: location 1147 is 1185
9999 run: address to copy is 1186
9999 mem: storing 1186 in location 1150
 104 run: *y <- copy next-node
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1186
9999 mem: location 1150 is 1186
9999 mem: storing 0 in location 1186
 104 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1147 is 1185
 103 run: curr <- next-duplex curr
9999 mem: location 1160 is 1182
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1182
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1182
9999 mem: location 1182 is 102
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1168 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1160
 103 run: idx <- add idx, 1
9999 mem: location 1159 is 6
9999 mem: storing 7 in location 1159
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 7
9999 mem: location 1158 is 16
9999 mem: storing 0 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1159 is 7
9999 mem: location 1157 is 1126
9999 mem: location 1159 is 7
9999 run: address to copy is 1134
9999 run: its type is character
9999 mem: location 1134 is 104
9999 mem: storing 104 in location 1162
 103 run: insert-duplex c, curr
9999 mem: location 1162 is 104
9999 mem: location 1160 is 1185
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 104 in location 1145
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1146
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1188
9999 mem: storing 1188 in location 1147
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1147 is 1188
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1190 is 0
9999 mem: location 1147 is 1188
9999 run: address to copy is 1188
9999 mem: storing 1188 in location 1148
 104 run: *val <- copy x
9999 mem: location 1145 is 104
9999 mem: location 1148 is 1188
9999 mem: location 1148 is 1188
9999 mem: storing 104 in location 1188
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1146 is 1185
9999 mem: location 1185 is 103
9999 mem: location 1186 is 0
9999 mem: location 1187 is 1182
9999 mem: location 1146 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 0
9999 mem: storing 0 in location 1149
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1146 is 1185
9999 mem: location 1185 is 103
9999 mem: location 1186 is 0
9999 mem: location 1187 is 1182
9999 mem: location 1146 is 1185
9999 run: address to copy is 1186
9999 mem: storing 1186 in location 1150
 104 run: *y <- copy new-node
9999 mem: location 1147 is 1188
9999 mem: location 1150 is 1186
9999 mem: location 1150 is 1186
9999 mem: storing 1188 in location 1186
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 0
9999 mem: location 1190 is 0
9999 mem: location 1147 is 1188
9999 run: address to copy is 1190
9999 mem: storing 1190 in location 1150
 104 run: *y <- copy in
9999 mem: location 1146 is 1185
9999 mem: location 1150 is 1190
9999 mem: location 1150 is 1190
9999 mem: storing 1185 in location 1190
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1185
9999 mem: location 1147 is 1188
9999 run: address to copy is 1189
9999 mem: storing 1189 in location 1150
 104 run: *y <- copy next-node
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1189
9999 mem: location 1150 is 1189
9999 mem: storing 0 in location 1189
 104 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1147 is 1188
 103 run: curr <- next-duplex curr
9999 mem: location 1160 is 1185
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1185
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1185
9999 mem: location 1185 is 103
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1168 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1160
 103 run: idx <- add idx, 1
9999 mem: location 1159 is 7
9999 mem: storing 8 in location 1159
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 8
9999 mem: location 1158 is 16
9999 mem: storing 0 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1159 is 8
9999 mem: location 1157 is 1126
9999 mem: location 1159 is 8
9999 run: address to copy is 1135
9999 run: its type is character
9999 mem: location 1135 is 105
9999 mem: storing 105 in location 1162
 103 run: insert-duplex c, curr
9999 mem: location 1162 is 105
9999 mem: location 1160 is 1188
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 105 in location 1145
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1146
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1191
9999 mem: storing 1191 in location 1147
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1147 is 1191
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1147 is 1191
9999 run: address to copy is 1191
9999 mem: storing 1191 in location 1148
 104 run: *val <- copy x
9999 mem: location 1145 is 105
9999 mem: location 1148 is 1191
9999 mem: location 1148 is 1191
9999 mem: storing 105 in location 1191
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1146 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1185
9999 mem: location 1146 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 0
9999 mem: storing 0 in location 1149
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1146 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1185
9999 mem: location 1146 is 1188
9999 run: address to copy is 1189
9999 mem: storing 1189 in location 1150
 104 run: *y <- copy new-node
9999 mem: location 1147 is 1191
9999 mem: location 1150 is 1189
9999 mem: location 1150 is 1189
9999 mem: storing 1191 in location 1189
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1147 is 1191
9999 run: address to copy is 1193
9999 mem: storing 1193 in location 1150
 104 run: *y <- copy in
9999 mem: location 1146 is 1188
9999 mem: location 1150 is 1193
9999 mem: location 1150 is 1193
9999 mem: storing 1188 in location 1193
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 0
9999 mem: location 1193 is 1188
9999 mem: location 1147 is 1191
9999 run: address to copy is 1192
9999 mem: storing 1192 in location 1150
 104 run: *y <- copy next-node
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1192
9999 mem: location 1150 is 1192
9999 mem: storing 0 in location 1192
 104 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1147 is 1191
 103 run: curr <- next-duplex curr
9999 mem: location 1160 is 1188
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1188
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1168 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1160
 103 run: idx <- add idx, 1
9999 mem: location 1159 is 8
9999 mem: storing 9 in location 1159
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 9
9999 mem: location 1158 is 16
9999 mem: storing 0 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1159 is 9
9999 mem: location 1157 is 1126
9999 mem: location 1159 is 9
9999 run: address to copy is 1136
9999 run: its type is character
9999 mem: location 1136 is 106
9999 mem: storing 106 in location 1162
 103 run: insert-duplex c, curr
9999 mem: location 1162 is 106
9999 mem: location 1160 is 1191
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 106 in location 1145
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1146
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1194
9999 mem: storing 1194 in location 1147
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1147 is 1194
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1147 is 1194
9999 run: address to copy is 1194
9999 mem: storing 1194 in location 1148
 104 run: *val <- copy x
9999 mem: location 1145 is 106
9999 mem: location 1148 is 1194
9999 mem: location 1148 is 1194
9999 mem: storing 106 in location 1194
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1146 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 0
9999 mem: location 1193 is 1188
9999 mem: location 1146 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 0
9999 mem: storing 0 in location 1149
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1146 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 0
9999 mem: location 1193 is 1188
9999 mem: location 1146 is 1191
9999 run: address to copy is 1192
9999 mem: storing 1192 in location 1150
 104 run: *y <- copy new-node
9999 mem: location 1147 is 1194
9999 mem: location 1150 is 1192
9999 mem: location 1150 is 1192
9999 mem: storing 1194 in location 1192
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1147 is 1194
9999 run: address to copy is 1196
9999 mem: storing 1196 in location 1150
 104 run: *y <- copy in
9999 mem: location 1146 is 1191
9999 mem: location 1150 is 1196
9999 mem: location 1150 is 1196
9999 mem: storing 1191 in location 1196
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 0
9999 mem: location 1196 is 1191
9999 mem: location 1147 is 1194
9999 run: address to copy is 1195
9999 mem: storing 1195 in location 1150
 104 run: *y <- copy next-node
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1195
9999 mem: location 1150 is 1195
9999 mem: storing 0 in location 1195
 104 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1147 is 1194
 103 run: curr <- next-duplex curr
9999 mem: location 1160 is 1191
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1191
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1168 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1160
 103 run: idx <- add idx, 1
9999 mem: location 1159 is 9
9999 mem: storing 10 in location 1159
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 10
9999 mem: location 1158 is 16
9999 mem: storing 0 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1159 is 10
9999 mem: location 1157 is 1126
9999 mem: location 1159 is 10
9999 run: address to copy is 1137
9999 run: its type is character
9999 mem: location 1137 is 10
9999 mem: storing 10 in location 1162
 103 run: insert-duplex c, curr
9999 mem: location 1162 is 10
9999 mem: location 1160 is 1194
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1145
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1146
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1197
9999 mem: storing 1197 in location 1147
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1147 is 1197
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1199 is 0
9999 mem: location 1147 is 1197
9999 run: address to copy is 1197
9999 mem: storing 1197 in location 1148
 104 run: *val <- copy x
9999 mem: location 1145 is 10
9999 mem: location 1148 is 1197
9999 mem: location 1148 is 1197
9999 mem: storing 10 in location 1197
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1146 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 0
9999 mem: location 1196 is 1191
9999 mem: location 1146 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 0
9999 mem: storing 0 in location 1149
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1146 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 0
9999 mem: location 1196 is 1191
9999 mem: location 1146 is 1194
9999 run: address to copy is 1195
9999 mem: storing 1195 in location 1150
 104 run: *y <- copy new-node
9999 mem: location 1147 is 1197
9999 mem: location 1150 is 1195
9999 mem: location 1150 is 1195
9999 mem: storing 1197 in location 1195
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 0
9999 mem: location 1199 is 0
9999 mem: location 1147 is 1197
9999 run: address to copy is 1199
9999 mem: storing 1199 in location 1150
 104 run: *y <- copy in
9999 mem: location 1146 is 1194
9999 mem: location 1150 is 1199
9999 mem: location 1150 is 1199
9999 mem: storing 1194 in location 1199
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 0
9999 mem: location 1199 is 1194
9999 mem: location 1147 is 1197
9999 run: address to copy is 1198
9999 mem: storing 1198 in location 1150
 104 run: *y <- copy next-node
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1198
9999 mem: location 1150 is 1198
9999 mem: storing 0 in location 1198
 104 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1147 is 1197
 103 run: curr <- next-duplex curr
9999 mem: location 1160 is 1194
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1168 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1160
 103 run: idx <- add idx, 1
9999 mem: location 1159 is 10
9999 mem: storing 11 in location 1159
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 11
9999 mem: location 1158 is 16
9999 mem: storing 0 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1159 is 11
9999 mem: location 1157 is 1126
9999 mem: location 1159 is 11
9999 run: address to copy is 1138
9999 run: its type is character
9999 mem: location 1138 is 107
9999 mem: storing 107 in location 1162
 103 run: insert-duplex c, curr
9999 mem: location 1162 is 107
9999 mem: location 1160 is 1197
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 107 in location 1145
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1146
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1200
9999 mem: storing 1200 in location 1147
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1147 is 1200
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1147 is 1200
9999 run: address to copy is 1200
9999 mem: storing 1200 in location 1148
 104 run: *val <- copy x
9999 mem: location 1145 is 107
9999 mem: location 1148 is 1200
9999 mem: location 1148 is 1200
9999 mem: storing 107 in location 1200
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1146 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 0
9999 mem: location 1199 is 1194
9999 mem: location 1146 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 0
9999 mem: storing 0 in location 1149
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1146 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 0
9999 mem: location 1199 is 1194
9999 mem: location 1146 is 1197
9999 run: address to copy is 1198
9999 mem: storing 1198 in location 1150
 104 run: *y <- copy new-node
9999 mem: location 1147 is 1200
9999 mem: location 1150 is 1198
9999 mem: location 1150 is 1198
9999 mem: storing 1200 in location 1198
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1147 is 1200
9999 run: address to copy is 1202
9999 mem: storing 1202 in location 1150
 104 run: *y <- copy in
9999 mem: location 1146 is 1197
9999 mem: location 1150 is 1202
9999 mem: location 1150 is 1202
9999 mem: storing 1197 in location 1202
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1197
9999 mem: location 1147 is 1200
9999 run: address to copy is 1201
9999 mem: storing 1201 in location 1150
 104 run: *y <- copy next-node
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1201
9999 mem: location 1150 is 1201
9999 mem: storing 0 in location 1201
 104 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1147 is 1200
 103 run: curr <- next-duplex curr
9999 mem: location 1160 is 1197
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1197
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1168 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1160
 103 run: idx <- add idx, 1
9999 mem: location 1159 is 11
9999 mem: storing 12 in location 1159
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 12
9999 mem: location 1158 is 16
9999 mem: storing 0 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1159 is 12
9999 mem: location 1157 is 1126
9999 mem: location 1159 is 12
9999 run: address to copy is 1139
9999 run: its type is character
9999 mem: location 1139 is 10
9999 mem: storing 10 in location 1162
 103 run: insert-duplex c, curr
9999 mem: location 1162 is 10
9999 mem: location 1160 is 1200
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1145
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1146
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1203
9999 mem: storing 1203 in location 1147
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1147 is 1203
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1205 is 0
9999 mem: location 1147 is 1203
9999 run: address to copy is 1203
9999 mem: storing 1203 in location 1148
 104 run: *val <- copy x
9999 mem: location 1145 is 10
9999 mem: location 1148 is 1203
9999 mem: location 1148 is 1203
9999 mem: storing 10 in location 1203
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1146 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1197
9999 mem: location 1146 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 0
9999 mem: storing 0 in location 1149
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1146 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1197
9999 mem: location 1146 is 1200
9999 run: address to copy is 1201
9999 mem: storing 1201 in location 1150
 104 run: *y <- copy new-node
9999 mem: location 1147 is 1203
9999 mem: location 1150 is 1201
9999 mem: location 1150 is 1201
9999 mem: storing 1203 in location 1201
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 0
9999 mem: location 1205 is 0
9999 mem: location 1147 is 1203
9999 run: address to copy is 1205
9999 mem: storing 1205 in location 1150
 104 run: *y <- copy in
9999 mem: location 1146 is 1200
9999 mem: location 1150 is 1205
9999 mem: location 1150 is 1205
9999 mem: storing 1200 in location 1205
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 0
9999 mem: location 1205 is 1200
9999 mem: location 1147 is 1203
9999 run: address to copy is 1204
9999 mem: storing 1204 in location 1150
 104 run: *y <- copy next-node
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1204
9999 mem: location 1150 is 1204
9999 mem: storing 0 in location 1204
 104 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1147 is 1203
 103 run: curr <- next-duplex curr
9999 mem: location 1160 is 1200
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1200
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1168 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1160
 103 run: idx <- add idx, 1
9999 mem: location 1159 is 12
9999 mem: storing 13 in location 1159
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 13
9999 mem: location 1158 is 16
9999 mem: storing 0 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1159 is 13
9999 mem: location 1157 is 1126
9999 mem: location 1159 is 13
9999 run: address to copy is 1140
9999 run: its type is character
9999 mem: location 1140 is 108
9999 mem: storing 108 in location 1162
 103 run: insert-duplex c, curr
9999 mem: location 1162 is 108
9999 mem: location 1160 is 1203
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 108 in location 1145
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1146
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1206
9999 mem: storing 1206 in location 1147
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1147 is 1206
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: location 1208 is 0
9999 mem: location 1147 is 1206
9999 run: address to copy is 1206
9999 mem: storing 1206 in location 1148
 104 run: *val <- copy x
9999 mem: location 1145 is 108
9999 mem: location 1148 is 1206
9999 mem: location 1148 is 1206
9999 mem: storing 108 in location 1206
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1146 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 0
9999 mem: location 1205 is 1200
9999 mem: location 1146 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 0
9999 mem: storing 0 in location 1149
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1146 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 0
9999 mem: location 1205 is 1200
9999 mem: location 1146 is 1203
9999 run: address to copy is 1204
9999 mem: storing 1204 in location 1150
 104 run: *y <- copy new-node
9999 mem: location 1147 is 1206
9999 mem: location 1150 is 1204
9999 mem: location 1150 is 1204
9999 mem: storing 1206 in location 1204
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1206
9999 mem: location 1206 is 108
9999 mem: location 1207 is 0
9999 mem: location 1208 is 0
9999 mem: location 1147 is 1206
9999 run: address to copy is 1208
9999 mem: storing 1208 in location 1150
 104 run: *y <- copy in
9999 mem: location 1146 is 1203
9999 mem: location 1150 is 1208
9999 mem: location 1150 is 1208
9999 mem: storing 1203 in location 1208
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1206
9999 mem: location 1206 is 108
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1203
9999 mem: location 1147 is 1206
9999 run: address to copy is 1207
9999 mem: storing 1207 in location 1150
 104 run: *y <- copy next-node
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1207
9999 mem: location 1150 is 1207
9999 mem: storing 0 in location 1207
 104 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1147 is 1206
 103 run: curr <- next-duplex curr
9999 mem: location 1160 is 1203
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1203
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1168 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1160
 103 run: idx <- add idx, 1
9999 mem: location 1159 is 13
9999 mem: storing 14 in location 1159
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 14
9999 mem: location 1158 is 16
9999 mem: storing 0 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1159 is 14
9999 mem: location 1157 is 1126
9999 mem: location 1159 is 14
9999 run: address to copy is 1141
9999 run: its type is character
9999 mem: location 1141 is 10
9999 mem: storing 10 in location 1162
 103 run: insert-duplex c, curr
9999 mem: location 1162 is 10
9999 mem: location 1160 is 1206
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1145
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1146
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1209
9999 mem: storing 1209 in location 1147
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1147 is 1209
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1211 is 0
9999 mem: location 1147 is 1209
9999 run: address to copy is 1209
9999 mem: storing 1209 in location 1148
 104 run: *val <- copy x
9999 mem: location 1145 is 10
9999 mem: location 1148 is 1209
9999 mem: location 1148 is 1209
9999 mem: storing 10 in location 1209
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1146 is 1206
9999 mem: location 1206 is 108
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1203
9999 mem: location 1146 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 0
9999 mem: storing 0 in location 1149
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1146 is 1206
9999 mem: location 1206 is 108
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1203
9999 mem: location 1146 is 1206
9999 run: address to copy is 1207
9999 mem: storing 1207 in location 1150
 104 run: *y <- copy new-node
9999 mem: location 1147 is 1209
9999 mem: location 1150 is 1207
9999 mem: location 1150 is 1207
9999 mem: storing 1209 in location 1207
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1209
9999 mem: location 1209 is 10
9999 mem: location 1210 is 0
9999 mem: location 1211 is 0
9999 mem: location 1147 is 1209
9999 run: address to copy is 1211
9999 mem: storing 1211 in location 1150
 104 run: *y <- copy in
9999 mem: location 1146 is 1206
9999 mem: location 1150 is 1211
9999 mem: location 1150 is 1211
9999 mem: storing 1206 in location 1211
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1209
9999 mem: location 1209 is 10
9999 mem: location 1210 is 0
9999 mem: location 1211 is 1206
9999 mem: location 1147 is 1209
9999 run: address to copy is 1210
9999 mem: storing 1210 in location 1150
 104 run: *y <- copy next-node
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1210
9999 mem: location 1150 is 1210
9999 mem: storing 0 in location 1210
 104 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1147 is 1209
 103 run: curr <- next-duplex curr
9999 mem: location 1160 is 1206
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1206
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1206
9999 mem: location 1206 is 108
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1168 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1209
9999 run: result 0 is 1209
9999 mem: storing 1209 in location 1160
 103 run: idx <- add idx, 1
9999 mem: location 1159 is 14
9999 mem: storing 15 in location 1159
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 15
9999 mem: location 1158 is 16
9999 mem: storing 0 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1157 is 1126
9999 mem: location 1126 is 16
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1132 is 102
9999 mem: location 1133 is 103
9999 mem: location 1134 is 104
9999 mem: location 1135 is 105
9999 mem: location 1136 is 106
9999 mem: location 1137 is 10
9999 mem: location 1138 is 107
9999 mem: location 1139 is 10
9999 mem: location 1140 is 108
9999 mem: location 1141 is 10
9999 mem: location 1142 is 109
9999 mem: location 1159 is 15
9999 mem: location 1157 is 1126
9999 mem: location 1159 is 15
9999 run: address to copy is 1142
9999 run: its type is character
9999 mem: location 1142 is 109
9999 mem: storing 109 in location 1162
 103 run: insert-duplex c, curr
9999 mem: location 1162 is 109
9999 mem: location 1160 is 1209
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 109 in location 1145
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1209 in location 1146
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1212
9999 mem: storing 1212 in location 1147
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1147 is 1212
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1147 is 1212
9999 run: address to copy is 1212
9999 mem: storing 1212 in location 1148
 104 run: *val <- copy x
9999 mem: location 1145 is 109
9999 mem: location 1148 is 1212
9999 mem: location 1148 is 1212
9999 mem: storing 109 in location 1212
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1146 is 1209
9999 mem: location 1209 is 10
9999 mem: location 1210 is 0
9999 mem: location 1211 is 1206
9999 mem: location 1146 is 1209
9999 run: address to copy is 1210
9999 run: its type is address
9999 mem: location 1210 is 0
9999 mem: storing 0 in location 1149
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1146 is 1209
9999 mem: location 1209 is 10
9999 mem: location 1210 is 0
9999 mem: location 1211 is 1206
9999 mem: location 1146 is 1209
9999 run: address to copy is 1210
9999 mem: storing 1210 in location 1150
 104 run: *y <- copy new-node
9999 mem: location 1147 is 1212
9999 mem: location 1150 is 1210
9999 mem: location 1150 is 1210
9999 mem: storing 1212 in location 1210
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1212
9999 mem: location 1212 is 109
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1147 is 1212
9999 run: address to copy is 1214
9999 mem: storing 1214 in location 1150
 104 run: *y <- copy in
9999 mem: location 1146 is 1209
9999 mem: location 1150 is 1214
9999 mem: location 1150 is 1214
9999 mem: storing 1209 in location 1214
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1212
9999 mem: location 1212 is 109
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1209
9999 mem: location 1147 is 1212
9999 run: address to copy is 1213
9999 mem: storing 1213 in location 1150
 104 run: *y <- copy next-node
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1213
9999 mem: location 1150 is 1213
9999 mem: storing 0 in location 1213
 104 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1147 is 1212
 103 run: curr <- next-duplex curr
9999 mem: location 1160 is 1209
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1209 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1209
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1209
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1168 is 1209
9999 run: address to copy is 1210
9999 run: its type is address
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1212
9999 run: result 0 is 1212
9999 mem: storing 1212 in location 1160
 103 run: idx <- add idx, 1
9999 mem: location 1159 is 15
9999 mem: storing 16 in location 1159
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1159 is 16
9999 mem: location 1158 is 16
9999 mem: storing 1 in location 1161
 103 run: break-if done?, 
9999 mem: location 1161 is 1
9999 run: jumping to instruction 18
 103 run: reply editor/same-as-ingredient:0
9999 mem: location 1156 is 1000
9999 run: result 0 is 1000
9999 mem: storing 1000 in location 1121
 102 run: y <- get-address *result, before-cursor:offset
9999 mem: location 1121 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1121 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1125
 102 run: *y <- copy *init
9999 mem: location 1123 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1123 is 1000
9999 mem: location 1125 is 1003
9999 mem: location 1123 is 1000
9999 mem: location 1125 is 1003
9999 mem: storing 1151 in location 1003
 102 run: _, screen <- render screen, result
9999 mem: location 1118 is 1009
9999 mem: location 1121 is 1000
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: new alloc: 1215
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1217
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1218
 103 run: jump-if editor, 1:offset
9999 mem: location 1218 is 1000
9999 run: jumping to instruction 5
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1218 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1219
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1217 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 104 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1169
 104 run: reply height
9999 mem: location 1169 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1220
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1218 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1221
 103 run: hide-screen screen
9999 mem: location 1217 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 1244
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1246
 104 run: break-unless screen, 
9999 mem: location 1246 is 1009
9999 run: jump-unless fell through
 104 run: reply screen
9999 mem: location 1246 is 1009
 103 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1218 is 1000
9999 run: address to copy is 1001
9999 run: its type is address
9999 mem: location 1001 is 1151
9999 mem: storing 1151 in location 1222
 103 run: prev:address:duplex-list <- copy curr
9999 mem: location 1222 is 1151
9999 mem: storing 1151 in location 1223
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1151
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1151 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1151
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1151
9999 mem: location 1151 is 167
9999 mem: location 1152 is 1163
9999 mem: location 1153 is 0
9999 mem: location 1168 is 1151
9999 run: address to copy is 1152
9999 run: its type is address
9999 mem: location 1152 is 1163
9999 mem: storing 1163 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1163
9999 run: result 0 is 1163
9999 mem: storing 1163 in location 1222
 103 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1224
 103 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1225
 103 run: column:number <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1218 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1227
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1218 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1228
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1218 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1229
 103 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 1
9999 mem: location 1226 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1247
schedule: move-cursor/render/new-editor/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1250
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 104 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 104 run: *row <- copy new-row
9999 mem: location 1250 is 1
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 104 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 103 run: break-unless curr, 
9999 mem: location 1222 is 1163
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 0
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1232
 103 run: break-unless at-cursor?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 103 run: *before-cursor <- prev-duplex curr
9999 mem: location 1222 is 1163
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1163
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1168 is 1163
9999 mem: location 1163 is 97
9999 mem: location 1164 is 1170
9999 mem: location 1165 is 1151
9999 mem: location 1168 is 1163
9999 run: address to copy is 1165
9999 run: its type is address
9999 mem: location 1165 is 1151
9999 mem: storing 1151 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1151
9999 run: result 0 is 1151
9999 mem: location 1229 is 1003
9999 mem: storing 1151 in location 1003
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1163
9999 mem: location 1163 is 97
9999 mem: location 1164 is 1170
9999 mem: location 1165 is 1151
9999 mem: location 1222 is 1163
9999 run: address to copy is 1163
9999 run: its type is number
9999 mem: location 1163 is 97
9999 mem: storing 97 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 97
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1254
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1256
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1257
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1256 is 7
9999 mem: storing 1 in location 1258
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1257 is 97
9999 mem: storing 0 in location 1259
 104 run: break-unless starting-comment?, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1260
 104 run: break-unless color-is-blue?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1257 is 97
9999 mem: storing 0 in location 1262
 104 run: break-unless starting-assignment?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1263
 104 run: break-unless color-is-red?, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1256 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 97
9999 mem: storing 0 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 103 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 103 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 97
9999 mem: location 1224 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: new alloc: 1265
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 97
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 97
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 10
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 10
9999 mem: storing 1035 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1286 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 97
9999 mem: location 1287 is 1035
9999 mem: location 1287 is 1035
9999 mem: storing 97 in location 1035
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1286 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1036
9999 mem: location 1288 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1163
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1163
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1163
9999 mem: location 1163 is 97
9999 mem: location 1164 is 1170
9999 mem: location 1165 is 1151
9999 mem: location 1168 is 1163
9999 run: address to copy is 1164
9999 run: its type is address
9999 mem: location 1164 is 1170
9999 mem: storing 1170 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1170
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1151
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1151 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1151
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1151
9999 mem: location 1151 is 167
9999 mem: location 1152 is 1163
9999 mem: location 1153 is 0
9999 mem: location 1168 is 1151
9999 run: address to copy is 1152
9999 run: its type is address
9999 mem: location 1152 is 1163
9999 mem: storing 1163 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1163
9999 run: result 0 is 1163
9999 mem: storing 1163 in location 1223
 103 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1222 is 1170
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 1
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1232
 103 run: break-unless at-cursor?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1170
9999 mem: location 1170 is 98
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1163
9999 mem: location 1222 is 1170
9999 run: address to copy is 1170
9999 run: its type is number
9999 mem: location 1170 is 98
9999 mem: storing 98 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 98
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1256
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1257
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1256 is 7
9999 mem: storing 1 in location 1258
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1257 is 98
9999 mem: storing 0 in location 1259
 104 run: break-unless starting-comment?, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1260
 104 run: break-unless color-is-blue?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1257 is 98
9999 mem: storing 0 in location 1262
 104 run: break-unless starting-assignment?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1263
 104 run: break-unless color-is-red?, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1256 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 98
9999 mem: storing 0 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 103 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 103 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 98
9999 mem: location 1224 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 98
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 98
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 11
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 11
9999 mem: storing 1037 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1286 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 98
9999 mem: location 1287 is 1037
9999 mem: location 1287 is 1037
9999 mem: storing 98 in location 1037
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1286 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1038
9999 mem: location 1288 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1170
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1170
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1170
9999 mem: location 1170 is 98
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1163
9999 mem: location 1168 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1163
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1163
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1163
9999 mem: location 1163 is 97
9999 mem: location 1164 is 1170
9999 mem: location 1165 is 1151
9999 mem: location 1168 is 1163
9999 run: address to copy is 1164
9999 run: its type is address
9999 mem: location 1164 is 1170
9999 mem: storing 1170 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1170
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1223
 103 run: column <- add column, 1
9999 mem: location 1226 is 1
9999 mem: storing 2 in location 1226
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1222 is 1173
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 2
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1232
 103 run: break-unless at-cursor?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1173
9999 mem: location 1173 is 99
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1222 is 1173
9999 run: address to copy is 1173
9999 run: its type is number
9999 mem: location 1173 is 99
9999 mem: storing 99 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 99
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1256
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1257
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1256 is 7
9999 mem: storing 1 in location 1258
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1257 is 99
9999 mem: storing 0 in location 1259
 104 run: break-unless starting-comment?, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1260
 104 run: break-unless color-is-blue?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1257 is 99
9999 mem: storing 0 in location 1262
 104 run: break-unless starting-assignment?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1263
 104 run: break-unless color-is-red?, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1256 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 99
9999 mem: storing 0 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 2
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 103 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 103 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 99
9999 mem: location 1224 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 99
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 99
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 12
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 12
9999 mem: storing 1039 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1286 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 99
9999 mem: location 1287 is 1039
9999 mem: location 1287 is 1039
9999 mem: storing 99 in location 1039
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1286 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1040
9999 mem: location 1288 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1173
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1173
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1173
9999 mem: location 1173 is 99
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1168 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1170
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1170
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1170
9999 mem: location 1170 is 98
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1163
9999 mem: location 1168 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1223
 103 run: column <- add column, 1
9999 mem: location 1226 is 2
9999 mem: storing 3 in location 1226
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1222 is 1176
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 3
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1232
 103 run: break-unless at-cursor?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1176
9999 mem: location 1176 is 100
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1222 is 1176
9999 run: address to copy is 1176
9999 run: its type is number
9999 mem: location 1176 is 100
9999 mem: storing 100 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 100
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1256
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1257
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1256 is 7
9999 mem: storing 1 in location 1258
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1257 is 100
9999 mem: storing 0 in location 1259
 104 run: break-unless starting-comment?, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1260
 104 run: break-unless color-is-blue?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1257 is 100
9999 mem: storing 0 in location 1262
 104 run: break-unless starting-assignment?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1263
 104 run: break-unless color-is-red?, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1256 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 100
9999 mem: storing 0 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 3
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 103 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 103 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 100
9999 mem: location 1224 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 100
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 100
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 13
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 13
9999 mem: storing 1041 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1286 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 100
9999 mem: location 1287 is 1041
9999 mem: location 1287 is 1041
9999 mem: storing 100 in location 1041
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1286 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1042
9999 mem: location 1288 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1176
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1176
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1176
9999 mem: location 1176 is 100
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1168 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1173
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1173
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1173
9999 mem: location 1173 is 99
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1168 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1223
 103 run: column <- add column, 1
9999 mem: location 1226 is 3
9999 mem: storing 4 in location 1226
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1222 is 1179
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 4
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1232
 103 run: break-unless at-cursor?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1222 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 101
9999 mem: storing 101 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 101
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1256
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1257
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1256 is 7
9999 mem: storing 1 in location 1258
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1257 is 101
9999 mem: storing 0 in location 1259
 104 run: break-unless starting-comment?, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1260
 104 run: break-unless color-is-blue?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1257 is 101
9999 mem: storing 0 in location 1262
 104 run: break-unless starting-assignment?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1263
 104 run: break-unless color-is-red?, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1256 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 101
9999 mem: storing 0 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 4
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1236
schedule: render/new-editor/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 103 run: break-unless at-right?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, 8617/loop-back-to-left, 245/grey
9999 mem: location 1217 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 8617
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 8617
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 14
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 14
9999 mem: storing 1043 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1286 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 8617
9999 mem: location 1287 is 1043
9999 mem: location 1287 is 1043
9999 mem: storing 8617 in location 1043
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1043
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 7
9999 mem: location 1286 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 245
9999 mem: location 1288 is 1044
9999 mem: location 1288 is 1044
9999 mem: storing 245 in location 1044
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 103 run: row <- add row, 1
9999 mem: location 1225 is 1
9999 mem: storing 2 in location 1225
 103 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 2
9999 mem: location 1226 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1250
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 104 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 104 run: *row <- copy new-row
9999 mem: location 1250 is 2
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 104 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 103 run: loop +next-character:label
9999 run: jumping to instruction 22
 103 run: break-unless curr, 
9999 mem: location 1222 is 1179
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1222 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 101
9999 mem: storing 101 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 101
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1256
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1257
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1256 is 7
9999 mem: storing 1 in location 1258
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1257 is 101
9999 mem: storing 0 in location 1259
 104 run: break-unless starting-comment?, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1260
 104 run: break-unless color-is-blue?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1257 is 101
9999 mem: storing 0 in location 1262
 104 run: break-unless starting-assignment?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1263
 104 run: break-unless color-is-red?, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1256 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 101
9999 mem: storing 0 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 103 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 103 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 101
9999 mem: location 1224 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 101
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 101
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 20
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 20
9999 mem: storing 1055 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1286 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 101
9999 mem: location 1287 is 1055
9999 mem: location 1287 is 1055
9999 mem: storing 101 in location 1055
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1055
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1286 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1056
9999 mem: location 1288 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1179
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1179
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1168 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1176
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1176
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1176
9999 mem: location 1176 is 100
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1168 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1223
 103 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1222 is 1182
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1182
9999 mem: location 1182 is 102
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1222 is 1182
9999 run: address to copy is 1182
9999 run: its type is number
9999 mem: location 1182 is 102
9999 mem: storing 102 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 102
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1256
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1257
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1256 is 7
9999 mem: storing 1 in location 1258
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1257 is 102
9999 mem: storing 0 in location 1259
 104 run: break-unless starting-comment?, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1260
 104 run: break-unless color-is-blue?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1257 is 102
9999 mem: storing 0 in location 1262
 104 run: break-unless starting-assignment?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1263
 104 run: break-unless color-is-red?, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1256 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 102
9999 mem: storing 0 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 103 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 103 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 102
9999 mem: location 1224 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 102
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 102
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 21
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 21
9999 mem: storing 1057 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1286 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 102
9999 mem: location 1287 is 1057
9999 mem: location 1287 is 1057
9999 mem: storing 102 in location 1057
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1057
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1286 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1058
9999 mem: location 1288 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1182
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1182
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1182
9999 mem: location 1182 is 102
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1168 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1179
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1179
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1168 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1223
 103 run: column <- add column, 1
9999 mem: location 1226 is 1
9999 mem: storing 2 in location 1226
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1222 is 1185
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1185
9999 mem: location 1185 is 103
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1222 is 1185
9999 run: address to copy is 1185
9999 run: its type is number
9999 mem: location 1185 is 103
9999 mem: storing 103 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 103
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1256
 104 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1257
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1256 is 7
9999 mem: storing 1 in location 1258
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1257 is 103
9999 mem: storing 0 in location 1259
 104 run: break-unless starting-comment?, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1260
 104 run: break-unless color-is-blue?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1257 is 103
9999 mem: storing 0 in location 1262
 104 run: break-unless starting-assignment?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1263
 104 run: break-unless color-is-red?, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1256 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 103
9999 mem: storing 0 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 2
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 103 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 103 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 103
9999 mem: location 1224 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 103
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 103
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 22
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 22
9999 mem: storing 1059 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1286 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 103
9999 mem: location 1287 is 1059
9999 mem: location 1287 is 1059
9999 mem: storing 103 in location 1059
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1059
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1286 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1060
9999 mem: location 1288 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1185
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1185
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1185
9999 mem: location 1185 is 103
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1168 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1182
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1182
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1182
9999 mem: location 1182 is 102
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1168 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1223
 103 run: column <- add column, 1
9999 mem: location 1226 is 2
9999 mem: storing 3 in location 1226
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1222 is 1188
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1222 is 1188
9999 run: address to copy is 1188
9999 run: its type is number
9999 mem: location 1188 is 104
9999 mem: storing 104 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 104
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1256
 104 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1257
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1256 is 7
9999 mem: storing 1 in location 1258
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1257 is 104
9999 mem: storing 0 in location 1259
 104 run: break-unless starting-comment?, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1260
 104 run: break-unless color-is-blue?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1257 is 104
9999 mem: storing 0 in location 1262
 104 run: break-unless starting-assignment?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1263
 104 run: break-unless color-is-red?, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1256 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 104
9999 mem: storing 0 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 3
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 103 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 103 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 104
9999 mem: location 1224 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 104
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 104
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 23
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 23
9999 mem: storing 1061 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1286 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 104
9999 mem: location 1287 is 1061
9999 mem: location 1287 is 1061
9999 mem: storing 104 in location 1061
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1061
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1286 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1062
9999 mem: location 1288 is 1062
9999 mem: storing 7 in location 1062
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1188
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1188
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1168 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1185
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1185
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1185
9999 mem: location 1185 is 103
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1168 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1223
 103 run: column <- add column, 1
9999 mem: location 1226 is 3
9999 mem: storing 4 in location 1226
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1222 is 1191
9999 run: jump-unless fell through
schedule: render/new-editor/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1222 is 1191
9999 run: address to copy is 1191
9999 run: its type is number
9999 mem: location 1191 is 105
9999 mem: storing 105 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 105
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1256
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1257
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1256 is 7
9999 mem: storing 1 in location 1258
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1257 is 105
9999 mem: storing 0 in location 1259
 104 run: break-unless starting-comment?, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1260
 104 run: break-unless color-is-blue?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1257 is 105
9999 mem: storing 0 in location 1262
 104 run: break-unless starting-assignment?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1263
 104 run: break-unless color-is-red?, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1256 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 105
9999 mem: storing 0 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 4
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1236
 103 run: break-unless at-right?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, 8617/loop-back-to-left, 245/grey
9999 mem: location 1217 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 8617
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 8617
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 24
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 24
9999 mem: storing 1063 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1286 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 8617
9999 mem: location 1287 is 1063
9999 mem: location 1287 is 1063
9999 mem: storing 8617 in location 1063
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1063
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 7
9999 mem: location 1286 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 245
9999 mem: location 1288 is 1064
9999 mem: location 1288 is 1064
9999 mem: storing 245 in location 1064
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 103 run: row <- add row, 1
9999 mem: location 1225 is 2
9999 mem: storing 3 in location 1225
 103 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 3
9999 mem: location 1226 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1250
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 104 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 104 run: *row <- copy new-row
9999 mem: location 1250 is 3
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 3 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 104 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 103 run: loop +next-character:label
9999 run: jumping to instruction 22
 103 run: break-unless curr, 
9999 mem: location 1222 is 1191
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 3
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1222 is 1191
9999 run: address to copy is 1191
9999 run: its type is number
9999 mem: location 1191 is 105
9999 mem: storing 105 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 105
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1256
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1257
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1256 is 7
9999 mem: storing 1 in location 1258
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1257 is 105
9999 mem: storing 0 in location 1259
 104 run: break-unless starting-comment?, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1260
 104 run: break-unless color-is-blue?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1257 is 105
9999 mem: storing 0 in location 1262
 104 run: break-unless starting-assignment?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1263
 104 run: break-unless color-is-red?, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1256 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 105
9999 mem: storing 0 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 103 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 103 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 105
9999 mem: location 1224 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 105
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 105
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 30
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 30
9999 mem: storing 1075 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1286 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 105
9999 mem: location 1287 is 1075
9999 mem: location 1287 is 1075
9999 mem: storing 105 in location 1075
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1075
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1286 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1076
9999 mem: location 1288 is 1076
9999 mem: storing 7 in location 1076
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1191
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1191
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1168 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1188
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1188
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1168 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1223
 103 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1222 is 1194
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 3
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1222 is 1194
9999 run: address to copy is 1194
9999 run: its type is number
9999 mem: location 1194 is 106
9999 mem: storing 106 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 106
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1256
 104 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1257
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1256 is 7
9999 mem: storing 1 in location 1258
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1257 is 106
9999 mem: storing 0 in location 1259
 104 run: break-unless starting-comment?, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1260
 104 run: break-unless color-is-blue?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1257 is 106
9999 mem: storing 0 in location 1262
 104 run: break-unless starting-assignment?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1263
 104 run: break-unless color-is-red?, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1256 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 106
9999 mem: storing 0 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 103 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 103 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 106
9999 mem: location 1224 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 106
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 106
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 31
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 31
9999 mem: storing 1077 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1286 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 106
9999 mem: location 1287 is 1077
9999 mem: location 1287 is 1077
9999 mem: storing 106 in location 1077
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1077
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1286 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1078
9999 mem: location 1288 is 1078
9999 mem: storing 7 in location 1078
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1194
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1168 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1191
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1191
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1168 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1223
 103 run: column <- add column, 1
9999 mem: location 1226 is 1
9999 mem: storing 2 in location 1226
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1222 is 1197
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 3
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1222 is 1197
9999 run: address to copy is 1197
9999 run: its type is number
9999 mem: location 1197 is 10
9999 mem: storing 10 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1256
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1257
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1256 is 7
9999 mem: storing 1 in location 1258
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1257 is 10
9999 mem: storing 0 in location 1259
 104 run: break-unless starting-comment?, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1260
 104 run: break-unless color-is-blue?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1257 is 10
9999 mem: storing 0 in location 1262
 104 run: break-unless starting-assignment?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1263
 104 run: break-unless color-is-red?, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1256 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 10
9999 mem: storing 1 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 45
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 2
9999 mem: location 1221 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 104 run: left:number <- next-ingredient 
9999 mem: storing 2 in location 1250
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 104 run: column:number <- copy left
9999 mem: location 1250 is 2
9999 mem: storing 2 in location 1252
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 32
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 32
9999 mem: storing 1079 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1286 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1079
9999 mem: location 1287 is 1079
9999 mem: storing 32 in location 1079
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1286 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1080
9999 mem: location 1288 is 1080
9999 mem: storing 7 in location 1080
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 33
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 33
9999 mem: storing 1081 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1286 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1081
9999 mem: location 1287 is 1081
9999 mem: storing 32 in location 1081
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1286 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1082
9999 mem: location 1288 is 1082
9999 mem: storing 7 in location 1082
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
schedule: print-character/clear-line-delimited/render/new-editor/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 34
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 34
9999 mem: storing 1083 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1286 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1083
9999 mem: location 1287 is 1083
9999 mem: storing 32 in location 1083
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1286 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1084
9999 mem: location 1288 is 1084
9999 mem: storing 7 in location 1084
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 103 run: row <- add row, 1
9999 mem: location 1225 is 3
9999 mem: storing 4 in location 1225
 103 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 103 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 4
9999 mem: location 1226 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1250
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 104 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 104 run: *row <- copy new-row
9999 mem: location 1250 is 4
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 4 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 104 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1197
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1197
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1168 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1194
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1168 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1223
 103 run: loop +next-character:label
9999 run: jumping to instruction 22
 103 run: break-unless curr, 
9999 mem: location 1222 is 1200
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 4
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 4
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1222 is 1200
9999 run: address to copy is 1200
9999 run: its type is number
9999 mem: location 1200 is 107
9999 mem: storing 107 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 107
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1256
 104 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1257
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1256 is 7
9999 mem: storing 1 in location 1258
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1257 is 107
9999 mem: storing 0 in location 1259
 104 run: break-unless starting-comment?, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1260
 104 run: break-unless color-is-blue?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1257 is 107
9999 mem: storing 0 in location 1262
 104 run: break-unless starting-assignment?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1263
 104 run: break-unless color-is-red?, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1256 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 107
9999 mem: storing 0 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 103 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 103 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 107
9999 mem: location 1224 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 107
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 107
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 40
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 40
9999 mem: storing 1095 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1286 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 107
9999 mem: location 1287 is 1095
9999 mem: location 1287 is 1095
9999 mem: storing 107 in location 1095
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1095
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1286 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1096
9999 mem: location 1288 is 1096
9999 mem: storing 7 in location 1096
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1200
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1200
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1168 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1197
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1197
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1168 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1223
 103 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1222 is 1203
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 4
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 4
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1222 is 1203
9999 run: address to copy is 1203
9999 run: its type is number
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1256
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1257
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1256 is 7
9999 mem: storing 1 in location 1258
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1257 is 10
9999 mem: storing 0 in location 1259
 104 run: break-unless starting-comment?, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1260
 104 run: break-unless color-is-blue?, 
9999 mem: location 1260 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1258 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1257 is 10
9999 mem: storing 0 in location 1262
 104 run: break-unless starting-assignment?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1256 is 7
9999 mem: storing 0 in location 1263
 104 run: break-unless color-is-red?, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1256 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 10
9999 mem: storing 1 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 4
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 45
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 104 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1250
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 104 run: column:number <- copy left
9999 mem: location 1250 is 1
9999 mem: storing 1 in location 1252
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 41
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 41
9999 mem: storing 1097 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1286 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1097
9999 mem: location 1287 is 1097
9999 mem: storing 32 in location 1097
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1286 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1098
9999 mem: location 1288 is 1098
9999 mem: storing 7 in location 1098
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 42
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 42
9999 mem: storing 1099 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1286 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1099
9999 mem: location 1287 is 1099
9999 mem: storing 32 in location 1099
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1286 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1100
9999 mem: location 1288 is 1100
9999 mem: storing 7 in location 1100
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 43
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 43
9999 mem: storing 1101 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1286 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1101
9999 mem: location 1287 is 1101
9999 mem: storing 32 in location 1101
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1286 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1102
9999 mem: location 1288 is 1102
9999 mem: storing 7 in location 1102
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 44
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 44
9999 mem: storing 1103 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1286 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1103
9999 mem: location 1287 is 1103
9999 mem: storing 32 in location 1103
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1286 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1104
9999 mem: location 1288 is 1104
9999 mem: storing 7 in location 1104
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 103 run: row <- add row, 1
9999 mem: location 1225 is 4
9999 mem: storing 5 in location 1225
 103 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 103 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 5
9999 mem: location 1226 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1250
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 104 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 104 run: *row <- copy new-row
9999 mem: location 1250 is 5
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 5 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 104 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1203
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1203
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1168 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1200
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1200
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1168 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1223
 103 run: loop +next-character:label
9999 run: jumping to instruction 22
 103 run: break-unless curr, 
9999 mem: location 1222 is 1206
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 5
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 1
9999 run: jumping to instruction 68
 103 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1218 is 1000
9999 run: address to copy is 1002
9999 mem: storing 1002 in location 1237
 103 run: *bottom-of-screen <- copy curr
9999 mem: location 1222 is 1206
9999 mem: location 1237 is 1002
9999 mem: location 1237 is 1002
9999 mem: storing 1206 in location 1002
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 5
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1226 is 0
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1238
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1231 is 0
9999 mem: location 1238 is 1
9999 mem: storing 0 in location 1239
 103 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1225 is 5
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1240
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1239 is 0
9999 mem: location 1240 is 0
9999 mem: storing 0 in location 1241
 103 run: break-unless before-cursor?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 89
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 104 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1250
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 104 run: column:number <- copy left
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1252
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 0
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
schedule: clear-line-delimited/render/new-editor/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 103 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 5
9999 mem: location 1219 is 0
9999 mem: location 1221 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1145
 104 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1146
 104 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1147
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1148
 104 run: row <- add row, 1
9999 mem: location 1146 is 5
9999 mem: storing 6 in location 1146
 104 run: move-cursor screen, row, left
9999 mem: location 1145 is 1009
9999 mem: location 1146 is 6
9999 mem: location 1147 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1250
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 105 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 105 run: *row <- copy new-row
9999 mem: location 1250 is 6
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 6 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 105 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1145 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 105 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1169
 105 run: reply height
9999 mem: location 1169 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1149
 104 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1146 is 6
9999 mem: location 1149 is 5
9999 mem: storing 1 in location 1150
 104 run: break-if at-bottom-of-screen?, 
9999 mem: location 1150 is 1
9999 run: jumping to instruction 15
 103 run: reply row, screen/same-as-ingredient:0
9999 mem: location 1225 is 5
9999 mem: location 1217 is 1009
9999 run: result 0 is 5
9999 run: result 1 is 1009
9999 mem: storing 1009 in location 1118
 102 run: reply result
9999 mem: location 1121 is 1000
9999 run: result 0 is 1000
9999 mem: storing 1000 in location 2
 101 run: assume-console [
    press 65518  # page-down
  ]
parse: instruction: press
parse:   ingredient: {name: "65518", properties: ["65518": "literal"]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: editor-event-loop ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1296
9999 mem: location 2 is 1000
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1298
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1300
 102 run: console:address <- next-ingredient 
9999 mem: storing 1296 in location 1301
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1302
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1313
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1315
 103 run: break-unless x, 
9999 mem: location 1315 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1315 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1291
9999 mem: location 1315 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1316
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1315 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1291
9999 mem: location 1315 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1291
9999 mem: storing 1291 in location 1317
 103 run: max:number <- length *buf
9999 mem: location 1317 is 1291
9999 mem: location 1291 is 1
9999 mem: location 1292 is 1
9999 mem: location 1293 is 65518
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1317 is 1291
9999 mem: storing 1 in location 1318
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1316 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1318 is 1
9999 mem: storing 0 in location 1319
 103 run: break-unless done?, 
9999 mem: location 1319 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1317 is 1291
9999 mem: location 1291 is 1
9999 mem: location 1292 is 1
9999 mem: location 1293 is 65518
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1316 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1317 is 1291
9999 mem: location 1316 is 1296
9999 mem: location 1296 is 0
9999 run: address to copy is 1292
9999 run: its type is event
9999 mem: location 1292 is 1
9999 mem: location 1293 is 65518
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: storing 1 in location 1321
9999 mem: storing 65518 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 103 run: *idx <- add *idx, 1
9999 mem: location 1316 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1316 is 1296
9999 mem: storing 1 in location 1296
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1321 is 1
9999 mem: location 1322 is 65518
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: location 1315 is 1296
9999 run: result 0 is [1, 65518, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1303
9999 mem: storing 65518 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1296 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
 102 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 102 run: trace [app], [next-event]
   1 app: next-event
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65518
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: storing 0 in location 1309
 102 run: break-unless t, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 14
 102 run: break-if t, 
9999 mem: location 1309 is 0
9999 run: jump-if fell through
 102 run: handle-keyboard-event screen, console, editor, e
9999 mem: location 1300 is 1009
9999 mem: location 1301 is 1296
9999 mem: location 1302 is 1000
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65518
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 50
9999 mem: new alloc: 1326
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1328
 103 run: console:address <- next-ingredient 
9999 mem: storing 1296 in location 1329
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1330
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1331
9999 mem: storing 65518 in location 1332
9999 mem: storing 0 in location 1333
9999 mem: storing 0 in location 1334
 103 run: jump-if editor, 1:offset
9999 mem: location 1330 is 1000
9999 run: jumping to instruction 7
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1331 is 1
9999 mem: location 1332 is 65518
9999 mem: location 1333 is 0
9999 mem: location 1334 is 0
9999 mem: storing 0 in location 1335
 103 run: break-unless c, 
9999 mem: location 1335 is 0
9999 run: jumping to instruction 67
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1331 is 1
9999 mem: location 1332 is 65518
9999 mem: location 1333 is 0
9999 mem: location 1334 is 0
9999 mem: storing 1332 in location 1346
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1346 is 1332
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1330 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1347
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1330 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1348
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1330 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1349
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1328 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 104 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1169
 104 run: reply height
9999 mem: location 1169 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1350
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1330 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1351
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1330 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1352
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65518
9999 mem: storing 0 in location 1353
 103 run: break-unless page-up?, 
9999 mem: location 1353 is 0
9999 run: jumping to instruction 82
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65518
9999 mem: storing 1 in location 1354
 103 run: break-unless page-down?, 
9999 mem: location 1354 is 1
9999 run: jump-unless fell through
 103 run: page-down editor
9999 mem: location 1330 is 1000
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1156
 104 run: bottom-of-screen:address:duplex-list <- get *editor, bottom-of-screen:offset
9999 mem: location 1156 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1156 is 1000
9999 run: address to copy is 1002
9999 run: its type is address
9999 mem: location 1002 is 1206
9999 mem: storing 1206 in location 1157
 104 run: jump-if bottom-of-screen, 1:offset
9999 mem: location 1157 is 1206
9999 run: jumping to instruction 5
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1156 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1156 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1158
 104 run: *before-cursor <- prev-duplex bottom-of-screen
9999 mem: location 1157 is 1206
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1168
 105 run: jump-if in, 1:offset
9999 mem: location 1168 is 1206
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1168 is 1206
9999 mem: location 1206 is 108
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1168 is 1206
9999 run: address to copy is 1208
9999 run: its type is address
9999 mem: location 1208 is 1203
9999 mem: storing 1203 in location 1169
 105 run: reply result
9999 mem: location 1169 is 1203
9999 run: result 0 is 1203
9999 mem: location 1158 is 1003
9999 mem: storing 1203 in location 1003
 104 run: last:character <- get **before-cursor, value:offset
9999 mem: location 1158 is 1003
9999 mem: location 1003 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1158 is 1003
9999 mem: location 1003 is 1203
9999 run: address to copy is 1203
9999 run: its type is number
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1159
 104 run: newline?:boolean <- equal last, 10/newline
9999 mem: location 1159 is 10
9999 mem: storing 1 in location 1160
 104 run: break-unless newline?:boolean, 
9999 mem: location 1160 is 1
9999 run: jump-unless fell through
 104 run: *before-cursor <- prev-duplex *before-cursor
9999 mem: location 1158 is 1003
9999 mem: location 1003 is 1203
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1168
 105 run: jump-if in, 1:offset
9999 mem: location 1168 is 1203
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1168 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1168 is 1203
9999 run: address to copy is 1205
9999 run: its type is address
9999 mem: location 1205 is 1200
9999 mem: storing 1200 in location 1169
 105 run: reply result
9999 mem: location 1169 is 1200
9999 run: result 0 is 1200
9999 mem: location 1158 is 1003
9999 mem: storing 1200 in location 1003
 104 run: top-of-screen:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1156 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1200
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1156 is 1000
9999 run: address to copy is 1001
9999 mem: storing 1001 in location 1161
 104 run: previous-page:address:address:list:address:duplex-list:character <- get-address *editor, previous-page:offset
9999 mem: location 1156 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1200
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1156 is 1000
9999 run: address to copy is 1008
9999 mem: storing 1008 in location 1162
 104 run: *previous-page <- push *top-of-screen, *previous-page
9999 mem: location 1161 is 1001
9999 mem: location 1001 is 1151
9999 mem: location 1162 is 1008
9999 mem: location 1008 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1151 in location 1249
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1250
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1377
9999 mem: storing 1377 in location 1251
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1251 is 1377
9999 mem: location 1377 is 0
9999 mem: location 1378 is 0
9999 mem: location 1251 is 1377
9999 run: address to copy is 1377
9999 mem: storing 1377 in location 1252
 105 run: *val <- copy x
9999 mem: location 1249 is 1151
9999 mem: location 1252 is 1377
9999 mem: location 1252 is 1377
9999 mem: storing 1151 in location 1377
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1251 is 1377
9999 mem: location 1377 is 1151
9999 mem: location 1378 is 0
9999 mem: location 1251 is 1377
9999 run: address to copy is 1378
9999 mem: storing 1378 in location 1253
 105 run: *next <- copy in
9999 mem: location 1250 is 0
9999 mem: location 1253 is 1378
9999 mem: location 1253 is 1378
9999 mem: storing 0 in location 1378
 105 run: reply result
9999 mem: location 1251 is 1377
9999 run: result 0 is 1377
9999 mem: location 1162 is 1008
9999 mem: storing 1377 in location 1008
 104 run: move-to-start-of-line editor
9999 mem: location 1156 is 1000
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: new alloc: 1379
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1381
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1381 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1200
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1381 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1382
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1381 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1200
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1381 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1383
 105 run: *cursor-column <- copy left
9999 mem: location 1382 is 0
9999 mem: location 1383 is 1007
9999 mem: location 1383 is 1007
9999 mem: storing 0 in location 1007
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1381 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1200
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1381 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1384
 105 run: init:address:duplex-list <- get *editor, data:offset
9999 mem: location 1381 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1200
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1381 is 1000
9999 run: address to copy is 1000
9999 run: its type is address
9999 mem: location 1000 is 1151
9999 mem: storing 1151 in location 1385
 105 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1384 is 1003
9999 mem: location 1003 is 1200
9999 mem: location 1385 is 1151
9999 mem: storing 0 in location 1386
 105 run: break-if at-start-of-text?, 
9999 mem: location 1386 is 0
9999 run: jump-if fell through
 105 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1384 is 1003
9999 mem: location 1003 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1384 is 1003
9999 mem: location 1003 is 1200
9999 run: address to copy is 1200
9999 run: its type is number
9999 mem: location 1200 is 107
9999 mem: storing 107 in location 1387
 105 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1387 is 107
9999 mem: storing 0 in location 1388
 105 run: break-if at-start-of-line?, 
9999 mem: location 1388 is 0
9999 run: jump-if fell through
 105 run: *before-cursor <- prev-duplex *before-cursor
9999 mem: location 1384 is 1003
9999 mem: location 1003 is 1200
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1168
 106 run: jump-if in, 1:offset
9999 mem: location 1168 is 1200
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1168 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1168 is 1200
9999 run: address to copy is 1202
9999 run: its type is address
9999 mem: location 1202 is 1197
9999 mem: storing 1197 in location 1169
 106 run: reply result
9999 mem: location 1169 is 1197
9999 run: result 0 is 1197
9999 mem: location 1384 is 1003
9999 mem: storing 1197 in location 1003
 105 run: assert *before-cursor, [move-to-start-of-line tried to move before start of text]
9999 mem: location 1384 is 1003
9999 mem: location 1003 is 1197
 105 run: loop 
9999 run: jumping to instruction 8
 105 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1384 is 1003
9999 mem: location 1003 is 1197
9999 mem: location 1385 is 1151
9999 mem: storing 0 in location 1386
 105 run: break-if at-start-of-text?, 
9999 mem: location 1386 is 0
9999 run: jump-if fell through
 105 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1384 is 1003
9999 mem: location 1003 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1384 is 1003
9999 mem: location 1003 is 1197
9999 run: address to copy is 1197
9999 run: its type is number
9999 mem: location 1197 is 10
9999 mem: storing 10 in location 1387
 105 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1388
 105 run: break-if at-start-of-line?, 
9999 mem: location 1388 is 1
9999 run: jumping to instruction 16
 104 run: *top-of-screen <- copy *before-cursor
9999 mem: location 1158 is 1003
9999 mem: location 1003 is 1197
9999 mem: location 1158 is 1003
9999 mem: location 1161 is 1001
9999 mem: location 1158 is 1003
9999 mem: location 1161 is 1001
9999 mem: storing 1197 in location 1001
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1156 is 1000
 103 run: reply 
 102 run: row:number, screen <- render screen, editor
9999 mem: location 1300 is 1009
9999 mem: location 1302 is 1000
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 28
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1217
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1218
 103 run: jump-if editor, 1:offset
9999 mem: location 1218 is 1000
9999 run: jumping to instruction 5
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1219
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1217 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 104 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1169
 104 run: reply height
9999 mem: location 1169 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1220
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1221
 103 run: hide-screen screen
9999 mem: location 1217 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1246
 104 run: break-unless screen, 
9999 mem: location 1246 is 1009
9999 run: jump-unless fell through
 104 run: reply screen
9999 mem: location 1246 is 1009
 103 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1001
9999 run: its type is address
9999 mem: location 1001 is 1197
9999 mem: storing 1197 in location 1222
 103 run: prev:address:duplex-list <- copy curr
9999 mem: location 1222 is 1197
9999 mem: storing 1197 in location 1223
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1197
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1197
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1168 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1222
 103 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1224
 103 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1225
 103 run: column:number <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1227
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1228
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1229
 103 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 1
9999 mem: location 1226 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1250
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 104 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 104 run: *row <- copy new-row
9999 mem: location 1250 is 1
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 104 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 103 run: break-unless curr, 
9999 mem: location 1222 is 1200
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 0
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1232
 103 run: break-unless at-cursor?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 103 run: *before-cursor <- prev-duplex curr
9999 mem: location 1222 is 1200
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1200
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1168 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1168 is 1200
9999 run: address to copy is 1202
9999 run: its type is address
9999 mem: location 1202 is 1197
9999 mem: storing 1197 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1197
9999 run: result 0 is 1197
9999 mem: location 1229 is 1003
9999 mem: storing 1197 in location 1003
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1222 is 1200
9999 run: address to copy is 1200
9999 run: its type is number
9999 mem: location 1200 is 107
9999 mem: storing 107 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 107
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 104 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1118
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 104 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 107
9999 mem: storing 0 in location 1120
 104 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 104 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 107
9999 mem: storing 0 in location 1123
 104 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 104 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 107
9999 mem: storing 0 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 103 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 103 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 107
9999 mem: location 1224 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 107
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 107
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 10
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 10
9999 mem: storing 1035 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1286 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 107
9999 mem: location 1287 is 1035
9999 mem: location 1287 is 1035
9999 mem: storing 107 in location 1035
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1035
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1286 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1036
9999 mem: location 1288 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1200
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1200
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1168 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1197
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1197
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1168 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1223
 103 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1222 is 1203
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 1
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1232
 103 run: break-unless at-cursor?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1222 is 1203
9999 run: address to copy is 1203
9999 run: its type is number
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1118
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 104 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1120
 104 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 104 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1123
schedule: get-color/render/editor-event-loop/run1001/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 104 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 104 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 10
9999 mem: storing 1 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 103 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1226 is 1
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1235
 103 run: break-unless left-of-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 45
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 104 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1250
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 104 run: column:number <- copy left
9999 mem: location 1250 is 1
9999 mem: storing 1 in location 1252
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 11
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 11
9999 mem: storing 1037 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1286 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1037
9999 mem: location 1287 is 1037
9999 mem: storing 32 in location 1037
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1286 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1038
9999 mem: location 1288 is 1038
9999 mem: storing 7 in location 1038
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 12
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 12
9999 mem: storing 1039 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1286 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1039
9999 mem: location 1287 is 1039
9999 mem: storing 32 in location 1039
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1286 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1040
9999 mem: location 1288 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 13
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 13
9999 mem: storing 1041 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1286 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1041
9999 mem: location 1287 is 1041
9999 mem: storing 32 in location 1041
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1286 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1042
9999 mem: location 1288 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 14
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 14
9999 mem: storing 1043 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1043
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1286 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1043
9999 mem: location 1287 is 1043
9999 mem: storing 32 in location 1043
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 245
9999 mem: location 1286 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1044
9999 mem: location 1288 is 1044
9999 mem: storing 7 in location 1044
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 103 run: row <- add row, 1
9999 mem: location 1225 is 1
9999 mem: storing 2 in location 1225
 103 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 103 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 2
9999 mem: location 1226 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1250
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 104 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 104 run: *row <- copy new-row
9999 mem: location 1250 is 2
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 104 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1203
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1203
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1168 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1200
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1200
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1168 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1223
 103 run: loop +next-character:label
9999 run: jumping to instruction 22
 103 run: break-unless curr, 
9999 mem: location 1222 is 1206
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1206
9999 mem: location 1206 is 108
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1222 is 1206
9999 run: address to copy is 1206
9999 run: its type is number
9999 mem: location 1206 is 108
9999 mem: storing 108 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 108
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 104 run: c:character <- next-ingredient 
9999 mem: storing 108 in location 1118
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 104 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 108
9999 mem: storing 0 in location 1120
 104 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 104 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 108
9999 mem: storing 0 in location 1123
 104 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 104 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 108
9999 mem: storing 0 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 103 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 103 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 108
9999 mem: location 1224 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 108 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 108
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 108
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 20
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 20
9999 mem: storing 1055 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1055
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1286 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 108
9999 mem: location 1287 is 1055
9999 mem: location 1287 is 1055
9999 mem: storing 108 in location 1055
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1055
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1286 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1056
9999 mem: location 1288 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1206
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1206
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1206
9999 mem: location 1206 is 108
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1168 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1209
9999 run: result 0 is 1209
9999 mem: storing 1209 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1203
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1203
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1168 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1223
 103 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1222 is 1209
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1209
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1222 is 1209
9999 run: address to copy is 1209
9999 run: its type is number
9999 mem: location 1209 is 10
9999 mem: storing 10 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1118
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 104 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1120
 104 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 104 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1123
 104 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 104 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 10
9999 mem: storing 1 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 45
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 104 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1250
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 104 run: column:number <- copy left
9999 mem: location 1250 is 1
9999 mem: storing 1 in location 1252
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 21
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 21
9999 mem: storing 1057 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1057
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1286 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1057
9999 mem: location 1287 is 1057
9999 mem: storing 32 in location 1057
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1286 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1058
9999 mem: location 1288 is 1058
9999 mem: storing 7 in location 1058
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
schedule: print-character/clear-line-delimited/render/editor-event-loop/run1001/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 22
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 22
9999 mem: storing 1059 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1059
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1286 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1059
9999 mem: location 1287 is 1059
9999 mem: storing 32 in location 1059
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1286 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1060
9999 mem: location 1288 is 1060
9999 mem: storing 7 in location 1060
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 23
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 23
9999 mem: storing 1061 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1061
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1286 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1061
9999 mem: location 1287 is 1061
9999 mem: storing 32 in location 1061
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1286 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1062
9999 mem: location 1288 is 1062
9999 mem: storing 7 in location 1062
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 24
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 24
9999 mem: storing 1063 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1063
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1286 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1063
9999 mem: location 1287 is 1063
9999 mem: storing 32 in location 1063
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 245
9999 mem: location 1286 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1064
9999 mem: location 1288 is 1064
9999 mem: storing 7 in location 1064
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 103 run: row <- add row, 1
9999 mem: location 1225 is 2
9999 mem: storing 3 in location 1225
 103 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 103 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 3
9999 mem: location 1226 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1250
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 104 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 104 run: *row <- copy new-row
9999 mem: location 1250 is 3
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 3 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 104 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1209
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1209 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1209
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1209
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1168 is 1209
9999 run: address to copy is 1210
9999 run: its type is address
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1212
9999 run: result 0 is 1212
9999 mem: storing 1212 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1206
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1206
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1206
9999 mem: location 1206 is 108
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1168 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1209
9999 run: result 0 is 1209
9999 mem: storing 1209 in location 1223
 103 run: loop +next-character:label
9999 run: jumping to instruction 22
 103 run: break-unless curr, 
9999 mem: location 1222 is 1212
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 3
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 103 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1212
9999 mem: location 1212 is 109
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1209
9999 mem: location 1222 is 1212
9999 run: address to copy is 1212
9999 run: its type is number
9999 mem: location 1212 is 109
9999 mem: storing 109 in location 1233
 103 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 109
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 104 run: c:character <- next-ingredient 
9999 mem: storing 109 in location 1118
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 104 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 109
9999 mem: storing 0 in location 1120
 104 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 104 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 109
9999 mem: storing 0 in location 1123
 104 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 104 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 109
9999 mem: storing 0 in location 1234
 103 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 103 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 103 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 109
9999 mem: location 1224 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 109 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 109
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 109
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 30
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 30
9999 mem: storing 1075 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1075
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1286 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 109
9999 mem: location 1287 is 1075
9999 mem: location 1287 is 1075
9999 mem: storing 109 in location 1075
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1075
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1286 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1076
9999 mem: location 1288 is 1076
9999 mem: storing 7 in location 1076
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1222 is 1212
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1212 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1212
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1212
9999 mem: location 1212 is 109
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1209
9999 mem: location 1168 is 1212
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 0
9999 mem: storing 0 in location 1169
 104 run: reply result
9999 mem: location 1169 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1222
 103 run: prev <- next-duplex prev
9999 mem: location 1223 is 1209
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1209 in location 1168
 104 run: jump-if in, 1:offset
9999 mem: location 1168 is 1209
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1168 is 1209
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1168 is 1209
9999 run: address to copy is 1210
9999 run: its type is address
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1169
 104 run: reply result
9999 mem: location 1169 is 1212
9999 run: result 0 is 1212
9999 mem: storing 1212 in location 1223
 103 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 103 run: loop 
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1222 is 0
9999 run: jumping to instruction 68
 103 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1002
9999 mem: storing 1002 in location 1237
 103 run: *bottom-of-screen <- copy curr
9999 mem: location 1222 is 0
9999 mem: location 1237 is 1002
9999 mem: location 1237 is 1002
9999 mem: storing 0 in location 1002
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1226 is 1
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1238
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1231 is 0
9999 mem: location 1238 is 0
9999 mem: storing 0 in location 1239
 103 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1240
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1239 is 0
9999 mem: location 1240 is 0
9999 mem: storing 0 in location 1241
 103 run: break-unless before-cursor?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 89
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 104 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1250
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 104 run: column:number <- copy left
9999 mem: location 1250 is 1
9999 mem: storing 1 in location 1252
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 31
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 31
9999 mem: storing 1077 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1077
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1286 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1077
9999 mem: location 1287 is 1077
9999 mem: storing 32 in location 1077
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1286 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1078
9999 mem: location 1288 is 1078
9999 mem: storing 7 in location 1078
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 32
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 32
9999 mem: storing 1079 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1286 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1079
9999 mem: location 1287 is 1079
9999 mem: storing 32 in location 1079
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1286 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1080
9999 mem: location 1288 is 1080
9999 mem: storing 7 in location 1080
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 33
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 33
9999 mem: storing 1081 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1286 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1081
9999 mem: location 1287 is 1081
9999 mem: storing 32 in location 1081
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1286 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1082
9999 mem: location 1288 is 1082
9999 mem: storing 7 in location 1082
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 105 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 105 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
schedule: print-character/clear-line-delimited/render/editor-event-loop/run1001/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 105 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 105 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 105 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 105 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 105 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1281
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 105 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 105 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 34
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 34
9999 mem: storing 1083 in location 1286
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1286 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1287
 105 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1083
9999 mem: location 1287 is 1083
9999 mem: storing 32 in location 1083
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1286 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1288
 105 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1084
9999 mem: location 1288 is 1084
9999 mem: storing 7 in location 1084
 105 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 105 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 104 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 104 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 103 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 3
9999 mem: location 1219 is 0
9999 mem: location 1221 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1145
 104 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 1146
 104 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1147
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1148
 104 run: row <- add row, 1
9999 mem: location 1146 is 3
9999 mem: storing 4 in location 1146
 104 run: move-cursor screen, row, left
9999 mem: location 1145 is 1009
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1250
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 105 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 105 run: *row <- copy new-row
9999 mem: location 1250 is 4
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 4 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 105 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1145 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 105 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1169
 105 run: reply height
9999 mem: location 1169 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1149
 104 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1146 is 4
9999 mem: location 1149 is 5
9999 mem: storing 0 in location 1150
 104 run: break-if at-bottom-of-screen?, 
9999 mem: location 1150 is 0
9999 run: jump-if fell through
 104 run: move-cursor screen, row, left
9999 mem: location 1145 is 1009
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1250
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 105 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 105 run: *row <- copy new-row
9999 mem: location 1250 is 4
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 4 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 105 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 104 run: clear-line-delimited screen, left, right
9999 mem: location 1145 is 1009
9999 mem: location 1147 is 0
9999 mem: location 1148 is 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 105 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1250
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 105 run: column:number <- copy left
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1252
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 0
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 105 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 106 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 106 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 106 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 106 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 106 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1281
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 106 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 106 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 40
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 40
9999 mem: storing 1095 in location 1286
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1095
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1286 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1287
 106 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1095
9999 mem: location 1287 is 1095
9999 mem: storing 32 in location 1095
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1286 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1288
 106 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1096
9999 mem: location 1288 is 1096
9999 mem: storing 7 in location 1096
 106 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 106 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 105 run: column <- add column, 1
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 105 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 106 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 106 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 106 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 106 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 106 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1281
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 106 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 106 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 41
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 41
9999 mem: storing 1097 in location 1286
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1286 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1287
 106 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1097
9999 mem: location 1287 is 1097
9999 mem: storing 32 in location 1097
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1286 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1288
 106 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1098
9999 mem: location 1288 is 1098
9999 mem: storing 7 in location 1098
 106 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 106 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 105 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 105 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 106 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 106 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 106 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 106 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 106 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1281
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 106 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 106 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 42
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 42
9999 mem: storing 1099 in location 1286
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1286 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1287
 106 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1099
9999 mem: location 1287 is 1099
9999 mem: storing 32 in location 1099
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1286 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1288
 106 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1100
9999 mem: location 1288 is 1100
9999 mem: storing 7 in location 1100
 106 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 106 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 105 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 105 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 106 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 106 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 106 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 106 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 106 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1281
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 106 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 106 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 43
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 43
9999 mem: storing 1101 in location 1286
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1286 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1287
 106 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1101
9999 mem: location 1287 is 1101
9999 mem: storing 32 in location 1101
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1286 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1288
 106 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1102
9999 mem: location 1288 is 1102
9999 mem: storing 7 in location 1102
 106 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 106 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 105 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 105 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 106 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 106 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 106 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 106 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 106 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 106 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 106 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1281
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 106 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 106 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 44
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 44
9999 mem: storing 1103 in location 1286
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1286 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1287
 106 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1103
9999 mem: location 1287 is 1103
9999 mem: storing 32 in location 1103
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1286 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1288
 106 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1104
9999 mem: location 1288 is 1104
9999 mem: storing 7 in location 1104
 106 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 106 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 105 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 105 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 104 run: row <- add row, 1
9999 mem: location 1146 is 4
9999 mem: storing 5 in location 1146
 104 run: loop 
9999 run: jumping to instruction 9
 104 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1146 is 5
9999 mem: location 1149 is 5
9999 mem: storing 1 in location 1150
 104 run: break-if at-bottom-of-screen?, 
9999 mem: location 1150 is 1
9999 run: jumping to instruction 15
 103 run: reply row, screen/same-as-ingredient:0
9999 mem: location 1225 is 3
9999 mem: location 1217 is 1009
9999 run: result 0 is 3
9999 run: result 1 is 1009
9999 mem: storing 3 in location 1310
9999 mem: storing 1009 in location 1300
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1302 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1302 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1311
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1302 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1302 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1312
 102 run: row <- add row, 1
9999 mem: location 1310 is 3
9999 mem: storing 4 in location 1310
 102 run: move-cursor screen, row, left
9999 mem: location 1300 is 1009
9999 mem: location 1310 is 4
9999 mem: location 1311 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1250
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 103 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 103 run: *row <- copy new-row
9999 mem: location 1250 is 4
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 4 in location 1011
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 103 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 102 run: clear-line-delimited screen, left, right
9999 mem: location 1300 is 1009
9999 mem: location 1311 is 0
9999 mem: location 1312 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1250
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 103 run: column:number <- copy left
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1252
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 0
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 40
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 40
9999 mem: storing 1095 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1286 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1095
9999 mem: location 1287 is 1095
9999 mem: storing 32 in location 1095
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1286 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1096
9999 mem: location 1288 is 1096
9999 mem: storing 7 in location 1096
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 41
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 41
9999 mem: storing 1097 in location 1286
schedule: print-character/clear-line-delimited/editor-event-loop/run1001/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1286 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1097
9999 mem: location 1287 is 1097
9999 mem: storing 32 in location 1097
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1286 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1098
9999 mem: location 1288 is 1098
9999 mem: storing 7 in location 1098
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 42
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 42
9999 mem: storing 1099 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1286 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1099
9999 mem: location 1287 is 1099
9999 mem: storing 32 in location 1099
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1286 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1100
9999 mem: location 1288 is 1100
9999 mem: storing 7 in location 1100
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 43
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 43
9999 mem: storing 1101 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1286 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1101
9999 mem: location 1287 is 1101
9999 mem: storing 32 in location 1101
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1286 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1102
9999 mem: location 1288 is 1102
9999 mem: storing 7 in location 1102
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 44
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 44
9999 mem: storing 1103 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1286 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1103
9999 mem: location 1287 is 1103
9999 mem: storing 32 in location 1103
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1286 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1104
9999 mem: location 1288 is 1104
9999 mem: storing 7 in location 1104
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1315
 103 run: break-unless x, 
9999 mem: location 1315 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1315 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1297 is 1291
9999 mem: location 1315 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1316
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1315 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1297 is 1291
9999 mem: location 1315 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1291
9999 mem: storing 1291 in location 1317
 103 run: max:number <- length *buf
9999 mem: location 1317 is 1291
9999 mem: location 1291 is 1
9999 mem: location 1292 is 1
9999 mem: location 1293 is 65518
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1317 is 1291
9999 mem: storing 1 in location 1318
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1316 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1318 is 1
9999 mem: storing 1 in location 1319
 103 run: break-unless done?, 
9999 mem: location 1319 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1166 in location 1320
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1320 is 1166
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1315 is 1296
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1296 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 1 in location 1308
 102 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1308 is 1
9999 run: jumping to instruction 26
 100 run: screen-should-contain [
    .          .
    .k         .
    .l         .
    .m         .
    .          .
  ]
 100 run: assume-console [
    press 65517  # up-arrow
  ]
parse: instruction: press
parse:   ingredient: {name: "65517", properties: ["65517": "literal"]}
 100 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1002
after-brace: editor-event-loop ...
 100 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1394
9999 mem: location 2 is 1000
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1300
 101 run: console:address <- next-ingredient 
9999 mem: storing 1394 in location 1301
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1302
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1394
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1394 in location 1315
 102 run: break-unless x, 
9999 mem: location 1315 is 1394
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1315 is 1394
9999 mem: location 1394 is 0
9999 mem: location 1395 is 1389
9999 mem: location 1315 is 1394
9999 run: address to copy is 1394
9999 mem: storing 1394 in location 1316
 102 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1315 is 1394
9999 mem: location 1394 is 0
9999 mem: location 1395 is 1389
9999 mem: location 1315 is 1394
9999 run: address to copy is 1395
9999 run: its type is address
9999 mem: location 1395 is 1389
9999 mem: storing 1389 in location 1317
 102 run: max:number <- length *buf
9999 mem: location 1317 is 1389
9999 mem: location 1389 is 1
9999 mem: location 1390 is 1
9999 mem: location 1391 is 65517
9999 mem: location 1392 is 0
9999 mem: location 1393 is 0
9999 mem: location 1317 is 1389
9999 mem: storing 1 in location 1318
 102 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1316 is 1394
9999 mem: location 1394 is 0
9999 mem: location 1318 is 1
9999 mem: storing 0 in location 1319
 102 run: break-unless done?, 
9999 mem: location 1319 is 0
9999 run: jumping to instruction 12
 102 run: result:event <- index *buf, *idx
9999 mem: location 1317 is 1389
9999 mem: location 1389 is 1
9999 mem: location 1390 is 1
9999 mem: location 1391 is 65517
9999 mem: location 1392 is 0
9999 mem: location 1393 is 0
9999 mem: location 1316 is 1394
9999 mem: location 1394 is 0
9999 mem: location 1317 is 1389
9999 mem: location 1316 is 1394
9999 mem: location 1394 is 0
9999 run: address to copy is 1390
9999 run: its type is event
9999 mem: location 1390 is 1
9999 mem: location 1391 is 65517
9999 mem: location 1392 is 0
9999 mem: location 1393 is 0
9999 mem: storing 1 in location 1321
9999 mem: storing 65517 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 102 run: *idx <- add *idx, 1
9999 mem: location 1316 is 1394
9999 mem: location 1394 is 0
9999 mem: location 1316 is 1394
9999 mem: storing 1 in location 1394
 102 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1321 is 1
9999 mem: location 1322 is 65517
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: location 1315 is 1394
9999 run: result 0 is [1, 65517, 0, 0]
9999 run: result 1 is 1394
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1303
9999 mem: storing 65517 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1394 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
 101 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 101 run: trace [app], [next-event]
   1 app: next-event
 101 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65517
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: storing 0 in location 1309
 101 run: break-unless t, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 14
 101 run: break-if t, 
9999 mem: location 1309 is 0
9999 run: jump-if fell through
 101 run: handle-keyboard-event screen, console, editor, e
9999 mem: location 1300 is 1009
9999 mem: location 1301 is 1394
9999 mem: location 1302 is 1000
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65517
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 50
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1328
 102 run: console:address <- next-ingredient 
9999 mem: storing 1394 in location 1329
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1330
 102 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1331
9999 mem: storing 65517 in location 1332
9999 mem: storing 0 in location 1333
9999 mem: storing 0 in location 1334
 102 run: jump-if editor, 1:offset
9999 mem: location 1330 is 1000
9999 run: jumping to instruction 7
 102 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1331 is 1
9999 mem: location 1332 is 65517
9999 mem: location 1333 is 0
9999 mem: location 1334 is 0
9999 mem: storing 0 in location 1335
 102 run: break-unless c, 
9999 mem: location 1335 is 0
9999 run: jumping to instruction 67
 102 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1331 is 1
9999 mem: location 1332 is 65517
9999 mem: location 1333 is 0
9999 mem: location 1334 is 0
9999 mem: storing 1332 in location 1346
 102 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1346 is 1332
 102 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1347
 102 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1348
 102 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1349
 102 run: screen-height:number <- screen-height screen
9999 mem: location 1328 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1396
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1398
 103 run: break-unless sc, 
9999 mem: location 1398 is 1009
9999 run: jump-unless fell through
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1398 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1398 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1399
 103 run: reply height
9999 mem: location 1399 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1350
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1351
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1352
 102 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1353
 102 run: break-unless page-up?, 
9999 mem: location 1353 is 0
9999 run: jumping to instruction 82
 102 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1354
 102 run: break-unless page-down?, 
9999 mem: location 1354 is 0
9999 run: jumping to instruction 88
 102 run: end?:boolean <- equal *k, 65520/end
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1355
 102 run: break-unless end?, 
9999 mem: location 1355 is 0
9999 run: jumping to instruction 94
 102 run: home?:boolean <- equal *k, 65521/home
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1356
 102 run: break-unless home?, 
9999 mem: location 1356 is 0
9999 run: jumping to instruction 100
 102 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1357
 102 run: break-unless move-to-next-line?, 
9999 mem: location 1357 is 0
9999 run: jumping to instruction 119
 102 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 1 in location 1362
 102 run: break-unless move-to-previous-line?, 
9999 mem: location 1362 is 1
9999 run: jump-unless fell through
 102 run: already-at-top?:boolean <- lesser-or-equal *cursor-row, 1/top
9999 mem: location 1348 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1363
 102 run: break-if already-at-top?, 
9999 mem: location 1363 is 1
9999 run: jumping to instruction 127
 102 run: break-unless already-at-top?, 
9999 mem: location 1363 is 1
9999 run: jump-unless fell through
 102 run: top-of-screen:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1001
9999 mem: storing 1001 in location 1360
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1351
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1197
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1352
 102 run: max:number <- subtract right, left
9999 mem: location 1352 is 4
9999 mem: location 1351 is 0
9999 mem: storing 4 in location 1361
 102 run: *top-of-screen <- start-of-previous-line *top-of-screen, max
9999 mem: location 1360 is 1001
9999 mem: location 1001 is 1197
9999 mem: location 1361 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
 103 run: original:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1381
 103 run: max:number <- next-ingredient 
9999 mem: storing 4 in location 1382
 103 run: count:number <- copy 0
9999 mem: storing 0 in location 1383
 103 run: curr:address:duplex-list <- copy original
9999 mem: location 1381 is 1197
9999 mem: storing 1197 in location 1384
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1384 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1384 is 1197
9999 run: address to copy is 1197
9999 run: its type is number
9999 mem: location 1197 is 10
9999 mem: storing 10 in location 1385
 103 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1386
 103 run: break-unless at-newline?, 
9999 mem: location 1386 is 1
9999 run: jump-unless fell through
 103 run: max <- subtract max, 1
9999 mem: location 1382 is 4
9999 mem: storing 3 in location 1382
 103 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1384 is 1197
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1398
 104 run: jump-if in, 1:offset
9999 mem: location 1398 is 1197
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1398 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1398 is 1197
9999 run: address to copy is 1199
9999 run: its type is address
9999 mem: location 1199 is 1194
9999 mem: storing 1194 in location 1399
 104 run: reply result
9999 mem: location 1399 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1387
 103 run: jump-if prev, 1:offset
9999 mem: location 1387 is 1194
9999 run: jumping to instruction 14
 103 run: curr <- copy prev
9999 mem: location 1387 is 1194
9999 mem: storing 1194 in location 1384
 103 run: count <- add count, 1
9999 mem: location 1383 is 0
9999 mem: storing 1 in location 1383
 103 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1383 is 1
9999 mem: location 1382 is 3
9999 mem: storing 0 in location 1388
 103 run: break-if done?, 
9999 mem: location 1388 is 0
9999 run: jump-if fell through
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1384 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1384 is 1194
9999 run: address to copy is 1194
9999 run: its type is number
9999 mem: location 1194 is 106
9999 mem: storing 106 in location 1385
 103 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1385 is 106
9999 mem: storing 0 in location 1386
 103 run: break-if at-newline?, 
9999 mem: location 1386 is 0
9999 run: jump-if fell through
 103 run: prev <- prev-duplex curr
9999 mem: location 1384 is 1194
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1398
 104 run: jump-if in, 1:offset
9999 mem: location 1398 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1398 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1398 is 1194
9999 run: address to copy is 1196
9999 run: its type is address
9999 mem: location 1196 is 1191
9999 mem: storing 1191 in location 1399
 104 run: reply result
9999 mem: location 1399 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1387
 103 run: break-unless prev, 
9999 mem: location 1387 is 1191
9999 run: jump-unless fell through
 103 run: curr <- copy prev
9999 mem: location 1387 is 1191
9999 mem: storing 1191 in location 1384
 103 run: count <- add count, 1
9999 mem: location 1383 is 1
9999 mem: storing 2 in location 1383
 103 run: loop 
9999 run: jumping to instruction 17
 103 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1383 is 2
9999 mem: location 1382 is 3
9999 mem: storing 0 in location 1388
 103 run: break-if done?, 
9999 mem: location 1388 is 0
9999 run: jump-if fell through
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1384 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1384 is 1191
9999 run: address to copy is 1191
9999 run: its type is number
9999 mem: location 1191 is 105
9999 mem: storing 105 in location 1385
 103 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1385 is 105
9999 mem: storing 0 in location 1386
 103 run: break-if at-newline?, 
9999 mem: location 1386 is 0
9999 run: jump-if fell through
 103 run: prev <- prev-duplex curr
9999 mem: location 1384 is 1191
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1398
 104 run: jump-if in, 1:offset
9999 mem: location 1398 is 1191
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1398 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1398 is 1191
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1188
9999 mem: storing 1188 in location 1399
 104 run: reply result
9999 mem: location 1399 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1387
 103 run: break-unless prev, 
9999 mem: location 1387 is 1188
9999 run: jump-unless fell through
 103 run: curr <- copy prev
9999 mem: location 1387 is 1188
9999 mem: storing 1188 in location 1384
 103 run: count <- add count, 1
9999 mem: location 1383 is 2
9999 mem: storing 3 in location 1383
 103 run: loop 
9999 run: jumping to instruction 17
 103 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1383 is 3
9999 mem: location 1382 is 3
9999 mem: storing 1 in location 1388
 103 run: break-if done?, 
9999 mem: location 1388 is 1
9999 run: jumping to instruction 27
 103 run: reply curr
9999 mem: location 1384 is 1188
9999 run: result 0 is 1188
9999 mem: location 1360 is 1001
9999 mem: storing 1188 in location 1001
 102 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1364
 102 run: break-unless move-to-previous-character?, 
9999 mem: location 1364 is 0
9999 run: jumping to instruction 144
 102 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1366
 102 run: break-unless move-to-next-character?, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 193
 102 run: delete?:boolean <- equal *k, 65522/delete
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1375
 102 run: break-unless delete?, 
9999 mem: location 1375 is 0
9999 run: jumping to instruction 200
 101 run: row:number, screen <- render screen, editor
9999 mem: location 1300 is 1009
9999 mem: location 1302 is 1000
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 28
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1217
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1218
 102 run: jump-if editor, 1:offset
9999 mem: location 1218 is 1000
9999 run: jumping to instruction 5
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1219
 102 run: screen-height:number <- screen-height screen
9999 mem: location 1217 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1398
 103 run: break-unless sc, 
9999 mem: location 1398 is 1009
9999 run: jump-unless fell through
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1398 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1398 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1399
 103 run: reply height
9999 mem: location 1399 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1220
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1221
 102 run: hide-screen screen
9999 mem: location 1217 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1246
 103 run: break-unless screen, 
9999 mem: location 1246 is 1009
9999 run: jump-unless fell through
 103 run: reply screen
9999 mem: location 1246 is 1009
 102 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1001
9999 run: its type is address
9999 mem: location 1001 is 1188
9999 mem: storing 1188 in location 1222
 102 run: prev:address:duplex-list <- copy curr
9999 mem: location 1222 is 1188
9999 mem: storing 1188 in location 1223
 102 run: curr <- next-duplex curr
9999 mem: location 1222 is 1188
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1188
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1398 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1222
 102 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1224
 102 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1225
 102 run: column:number <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 102 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1227
 102 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1228
 102 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1197
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1229
 102 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 1
9999 mem: location 1226 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1250
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 103 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 103 run: *row <- copy new-row
9999 mem: location 1250 is 1
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 1 in location 1011
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 103 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 102 run: break-unless curr, 
9999 mem: location 1222 is 1191
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 102 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 0
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1232
 102 run: break-unless at-cursor?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 102 run: *before-cursor <- prev-duplex curr
9999 mem: location 1222 is 1191
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1191
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1398 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1398 is 1191
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1188
9999 mem: storing 1188 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1188
9999 run: result 0 is 1188
9999 mem: location 1229 is 1003
9999 mem: storing 1188 in location 1003
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1222 is 1191
9999 run: address to copy is 1191
9999 run: its type is number
9999 mem: location 1191 is 105
9999 mem: storing 105 in location 1233
 102 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 105
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 103 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1118
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 103 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 105
9999 mem: storing 0 in location 1120
 103 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 103 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 103 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 105
9999 mem: storing 0 in location 1123
 103 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 103 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 103 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 105
9999 mem: storing 0 in location 1234
 102 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 102 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 102 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 105
9999 mem: location 1224 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 105
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 103 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1281
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
schedule: print-character/render/editor-event-loop/run1002/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 103 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 105
9999 mem: storing 0 in location 1284
 103 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 10
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 10
9999 mem: storing 1035 in location 1286
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1035
9999 mem: location 1035 is 107
9999 mem: location 1036 is 7
9999 mem: location 1286 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1287
 103 run: *cursor-contents <- copy c
9999 mem: location 1268 is 105
9999 mem: location 1287 is 1035
9999 mem: location 1287 is 1035
9999 mem: storing 105 in location 1035
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1035
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1286 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1288
 103 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1036
9999 mem: location 1288 is 1036
9999 mem: storing 7 in location 1036
 103 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 103 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 102 run: curr <- next-duplex curr
9999 mem: location 1222 is 1191
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1191
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1398 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1222
 102 run: prev <- next-duplex prev
9999 mem: location 1223 is 1188
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1188
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1398 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1223
 102 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: break-unless curr, 
9999 mem: location 1222 is 1194
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 102 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 1
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1232
 102 run: break-unless at-cursor?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 31
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1222 is 1194
9999 run: address to copy is 1194
9999 run: its type is number
9999 mem: location 1194 is 106
9999 mem: storing 106 in location 1233
 102 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 106
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 103 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1118
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 103 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 106
9999 mem: storing 0 in location 1120
 103 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 103 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 103 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 106
9999 mem: storing 0 in location 1123
 103 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 103 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 103 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 106
9999 mem: storing 0 in location 1234
 102 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 102 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 102 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 106
9999 mem: location 1224 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 106
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 103 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1281
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 103 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 106
9999 mem: storing 0 in location 1284
 103 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 11
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 11
9999 mem: storing 1037 in location 1286
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1286 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1287
 103 run: *cursor-contents <- copy c
9999 mem: location 1268 is 106
9999 mem: location 1287 is 1037
9999 mem: location 1287 is 1037
9999 mem: storing 106 in location 1037
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1037
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1286 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1288
 103 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1038
9999 mem: location 1288 is 1038
9999 mem: storing 7 in location 1038
 103 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 103 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 102 run: curr <- next-duplex curr
9999 mem: location 1222 is 1194
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1194
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1398 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1222
 102 run: prev <- next-duplex prev
9999 mem: location 1223 is 1191
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1191
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1398 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1223
 102 run: column <- add column, 1
9999 mem: location 1226 is 1
9999 mem: storing 2 in location 1226
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: break-unless curr, 
9999 mem: location 1222 is 1197
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 102 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 102 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 2
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1232
 102 run: break-unless at-cursor?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 31
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1222 is 1197
9999 run: address to copy is 1197
9999 run: its type is number
9999 mem: location 1197 is 10
9999 mem: storing 10 in location 1233
 102 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 10
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 103 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1118
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 103 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1120
 103 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 103 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 103 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1123
 103 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 103 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 103 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 10
9999 mem: storing 1 in location 1234
 102 run: break-unless newline?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 102 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1226 is 2
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1235
 102 run: break-unless left-of-cursor?, 
9999 mem: location 1235 is 0
9999 run: jumping to instruction 45
 102 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 2
9999 mem: location 1221 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 103 run: left:number <- next-ingredient 
9999 mem: storing 2 in location 1250
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 103 run: column:number <- copy left
9999 mem: location 1250 is 2
9999 mem: storing 2 in location 1252
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 12
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 12
9999 mem: storing 1039 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1286 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1039
9999 mem: location 1287 is 1039
9999 mem: storing 32 in location 1039
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1286 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1040
9999 mem: location 1288 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 13
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 13
9999 mem: storing 1041 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1286 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1041
9999 mem: location 1287 is 1041
9999 mem: storing 32 in location 1041
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1286 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1042
9999 mem: location 1288 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 14
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 14
9999 mem: storing 1043 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1286 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1043
9999 mem: location 1287 is 1043
9999 mem: storing 32 in location 1043
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1286 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1044
9999 mem: location 1288 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 102 run: row <- add row, 1
9999 mem: location 1225 is 1
9999 mem: storing 2 in location 1225
 102 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 102 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 2
9999 mem: location 1226 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1250
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 103 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 103 run: *row <- copy new-row
9999 mem: location 1250 is 2
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 2 in location 1011
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 103 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 102 run: curr <- next-duplex curr
9999 mem: location 1222 is 1197
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1197
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1398 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1222
 102 run: prev <- next-duplex prev
9999 mem: location 1223 is 1194
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1194
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1398 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1223
 102 run: loop +next-character:label
9999 run: jumping to instruction 22
 102 run: break-unless curr, 
9999 mem: location 1222 is 1200
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 102 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1222 is 1200
9999 run: address to copy is 1200
9999 run: its type is number
9999 mem: location 1200 is 107
9999 mem: storing 107 in location 1233
 102 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 107
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 103 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1118
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 103 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 107
9999 mem: storing 0 in location 1120
 103 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 103 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 103 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 107
9999 mem: storing 0 in location 1123
 103 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 103 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 103 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 107
9999 mem: storing 0 in location 1234
 102 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 102 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 102 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 107
9999 mem: location 1224 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 107
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 103 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1281
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 103 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 107
9999 mem: storing 0 in location 1284
 103 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 20
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 20
9999 mem: storing 1055 in location 1286
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1055
9999 mem: location 1055 is 108
9999 mem: location 1056 is 7
9999 mem: location 1286 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1287
 103 run: *cursor-contents <- copy c
9999 mem: location 1268 is 107
9999 mem: location 1287 is 1055
9999 mem: location 1287 is 1055
9999 mem: storing 107 in location 1055
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1055
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1286 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1288
 103 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1056
9999 mem: location 1288 is 1056
9999 mem: storing 7 in location 1056
 103 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 103 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 102 run: curr <- next-duplex curr
9999 mem: location 1222 is 1200
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1200
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1398 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1222
 102 run: prev <- next-duplex prev
9999 mem: location 1223 is 1197
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1197
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1398 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1223
 102 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 102 run: loop 
9999 run: jumping to instruction 21
schedule: render/editor-event-loop/run1002/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 102 run: break-unless curr, 
9999 mem: location 1222 is 1203
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 102 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1222 is 1203
9999 run: address to copy is 1203
9999 run: its type is number
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1233
 102 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 10
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 103 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1118
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 103 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1120
 103 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 103 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 103 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1123
 103 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 103 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 103 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 10
9999 mem: storing 1 in location 1234
 102 run: break-unless newline?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 45
 102 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 103 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1250
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 103 run: column:number <- copy left
9999 mem: location 1250 is 1
9999 mem: storing 1 in location 1252
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 21
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 21
9999 mem: storing 1057 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1286 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1057
9999 mem: location 1287 is 1057
9999 mem: storing 32 in location 1057
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1286 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1058
9999 mem: location 1288 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 22
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 22
9999 mem: storing 1059 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1286 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1059
9999 mem: location 1287 is 1059
9999 mem: storing 32 in location 1059
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1286 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1060
9999 mem: location 1288 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 23
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 23
9999 mem: storing 1061 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1286 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1061
9999 mem: location 1287 is 1061
9999 mem: storing 32 in location 1061
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1286 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1062
9999 mem: location 1288 is 1062
9999 mem: storing 7 in location 1062
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 24
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 24
9999 mem: storing 1063 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1286 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1063
9999 mem: location 1287 is 1063
9999 mem: storing 32 in location 1063
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1286 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1064
9999 mem: location 1288 is 1064
9999 mem: storing 7 in location 1064
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 102 run: row <- add row, 1
9999 mem: location 1225 is 2
9999 mem: storing 3 in location 1225
 102 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 102 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 3
9999 mem: location 1226 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1250
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 103 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 103 run: *row <- copy new-row
9999 mem: location 1250 is 3
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 3 in location 1011
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 103 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 102 run: curr <- next-duplex curr
9999 mem: location 1222 is 1203
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1203
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1398 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1222
 102 run: prev <- next-duplex prev
9999 mem: location 1223 is 1200
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1200
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1398 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1223
 102 run: loop +next-character:label
9999 run: jumping to instruction 22
 102 run: break-unless curr, 
9999 mem: location 1222 is 1206
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 3
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 102 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1206
9999 mem: location 1206 is 108
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1222 is 1206
9999 run: address to copy is 1206
9999 run: its type is number
9999 mem: location 1206 is 108
9999 mem: storing 108 in location 1233
 102 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 108
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 103 run: c:character <- next-ingredient 
9999 mem: storing 108 in location 1118
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 103 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 108
9999 mem: storing 0 in location 1120
 103 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 103 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 103 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 108
9999 mem: storing 0 in location 1123
 103 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 103 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 103 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 108
9999 mem: storing 0 in location 1234
 102 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 102 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 102 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 108
9999 mem: location 1224 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 108 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 108
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 103 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1281
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 103 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 108
9999 mem: storing 0 in location 1284
 103 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 30
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 30
9999 mem: storing 1075 in location 1286
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1075
9999 mem: location 1075 is 109
9999 mem: location 1076 is 7
9999 mem: location 1286 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1287
 103 run: *cursor-contents <- copy c
9999 mem: location 1268 is 108
9999 mem: location 1287 is 1075
9999 mem: location 1287 is 1075
9999 mem: storing 108 in location 1075
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1075
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1286 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1288
 103 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1076
9999 mem: location 1288 is 1076
9999 mem: storing 7 in location 1076
 103 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 103 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 102 run: curr <- next-duplex curr
9999 mem: location 1222 is 1206
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1206
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1206
9999 mem: location 1206 is 108
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1398 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1209
9999 run: result 0 is 1209
9999 mem: storing 1209 in location 1222
 102 run: prev <- next-duplex prev
9999 mem: location 1223 is 1203
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1203
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1398 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1223
 102 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: break-unless curr, 
9999 mem: location 1222 is 1209
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 3
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 102 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1209
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1222 is 1209
9999 run: address to copy is 1209
9999 run: its type is number
9999 mem: location 1209 is 10
9999 mem: storing 10 in location 1233
 102 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 10
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 103 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1118
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 103 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1120
 103 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 103 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 103 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1123
 103 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 103 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 103 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 10
9999 mem: storing 1 in location 1234
 102 run: break-unless newline?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 45
 102 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 103 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1250
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 103 run: column:number <- copy left
9999 mem: location 1250 is 1
9999 mem: storing 1 in location 1252
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
schedule: print-character/clear-line-delimited/render/editor-event-loop/run1002/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 31
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 31
9999 mem: storing 1077 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1286 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1077
9999 mem: location 1287 is 1077
9999 mem: storing 32 in location 1077
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1286 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1078
9999 mem: location 1288 is 1078
9999 mem: storing 7 in location 1078
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 32
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 32
9999 mem: storing 1079 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1286 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1079
9999 mem: location 1287 is 1079
9999 mem: storing 32 in location 1079
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1286 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1080
9999 mem: location 1288 is 1080
9999 mem: storing 7 in location 1080
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 33
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 33
9999 mem: storing 1081 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1286 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1081
9999 mem: location 1287 is 1081
9999 mem: storing 32 in location 1081
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1286 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1082
9999 mem: location 1288 is 1082
9999 mem: storing 7 in location 1082
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 34
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 34
9999 mem: storing 1083 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1286 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1083
9999 mem: location 1287 is 1083
9999 mem: storing 32 in location 1083
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1286 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1084
9999 mem: location 1288 is 1084
9999 mem: storing 7 in location 1084
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 102 run: row <- add row, 1
9999 mem: location 1225 is 3
9999 mem: storing 4 in location 1225
 102 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 102 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 4
9999 mem: location 1226 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1250
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 103 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 103 run: *row <- copy new-row
9999 mem: location 1250 is 4
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 4 in location 1011
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 103 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 102 run: curr <- next-duplex curr
9999 mem: location 1222 is 1209
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1209 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1209
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1209
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1398 is 1209
9999 run: address to copy is 1210
9999 run: its type is address
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1212
9999 run: result 0 is 1212
9999 mem: storing 1212 in location 1222
 102 run: prev <- next-duplex prev
9999 mem: location 1223 is 1206
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1206
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1206
9999 mem: location 1206 is 108
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1398 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1209
9999 run: result 0 is 1209
9999 mem: storing 1209 in location 1223
 102 run: loop +next-character:label
9999 run: jumping to instruction 22
 102 run: break-unless curr, 
9999 mem: location 1222 is 1212
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 4
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 102 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 4
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1212
9999 mem: location 1212 is 109
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1209
9999 mem: location 1222 is 1212
9999 run: address to copy is 1212
9999 run: its type is number
9999 mem: location 1212 is 109
9999 mem: storing 109 in location 1233
 102 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 109
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 103 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 103 run: c:character <- next-ingredient 
9999 mem: storing 109 in location 1118
 103 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 103 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 103 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 109
9999 mem: storing 0 in location 1120
 103 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 103 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 103 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 103 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 103 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 109
9999 mem: storing 0 in location 1123
 103 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 103 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 103 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 103 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 109
9999 mem: storing 0 in location 1234
 102 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 102 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 102 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 109
9999 mem: location 1224 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 109 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 109
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 103 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1281
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 103 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 109
9999 mem: storing 0 in location 1284
 103 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 40
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 40
9999 mem: storing 1095 in location 1286
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1286 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1287
 103 run: *cursor-contents <- copy c
9999 mem: location 1268 is 109
9999 mem: location 1287 is 1095
9999 mem: location 1287 is 1095
9999 mem: storing 109 in location 1095
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1095
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1286 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1288
 103 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1096
9999 mem: location 1288 is 1096
9999 mem: storing 7 in location 1096
 103 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 103 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 102 run: curr <- next-duplex curr
9999 mem: location 1222 is 1212
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1212 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1212
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1212
9999 mem: location 1212 is 109
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1209
9999 mem: location 1398 is 1212
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 0
9999 mem: storing 0 in location 1399
 103 run: reply result
9999 mem: location 1399 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1222
 102 run: prev <- next-duplex prev
9999 mem: location 1223 is 1209
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1209 in location 1398
 103 run: jump-if in, 1:offset
9999 mem: location 1398 is 1209
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1398 is 1209
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1398 is 1209
9999 run: address to copy is 1210
9999 run: its type is address
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1399
 103 run: reply result
9999 mem: location 1399 is 1212
9999 run: result 0 is 1212
9999 mem: storing 1212 in location 1223
 102 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: break-unless curr, 
9999 mem: location 1222 is 0
9999 run: jumping to instruction 68
 102 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1002
9999 mem: storing 1002 in location 1237
 102 run: *bottom-of-screen <- copy curr
9999 mem: location 1222 is 0
9999 mem: location 1237 is 1002
9999 mem: location 1237 is 1002
9999 mem: storing 0 in location 1002
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 4
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 102 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1226 is 1
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1238
 102 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1231 is 0
9999 mem: location 1238 is 0
9999 mem: storing 0 in location 1239
 102 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1225 is 4
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1240
 102 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1239 is 0
9999 mem: location 1240 is 0
9999 mem: storing 0 in location 1241
 102 run: break-unless before-cursor?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 89
 102 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 103 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1250
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 103 run: column:number <- copy left
9999 mem: location 1250 is 1
9999 mem: storing 1 in location 1252
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 41
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 41
9999 mem: storing 1097 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1286 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1097
9999 mem: location 1287 is 1097
9999 mem: storing 32 in location 1097
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1286 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1098
9999 mem: location 1288 is 1098
9999 mem: storing 7 in location 1098
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 42
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 42
9999 mem: storing 1099 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1286 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1099
9999 mem: location 1287 is 1099
9999 mem: storing 32 in location 1099
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1286 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1100
9999 mem: location 1288 is 1100
9999 mem: storing 7 in location 1100
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 43
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 43
9999 mem: storing 1101 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1286 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1101
9999 mem: location 1287 is 1101
9999 mem: storing 32 in location 1101
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1286 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1102
9999 mem: location 1288 is 1102
9999 mem: storing 7 in location 1102
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
schedule: print-character/clear-line-delimited/render/editor-event-loop/run1002/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 104 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 104 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 104 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 104 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 104 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1281
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 104 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 104 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 44
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 44
9999 mem: storing 1103 in location 1286
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1286 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1287
 104 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1103
9999 mem: location 1287 is 1103
9999 mem: storing 32 in location 1103
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1286 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1288
 104 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1104
9999 mem: location 1288 is 1104
9999 mem: storing 7 in location 1104
 104 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 104 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 103 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 103 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 102 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 4
9999 mem: location 1219 is 0
9999 mem: location 1221 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1145
 103 run: row:number <- next-ingredient 
9999 mem: storing 4 in location 1146
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1147
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1148
 103 run: row <- add row, 1
9999 mem: location 1146 is 4
9999 mem: storing 5 in location 1146
 103 run: move-cursor screen, row, left
9999 mem: location 1145 is 1009
9999 mem: location 1146 is 5
9999 mem: location 1147 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1250
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 104 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 104 run: *row <- copy new-row
9999 mem: location 1250 is 5
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 5 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 104 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1145 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1398
 104 run: break-unless sc, 
9999 mem: location 1398 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1398 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1398 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1399
 104 run: reply height
9999 mem: location 1399 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1149
 103 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1146 is 5
9999 mem: location 1149 is 5
9999 mem: storing 1 in location 1150
 103 run: break-if at-bottom-of-screen?, 
9999 mem: location 1150 is 1
9999 run: jumping to instruction 15
 102 run: reply row, screen/same-as-ingredient:0
9999 mem: location 1225 is 4
9999 mem: location 1217 is 1009
9999 run: result 0 is 4
9999 run: result 1 is 1009
9999 mem: storing 4 in location 1310
9999 mem: storing 1009 in location 1300
 101 run: left:number <- get *editor, left:offset
9999 mem: location 1302 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1302 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1311
 101 run: right:number <- get *editor, right:offset
9999 mem: location 1302 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1302 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1312
 101 run: row <- add row, 1
9999 mem: location 1310 is 4
9999 mem: storing 5 in location 1310
 101 run: move-cursor screen, row, left
9999 mem: location 1300 is 1009
9999 mem: location 1310 is 5
9999 mem: location 1311 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1250
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 102 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 102 run: *row <- copy new-row
9999 mem: location 1250 is 5
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 5 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 102 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 101 run: clear-line-delimited screen, left, right
9999 mem: location 1300 is 1009
9999 mem: location 1311 is 0
9999 mem: location 1312 is 4
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1250
 102 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 102 run: column:number <- copy left
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1252
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 0
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1394
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1394 in location 1315
 102 run: break-unless x, 
9999 mem: location 1315 is 1394
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1315 is 1394
9999 mem: location 1394 is 1
9999 mem: location 1395 is 1389
9999 mem: location 1315 is 1394
9999 run: address to copy is 1394
9999 mem: storing 1394 in location 1316
 102 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1315 is 1394
9999 mem: location 1394 is 1
9999 mem: location 1395 is 1389
9999 mem: location 1315 is 1394
9999 run: address to copy is 1395
9999 run: its type is address
9999 mem: location 1395 is 1389
9999 mem: storing 1389 in location 1317
 102 run: max:number <- length *buf
9999 mem: location 1317 is 1389
9999 mem: location 1389 is 1
9999 mem: location 1390 is 1
9999 mem: location 1391 is 65517
9999 mem: location 1392 is 0
9999 mem: location 1393 is 0
9999 mem: location 1317 is 1389
9999 mem: storing 1 in location 1318
 102 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1316 is 1394
9999 mem: location 1394 is 1
9999 mem: location 1318 is 1
9999 mem: storing 1 in location 1319
 102 run: break-unless done?, 
9999 mem: location 1319 is 1
9999 run: jump-unless fell through
 102 run: dummy:address:event <- new event:type
9999 mem: storing 1396 in location 1320
 102 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1320 is 1396
9999 mem: location 1396 is 0
9999 mem: location 1397 is 0
9999 mem: location 1398 is 0
9999 mem: location 1399 is 0
9999 mem: location 1315 is 1394
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1394
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1394 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 1 in location 1308
 101 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?, 
9999 mem: location 1308 is 1
9999 run: jumping to instruction 26
  99 run: screen-should-contain [
    .          .
    .ij        .
    .k         .
    .l         .
    .m         .
  ]
  99 run: assume-console [
    press 65517  # up-arrow
  ]
parse: instruction: press
parse:   ingredient: {name: "65517", properties: ["65517": "literal"]}
  99 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1003
after-brace: editor-event-loop ...
  99 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1405
9999 mem: location 2 is 1000
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
 100 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1300
 100 run: console:address <- next-ingredient 
9999 mem: storing 1405 in location 1301
 100 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1302
 100 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1405
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 101 run: x:address:console <- next-ingredient 
9999 mem: storing 1405 in location 1315
 101 run: break-unless x, 
9999 mem: location 1315 is 1405
9999 run: jump-unless fell through
 101 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1315 is 1405
9999 mem: location 1405 is 0
9999 mem: location 1406 is 1400
9999 mem: location 1315 is 1405
9999 run: address to copy is 1405
9999 mem: storing 1405 in location 1316
 101 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1315 is 1405
9999 mem: location 1405 is 0
9999 mem: location 1406 is 1400
9999 mem: location 1315 is 1405
9999 run: address to copy is 1406
9999 run: its type is address
9999 mem: location 1406 is 1400
9999 mem: storing 1400 in location 1317
 101 run: max:number <- length *buf
9999 mem: location 1317 is 1400
9999 mem: location 1400 is 1
9999 mem: location 1401 is 1
9999 mem: location 1402 is 65517
9999 mem: location 1403 is 0
9999 mem: location 1404 is 0
9999 mem: location 1317 is 1400
9999 mem: storing 1 in location 1318
 101 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1316 is 1405
9999 mem: location 1405 is 0
9999 mem: location 1318 is 1
9999 mem: storing 0 in location 1319
 101 run: break-unless done?, 
9999 mem: location 1319 is 0
9999 run: jumping to instruction 12
 101 run: result:event <- index *buf, *idx
9999 mem: location 1317 is 1400
9999 mem: location 1400 is 1
9999 mem: location 1401 is 1
9999 mem: location 1402 is 65517
9999 mem: location 1403 is 0
9999 mem: location 1404 is 0
9999 mem: location 1316 is 1405
9999 mem: location 1405 is 0
9999 mem: location 1317 is 1400
9999 mem: location 1316 is 1405
9999 mem: location 1405 is 0
9999 run: address to copy is 1401
9999 run: its type is event
9999 mem: location 1401 is 1
9999 mem: location 1402 is 65517
9999 mem: location 1403 is 0
9999 mem: location 1404 is 0
9999 mem: storing 1 in location 1321
9999 mem: storing 65517 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 101 run: *idx <- add *idx, 1
9999 mem: location 1316 is 1405
9999 mem: location 1405 is 0
9999 mem: location 1316 is 1405
9999 mem: storing 1 in location 1405
 101 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1321 is 1
9999 mem: location 1322 is 65517
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: location 1315 is 1405
9999 run: result 0 is [1, 65517, 0, 0]
9999 run: result 1 is 1405
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1303
9999 mem: storing 65517 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1405 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
 100 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 100 run: break-if quit?, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 100 run: trace [app], [next-event]
   1 app: next-event
 100 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65517
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: storing 0 in location 1309
 100 run: break-unless t, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 14
 100 run: break-if t, 
9999 mem: location 1309 is 0
9999 run: jump-if fell through
 100 run: handle-keyboard-event screen, console, editor, e
9999 mem: location 1300 is 1009
9999 mem: location 1301 is 1405
9999 mem: location 1302 is 1000
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65517
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 50
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1328
 101 run: console:address <- next-ingredient 
9999 mem: storing 1405 in location 1329
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1330
 101 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1331
9999 mem: storing 65517 in location 1332
9999 mem: storing 0 in location 1333
9999 mem: storing 0 in location 1334
 101 run: jump-if editor, 1:offset
9999 mem: location 1330 is 1000
9999 run: jumping to instruction 7
 101 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1331 is 1
9999 mem: location 1332 is 65517
9999 mem: location 1333 is 0
9999 mem: location 1334 is 0
9999 mem: storing 0 in location 1335
 101 run: break-unless c, 
9999 mem: location 1335 is 0
9999 run: jumping to instruction 67
 101 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1331 is 1
9999 mem: location 1332 is 65517
9999 mem: location 1333 is 0
9999 mem: location 1334 is 0
9999 mem: storing 1332 in location 1346
 101 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1346 is 1332
 101 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1347
 101 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1348
 101 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1349
 101 run: screen-height:number <- screen-height screen
9999 mem: location 1328 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1407
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1409
 102 run: break-unless sc, 
9999 mem: location 1409 is 1009
9999 run: jump-unless fell through
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1409 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1409 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1410
 102 run: reply height
9999 mem: location 1410 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1350
 101 run: left:number <- get *editor, left:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1351
 101 run: right:number <- get *editor, right:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1352
 101 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1353
 101 run: break-unless page-up?, 
9999 mem: location 1353 is 0
9999 run: jumping to instruction 82
 101 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1354
 101 run: break-unless page-down?, 
9999 mem: location 1354 is 0
9999 run: jumping to instruction 88
 101 run: end?:boolean <- equal *k, 65520/end
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1355
 101 run: break-unless end?, 
9999 mem: location 1355 is 0
9999 run: jumping to instruction 94
 101 run: home?:boolean <- equal *k, 65521/home
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1356
 101 run: break-unless home?, 
9999 mem: location 1356 is 0
9999 run: jumping to instruction 100
 101 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1357
 101 run: break-unless move-to-next-line?, 
9999 mem: location 1357 is 0
9999 run: jumping to instruction 119
 101 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 1 in location 1362
 101 run: break-unless move-to-previous-line?, 
9999 mem: location 1362 is 1
9999 run: jump-unless fell through
 101 run: already-at-top?:boolean <- lesser-or-equal *cursor-row, 1/top
9999 mem: location 1348 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1363
 101 run: break-if already-at-top?, 
9999 mem: location 1363 is 1
9999 run: jumping to instruction 127
 101 run: break-unless already-at-top?, 
9999 mem: location 1363 is 1
9999 run: jump-unless fell through
 101 run: top-of-screen:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1001
9999 mem: storing 1001 in location 1360
 101 run: left:number <- get *editor, left:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1351
 101 run: right:number <- get *editor, right:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1188
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1352
 101 run: max:number <- subtract right, left
9999 mem: location 1352 is 4
9999 mem: location 1351 is 0
9999 mem: storing 4 in location 1361
 101 run: *top-of-screen <- start-of-previous-line *top-of-screen, max
9999 mem: location 1360 is 1001
9999 mem: location 1001 is 1188
9999 mem: location 1361 is 4
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
 102 run: original:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1381
 102 run: max:number <- next-ingredient 
9999 mem: storing 4 in location 1382
 102 run: count:number <- copy 0
9999 mem: storing 0 in location 1383
 102 run: curr:address:duplex-list <- copy original
9999 mem: location 1381 is 1188
9999 mem: storing 1188 in location 1384
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1384 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1384 is 1188
9999 run: address to copy is 1188
9999 run: its type is number
9999 mem: location 1188 is 104
9999 mem: storing 104 in location 1385
 102 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1385 is 104
9999 mem: storing 0 in location 1386
 102 run: break-unless at-newline?, 
9999 mem: location 1386 is 0
9999 run: jumping to instruction 10
 102 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1384 is 1188
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1409
 103 run: jump-if in, 1:offset
9999 mem: location 1409 is 1188
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1409 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1409 is 1188
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1185
9999 mem: storing 1185 in location 1410
 103 run: reply result
9999 mem: location 1410 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1387
 102 run: jump-if prev, 1:offset
9999 mem: location 1387 is 1185
9999 run: jumping to instruction 14
 102 run: curr <- copy prev
9999 mem: location 1387 is 1185
9999 mem: storing 1185 in location 1384
 102 run: count <- add count, 1
9999 mem: location 1383 is 0
9999 mem: storing 1 in location 1383
 102 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1383 is 1
9999 mem: location 1382 is 4
9999 mem: storing 0 in location 1388
 102 run: break-if done?, 
9999 mem: location 1388 is 0
9999 run: jump-if fell through
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1384 is 1185
9999 mem: location 1185 is 103
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1384 is 1185
9999 run: address to copy is 1185
9999 run: its type is number
9999 mem: location 1185 is 103
9999 mem: storing 103 in location 1385
 102 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1385 is 103
9999 mem: storing 0 in location 1386
 102 run: break-if at-newline?, 
9999 mem: location 1386 is 0
9999 run: jump-if fell through
 102 run: prev <- prev-duplex curr
9999 mem: location 1384 is 1185
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1409
 103 run: jump-if in, 1:offset
9999 mem: location 1409 is 1185
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1409 is 1185
9999 mem: location 1185 is 103
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1409 is 1185
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1182
9999 mem: storing 1182 in location 1410
 103 run: reply result
9999 mem: location 1410 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1387
 102 run: break-unless prev, 
9999 mem: location 1387 is 1182
9999 run: jump-unless fell through
 102 run: curr <- copy prev
9999 mem: location 1387 is 1182
9999 mem: storing 1182 in location 1384
 102 run: count <- add count, 1
9999 mem: location 1383 is 1
9999 mem: storing 2 in location 1383
 102 run: loop 
9999 run: jumping to instruction 17
 102 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1383 is 2
9999 mem: location 1382 is 4
9999 mem: storing 0 in location 1388
 102 run: break-if done?, 
9999 mem: location 1388 is 0
9999 run: jump-if fell through
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1384 is 1182
9999 mem: location 1182 is 102
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1384 is 1182
9999 run: address to copy is 1182
9999 run: its type is number
9999 mem: location 1182 is 102
9999 mem: storing 102 in location 1385
 102 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1385 is 102
9999 mem: storing 0 in location 1386
 102 run: break-if at-newline?, 
9999 mem: location 1386 is 0
9999 run: jump-if fell through
 102 run: prev <- prev-duplex curr
9999 mem: location 1384 is 1182
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1409
 103 run: jump-if in, 1:offset
9999 mem: location 1409 is 1182
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1409 is 1182
9999 mem: location 1182 is 102
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1409 is 1182
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1179
9999 mem: storing 1179 in location 1410
 103 run: reply result
9999 mem: location 1410 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1387
 102 run: break-unless prev, 
9999 mem: location 1387 is 1179
9999 run: jump-unless fell through
 102 run: curr <- copy prev
9999 mem: location 1387 is 1179
9999 mem: storing 1179 in location 1384
 102 run: count <- add count, 1
9999 mem: location 1383 is 2
9999 mem: storing 3 in location 1383
 102 run: loop 
9999 run: jumping to instruction 17
 102 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1383 is 3
9999 mem: location 1382 is 4
9999 mem: storing 0 in location 1388
 102 run: break-if done?, 
9999 mem: location 1388 is 0
9999 run: jump-if fell through
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1384 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1384 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 101
9999 mem: storing 101 in location 1385
 102 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1385 is 101
9999 mem: storing 0 in location 1386
 102 run: break-if at-newline?, 
9999 mem: location 1386 is 0
9999 run: jump-if fell through
 102 run: prev <- prev-duplex curr
9999 mem: location 1384 is 1179
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1409
 103 run: jump-if in, 1:offset
9999 mem: location 1409 is 1179
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1409 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1409 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1176
9999 mem: storing 1176 in location 1410
 103 run: reply result
9999 mem: location 1410 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1387
 102 run: break-unless prev, 
9999 mem: location 1387 is 1176
9999 run: jump-unless fell through
 102 run: curr <- copy prev
9999 mem: location 1387 is 1176
9999 mem: storing 1176 in location 1384
 102 run: count <- add count, 1
9999 mem: location 1383 is 3
9999 mem: storing 4 in location 1383
 102 run: loop 
9999 run: jumping to instruction 17
 102 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1383 is 4
9999 mem: location 1382 is 4
9999 mem: storing 1 in location 1388
 102 run: break-if done?, 
9999 mem: location 1388 is 1
9999 run: jumping to instruction 27
 102 run: reply curr
9999 mem: location 1384 is 1176
9999 run: result 0 is 1176
9999 mem: location 1360 is 1001
9999 mem: storing 1176 in location 1001
 101 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1364
 101 run: break-unless move-to-previous-character?, 
9999 mem: location 1364 is 0
9999 run: jumping to instruction 144
 101 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1366
 101 run: break-unless move-to-next-character?, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 193
 101 run: delete?:boolean <- equal *k, 65522/delete
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1375
 101 run: break-unless delete?, 
9999 mem: location 1375 is 0
9999 run: jumping to instruction 200
 100 run: row:number, screen <- render screen, editor
9999 mem: location 1300 is 1009
9999 mem: location 1302 is 1000
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 28
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1217
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1218
 101 run: jump-if editor, 1:offset
9999 mem: location 1218 is 1000
9999 run: jumping to instruction 5
 101 run: left:number <- get *editor, left:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1219
 101 run: screen-height:number <- screen-height screen
9999 mem: location 1217 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1409
 102 run: break-unless sc, 
9999 mem: location 1409 is 1009
9999 run: jump-unless fell through
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1409 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1409 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1410
 102 run: reply height
9999 mem: location 1410 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1220
 101 run: right:number <- get *editor, right:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1221
 101 run: hide-screen screen
9999 mem: location 1217 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1246
 102 run: break-unless screen, 
9999 mem: location 1246 is 1009
9999 run: jump-unless fell through
 102 run: reply screen
9999 mem: location 1246 is 1009
 101 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1001
9999 run: its type is address
9999 mem: location 1001 is 1176
9999 mem: storing 1176 in location 1222
 101 run: prev:address:duplex-list <- copy curr
9999 mem: location 1222 is 1176
9999 mem: storing 1176 in location 1223
 101 run: curr <- next-duplex curr
9999 mem: location 1222 is 1176
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1176
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1176
9999 mem: location 1176 is 100
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1409 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1222
 101 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1224
 101 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1225
 101 run: column:number <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 101 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1227
 101 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1228
 101 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1229
 101 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 1
9999 mem: location 1226 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1250
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
schedule: move-cursor/render/editor-event-loop/run1003/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 102 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 102 run: *row <- copy new-row
9999 mem: location 1250 is 1
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 1 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 102 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 101 run: break-unless curr, 
9999 mem: location 1222 is 1179
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 101 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 101 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 0
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1232
 101 run: break-unless at-cursor?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 101 run: *before-cursor <- prev-duplex curr
9999 mem: location 1222 is 1179
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1179
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1409 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1409 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1176
9999 mem: storing 1176 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1176
9999 run: result 0 is 1176
9999 mem: location 1229 is 1003
9999 mem: storing 1176 in location 1003
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1222 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 101
9999 mem: storing 101 in location 1233
 101 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 101
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 102 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1118
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 101
9999 mem: storing 0 in location 1120
 102 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 102 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 101
9999 mem: storing 0 in location 1123
 102 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 102 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 102 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 101
9999 mem: storing 0 in location 1234
 101 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 101 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 101 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 101
9999 mem: location 1224 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 101
9999 mem: storing 0 in location 1278
 102 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 102 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 102 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1281
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 102 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 101
9999 mem: storing 0 in location 1284
 102 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 10
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 10
9999 mem: storing 1035 in location 1286
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1035
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1286 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1287
 102 run: *cursor-contents <- copy c
9999 mem: location 1268 is 101
9999 mem: location 1287 is 1035
9999 mem: location 1287 is 1035
9999 mem: storing 101 in location 1035
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1035
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1286 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1288
 102 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1036
9999 mem: location 1288 is 1036
9999 mem: storing 7 in location 1036
 102 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 102 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1222 is 1179
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1179
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1409 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1222
 101 run: prev <- next-duplex prev
9999 mem: location 1223 is 1176
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1176
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1176
9999 mem: location 1176 is 100
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1409 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1223
 101 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 101 run: loop 
9999 run: jumping to instruction 21
 101 run: break-unless curr, 
9999 mem: location 1222 is 1182
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 101 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 101 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 1
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1232
 101 run: break-unless at-cursor?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 31
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1182
9999 mem: location 1182 is 102
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1222 is 1182
9999 run: address to copy is 1182
9999 run: its type is number
9999 mem: location 1182 is 102
9999 mem: storing 102 in location 1233
 101 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 102
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 102 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1118
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 102
9999 mem: storing 0 in location 1120
 102 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 102 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 102
9999 mem: storing 0 in location 1123
 102 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 102 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 102 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 102
9999 mem: storing 0 in location 1234
 101 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 101 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 101 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 102
9999 mem: location 1224 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 102
9999 mem: storing 0 in location 1278
 102 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 102 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 102 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1281
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 102 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 102
9999 mem: storing 0 in location 1284
 102 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 11
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 11
9999 mem: storing 1037 in location 1286
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1037
9999 mem: location 1037 is 106
9999 mem: location 1038 is 7
9999 mem: location 1286 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1287
 102 run: *cursor-contents <- copy c
9999 mem: location 1268 is 102
9999 mem: location 1287 is 1037
9999 mem: location 1287 is 1037
9999 mem: storing 102 in location 1037
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1037
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1286 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1288
 102 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1038
9999 mem: location 1288 is 1038
9999 mem: storing 7 in location 1038
 102 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 102 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1222 is 1182
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1182
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1182
9999 mem: location 1182 is 102
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1409 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1222
 101 run: prev <- next-duplex prev
9999 mem: location 1223 is 1179
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1179
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1409 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1223
 101 run: column <- add column, 1
9999 mem: location 1226 is 1
9999 mem: storing 2 in location 1226
 101 run: loop 
9999 run: jumping to instruction 21
 101 run: break-unless curr, 
9999 mem: location 1222 is 1185
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 101 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 101 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 2
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1232
 101 run: break-unless at-cursor?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 31
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1185
9999 mem: location 1185 is 103
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1222 is 1185
9999 run: address to copy is 1185
9999 run: its type is number
9999 mem: location 1185 is 103
9999 mem: storing 103 in location 1233
 101 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 103
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 102 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1118
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 103
9999 mem: storing 0 in location 1120
 102 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 102 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 103
9999 mem: storing 0 in location 1123
 102 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 102 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 102 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 103
9999 mem: storing 0 in location 1234
 101 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 2
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 101 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 101 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 103
9999 mem: location 1224 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 103
9999 mem: storing 0 in location 1278
 102 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 102 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 102 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1281
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 102 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 103
9999 mem: storing 0 in location 1284
 102 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 12
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 12
9999 mem: storing 1039 in location 1286
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1286 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1287
 102 run: *cursor-contents <- copy c
9999 mem: location 1268 is 103
9999 mem: location 1287 is 1039
9999 mem: location 1287 is 1039
9999 mem: storing 103 in location 1039
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1039
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1286 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1288
 102 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1040
9999 mem: location 1288 is 1040
9999 mem: storing 7 in location 1040
 102 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 102 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1222 is 1185
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1185
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1185
9999 mem: location 1185 is 103
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1409 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1222
 101 run: prev <- next-duplex prev
9999 mem: location 1223 is 1182
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1182
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1182
9999 mem: location 1182 is 102
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1409 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1223
 101 run: column <- add column, 1
9999 mem: location 1226 is 2
9999 mem: storing 3 in location 1226
 101 run: loop 
9999 run: jumping to instruction 21
 101 run: break-unless curr, 
9999 mem: location 1222 is 1188
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 101 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 101 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 3
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1232
 101 run: break-unless at-cursor?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 31
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1222 is 1188
9999 run: address to copy is 1188
9999 run: its type is number
9999 mem: location 1188 is 104
9999 mem: storing 104 in location 1233
 101 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 104
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 102 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1118
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 104
9999 mem: storing 0 in location 1120
 102 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 102 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 104
9999 mem: storing 0 in location 1123
 102 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 102 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 102 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 104
9999 mem: storing 0 in location 1234
 101 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 3
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 101 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 101 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 104
9999 mem: location 1224 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 104
9999 mem: storing 0 in location 1278
 102 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 102 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 102 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1281
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 102 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 104
9999 mem: storing 0 in location 1284
 102 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 13
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 13
9999 mem: storing 1041 in location 1286
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1286 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1287
 102 run: *cursor-contents <- copy c
9999 mem: location 1268 is 104
9999 mem: location 1287 is 1041
9999 mem: location 1287 is 1041
9999 mem: storing 104 in location 1041
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1041
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1286 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1288
 102 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1042
9999 mem: location 1288 is 1042
9999 mem: storing 7 in location 1042
 102 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 102 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1222 is 1188
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1188
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1409 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1222
 101 run: prev <- next-duplex prev
9999 mem: location 1223 is 1185
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1185
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1185
9999 mem: location 1185 is 103
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1409 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1223
 101 run: column <- add column, 1
9999 mem: location 1226 is 3
9999 mem: storing 4 in location 1226
 101 run: loop 
9999 run: jumping to instruction 21
 101 run: break-unless curr, 
9999 mem: location 1222 is 1191
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 101 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 101 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 4
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1232
 101 run: break-unless at-cursor?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 31
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1222 is 1191
9999 run: address to copy is 1191
9999 run: its type is number
9999 mem: location 1191 is 105
9999 mem: storing 105 in location 1233
 101 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 105
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 102 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1118
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 105
9999 mem: storing 0 in location 1120
 102 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 102 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 105
9999 mem: storing 0 in location 1123
 102 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 102 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 102 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 105
9999 mem: storing 0 in location 1234
 101 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 4
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1236
 101 run: break-unless at-right?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 101 run: print-character screen, 8617/loop-back-to-left, 245/grey
9999 mem: location 1217 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
schedule: print-character/render/editor-event-loop/run1003/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 102 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1269
9999 mem: storing 1 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 8617
9999 mem: storing 0 in location 1278
 102 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 102 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 102 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1281
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 102 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 8617
9999 mem: storing 0 in location 1284
 102 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 14
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 14
9999 mem: storing 1043 in location 1286
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1286 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1287
 102 run: *cursor-contents <- copy c
9999 mem: location 1268 is 8617
9999 mem: location 1287 is 1043
9999 mem: location 1287 is 1043
9999 mem: storing 8617 in location 1043
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1043
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 7
9999 mem: location 1286 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1288
 102 run: *cursor-color <- copy color
9999 mem: location 1269 is 245
9999 mem: location 1288 is 1044
9999 mem: location 1288 is 1044
9999 mem: storing 245 in location 1044
 102 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 102 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 101 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 101 run: row <- add row, 1
9999 mem: location 1225 is 1
9999 mem: storing 2 in location 1225
 101 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 2
9999 mem: location 1226 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1250
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 102 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 102 run: *row <- copy new-row
9999 mem: location 1250 is 2
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 2 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 102 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 101 run: loop +next-character:label
9999 run: jumping to instruction 22
 101 run: break-unless curr, 
9999 mem: location 1222 is 1191
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 101 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1222 is 1191
9999 run: address to copy is 1191
9999 run: its type is number
9999 mem: location 1191 is 105
9999 mem: storing 105 in location 1233
 101 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 105
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 102 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1118
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 105
9999 mem: storing 0 in location 1120
 102 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 102 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 105
9999 mem: storing 0 in location 1123
 102 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 102 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 102 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 105
9999 mem: storing 0 in location 1234
 101 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 101 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 101 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 105
9999 mem: location 1224 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 105
9999 mem: storing 0 in location 1278
 102 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 102 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 102 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1281
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 102 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 105
9999 mem: storing 0 in location 1284
 102 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 20
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 20
9999 mem: storing 1055 in location 1286
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1055
9999 mem: location 1055 is 107
9999 mem: location 1056 is 7
9999 mem: location 1286 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1287
 102 run: *cursor-contents <- copy c
9999 mem: location 1268 is 105
9999 mem: location 1287 is 1055
9999 mem: location 1287 is 1055
9999 mem: storing 105 in location 1055
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1055
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1286 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1288
 102 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1056
9999 mem: location 1288 is 1056
9999 mem: storing 7 in location 1056
 102 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 102 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1222 is 1191
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1191
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1409 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1222
 101 run: prev <- next-duplex prev
9999 mem: location 1223 is 1188
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1188
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1409 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1223
 101 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 101 run: loop 
9999 run: jumping to instruction 21
 101 run: break-unless curr, 
9999 mem: location 1222 is 1194
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 101 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1222 is 1194
9999 run: address to copy is 1194
9999 run: its type is number
9999 mem: location 1194 is 106
9999 mem: storing 106 in location 1233
 101 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 106
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 102 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1118
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 106
9999 mem: storing 0 in location 1120
 102 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 102 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 106
9999 mem: storing 0 in location 1123
 102 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 102 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 102 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 106
9999 mem: storing 0 in location 1234
 101 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 101 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 101 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 106
9999 mem: location 1224 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 106
9999 mem: storing 0 in location 1278
 102 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 102 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 102 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1281
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 102 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 106
9999 mem: storing 0 in location 1284
 102 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 21
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 21
9999 mem: storing 1057 in location 1286
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1286 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1287
 102 run: *cursor-contents <- copy c
9999 mem: location 1268 is 106
9999 mem: location 1287 is 1057
9999 mem: location 1287 is 1057
9999 mem: storing 106 in location 1057
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1057
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1286 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1288
 102 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1058
9999 mem: location 1288 is 1058
9999 mem: storing 7 in location 1058
 102 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 102 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1222 is 1194
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1194
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1409 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1222
 101 run: prev <- next-duplex prev
9999 mem: location 1223 is 1191
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1191
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1409 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1223
 101 run: column <- add column, 1
9999 mem: location 1226 is 1
9999 mem: storing 2 in location 1226
 101 run: loop 
9999 run: jumping to instruction 21
 101 run: break-unless curr, 
9999 mem: location 1222 is 1197
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 101 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1222 is 1197
9999 run: address to copy is 1197
9999 run: its type is number
9999 mem: location 1197 is 10
9999 mem: storing 10 in location 1233
 101 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 10
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 102 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1118
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1120
 102 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 102 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1123
 102 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 102 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 102 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 10
9999 mem: storing 1 in location 1234
 101 run: break-unless newline?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 45
 101 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 2
9999 mem: location 1221 is 4
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 102 run: left:number <- next-ingredient 
9999 mem: storing 2 in location 1250
 102 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 102 run: column:number <- copy left
9999 mem: location 1250 is 2
9999 mem: storing 2 in location 1252
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 103 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1281
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 103 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 103 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 22
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 22
9999 mem: storing 1059 in location 1286
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1286 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1287
 103 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1059
9999 mem: location 1287 is 1059
9999 mem: storing 32 in location 1059
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1286 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1288
 103 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1060
9999 mem: location 1288 is 1060
9999 mem: storing 7 in location 1060
 103 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 103 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 103 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1281
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 103 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 103 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 23
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 23
9999 mem: storing 1061 in location 1286
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1286 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1287
 103 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1061
9999 mem: location 1287 is 1061
9999 mem: storing 32 in location 1061
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1286 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1288
 103 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1062
9999 mem: location 1288 is 1062
9999 mem: storing 7 in location 1062
 103 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 103 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 103 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1281
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 103 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 103 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 24
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 24
9999 mem: storing 1063 in location 1286
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1286 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1287
 103 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1063
9999 mem: location 1287 is 1063
9999 mem: storing 32 in location 1063
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1286 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1288
 103 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1064
9999 mem: location 1288 is 1064
9999 mem: storing 7 in location 1064
 103 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 103 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 101 run: row <- add row, 1
9999 mem: location 1225 is 2
9999 mem: storing 3 in location 1225
 101 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
schedule: render/editor-event-loop/run1003/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 101 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 3
9999 mem: location 1226 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1250
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 102 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 102 run: *row <- copy new-row
9999 mem: location 1250 is 3
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 3 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 102 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1222 is 1197
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1197
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1409 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1222
 101 run: prev <- next-duplex prev
9999 mem: location 1223 is 1194
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1194
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1409 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1223
 101 run: loop +next-character:label
9999 run: jumping to instruction 22
 101 run: break-unless curr, 
9999 mem: location 1222 is 1200
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 3
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 101 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1222 is 1200
9999 run: address to copy is 1200
9999 run: its type is number
9999 mem: location 1200 is 107
9999 mem: storing 107 in location 1233
 101 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 107
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 102 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1118
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 107
9999 mem: storing 0 in location 1120
 102 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 102 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 107
9999 mem: storing 0 in location 1123
 102 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 102 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 102 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 107
9999 mem: storing 0 in location 1234
 101 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 101 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 101 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 107
9999 mem: location 1224 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 107
9999 mem: storing 0 in location 1278
 102 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 102 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 102 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1281
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 102 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 107
9999 mem: storing 0 in location 1284
 102 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 30
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 30
9999 mem: storing 1075 in location 1286
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1075
9999 mem: location 1075 is 108
9999 mem: location 1076 is 7
9999 mem: location 1286 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1287
 102 run: *cursor-contents <- copy c
9999 mem: location 1268 is 107
9999 mem: location 1287 is 1075
9999 mem: location 1287 is 1075
9999 mem: storing 107 in location 1075
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1075
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1286 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1288
 102 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1076
9999 mem: location 1288 is 1076
9999 mem: storing 7 in location 1076
 102 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 102 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1222 is 1200
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1200
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1409 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1222
 101 run: prev <- next-duplex prev
9999 mem: location 1223 is 1197
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1197
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1409 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1223
 101 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 101 run: loop 
9999 run: jumping to instruction 21
 101 run: break-unless curr, 
9999 mem: location 1222 is 1203
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 3
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 101 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1222 is 1203
9999 run: address to copy is 1203
9999 run: its type is number
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1233
 101 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 10
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 102 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1118
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1120
 102 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 102 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1123
 102 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 102 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 102 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 10
9999 mem: storing 1 in location 1234
 101 run: break-unless newline?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 45
 101 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 102 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1250
 102 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 102 run: column:number <- copy left
9999 mem: location 1250 is 1
9999 mem: storing 1 in location 1252
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 103 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1281
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 103 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 103 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 31
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 31
9999 mem: storing 1077 in location 1286
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1286 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1287
 103 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1077
9999 mem: location 1287 is 1077
9999 mem: storing 32 in location 1077
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1286 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1288
 103 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1078
9999 mem: location 1288 is 1078
9999 mem: storing 7 in location 1078
 103 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 103 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 103 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1281
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 103 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 103 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 32
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 32
9999 mem: storing 1079 in location 1286
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1286 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1287
 103 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1079
9999 mem: location 1287 is 1079
9999 mem: storing 32 in location 1079
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1286 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1288
 103 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1080
9999 mem: location 1288 is 1080
9999 mem: storing 7 in location 1080
 103 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 103 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 103 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1281
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 103 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 103 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 33
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 33
9999 mem: storing 1081 in location 1286
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1286 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1287
 103 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1081
9999 mem: location 1287 is 1081
9999 mem: storing 32 in location 1081
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1286 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1288
 103 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1082
9999 mem: location 1288 is 1082
9999 mem: storing 7 in location 1082
 103 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 103 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 103 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1281
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 103 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 103 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 34
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 34
9999 mem: storing 1083 in location 1286
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1286 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1287
 103 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1083
9999 mem: location 1287 is 1083
9999 mem: storing 32 in location 1083
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1286 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1288
 103 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1084
9999 mem: location 1288 is 1084
9999 mem: storing 7 in location 1084
 103 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 103 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 101 run: row <- add row, 1
9999 mem: location 1225 is 3
9999 mem: storing 4 in location 1225
 101 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 101 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 4
9999 mem: location 1226 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1250
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 102 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 102 run: *row <- copy new-row
9999 mem: location 1250 is 4
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 4 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 102 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1222 is 1203
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1203
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1409 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1222
 101 run: prev <- next-duplex prev
9999 mem: location 1223 is 1200
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1200
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1409 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1223
 101 run: loop +next-character:label
9999 run: jumping to instruction 22
 101 run: break-unless curr, 
9999 mem: location 1222 is 1206
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 4
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 101 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 4
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1206
9999 mem: location 1206 is 108
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1222 is 1206
9999 run: address to copy is 1206
9999 run: its type is number
9999 mem: location 1206 is 108
9999 mem: storing 108 in location 1233
 101 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 108
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 102 run: c:character <- next-ingredient 
9999 mem: storing 108 in location 1118
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 108
9999 mem: storing 0 in location 1120
 102 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 102 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 108
9999 mem: storing 0 in location 1123
 102 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 102 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 102 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 108
9999 mem: storing 0 in location 1234
 101 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 101 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 101 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 101 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 108
9999 mem: location 1224 is 7
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 108 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
schedule: print-character/render/editor-event-loop/run1003/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 108
9999 mem: storing 0 in location 1278
 102 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 102 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 102 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1281
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 102 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 108
9999 mem: storing 0 in location 1284
 102 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 40
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 40
9999 mem: storing 1095 in location 1286
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1095
9999 mem: location 1095 is 109
9999 mem: location 1096 is 7
9999 mem: location 1286 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1287
 102 run: *cursor-contents <- copy c
9999 mem: location 1268 is 108
9999 mem: location 1287 is 1095
9999 mem: location 1287 is 1095
9999 mem: storing 108 in location 1095
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1095
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1286 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1288
 102 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1096
9999 mem: location 1288 is 1096
9999 mem: storing 7 in location 1096
 102 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 102 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1222 is 1206
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1206
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1206
9999 mem: location 1206 is 108
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1409 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1209
9999 run: result 0 is 1209
9999 mem: storing 1209 in location 1222
 101 run: prev <- next-duplex prev
9999 mem: location 1223 is 1203
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1203
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1409 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1223
 101 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 101 run: loop 
9999 run: jumping to instruction 21
 101 run: break-unless curr, 
9999 mem: location 1222 is 1209
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 4
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 101 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 4
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1209
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1222 is 1209
9999 run: address to copy is 1209
9999 run: its type is number
9999 mem: location 1209 is 10
9999 mem: storing 10 in location 1233
 101 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 10
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 102 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1118
 102 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1120
 102 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 102 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 102 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 102 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 102 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1123
 102 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 102 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 102 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 102 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 10
9999 mem: storing 1 in location 1234
 101 run: break-unless newline?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 4
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 101 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 45
 101 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 102 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1250
 102 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 102 run: column:number <- copy left
9999 mem: location 1250 is 1
9999 mem: storing 1 in location 1252
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 103 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1281
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 103 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 103 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 41
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 41
9999 mem: storing 1097 in location 1286
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1286 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1287
 103 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1097
9999 mem: location 1287 is 1097
9999 mem: storing 32 in location 1097
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1286 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1288
 103 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1098
9999 mem: location 1288 is 1098
9999 mem: storing 7 in location 1098
 103 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 103 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 103 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1281
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 103 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 103 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 42
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 42
9999 mem: storing 1099 in location 1286
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1286 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1287
 103 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1099
9999 mem: location 1287 is 1099
9999 mem: storing 32 in location 1099
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1286 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1288
 103 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1100
9999 mem: location 1288 is 1100
9999 mem: storing 7 in location 1100
 103 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 103 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 103 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1281
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 103 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 103 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 43
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 43
9999 mem: storing 1101 in location 1286
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1286 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1287
 103 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1101
9999 mem: location 1287 is 1101
9999 mem: storing 32 in location 1101
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1286 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1288
 103 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1102
9999 mem: location 1288 is 1102
9999 mem: storing 7 in location 1102
 103 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 103 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 103 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 103 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1281
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 103 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 103 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 44
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 44
9999 mem: storing 1103 in location 1286
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1286 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1287
 103 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1103
9999 mem: location 1287 is 1103
9999 mem: storing 32 in location 1103
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1286 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1288
 103 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1104
9999 mem: location 1288 is 1104
9999 mem: storing 7 in location 1104
 103 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 103 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 101 run: row <- add row, 1
9999 mem: location 1225 is 4
9999 mem: storing 5 in location 1225
 101 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 101 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 5
9999 mem: location 1226 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1250
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 102 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 102 run: *row <- copy new-row
9999 mem: location 1250 is 5
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 5 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 102 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 101 run: curr <- next-duplex curr
9999 mem: location 1222 is 1209
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1209 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1209
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1209
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1206
9999 mem: location 1409 is 1209
9999 run: address to copy is 1210
9999 run: its type is address
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1212
9999 run: result 0 is 1212
9999 mem: storing 1212 in location 1222
 101 run: prev <- next-duplex prev
9999 mem: location 1223 is 1206
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1206 in location 1409
 102 run: jump-if in, 1:offset
9999 mem: location 1409 is 1206
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1409 is 1206
9999 mem: location 1206 is 108
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1203
9999 mem: location 1409 is 1206
9999 run: address to copy is 1207
9999 run: its type is address
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1410
 102 run: reply result
9999 mem: location 1410 is 1209
9999 run: result 0 is 1209
9999 mem: storing 1209 in location 1223
 101 run: loop +next-character:label
9999 run: jumping to instruction 22
 101 run: break-unless curr, 
9999 mem: location 1222 is 1212
9999 run: jump-unless fell through
 101 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 5
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1230
 101 run: break-if off-screen?, 
9999 mem: location 1230 is 1
9999 run: jumping to instruction 68
 101 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1002
9999 mem: storing 1002 in location 1237
 101 run: *bottom-of-screen <- copy curr
9999 mem: location 1222 is 1212
9999 mem: location 1237 is 1002
9999 mem: location 1237 is 1002
9999 mem: storing 1212 in location 1002
 101 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 5
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 101 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1226 is 0
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1238
 101 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1231 is 0
9999 mem: location 1238 is 1
9999 mem: storing 0 in location 1239
 101 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1225 is 5
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1240
 101 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1239 is 0
9999 mem: location 1240 is 0
9999 mem: storing 0 in location 1241
 101 run: break-unless before-cursor?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 89
 101 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1250
 102 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 102 run: column:number <- copy left
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1252
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 0
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 103 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 103 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
schedule: print-character/clear-line-delimited/render/editor-event-loop/run1003/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 103 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 103 run: reply sc
9999 mem: location 1267 is 1009
 102 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 102 run: loop 
9999 run: jumping to instruction 6
 102 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 102 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 101 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 5
9999 mem: location 1219 is 0
9999 mem: location 1221 is 4
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1145
 102 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1146
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1147
 102 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1148
 102 run: row <- add row, 1
9999 mem: location 1146 is 5
9999 mem: storing 6 in location 1146
 102 run: move-cursor screen, row, left
9999 mem: location 1145 is 1009
9999 mem: location 1146 is 6
9999 mem: location 1147 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1250
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 103 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 103 run: *row <- copy new-row
9999 mem: location 1250 is 6
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 6 in location 1011
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 103 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 102 run: screen-height:number <- screen-height screen
9999 mem: location 1145 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1409
 103 run: break-unless sc, 
9999 mem: location 1409 is 1009
9999 run: jump-unless fell through
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1409 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1409 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1410
 103 run: reply height
9999 mem: location 1410 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1149
 102 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1146 is 6
9999 mem: location 1149 is 5
9999 mem: storing 1 in location 1150
 102 run: break-if at-bottom-of-screen?, 
9999 mem: location 1150 is 1
9999 run: jumping to instruction 15
 101 run: reply row, screen/same-as-ingredient:0
9999 mem: location 1225 is 5
9999 mem: location 1217 is 1009
9999 run: result 0 is 5
9999 run: result 1 is 1009
9999 mem: storing 5 in location 1310
9999 mem: storing 1009 in location 1300
 100 run: left:number <- get *editor, left:offset
9999 mem: location 1302 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1302 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1311
 100 run: right:number <- get *editor, right:offset
9999 mem: location 1302 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1302 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1312
 100 run: row <- add row, 1
9999 mem: location 1310 is 5
9999 mem: storing 6 in location 1310
 100 run: move-cursor screen, row, left
9999 mem: location 1300 is 1009
9999 mem: location 1310 is 6
9999 mem: location 1311 is 0
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 101 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1250
 101 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 101 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 101 run: *row <- copy new-row
9999 mem: location 1250 is 6
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 6 in location 1011
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 101 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 100 run: clear-line-delimited screen, left, right
9999 mem: location 1300 is 1009
9999 mem: location 1311 is 0
9999 mem: location 1312 is 4
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 101 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1250
 101 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 101 run: column:number <- copy left
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1252
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 0
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 100 run: loop 
9999 run: jumping to instruction 5
 100 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1405
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 101 run: x:address:console <- next-ingredient 
9999 mem: storing 1405 in location 1315
 101 run: break-unless x, 
9999 mem: location 1315 is 1405
9999 run: jump-unless fell through
 101 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1315 is 1405
9999 mem: location 1405 is 1
9999 mem: location 1406 is 1400
9999 mem: location 1315 is 1405
9999 run: address to copy is 1405
9999 mem: storing 1405 in location 1316
 101 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1315 is 1405
9999 mem: location 1405 is 1
9999 mem: location 1406 is 1400
9999 mem: location 1315 is 1405
9999 run: address to copy is 1406
9999 run: its type is address
9999 mem: location 1406 is 1400
9999 mem: storing 1400 in location 1317
 101 run: max:number <- length *buf
9999 mem: location 1317 is 1400
9999 mem: location 1400 is 1
9999 mem: location 1401 is 1
9999 mem: location 1402 is 65517
9999 mem: location 1403 is 0
9999 mem: location 1404 is 0
9999 mem: location 1317 is 1400
9999 mem: storing 1 in location 1318
 101 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1316 is 1405
9999 mem: location 1405 is 1
9999 mem: location 1318 is 1
9999 mem: storing 1 in location 1319
 101 run: break-unless done?, 
9999 mem: location 1319 is 1
9999 run: jump-unless fell through
 101 run: dummy:address:event <- new event:type
9999 mem: storing 1407 in location 1320
 101 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1320 is 1407
9999 mem: location 1407 is 0
9999 mem: location 1408 is 0
9999 mem: location 1409 is 0
9999 mem: location 1410 is 0
9999 mem: location 1315 is 1405
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1405
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1405 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 1 in location 1308
 100 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 100 run: break-if quit?, 
9999 mem: location 1308 is 1
9999 run: jumping to instruction 26
  98 run: screen-should-contain [
    .          .
    .efgh↩     .
    .ij        .
    .k         .
    .l         .
  ]
  98 run: assume-console [
    press 65517  # up-arrow
  ]
parse: instruction: press
parse:   ingredient: {name: "65517", properties: ["65517": "literal"]}
  98 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1004
after-brace: editor-event-loop ...
  98 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1416
9999 mem: location 2 is 1000
  99 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
  99 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1300
  99 run: console:address <- next-ingredient 
9999 mem: storing 1416 in location 1301
  99 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1302
  99 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1416
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 100 run: x:address:console <- next-ingredient 
9999 mem: storing 1416 in location 1315
 100 run: break-unless x, 
9999 mem: location 1315 is 1416
9999 run: jump-unless fell through
 100 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1315 is 1416
9999 mem: location 1416 is 0
9999 mem: location 1417 is 1411
9999 mem: location 1315 is 1416
9999 run: address to copy is 1416
9999 mem: storing 1416 in location 1316
 100 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1315 is 1416
9999 mem: location 1416 is 0
9999 mem: location 1417 is 1411
9999 mem: location 1315 is 1416
9999 run: address to copy is 1417
9999 run: its type is address
9999 mem: location 1417 is 1411
9999 mem: storing 1411 in location 1317
 100 run: max:number <- length *buf
9999 mem: location 1317 is 1411
9999 mem: location 1411 is 1
9999 mem: location 1412 is 1
9999 mem: location 1413 is 65517
9999 mem: location 1414 is 0
9999 mem: location 1415 is 0
9999 mem: location 1317 is 1411
9999 mem: storing 1 in location 1318
 100 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1316 is 1416
9999 mem: location 1416 is 0
9999 mem: location 1318 is 1
9999 mem: storing 0 in location 1319
 100 run: break-unless done?, 
9999 mem: location 1319 is 0
9999 run: jumping to instruction 12
 100 run: result:event <- index *buf, *idx
9999 mem: location 1317 is 1411
9999 mem: location 1411 is 1
9999 mem: location 1412 is 1
9999 mem: location 1413 is 65517
9999 mem: location 1414 is 0
9999 mem: location 1415 is 0
9999 mem: location 1316 is 1416
9999 mem: location 1416 is 0
9999 mem: location 1317 is 1411
9999 mem: location 1316 is 1416
9999 mem: location 1416 is 0
9999 run: address to copy is 1412
9999 run: its type is event
9999 mem: location 1412 is 1
9999 mem: location 1413 is 65517
9999 mem: location 1414 is 0
9999 mem: location 1415 is 0
9999 mem: storing 1 in location 1321
9999 mem: storing 65517 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 100 run: *idx <- add *idx, 1
9999 mem: location 1316 is 1416
9999 mem: location 1416 is 0
9999 mem: location 1316 is 1416
9999 mem: storing 1 in location 1416
 100 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1321 is 1
9999 mem: location 1322 is 65517
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: location 1315 is 1416
9999 run: result 0 is [1, 65517, 0, 0]
9999 run: result 1 is 1416
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1303
9999 mem: storing 65517 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1416 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
  99 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
  99 run: break-if quit?, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
  99 run: trace [app], [next-event]
   1 app: next-event
  99 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65517
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: storing 0 in location 1309
  99 run: break-unless t, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 14
  99 run: break-if t, 
9999 mem: location 1309 is 0
9999 run: jump-if fell through
  99 run: handle-keyboard-event screen, console, editor, e
9999 mem: location 1300 is 1009
9999 mem: location 1301 is 1416
9999 mem: location 1302 is 1000
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65517
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 50
 100 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1328
 100 run: console:address <- next-ingredient 
9999 mem: storing 1416 in location 1329
 100 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1330
 100 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1331
9999 mem: storing 65517 in location 1332
9999 mem: storing 0 in location 1333
9999 mem: storing 0 in location 1334
 100 run: jump-if editor, 1:offset
9999 mem: location 1330 is 1000
9999 run: jumping to instruction 7
 100 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1331 is 1
9999 mem: location 1332 is 65517
9999 mem: location 1333 is 0
9999 mem: location 1334 is 0
9999 mem: storing 0 in location 1335
 100 run: break-unless c, 
9999 mem: location 1335 is 0
9999 run: jumping to instruction 67
 100 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1331 is 1
9999 mem: location 1332 is 65517
9999 mem: location 1333 is 0
9999 mem: location 1334 is 0
9999 mem: storing 1332 in location 1346
 100 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1346 is 1332
 100 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1347
 100 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1348
 100 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1349
 100 run: screen-height:number <- screen-height screen
9999 mem: location 1328 is 1009
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1418
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1420
 101 run: break-unless sc, 
9999 mem: location 1420 is 1009
9999 run: jump-unless fell through
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1420 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1420 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1421
 101 run: reply height
9999 mem: location 1421 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1350
 100 run: left:number <- get *editor, left:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1351
 100 run: right:number <- get *editor, right:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1352
 100 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1353
 100 run: break-unless page-up?, 
9999 mem: location 1353 is 0
9999 run: jumping to instruction 82
 100 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1354
 100 run: break-unless page-down?, 
9999 mem: location 1354 is 0
9999 run: jumping to instruction 88
 100 run: end?:boolean <- equal *k, 65520/end
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1355
 100 run: break-unless end?, 
9999 mem: location 1355 is 0
9999 run: jumping to instruction 94
 100 run: home?:boolean <- equal *k, 65521/home
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1356
 100 run: break-unless home?, 
9999 mem: location 1356 is 0
9999 run: jumping to instruction 100
 100 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1357
 100 run: break-unless move-to-next-line?, 
9999 mem: location 1357 is 0
9999 run: jumping to instruction 119
 100 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 1 in location 1362
 100 run: break-unless move-to-previous-line?, 
9999 mem: location 1362 is 1
9999 run: jump-unless fell through
 100 run: already-at-top?:boolean <- lesser-or-equal *cursor-row, 1/top
9999 mem: location 1348 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1363
 100 run: break-if already-at-top?, 
9999 mem: location 1363 is 1
9999 run: jumping to instruction 127
 100 run: break-unless already-at-top?, 
9999 mem: location 1363 is 1
9999 run: jump-unless fell through
 100 run: top-of-screen:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1001
9999 mem: storing 1001 in location 1360
 100 run: left:number <- get *editor, left:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1351
 100 run: right:number <- get *editor, right:offset
9999 mem: location 1330 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1176
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1330 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1352
 100 run: max:number <- subtract right, left
9999 mem: location 1352 is 4
9999 mem: location 1351 is 0
9999 mem: storing 4 in location 1361
 100 run: *top-of-screen <- start-of-previous-line *top-of-screen, max
9999 mem: location 1360 is 1001
9999 mem: location 1001 is 1176
9999 mem: location 1361 is 4
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
 101 run: original:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1381
 101 run: max:number <- next-ingredient 
9999 mem: storing 4 in location 1382
 101 run: count:number <- copy 0
9999 mem: storing 0 in location 1383
 101 run: curr:address:duplex-list <- copy original
9999 mem: location 1381 is 1176
9999 mem: storing 1176 in location 1384
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1384 is 1176
9999 mem: location 1176 is 100
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1384 is 1176
9999 run: address to copy is 1176
9999 run: its type is number
9999 mem: location 1176 is 100
9999 mem: storing 100 in location 1385
 101 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1385 is 100
9999 mem: storing 0 in location 1386
 101 run: break-unless at-newline?, 
9999 mem: location 1386 is 0
9999 run: jumping to instruction 10
 101 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1384 is 1176
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1420
 102 run: jump-if in, 1:offset
9999 mem: location 1420 is 1176
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1420 is 1176
9999 mem: location 1176 is 100
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1420 is 1176
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1173
9999 mem: storing 1173 in location 1421
 102 run: reply result
9999 mem: location 1421 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1387
 101 run: jump-if prev, 1:offset
9999 mem: location 1387 is 1173
9999 run: jumping to instruction 14
 101 run: curr <- copy prev
9999 mem: location 1387 is 1173
9999 mem: storing 1173 in location 1384
 101 run: count <- add count, 1
9999 mem: location 1383 is 0
9999 mem: storing 1 in location 1383
 101 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1383 is 1
9999 mem: location 1382 is 4
9999 mem: storing 0 in location 1388
 101 run: break-if done?, 
9999 mem: location 1388 is 0
9999 run: jump-if fell through
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1384 is 1173
9999 mem: location 1173 is 99
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1384 is 1173
9999 run: address to copy is 1173
9999 run: its type is number
9999 mem: location 1173 is 99
9999 mem: storing 99 in location 1385
 101 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1385 is 99
9999 mem: storing 0 in location 1386
 101 run: break-if at-newline?, 
9999 mem: location 1386 is 0
9999 run: jump-if fell through
 101 run: prev <- prev-duplex curr
9999 mem: location 1384 is 1173
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1420
 102 run: jump-if in, 1:offset
9999 mem: location 1420 is 1173
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1420 is 1173
9999 mem: location 1173 is 99
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1420 is 1173
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1170
9999 mem: storing 1170 in location 1421
 102 run: reply result
9999 mem: location 1421 is 1170
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1387
 101 run: break-unless prev, 
9999 mem: location 1387 is 1170
9999 run: jump-unless fell through
 101 run: curr <- copy prev
9999 mem: location 1387 is 1170
9999 mem: storing 1170 in location 1384
 101 run: count <- add count, 1
9999 mem: location 1383 is 1
9999 mem: storing 2 in location 1383
 101 run: loop 
9999 run: jumping to instruction 17
 101 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1383 is 2
9999 mem: location 1382 is 4
9999 mem: storing 0 in location 1388
 101 run: break-if done?, 
9999 mem: location 1388 is 0
9999 run: jump-if fell through
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1384 is 1170
9999 mem: location 1170 is 98
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1163
9999 mem: location 1384 is 1170
9999 run: address to copy is 1170
9999 run: its type is number
9999 mem: location 1170 is 98
9999 mem: storing 98 in location 1385
 101 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1385 is 98
9999 mem: storing 0 in location 1386
 101 run: break-if at-newline?, 
9999 mem: location 1386 is 0
9999 run: jump-if fell through
 101 run: prev <- prev-duplex curr
9999 mem: location 1384 is 1170
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1420
 102 run: jump-if in, 1:offset
9999 mem: location 1420 is 1170
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1420 is 1170
9999 mem: location 1170 is 98
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1163
9999 mem: location 1420 is 1170
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 1163
9999 mem: storing 1163 in location 1421
 102 run: reply result
9999 mem: location 1421 is 1163
9999 run: result 0 is 1163
9999 mem: storing 1163 in location 1387
 101 run: break-unless prev, 
9999 mem: location 1387 is 1163
9999 run: jump-unless fell through
 101 run: curr <- copy prev
9999 mem: location 1387 is 1163
9999 mem: storing 1163 in location 1384
 101 run: count <- add count, 1
9999 mem: location 1383 is 2
9999 mem: storing 3 in location 1383
 101 run: loop 
9999 run: jumping to instruction 17
 101 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1383 is 3
9999 mem: location 1382 is 4
9999 mem: storing 0 in location 1388
 101 run: break-if done?, 
9999 mem: location 1388 is 0
9999 run: jump-if fell through
 101 run: c:character <- get *curr, value:offset
9999 mem: location 1384 is 1163
9999 mem: location 1163 is 97
9999 mem: location 1164 is 1170
9999 mem: location 1165 is 1151
9999 mem: location 1384 is 1163
9999 run: address to copy is 1163
9999 run: its type is number
9999 mem: location 1163 is 97
9999 mem: storing 97 in location 1385
 101 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1385 is 97
9999 mem: storing 0 in location 1386
 101 run: break-if at-newline?, 
9999 mem: location 1386 is 0
9999 run: jump-if fell through
 101 run: prev <- prev-duplex curr
9999 mem: location 1384 is 1163
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1420
 102 run: jump-if in, 1:offset
9999 mem: location 1420 is 1163
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1420 is 1163
9999 mem: location 1163 is 97
9999 mem: location 1164 is 1170
9999 mem: location 1165 is 1151
9999 mem: location 1420 is 1163
9999 run: address to copy is 1165
9999 run: its type is address
9999 mem: location 1165 is 1151
9999 mem: storing 1151 in location 1421
 102 run: reply result
9999 mem: location 1421 is 1151
9999 run: result 0 is 1151
9999 mem: storing 1151 in location 1387
 101 run: break-unless prev, 
9999 mem: location 1387 is 1151
9999 run: jump-unless fell through
 101 run: curr <- copy prev
9999 mem: location 1387 is 1151
9999 mem: storing 1151 in location 1384
 101 run: count <- add count, 1
9999 mem: location 1383 is 3
9999 mem: storing 4 in location 1383
 101 run: loop 
9999 run: jumping to instruction 17
 101 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1383 is 4
9999 mem: location 1382 is 4
9999 mem: storing 1 in location 1388
 101 run: break-if done?, 
9999 mem: location 1388 is 1
9999 run: jumping to instruction 27
 101 run: reply curr
9999 mem: location 1384 is 1151
9999 run: result 0 is 1151
9999 mem: location 1360 is 1001
9999 mem: storing 1151 in location 1001
 100 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1364
 100 run: break-unless move-to-previous-character?, 
9999 mem: location 1364 is 0
9999 run: jumping to instruction 144
 100 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1366
 100 run: break-unless move-to-next-character?, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 193
 100 run: delete?:boolean <- equal *k, 65522/delete
9999 mem: location 1346 is 1332
9999 mem: location 1332 is 65517
9999 mem: storing 0 in location 1375
 100 run: break-unless delete?, 
9999 mem: location 1375 is 0
9999 run: jumping to instruction 200
  99 run: row:number, screen <- render screen, editor
9999 mem: location 1300 is 1009
9999 mem: location 1302 is 1000
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 28
 100 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1217
 100 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1218
 100 run: jump-if editor, 1:offset
9999 mem: location 1218 is 1000
9999 run: jumping to instruction 5
 100 run: left:number <- get *editor, left:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1219
 100 run: screen-height:number <- screen-height screen
9999 mem: location 1217 is 1009
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1420
 101 run: break-unless sc, 
9999 mem: location 1420 is 1009
9999 run: jump-unless fell through
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1420 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1420 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1421
 101 run: reply height
9999 mem: location 1421 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1220
 100 run: right:number <- get *editor, right:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1221
 100 run: hide-screen screen
9999 mem: location 1217 is 1009
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1246
 101 run: break-unless screen, 
9999 mem: location 1246 is 1009
9999 run: jump-unless fell through
 101 run: reply screen
9999 mem: location 1246 is 1009
 100 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1001
9999 run: its type is address
9999 mem: location 1001 is 1151
9999 mem: storing 1151 in location 1222
 100 run: prev:address:duplex-list <- copy curr
9999 mem: location 1222 is 1151
9999 mem: storing 1151 in location 1223
 100 run: curr <- next-duplex curr
9999 mem: location 1222 is 1151
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1151 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1151
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1151
9999 mem: location 1151 is 167
9999 mem: location 1152 is 1163
9999 mem: location 1153 is 0
9999 mem: location 1420 is 1151
9999 run: address to copy is 1152
9999 run: its type is address
9999 mem: location 1152 is 1163
9999 mem: storing 1163 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1163
9999 run: result 0 is 1163
9999 mem: storing 1163 in location 1222
 100 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1224
 100 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1225
 100 run: column:number <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 100 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1227
 100 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1228
 100 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1229
 100 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 1
9999 mem: location 1226 is 0
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 101 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1250
 101 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 101 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 101 run: *row <- copy new-row
9999 mem: location 1250 is 1
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 1 in location 1011
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 101 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 100 run: break-unless curr, 
9999 mem: location 1222 is 1163
9999 run: jump-unless fell through
 100 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 100 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 100 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 0
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1232
 100 run: break-unless at-cursor?, 
9999 mem: location 1232 is 1
9999 run: jump-unless fell through
 100 run: *before-cursor <- prev-duplex curr
9999 mem: location 1222 is 1163
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1163
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1420 is 1163
9999 mem: location 1163 is 97
9999 mem: location 1164 is 1170
9999 mem: location 1165 is 1151
9999 mem: location 1420 is 1163
9999 run: address to copy is 1165
9999 run: its type is address
9999 mem: location 1165 is 1151
9999 mem: storing 1151 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1151
9999 run: result 0 is 1151
9999 mem: location 1229 is 1003
9999 mem: storing 1151 in location 1003
 100 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1163
9999 mem: location 1163 is 97
9999 mem: location 1164 is 1170
9999 mem: location 1165 is 1151
9999 mem: location 1222 is 1163
9999 run: address to copy is 1163
9999 run: its type is number
9999 mem: location 1163 is 97
9999 mem: storing 97 in location 1233
 100 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 97
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 101 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 101 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1118
 101 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 97
9999 mem: storing 0 in location 1120
 101 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 101 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 101 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 97
9999 mem: storing 0 in location 1123
 101 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 101 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 101 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 101 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 100 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 97
9999 mem: storing 0 in location 1234
 100 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 100 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 100 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
schedule: render/editor-event-loop/run1004/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 100 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 97
9999 mem: location 1224 is 7
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 101 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 101 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 97
9999 mem: storing 0 in location 1278
 101 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 101 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 101 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1281
 101 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 101 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 101 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 97
9999 mem: storing 0 in location 1284
 101 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 101 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 10
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 10
9999 mem: storing 1035 in location 1286
 101 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1035
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1286 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1287
 101 run: *cursor-contents <- copy c
9999 mem: location 1268 is 97
9999 mem: location 1287 is 1035
9999 mem: location 1287 is 1035
9999 mem: storing 97 in location 1035
 101 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1286 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1288
 101 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1036
9999 mem: location 1288 is 1036
9999 mem: storing 7 in location 1036
 101 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 101 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 101 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 101 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 100 run: curr <- next-duplex curr
9999 mem: location 1222 is 1163
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1163
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1163
9999 mem: location 1163 is 97
9999 mem: location 1164 is 1170
9999 mem: location 1165 is 1151
9999 mem: location 1420 is 1163
9999 run: address to copy is 1164
9999 run: its type is address
9999 mem: location 1164 is 1170
9999 mem: storing 1170 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1170
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1222
 100 run: prev <- next-duplex prev
9999 mem: location 1223 is 1151
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1151 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1151
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1151
9999 mem: location 1151 is 167
9999 mem: location 1152 is 1163
9999 mem: location 1153 is 0
9999 mem: location 1420 is 1151
9999 run: address to copy is 1152
9999 run: its type is address
9999 mem: location 1152 is 1163
9999 mem: storing 1163 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1163
9999 run: result 0 is 1163
9999 mem: storing 1163 in location 1223
 100 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 100 run: loop 
9999 run: jumping to instruction 21
 100 run: break-unless curr, 
9999 mem: location 1222 is 1170
9999 run: jump-unless fell through
 100 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 100 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 100 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 1
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1232
 100 run: break-unless at-cursor?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 31
 100 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1170
9999 mem: location 1170 is 98
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1163
9999 mem: location 1222 is 1170
9999 run: address to copy is 1170
9999 run: its type is number
9999 mem: location 1170 is 98
9999 mem: storing 98 in location 1233
 100 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 98
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 101 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 101 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1118
 101 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 98
9999 mem: storing 0 in location 1120
 101 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 101 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 101 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 98
9999 mem: storing 0 in location 1123
 101 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 101 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 101 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 101 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 100 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 98
9999 mem: storing 0 in location 1234
 100 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 100 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 100 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 100 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 98
9999 mem: location 1224 is 7
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 101 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 101 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 98
9999 mem: storing 0 in location 1278
 101 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 101 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 101 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1281
 101 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 101 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 101 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 98
9999 mem: storing 0 in location 1284
 101 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 101 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 11
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 11
9999 mem: storing 1037 in location 1286
 101 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1037
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1286 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1287
 101 run: *cursor-contents <- copy c
9999 mem: location 1268 is 98
9999 mem: location 1287 is 1037
9999 mem: location 1287 is 1037
9999 mem: storing 98 in location 1037
 101 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1286 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1288
 101 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1038
9999 mem: location 1288 is 1038
9999 mem: storing 7 in location 1038
 101 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 101 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 101 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 101 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 100 run: curr <- next-duplex curr
9999 mem: location 1222 is 1170
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1170
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1170
9999 mem: location 1170 is 98
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1163
9999 mem: location 1420 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1222
 100 run: prev <- next-duplex prev
9999 mem: location 1223 is 1163
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1163
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1163
9999 mem: location 1163 is 97
9999 mem: location 1164 is 1170
9999 mem: location 1165 is 1151
9999 mem: location 1420 is 1163
9999 run: address to copy is 1164
9999 run: its type is address
9999 mem: location 1164 is 1170
9999 mem: storing 1170 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1170
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1223
 100 run: column <- add column, 1
9999 mem: location 1226 is 1
9999 mem: storing 2 in location 1226
 100 run: loop 
9999 run: jumping to instruction 21
 100 run: break-unless curr, 
9999 mem: location 1222 is 1173
9999 run: jump-unless fell through
 100 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 100 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 100 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 2
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1232
 100 run: break-unless at-cursor?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 31
 100 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1173
9999 mem: location 1173 is 99
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1222 is 1173
9999 run: address to copy is 1173
9999 run: its type is number
9999 mem: location 1173 is 99
9999 mem: storing 99 in location 1233
 100 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 99
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 101 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 101 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1118
 101 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 99
9999 mem: storing 0 in location 1120
 101 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 101 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 101 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 99
9999 mem: storing 0 in location 1123
 101 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 101 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 101 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 101 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 100 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 99
9999 mem: storing 0 in location 1234
 100 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 100 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 2
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 100 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 100 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 99
9999 mem: location 1224 is 7
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 101 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 101 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 99
9999 mem: storing 0 in location 1278
 101 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 101 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 101 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1281
 101 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 101 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 101 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 99
9999 mem: storing 0 in location 1284
 101 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 101 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 12
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 12
9999 mem: storing 1039 in location 1286
 101 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1039
9999 mem: location 1039 is 103
9999 mem: location 1040 is 7
9999 mem: location 1286 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1287
 101 run: *cursor-contents <- copy c
9999 mem: location 1268 is 99
9999 mem: location 1287 is 1039
9999 mem: location 1287 is 1039
9999 mem: storing 99 in location 1039
 101 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1286 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1288
 101 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1040
9999 mem: location 1288 is 1040
9999 mem: storing 7 in location 1040
 101 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 101 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 101 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 101 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 100 run: curr <- next-duplex curr
9999 mem: location 1222 is 1173
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1173
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1173
9999 mem: location 1173 is 99
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1420 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1222
 100 run: prev <- next-duplex prev
9999 mem: location 1223 is 1170
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1170
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1170
9999 mem: location 1170 is 98
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1163
9999 mem: location 1420 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1223
 100 run: column <- add column, 1
9999 mem: location 1226 is 2
9999 mem: storing 3 in location 1226
 100 run: loop 
9999 run: jumping to instruction 21
 100 run: break-unless curr, 
9999 mem: location 1222 is 1176
9999 run: jump-unless fell through
 100 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 100 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 100 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 3
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1232
 100 run: break-unless at-cursor?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 31
 100 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1176
9999 mem: location 1176 is 100
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1222 is 1176
9999 run: address to copy is 1176
9999 run: its type is number
9999 mem: location 1176 is 100
9999 mem: storing 100 in location 1233
 100 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 100
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 101 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 101 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1118
 101 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 100
9999 mem: storing 0 in location 1120
 101 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 101 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 101 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 100
9999 mem: storing 0 in location 1123
 101 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 101 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 101 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 101 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 100 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 100
9999 mem: storing 0 in location 1234
 100 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 100 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 3
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 100 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 100 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 100
9999 mem: location 1224 is 7
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 101 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 101 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 100
9999 mem: storing 0 in location 1278
 101 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 101 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 101 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1281
 101 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 101 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 101 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 100
9999 mem: storing 0 in location 1284
 101 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 101 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 13
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 13
9999 mem: storing 1041 in location 1286
 101 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1041
9999 mem: location 1041 is 104
9999 mem: location 1042 is 7
9999 mem: location 1286 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1287
 101 run: *cursor-contents <- copy c
9999 mem: location 1268 is 100
9999 mem: location 1287 is 1041
9999 mem: location 1287 is 1041
9999 mem: storing 100 in location 1041
 101 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1286 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1288
 101 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1042
9999 mem: location 1288 is 1042
9999 mem: storing 7 in location 1042
 101 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 101 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 101 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 101 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 100 run: curr <- next-duplex curr
9999 mem: location 1222 is 1176
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1176
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1176
9999 mem: location 1176 is 100
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1420 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1222
 100 run: prev <- next-duplex prev
9999 mem: location 1223 is 1173
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1173
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1173
9999 mem: location 1173 is 99
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1420 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1223
 100 run: column <- add column, 1
9999 mem: location 1226 is 3
9999 mem: storing 4 in location 1226
 100 run: loop 
9999 run: jumping to instruction 21
 100 run: break-unless curr, 
9999 mem: location 1222 is 1179
9999 run: jump-unless fell through
 100 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 1
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 100 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 1
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 100 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1226 is 4
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1232
 100 run: break-unless at-cursor?, 
9999 mem: location 1232 is 0
9999 run: jumping to instruction 31
 100 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1222 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 101
9999 mem: storing 101 in location 1233
 100 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 101
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 101 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 101 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1118
 101 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 101
9999 mem: storing 0 in location 1120
 101 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 101 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 101 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 101
9999 mem: storing 0 in location 1123
 101 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 101 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 101 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 101 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 100 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 101
9999 mem: storing 0 in location 1234
 100 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 100 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 4
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1236
 100 run: break-unless at-right?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 100 run: print-character screen, 8617/loop-back-to-left, 245/grey
9999 mem: location 1217 is 1009
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1269
9999 mem: storing 1 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 101 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 101 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 8617
9999 mem: storing 0 in location 1278
 101 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 101 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1281
 101 run: index <- add index, *column
9999 mem: location 1281 is 10
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1281
 101 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 101 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 101 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 8617
9999 mem: storing 0 in location 1284
 101 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 101 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 14
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 14
9999 mem: storing 1043 in location 1286
 101 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1043
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1286 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1287
 101 run: *cursor-contents <- copy c
9999 mem: location 1268 is 8617
9999 mem: location 1287 is 1043
9999 mem: location 1287 is 1043
9999 mem: storing 8617 in location 1043
 101 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1043
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1286 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1288
 101 run: *cursor-color <- copy color
9999 mem: location 1269 is 245
9999 mem: location 1288 is 1044
9999 mem: location 1288 is 1044
9999 mem: storing 245 in location 1044
 101 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 101 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 101 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 101 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 100 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 100 run: row <- add row, 1
9999 mem: location 1225 is 1
9999 mem: storing 2 in location 1225
 100 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 2
9999 mem: location 1226 is 0
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 101 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1250
 101 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 101 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
schedule: move-cursor/render/editor-event-loop/run1004/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 101 run: *row <- copy new-row
9999 mem: location 1250 is 2
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 2 in location 1011
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 101 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 100 run: loop +next-character:label
9999 run: jumping to instruction 22
 100 run: break-unless curr, 
9999 mem: location 1222 is 1179
9999 run: jump-unless fell through
 100 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 100 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 100 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1222 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 101
9999 mem: storing 101 in location 1233
 100 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 101
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 101 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 101 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1118
 101 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 101
9999 mem: storing 0 in location 1120
 101 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 101 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 101 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 101
9999 mem: storing 0 in location 1123
 101 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 101 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 101 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 101 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 100 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 101
9999 mem: storing 0 in location 1234
 100 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 100 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 100 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 100 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 101
9999 mem: location 1224 is 7
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 101 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 101 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 101
9999 mem: storing 0 in location 1278
 101 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 101 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 101 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1281
 101 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 101 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 101 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 101
9999 mem: storing 0 in location 1284
 101 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 101 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 20
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 20
9999 mem: storing 1055 in location 1286
 101 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1055
9999 mem: location 1055 is 105
9999 mem: location 1056 is 7
9999 mem: location 1286 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1287
 101 run: *cursor-contents <- copy c
9999 mem: location 1268 is 101
9999 mem: location 1287 is 1055
9999 mem: location 1287 is 1055
9999 mem: storing 101 in location 1055
 101 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1055
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1286 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1288
 101 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1056
9999 mem: location 1288 is 1056
9999 mem: storing 7 in location 1056
 101 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 101 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 101 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 101 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 100 run: curr <- next-duplex curr
9999 mem: location 1222 is 1179
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1179
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1420 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1222
 100 run: prev <- next-duplex prev
9999 mem: location 1223 is 1176
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1176
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1176
9999 mem: location 1176 is 100
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1420 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1223
 100 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 100 run: loop 
9999 run: jumping to instruction 21
 100 run: break-unless curr, 
9999 mem: location 1222 is 1182
9999 run: jump-unless fell through
 100 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 100 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 100 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1182
9999 mem: location 1182 is 102
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1222 is 1182
9999 run: address to copy is 1182
9999 run: its type is number
9999 mem: location 1182 is 102
9999 mem: storing 102 in location 1233
 100 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 102
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 101 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 101 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1118
 101 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 102
9999 mem: storing 0 in location 1120
 101 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 101 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 101 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 102
9999 mem: storing 0 in location 1123
 101 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 101 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 101 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 101 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 100 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 102
9999 mem: storing 0 in location 1234
 100 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 100 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 100 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 100 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 102
9999 mem: location 1224 is 7
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 101 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 101 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 102
9999 mem: storing 0 in location 1278
 101 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 101 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 101 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1281
 101 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 101 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 101 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 102
9999 mem: storing 0 in location 1284
 101 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 101 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 21
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 21
9999 mem: storing 1057 in location 1286
 101 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1057
9999 mem: location 1057 is 106
9999 mem: location 1058 is 7
9999 mem: location 1286 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1287
 101 run: *cursor-contents <- copy c
9999 mem: location 1268 is 102
9999 mem: location 1287 is 1057
9999 mem: location 1287 is 1057
9999 mem: storing 102 in location 1057
 101 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1057
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1286 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1288
 101 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1058
9999 mem: location 1288 is 1058
9999 mem: storing 7 in location 1058
 101 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 101 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 101 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 101 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 100 run: curr <- next-duplex curr
9999 mem: location 1222 is 1182
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1182
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1182
9999 mem: location 1182 is 102
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1420 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1222
 100 run: prev <- next-duplex prev
9999 mem: location 1223 is 1179
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1179
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1179
9999 mem: location 1179 is 101
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1420 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1223
 100 run: column <- add column, 1
9999 mem: location 1226 is 1
9999 mem: storing 2 in location 1226
 100 run: loop 
9999 run: jumping to instruction 21
 100 run: break-unless curr, 
9999 mem: location 1222 is 1185
9999 run: jump-unless fell through
 100 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 100 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 100 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1185
9999 mem: location 1185 is 103
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1222 is 1185
9999 run: address to copy is 1185
9999 run: its type is number
9999 mem: location 1185 is 103
9999 mem: storing 103 in location 1233
 100 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 103
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 101 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 101 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1118
 101 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 103
9999 mem: storing 0 in location 1120
 101 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 101 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 101 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 103
9999 mem: storing 0 in location 1123
 101 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 101 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 101 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 101 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 100 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 103
9999 mem: storing 0 in location 1234
 100 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 100 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 2
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 100 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 100 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 103
9999 mem: location 1224 is 7
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 101 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 101 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 103
9999 mem: storing 0 in location 1278
 101 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 101 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 101 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1281
 101 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 101 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 101 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 103
9999 mem: storing 0 in location 1284
 101 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 101 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 22
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 22
9999 mem: storing 1059 in location 1286
 101 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1286 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1287
 101 run: *cursor-contents <- copy c
9999 mem: location 1268 is 103
9999 mem: location 1287 is 1059
9999 mem: location 1287 is 1059
9999 mem: storing 103 in location 1059
 101 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1059
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1286 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1288
 101 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1060
9999 mem: location 1288 is 1060
9999 mem: storing 7 in location 1060
 101 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 101 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 101 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 101 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 100 run: curr <- next-duplex curr
9999 mem: location 1222 is 1185
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1185
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1185
9999 mem: location 1185 is 103
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1420 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1222
 100 run: prev <- next-duplex prev
9999 mem: location 1223 is 1182
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1182
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1182
9999 mem: location 1182 is 102
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1420 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1223
 100 run: column <- add column, 1
9999 mem: location 1226 is 2
9999 mem: storing 3 in location 1226
 100 run: loop 
9999 run: jumping to instruction 21
 100 run: break-unless curr, 
9999 mem: location 1222 is 1188
9999 run: jump-unless fell through
 100 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 100 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 100 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1222 is 1188
9999 run: address to copy is 1188
9999 run: its type is number
9999 mem: location 1188 is 104
9999 mem: storing 104 in location 1233
 100 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 104
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 101 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 101 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1118
 101 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 104
9999 mem: storing 0 in location 1120
 101 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 101 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 101 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 104
9999 mem: storing 0 in location 1123
 101 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 101 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 101 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 101 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 100 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 104
9999 mem: storing 0 in location 1234
 100 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 100 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 3
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 100 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 100 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 104
9999 mem: location 1224 is 7
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 101 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 101 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 104
9999 mem: storing 0 in location 1278
 101 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 101 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 101 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1281
 101 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 101 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 101 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 104
9999 mem: storing 0 in location 1284
 101 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 101 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 23
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 23
9999 mem: storing 1061 in location 1286
 101 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1286 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1287
 101 run: *cursor-contents <- copy c
9999 mem: location 1268 is 104
9999 mem: location 1287 is 1061
9999 mem: location 1287 is 1061
9999 mem: storing 104 in location 1061
 101 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1061
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1286 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1288
 101 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1062
9999 mem: location 1288 is 1062
9999 mem: storing 7 in location 1062
 101 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 101 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 101 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 101 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 100 run: curr <- next-duplex curr
9999 mem: location 1222 is 1188
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1188
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1420 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1222
 100 run: prev <- next-duplex prev
9999 mem: location 1223 is 1185
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1185
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1185
9999 mem: location 1185 is 103
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1420 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1223
 100 run: column <- add column, 1
9999 mem: location 1226 is 3
9999 mem: storing 4 in location 1226
 100 run: loop 
9999 run: jumping to instruction 21
 100 run: break-unless curr, 
9999 mem: location 1222 is 1191
9999 run: jump-unless fell through
 100 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 2
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 100 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 2
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 100 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1222 is 1191
9999 run: address to copy is 1191
9999 run: its type is number
9999 mem: location 1191 is 105
9999 mem: storing 105 in location 1233
 100 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 105
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 101 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 101 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1118
 101 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 105
9999 mem: storing 0 in location 1120
 101 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 101 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 101 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 105
9999 mem: storing 0 in location 1123
 101 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 101 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 101 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 101 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 100 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 105
9999 mem: storing 0 in location 1234
 100 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 100 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 4
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1236
 100 run: break-unless at-right?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 100 run: print-character screen, 8617/loop-back-to-left, 245/grey
9999 mem: location 1217 is 1009
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1269
9999 mem: storing 1 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
schedule: print-character/render/editor-event-loop/run1004/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 101 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 101 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 8617
9999 mem: storing 0 in location 1278
 101 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 101 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1273 is 10
9999 mem: storing 20 in location 1281
 101 run: index <- add index, *column
9999 mem: location 1281 is 20
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1281
 101 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 101 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 101 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 8617
9999 mem: storing 0 in location 1284
 101 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 101 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 24
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 24
9999 mem: storing 1063 in location 1286
 101 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1286 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1287
 101 run: *cursor-contents <- copy c
9999 mem: location 1268 is 8617
9999 mem: location 1287 is 1063
9999 mem: location 1287 is 1063
9999 mem: storing 8617 in location 1063
 101 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1063
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 7
9999 mem: location 1286 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1288
 101 run: *cursor-color <- copy color
9999 mem: location 1269 is 245
9999 mem: location 1288 is 1064
9999 mem: location 1288 is 1064
9999 mem: storing 245 in location 1064
 101 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 101 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 101 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 101 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 100 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 100 run: row <- add row, 1
9999 mem: location 1225 is 2
9999 mem: storing 3 in location 1225
 100 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 3
9999 mem: location 1226 is 0
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 101 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1250
 101 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 101 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 101 run: *row <- copy new-row
9999 mem: location 1250 is 3
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 3 in location 1011
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 101 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 100 run: loop +next-character:label
9999 run: jumping to instruction 22
 100 run: break-unless curr, 
9999 mem: location 1222 is 1191
9999 run: jump-unless fell through
 100 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 3
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 100 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 100 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1222 is 1191
9999 run: address to copy is 1191
9999 run: its type is number
9999 mem: location 1191 is 105
9999 mem: storing 105 in location 1233
 100 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 105
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 101 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 101 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1118
 101 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 105
9999 mem: storing 0 in location 1120
 101 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 101 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 101 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 105
9999 mem: storing 0 in location 1123
 101 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 101 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 101 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 101 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 100 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 105
9999 mem: storing 0 in location 1234
 100 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 100 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 100 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 100 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 105
9999 mem: location 1224 is 7
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 101 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 101 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 105
9999 mem: storing 0 in location 1278
 101 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 101 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 101 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1281
 101 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 101 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 101 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 105
9999 mem: storing 0 in location 1284
 101 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 101 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 30
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 30
9999 mem: storing 1075 in location 1286
 101 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1075
9999 mem: location 1075 is 107
9999 mem: location 1076 is 7
9999 mem: location 1286 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1287
 101 run: *cursor-contents <- copy c
9999 mem: location 1268 is 105
9999 mem: location 1287 is 1075
9999 mem: location 1287 is 1075
9999 mem: storing 105 in location 1075
 101 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1075
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1286 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1288
 101 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1076
9999 mem: location 1288 is 1076
9999 mem: storing 7 in location 1076
 101 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 101 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 101 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 101 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 100 run: curr <- next-duplex curr
9999 mem: location 1222 is 1191
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1191
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1420 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1222
 100 run: prev <- next-duplex prev
9999 mem: location 1223 is 1188
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1188
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1188
9999 mem: location 1188 is 104
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1185
9999 mem: location 1420 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1191
9999 run: result 0 is 1191
9999 mem: storing 1191 in location 1223
 100 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 100 run: loop 
9999 run: jumping to instruction 21
 100 run: break-unless curr, 
9999 mem: location 1222 is 1194
9999 run: jump-unless fell through
 100 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 3
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 100 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 100 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1222 is 1194
9999 run: address to copy is 1194
9999 run: its type is number
9999 mem: location 1194 is 106
9999 mem: storing 106 in location 1233
 100 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 106
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 101 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 101 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1118
 101 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 106
9999 mem: storing 0 in location 1120
 101 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 101 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 101 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 106
9999 mem: storing 0 in location 1123
 101 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 101 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 101 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 101 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 100 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 106
9999 mem: storing 0 in location 1234
 100 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 100 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 100 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 100 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 106
9999 mem: location 1224 is 7
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 101 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 101 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 106
9999 mem: storing 0 in location 1278
 101 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 101 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 101 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1281
 101 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 101 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 101 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 106
9999 mem: storing 0 in location 1284
 101 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 101 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 31
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 31
9999 mem: storing 1077 in location 1286
 101 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1286 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1287
 101 run: *cursor-contents <- copy c
9999 mem: location 1268 is 106
9999 mem: location 1287 is 1077
9999 mem: location 1287 is 1077
9999 mem: storing 106 in location 1077
 101 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1077
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1286 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1288
 101 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1078
9999 mem: location 1288 is 1078
9999 mem: storing 7 in location 1078
 101 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 101 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 101 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 101 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 100 run: curr <- next-duplex curr
9999 mem: location 1222 is 1194
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1194
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1420 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1222
 100 run: prev <- next-duplex prev
9999 mem: location 1223 is 1191
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1191 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1191
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1191
9999 mem: location 1191 is 105
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1188
9999 mem: location 1420 is 1191
9999 run: address to copy is 1192
9999 run: its type is address
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1194
9999 run: result 0 is 1194
9999 mem: storing 1194 in location 1223
 100 run: column <- add column, 1
9999 mem: location 1226 is 1
9999 mem: storing 2 in location 1226
 100 run: loop 
9999 run: jumping to instruction 21
 100 run: break-unless curr, 
9999 mem: location 1222 is 1197
9999 run: jump-unless fell through
 100 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 3
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 100 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 100 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1222 is 1197
9999 run: address to copy is 1197
9999 run: its type is number
9999 mem: location 1197 is 10
9999 mem: storing 10 in location 1233
 100 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 10
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 101 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 101 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1118
 101 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1120
 101 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 101 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 101 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1123
 101 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 101 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 101 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 101 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 100 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 10
9999 mem: storing 1 in location 1234
 100 run: break-unless newline?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 3
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 45
 100 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 2
9999 mem: location 1221 is 4
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 101 run: left:number <- next-ingredient 
9999 mem: storing 2 in location 1250
 101 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 101 run: column:number <- copy left
9999 mem: location 1250 is 2
9999 mem: storing 2 in location 1252
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 102 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 102 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 102 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1281
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 102 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 102 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 32
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 32
9999 mem: storing 1079 in location 1286
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1286 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1287
 102 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1079
9999 mem: location 1287 is 1079
9999 mem: storing 32 in location 1079
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1286 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1288
 102 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1080
9999 mem: location 1288 is 1080
9999 mem: storing 7 in location 1080
 102 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 102 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 102 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 102 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 102 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1281
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 102 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 102 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 33
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 33
9999 mem: storing 1081 in location 1286
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1286 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1287
 102 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1081
9999 mem: location 1287 is 1081
9999 mem: storing 32 in location 1081
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1286 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1288
 102 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1082
9999 mem: location 1288 is 1082
9999 mem: storing 7 in location 1082
 102 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 102 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 102 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 102 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1273 is 10
9999 mem: storing 30 in location 1281
 102 run: index <- add index, *column
9999 mem: location 1281 is 30
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1281
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 102 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 102 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 34
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 34
9999 mem: storing 1083 in location 1286
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1286 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1287
 102 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1083
9999 mem: location 1287 is 1083
9999 mem: storing 32 in location 1083
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1286 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1288
 102 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1084
9999 mem: location 1288 is 1084
9999 mem: storing 7 in location 1084
 102 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 102 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 100 run: row <- add row, 1
9999 mem: location 1225 is 3
9999 mem: storing 4 in location 1225
 100 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 100 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 4
9999 mem: location 1226 is 0
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 101 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1250
 101 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 101 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 101 run: *row <- copy new-row
9999 mem: location 1250 is 4
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 4 in location 1011
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 101 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 100 run: curr <- next-duplex curr
9999 mem: location 1222 is 1197
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1197
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1420 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1222
schedule: render/editor-event-loop/run1004/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 100 run: prev <- next-duplex prev
9999 mem: location 1223 is 1194
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1194
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1194
9999 mem: location 1194 is 106
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1191
9999 mem: location 1420 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1197
9999 run: result 0 is 1197
9999 mem: storing 1197 in location 1223
 100 run: loop +next-character:label
9999 run: jumping to instruction 22
 100 run: break-unless curr, 
9999 mem: location 1222 is 1200
9999 run: jump-unless fell through
 100 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 4
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 100 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 4
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 100 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1222 is 1200
9999 run: address to copy is 1200
9999 run: its type is number
9999 mem: location 1200 is 107
9999 mem: storing 107 in location 1233
 100 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 107
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 101 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 101 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1118
 101 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 107
9999 mem: storing 0 in location 1120
 101 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 101 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 101 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 107
9999 mem: storing 0 in location 1123
 101 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 101 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 101 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 101 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 100 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 107
9999 mem: storing 0 in location 1234
 100 run: break-unless newline?, 
9999 mem: location 1234 is 0
9999 run: jumping to instruction 53
 100 run: at-right?:boolean <- equal column, right
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1236
 100 run: break-unless at-right?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 62
 100 run: print-character screen, c, color
9999 mem: location 1217 is 1009
9999 mem: location 1233 is 107
9999 mem: location 1224 is 7
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1269
9999 mem: storing 1 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 1
9999 run: jumping to instruction 7
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 101 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 101 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 101 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 107
9999 mem: storing 0 in location 1278
 101 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 101 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 101 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1281
 101 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 101 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 101 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 107
9999 mem: storing 0 in location 1284
 101 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 101 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 40
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 40
9999 mem: storing 1095 in location 1286
 101 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1095
9999 mem: location 1095 is 108
9999 mem: location 1096 is 7
9999 mem: location 1286 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1287
 101 run: *cursor-contents <- copy c
9999 mem: location 1268 is 107
9999 mem: location 1287 is 1095
9999 mem: location 1287 is 1095
9999 mem: storing 107 in location 1095
 101 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1095
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1286 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1288
 101 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1096
9999 mem: location 1288 is 1096
9999 mem: storing 7 in location 1096
 101 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 101 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 101 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 101 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 1012
9999 mem: storing 1 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 100 run: curr <- next-duplex curr
9999 mem: location 1222 is 1200
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1200
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1420 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1222
 100 run: prev <- next-duplex prev
9999 mem: location 1223 is 1197
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1197 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1197
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1197
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1194
9999 mem: location 1420 is 1197
9999 run: address to copy is 1198
9999 run: its type is address
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1223
 100 run: column <- add column, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 100 run: loop 
9999 run: jumping to instruction 21
 100 run: break-unless curr, 
9999 mem: location 1222 is 1203
9999 run: jump-unless fell through
 100 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 4
9999 mem: location 1220 is 5
9999 mem: storing 0 in location 1230
 100 run: break-if off-screen?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 4
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 31
 100 run: c:character <- get *curr, value:offset
9999 mem: location 1222 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1222 is 1203
9999 run: address to copy is 1203
9999 run: its type is number
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1233
 100 run: color <- get-color color, c
9999 mem: location 1224 is 7
9999 mem: location 1233 is 10
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 101 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1117
 101 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1118
 101 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1117 is 7
9999 mem: storing 1 in location 1119
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1120
 101 run: break-unless starting-comment?, 
9999 mem: location 1120 is 0
9999 run: jumping to instruction 10
 101 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1121
 101 run: break-unless color-is-blue?, 
9999 mem: location 1121 is 0
9999 run: jumping to instruction 18
 101 run: break-unless color-is-white?, 
9999 mem: location 1119 is 1
9999 run: jump-unless fell through
 101 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1123
 101 run: break-unless starting-assignment?, 
9999 mem: location 1123 is 0
9999 run: jumping to instruction 25
 101 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1117 is 7
9999 mem: storing 0 in location 1124
 101 run: break-unless color-is-red?, 
9999 mem: location 1124 is 0
9999 run: jumping to instruction 33
 101 run: reply color
9999 mem: location 1117 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1224
 100 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1233 is 10
9999 mem: storing 1 in location 1234
 100 run: break-unless newline?, 
9999 mem: location 1234 is 1
9999 run: jump-unless fell through
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 4
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 100 run: break-unless at-cursor-row?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 45
 100 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 1
9999 mem: location 1221 is 4
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 101 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1250
 101 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 101 run: column:number <- copy left
9999 mem: location 1250 is 1
9999 mem: storing 1 in location 1252
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 102 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 102 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 102 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1281
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 102 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 102 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 41
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 41
9999 mem: storing 1097 in location 1286
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1286 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1287
 102 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1097
9999 mem: location 1287 is 1097
9999 mem: storing 32 in location 1097
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1286 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1288
 102 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1098
9999 mem: location 1288 is 1098
9999 mem: storing 7 in location 1098
 102 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 102 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 1012
9999 mem: storing 2 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 102 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 102 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 102 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1281
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 102 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 102 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 42
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 42
9999 mem: storing 1099 in location 1286
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1286 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1287
 102 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1099
9999 mem: location 1287 is 1099
9999 mem: storing 32 in location 1099
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1286 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1288
 102 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1100
9999 mem: location 1288 is 1100
9999 mem: storing 7 in location 1100
 102 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 102 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1277 is 1012
9999 mem: storing 3 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 102 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 102 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 102 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1281
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 102 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 102 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 43
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 43
9999 mem: storing 1101 in location 1286
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1286 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1287
 102 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1101
9999 mem: location 1287 is 1101
9999 mem: storing 32 in location 1101
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1286 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1288
 102 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1102
9999 mem: location 1288 is 1102
9999 mem: storing 7 in location 1102
 102 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 102 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1277 is 1012
9999 mem: storing 4 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1274 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 24
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1277
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 28
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1273 is 10
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 31
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1278
 102 run: break-unless newline?, 
9999 mem: location 1278 is 0
9999 run: jumping to instruction 42
 102 run: index:number <- multiply *row, width
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1273 is 10
9999 mem: storing 40 in location 1281
 102 run: index <- add index, *column
9999 mem: location 1281 is 40
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1281
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1282
 102 run: len:number <- length *buf
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1282 is 1014
9999 mem: storing 50 in location 1283
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1268 is 32
9999 mem: storing 0 in location 1284
 102 run: break-unless backspace?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 62
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1282 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1077 is 106
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 107
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1281 is 44
9999 mem: location 1282 is 1014
9999 mem: location 1281 is 44
9999 mem: storing 1103 in location 1286
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1286 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1286 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1287
 102 run: *cursor-contents <- copy c
9999 mem: location 1268 is 32
9999 mem: location 1287 is 1103
9999 mem: location 1287 is 1103
9999 mem: storing 32 in location 1103
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1286 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1286 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1288
 102 run: *cursor-color <- copy color
9999 mem: location 1269 is 7
9999 mem: location 1288 is 1104
9999 mem: location 1288 is 1104
9999 mem: storing 7 in location 1104
 102 run: right:number <- subtract width, 1
9999 mem: location 1273 is 10
9999 mem: storing 9 in location 1289
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1289 is 9
9999 mem: storing 0 in location 1290
 102 run: break-if at-right?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1277 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1277 is 1012
9999 mem: storing 5 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 100 run: row <- add row, 1
9999 mem: location 1225 is 4
9999 mem: storing 5 in location 1225
 100 run: column <- copy left
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1226
 100 run: move-cursor screen, row, column
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 5
9999 mem: location 1226 is 0
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 101 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1250
 101 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 101 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 101 run: *row <- copy new-row
9999 mem: location 1250 is 5
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 5 in location 1011
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 101 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 100 run: curr <- next-duplex curr
9999 mem: location 1222 is 1203
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1203 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1203
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1203
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1200
9999 mem: location 1420 is 1203
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1206
9999 run: result 0 is 1206
9999 mem: storing 1206 in location 1222
 100 run: prev <- next-duplex prev
9999 mem: location 1223 is 1200
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1200 in location 1420
 101 run: jump-if in, 1:offset
9999 mem: location 1420 is 1200
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1420 is 1200
9999 mem: location 1200 is 107
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1197
9999 mem: location 1420 is 1200
9999 run: address to copy is 1201
9999 run: its type is address
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1421
 101 run: reply result
9999 mem: location 1421 is 1203
9999 run: result 0 is 1203
9999 mem: storing 1203 in location 1223
 100 run: loop +next-character:label
9999 run: jumping to instruction 22
 100 run: break-unless curr, 
9999 mem: location 1222 is 1206
9999 run: jump-unless fell through
 100 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1225 is 5
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1230
 100 run: break-if off-screen?, 
9999 mem: location 1230 is 1
9999 run: jumping to instruction 68
 100 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1218 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1212
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1218 is 1000
9999 run: address to copy is 1002
9999 mem: storing 1002 in location 1237
 100 run: *bottom-of-screen <- copy curr
9999 mem: location 1222 is 1206
9999 mem: location 1237 is 1002
9999 mem: location 1237 is 1002
9999 mem: storing 1206 in location 1002
 100 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1225 is 5
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1231
 100 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1226 is 0
9999 mem: location 1228 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1238
 100 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1231 is 0
9999 mem: location 1238 is 1
9999 mem: storing 0 in location 1239
 100 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1225 is 5
9999 mem: location 1227 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1240
 100 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1239 is 0
9999 mem: location 1240 is 0
9999 mem: storing 0 in location 1241
 100 run: break-unless before-cursor?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 89
 100 run: clear-line-delimited screen, column, right
9999 mem: location 1217 is 1009
9999 mem: location 1226 is 0
9999 mem: location 1221 is 4
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 101 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1250
 101 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 101 run: column:number <- copy left
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1252
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 0
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
schedule: print-character/clear-line-delimited/render/editor-event-loop/run1004/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys-2
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 101 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 102 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 102 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 102 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 102 run: reply sc
9999 mem: location 1267 is 1009
 101 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 101 run: loop 
9999 run: jumping to instruction 6
 101 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 101 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
 100 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1217 is 1009
9999 mem: location 1225 is 5
9999 mem: location 1219 is 0
9999 mem: location 1221 is 4
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1145
 101 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1146
 101 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1147
 101 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1148
 101 run: row <- add row, 1
9999 mem: location 1146 is 5
9999 mem: storing 6 in location 1146
 101 run: move-cursor screen, row, left
9999 mem: location 1145 is 1009
9999 mem: location 1146 is 6
9999 mem: location 1147 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1250
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 102 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 102 run: *row <- copy new-row
9999 mem: location 1250 is 6
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 6 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 102 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
 101 run: screen-height:number <- screen-height screen
9999 mem: location 1145 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1420
 102 run: break-unless sc, 
9999 mem: location 1420 is 1009
9999 run: jump-unless fell through
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1420 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1420 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1421
 102 run: reply height
9999 mem: location 1421 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1149
 101 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1146 is 6
9999 mem: location 1149 is 5
9999 mem: storing 1 in location 1150
 101 run: break-if at-bottom-of-screen?, 
9999 mem: location 1150 is 1
9999 run: jumping to instruction 15
 100 run: reply row, screen/same-as-ingredient:0
9999 mem: location 1225 is 5
9999 mem: location 1217 is 1009
9999 run: result 0 is 5
9999 run: result 1 is 1009
9999 mem: storing 5 in location 1310
9999 mem: storing 1009 in location 1300
  99 run: left:number <- get *editor, left:offset
9999 mem: location 1302 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1302 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1311
  99 run: right:number <- get *editor, right:offset
9999 mem: location 1302 is 1000
9999 mem: location 1000 is 1151
9999 mem: location 1001 is 1151
9999 mem: location 1002 is 1206
9999 mem: location 1003 is 1151
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1377
9999 mem: location 1302 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1312
  99 run: row <- add row, 1
9999 mem: location 1310 is 5
9999 mem: storing 6 in location 1310
  99 run: move-cursor screen, row, left
9999 mem: location 1300 is 1009
9999 mem: location 1310 is 6
9999 mem: location 1311 is 0
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 100 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 100 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1250
 100 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1251
 100 run: break-unless sc, 
9999 mem: location 1249 is 1009
9999 run: jump-unless fell through
 100 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1252
 100 run: *row <- copy new-row
9999 mem: location 1250 is 6
9999 mem: location 1252 is 1011
9999 mem: location 1252 is 1011
9999 mem: storing 6 in location 1011
 100 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1253
 100 run: *column <- copy new-column
9999 mem: location 1251 is 0
9999 mem: location 1253 is 1012
9999 mem: location 1253 is 1012
9999 mem: storing 0 in location 1012
 100 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
  99 run: clear-line-delimited screen, left, right
9999 mem: location 1300 is 1009
9999 mem: location 1311 is 0
9999 mem: location 1312 is 4
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 100 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1249
 100 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1250
 100 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1251
 100 run: column:number <- copy left
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1252
 100 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 0
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 100 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 100 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 101 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 101 run: reply sc
9999 mem: location 1267 is 1009
 100 run: column <- add column, 1
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 100 run: loop 
9999 run: jumping to instruction 6
 100 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 1
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 100 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 100 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 101 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 101 run: reply sc
9999 mem: location 1267 is 1009
 100 run: column <- add column, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 100 run: loop 
9999 run: jumping to instruction 6
 100 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 2
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 100 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 100 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 101 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 101 run: reply sc
9999 mem: location 1267 is 1009
 100 run: column <- add column, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 100 run: loop 
9999 run: jumping to instruction 6
 100 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 3
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 100 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 100 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 101 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 101 run: reply sc
9999 mem: location 1267 is 1009
 100 run: column <- add column, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 100 run: loop 
9999 run: jumping to instruction 6
 100 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 4
9999 mem: location 1251 is 4
9999 mem: storing 0 in location 1253
 100 run: break-if done?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 100 run: print-character screen, 32/space
9999 mem: location 1249 is 1009
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1267
 101 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1268
 101 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 101 run: break-if color-found?, 
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 101 run: color <- copy 7/white
9999 mem: storing 7 in location 1269
 101 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 101 run: break-if bg-color-found?, 
9999 mem: location 1272 is 0
9999 run: jump-if fell through
 101 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1271
 101 run: break-unless sc, 
9999 mem: location 1267 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1273
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1274
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1267 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1275
 101 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 1
9999 run: jumping to instruction 21
 101 run: legal? <- lesser-than *row, height
9999 mem: location 1275 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1274 is 5
9999 mem: storing 0 in location 1276
 101 run: jump-if legal?, 1:offset
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 101 run: reply sc
9999 mem: location 1267 is 1009
 100 run: column <- add column, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 100 run: loop 
9999 run: jumping to instruction 6
 100 run: done?:boolean <- greater-than column, right
9999 mem: location 1252 is 5
9999 mem: location 1251 is 4
9999 mem: storing 1 in location 1253
 100 run: break-if done?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 11
  99 run: loop 
9999 run: jumping to instruction 5
  99 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1416
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 100 run: x:address:console <- next-ingredient 
9999 mem: storing 1416 in location 1315
 100 run: break-unless x, 
9999 mem: location 1315 is 1416
9999 run: jump-unless fell through
 100 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1315 is 1416
9999 mem: location 1416 is 1
9999 mem: location 1417 is 1411
9999 mem: location 1315 is 1416
9999 run: address to copy is 1416
9999 mem: storing 1416 in location 1316
 100 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1315 is 1416
9999 mem: location 1416 is 1
9999 mem: location 1417 is 1411
9999 mem: location 1315 is 1416
9999 run: address to copy is 1417
9999 run: its type is address
9999 mem: location 1417 is 1411
9999 mem: storing 1411 in location 1317
 100 run: max:number <- length *buf
9999 mem: location 1317 is 1411
9999 mem: location 1411 is 1
9999 mem: location 1412 is 1
9999 mem: location 1413 is 65517
9999 mem: location 1414 is 0
9999 mem: location 1415 is 0
9999 mem: location 1317 is 1411
9999 mem: storing 1 in location 1318
 100 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1316 is 1416
9999 mem: location 1416 is 1
9999 mem: location 1318 is 1
9999 mem: storing 1 in location 1319
 100 run: break-unless done?, 
9999 mem: location 1319 is 1
9999 run: jump-unless fell through
 100 run: dummy:address:event <- new event:type
9999 mem: storing 1418 in location 1320
 100 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1320 is 1418
9999 mem: location 1418 is 0
9999 mem: location 1419 is 0
9999 mem: location 1420 is 0
9999 mem: location 1421 is 0
9999 mem: location 1315 is 1416
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1416
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1416 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 1 in location 1308
  99 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
  99 run: break-if quit?, 
9999 mem: location 1308 is 1
9999 run: jumping to instruction 26
  97 run: screen-should-contain [
    .          .
    .abcd↩     .
    .efgh↩     .
    .ij        .
    .k         .
  ]
