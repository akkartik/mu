parse: instruction: copy
parse:   ingredient: {name: "0", properties: ["0": "literal"]}
parse:   product: {name: "p", properties: ["p": "address":"point"]}
parse: instruction: get
parse:   ingredient: {name: "p", properties: ["p": "address":"point", "deref": ]}
parse:   ingredient: {name: "y", properties: ["y": "offset"]}
parse:   product: {name: "a", properties: ["a": "number"]}
parse: instruction: get
parse:   ingredient: {name: "p", properties: ["p": "address":"point", "deref": ]}
parse:   ingredient: {name: "x", properties: ["x": "offset"]}
parse:   product: {name: "b", properties: ["b": "number"]}
name: assign p 1
name: element y of type point is at offset 1
name: assign a 2
name: element x of type point is at offset 0
name: assign b 3
after-brace: recipe main
after-brace: copy ...
after-brace: get ...
after-brace: get ...
9999 new: routine allocated memory from 1000 to 101000
schedule: main
 101 run: p:address:point <- copy 0:literal
9999 mem: storing 0 in location 1
 101 run: a:number <- get p:address:point/deref, y:offset
9999 mem: location 1 is 0
9999 mem: location 0 is 0
9999 mem: location 1 is 0
9999 mem: location 1 is 0
9999 run: address to copy is 1
9999 run: its type is number
9999 mem: location 1 is 0
9999 mem: storing 0 in location 2
 101 run: b:number <- get p:address:point/deref, x:offset
9999 mem: location 1 is 0
9999 mem: location 0 is 0
9999 mem: location 1 is 0
9999 mem: location 1 is 0
9999 run: address to copy is 0
9999 run: its type is number
9999 mem: location 0 is 0
9999 mem: storing 0 in location 3
