schedule: f1
run: 1 f1 0: (((1 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 1 to 0
run: 2 f1 1: (((sleep)) ((until-location-changes literal)) ((1 integer)))
m: ((1 integer))
sizeof: ((1 integer))
schedule: pushing f1 to sleep queue
schedule: f2
run: 3 f2 0: (((sleep)) ((for-some-cycles literal)) ((30 literal)))
run: sleeping until 33
schedule: pushing f2 to sleep queue
schedule: skipping to cycle 34
schedule: waking up f2
schedule: f2
run: 35 f2 1: (((1 integer)) <- ((copy)) ((3 literal)))
run: 3 => ((1 integer))
setm: ((1 integer)) <= 3
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 1 to 3
schedule: done with routine
schedule: waking up f1
schedule: f1
run: 36 f1 2: (((2 integer)) <- ((add)) ((1 integer)) ((1 literal)))
m: ((1 integer))
sizeof: ((1 integer))
add: 3 1
m: ((1 integer))
sizeof: ((1 integer))
run: 4 => ((2 integer))
setm: ((2 integer)) <= 4
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 2 to 4
schedule: done with routine
