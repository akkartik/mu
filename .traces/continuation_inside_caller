9999 parse: instruction: copy
9999 parse:   ingredient: {name: "0", properties: ["0": "literal"]}
9999 parse:   product: {name: "1", properties: ["1": "number"]}
9999 parse: instruction: loop-body
9999 parse:   product: {name: "2", properties: ["2": "continuation"]}
9999 parse: label: {
9999 parse: instruction: greater-or-equal
9999 parse:   ingredient: {name: "1", properties: ["1": "number"]}
9999 parse:   ingredient: {name: "3", properties: ["3": "literal"]}
9999 parse:   product: {name: "3", properties: ["3": "boolean"]}
9999 parse: instruction: break-if
9999 parse:   ingredient: {name: "3", properties: ["3": "boolean"]}
9999 parse: instruction: continue-from
9999 parse:   ingredient: {name: "2", properties: ["2": "continuation"]}
9999 parse: label: }
9999 parse: instruction: current-continuation
9999 parse:   product: {name: "4", properties: ["4": "continuation"]}
9999 parse: instruction: add
9999 parse:   ingredient: {name: "1", properties: ["1": "number"]}
9999 parse:   ingredient: {name: "1", properties: ["1": "literal"]}
9999 parse:   product: {name: "1", properties: ["1": "number"]}
9999 brace: main: push (open, 2)
9999 brace: push (close, 6)
9999 after-brace: recipe main
9999 after-brace: copy ...
9999 after-brace: loop-body ...
9999 after-brace: greater-or-equal ...
9999 after-brace: jump-if 3, 1:offset
9999 after-brace: continue-from ...
9999 after-brace: recipe loop-body
9999 after-brace: current-continuation ...
9999 after-brace: add ...
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: main
 101 run: 1:number <- copy 0
9999 mem: storing 0 in location 1
 101 run: 2:continuation <- loop-body 
 102 run: 4:continuation <- current-continuation 
9999 current-continuation: new continuation 1
9999 mem: storing 0 in location 4
 102 run: 1:number <- add 1:number, 1
9999 mem: location 1 is 0
9999 mem: storing 1 in location 1
 101 run: 3:boolean <- greater-or-equal 1:number, 3
9999 mem: location 1 is 1
9999 mem: storing 0 in location 3
 101 run: break-if 3:boolean, 
9999 mem: location 3 is 0
9999 run: jump-if fell through
 101 run: continue-from 2:continuation
9999 mem: location 2 is 0
 101 run: 1:number <- add 1:number, 1
9999 mem: location 1 is 1
9999 mem: storing 2 in location 1
 100 run: 3:boolean <- greater-or-equal 1:number, 3
9999 mem: location 1 is 2
9999 mem: storing 0 in location 3
 100 run: break-if 3:boolean, 
9999 mem: location 3 is 0
9999 run: jump-if fell through
 100 run: continue-from 2:continuation
9999 mem: location 2 is 0
 100 run: 1:number <- add 1:number, 1
9999 mem: location 1 is 2
9999 mem: storing 3 in location 1
  99 run: 3:boolean <- greater-or-equal 1:number, 3
9999 mem: location 1 is 3
9999 mem: storing 1 in location 3
  99 run: break-if 3:boolean, 
9999 mem: location 3 is 1
9999 run: jumping to instruction 6
