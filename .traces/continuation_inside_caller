parse: instruction: copy
parse:   ingredient: {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
parse:   product: {name: "1", value: 0, type: 1, properties: ["1": "number"]}
parse: instruction: loop-body
parse:   product: {name: "2", value: 0, type: 9, properties: ["2": "continuation"]}
parse: label: {
parse: instruction: greater-or-equal
parse:   ingredient: {name: "1", value: 0, type: 1, properties: ["1": "number"]}
parse:   ingredient: {name: "3", value: 0, type: 0, properties: ["3": "literal"]}
parse:   product: {name: "3", value: 0, type: 3, properties: ["3": "boolean"]}
parse: instruction: break-if
parse:   ingredient: {name: "3", value: 0, type: 3, properties: ["3": "boolean"]}
parse: instruction: continue-from
parse:   ingredient: {name: "2", value: 0, type: 9, properties: ["2": "continuation"]}
parse: label: }
parse: instruction: current-continuation
parse:   product: {name: "4", value: 0, type: 9, properties: ["4": "continuation"]}
parse: instruction: add
parse:   ingredient: {name: "1", value: 0, type: 1, properties: ["1": "number"]}
parse:   ingredient: {name: "1", value: 0, type: 0, properties: ["1": "literal"]}
parse:   product: {name: "1", value: 0, type: 1, properties: ["1": "number"]}
brace: 1000: push (open, 2)
brace: push (close, 6)
after-brace: recipe main
after-brace: copy ...
after-brace: loop-body ...
after-brace: greater-or-equal ...
after-brace: jump-if 3, 1:offset
after-brace: continue-from ...
after-brace: recipe loop-body
after-brace: current-continuation ...
after-brace: add ...
new: routine allocated memory from 1000 to 101000
schedule: main
run: instruction main/0
run: {name: "1", value: 1, type: 1, properties: ["1": "number"]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run: ingredient 0 is 0
run: product 0 is 1
mem: storing 0 in location 1
run: instruction main/1
run: {name: "2", value: 2, type: 9, properties: ["2": "continuation"]} <- loop-body/1001 
run: instruction loop-body/0
run: {name: "4", value: 4, type: 9, properties: ["4": "continuation"]} <- current-continuation/53 
run: product 0 is 4
mem: storing 0 in location 4
run: instruction loop-body/1
run: {name: "1", value: 1, type: 1, properties: ["1": "number"]} <- add/2 {name: "1", value: 1, type: 1, properties: ["1": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run: ingredient 0 is 1
mem: location 1 is 0
run: ingredient 1 is 1
run: product 0 is 1
mem: storing 1 in location 1
run: instruction main/3
run: {name: "3", value: 3, type: 3, properties: ["3": "boolean"]} <- greater-or-equal/16 {name: "1", value: 1, type: 1, properties: ["1": "number"]}, {name: "3", value: 3, type: 0, properties: ["3": "literal"]}
run: ingredient 0 is 1
mem: location 1 is 1
run: ingredient 1 is 3
run: product 0 is 3
mem: storing 0 in location 3
run: instruction main/4
run: break-if/11 {name: "3", value: 3, type: 3, properties: ["3": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run: ingredient 0 is 3
mem: location 3 is 0
run: ingredient 1 is 
run: jump-if fell through
run: instruction main/5
run: continue-from/54 {name: "2", value: 2, type: 9, properties: ["2": "continuation"]}
run: ingredient 0 is 2
mem: location 2 is 0
run: instruction loop-body/0
run: {name: "4", value: 4, type: 9, properties: ["4": "continuation"]} <- current-continuation/53 
run: product 0 is 4
mem: storing 1 in location 4
run: instruction loop-body/1
run: {name: "1", value: 1, type: 1, properties: ["1": "number"]} <- add/2 {name: "1", value: 1, type: 1, properties: ["1": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run: ingredient 0 is 1
mem: location 1 is 1
run: ingredient 1 is 1
run: product 0 is 1
mem: storing 2 in location 1
run: instruction main/3
run: {name: "3", value: 3, type: 3, properties: ["3": "boolean"]} <- greater-or-equal/16 {name: "1", value: 1, type: 1, properties: ["1": "number"]}, {name: "3", value: 3, type: 0, properties: ["3": "literal"]}
run: ingredient 0 is 1
mem: location 1 is 2
run: ingredient 1 is 3
run: product 0 is 3
mem: storing 0 in location 3
run: instruction main/4
run: break-if/11 {name: "3", value: 3, type: 3, properties: ["3": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run: ingredient 0 is 3
mem: location 3 is 0
run: ingredient 1 is 
run: jump-if fell through
run: instruction main/5
run: continue-from/54 {name: "2", value: 2, type: 9, properties: ["2": "continuation"]}
run: ingredient 0 is 2
mem: location 2 is 0
run: instruction loop-body/0
run: {name: "4", value: 4, type: 9, properties: ["4": "continuation"]} <- current-continuation/53 
run: product 0 is 4
mem: storing 2 in location 4
run: instruction loop-body/1
run: {name: "1", value: 1, type: 1, properties: ["1": "number"]} <- add/2 {name: "1", value: 1, type: 1, properties: ["1": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run: ingredient 0 is 1
mem: location 1 is 2
run: ingredient 1 is 1
run: product 0 is 1
mem: storing 3 in location 1
run: instruction main/3
run: {name: "3", value: 3, type: 3, properties: ["3": "boolean"]} <- greater-or-equal/16 {name: "1", value: 1, type: 1, properties: ["1": "number"]}, {name: "3", value: 3, type: 0, properties: ["3": "literal"]}
run: ingredient 0 is 1
mem: location 1 is 3
run: ingredient 1 is 3
run: product 0 is 3
mem: storing 1 in location 3
run: instruction main/4
run: break-if/11 {name: "3", value: 3, type: 3, properties: ["3": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run: ingredient 0 is 3
mem: location 3 is 1
run: ingredient 1 is 
run: jumping to instruction 6
