schedule: main
run: 1 main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
sizeof: ((_ location))
run: 1000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2 main 1: (((1 channel-address) (raw)) <- ((init-channel)) ((3 literal)))
run: 3 init-channel 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4 init-channel 1: (((1 channel-address)) <- ((new)) ((channel literal)))
sizeof: ((_ channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1033 to 1062
run: 5 init-channel 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((2 integer-address))
setm: ((2 integer-address)) <= 1062
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 1034 to 1062
run: 6 init-channel 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1062 to 0
run: 7 init-channel 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 1035 to 1063
run: 8 init-channel 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1063 to 0
run: 9 init-channel 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (3)
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1036 to 3
run: 10 init-channel 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 4 => ((4 integer))
setm: ((4 integer)) <= 4
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1036 to 4
run: 11 init-channel 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1064 => ((5 tagged-value-array-address-address))
setm: ((5 tagged-value-array-address-address)) <= 1064
setm: size of ((5 tagged-value-array-address-address)) is 1
setm: ((5 tagged-value-array-address-address)): setting 1037 to 1064
run: 12 init-channel 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1065 => ((5 tagged-value-array-address-address) (deref))
setm: ((5 tagged-value-array-address-address) (deref)) <= 1065
setm: size of ((5 tagged-value-array-address-address) (deref)) is 1
setm: ((5 tagged-value-array-address-address) (deref)): setting 1064 to 1065
run: 13 init-channel 10: (((reply)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
reply: (((1 channel-address))) (((1 channel-address) (raw)))
reply: 1062 => ((1 channel-address) (raw))
setm: ((1 channel-address) (raw)) <= 1062
setm: size of ((1 channel-address) (raw)) is 1
setm: ((1 channel-address) (raw)): setting 1 to 1062
run: 14 main 2: (((1 integer) (routine)) <- ((fork)) ((read-move fn)) ((nil literal) (globals)) ((200 literal) (limit)))
run: 1 => ((1 integer) (routine))
setm: ((1 integer) (routine)) <= 1
setm: size of ((1 integer) (routine)) is 1
setm: ((1 integer) (routine)): setting 1002 to 1
run: 15 main 3: (((2 character)) <- ((copy)) ((a literal)))
run: a => ((2 character))
setm: ((2 character)) <= a
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 1003 to a
run: 16 main 4: (((3 tagged-value)) <- ((save-type)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #(tagged record (character a)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character a))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 1004 to character
setm: ((3 tagged-value)): setting 1005 to a
run: 17 main 5: (((1 channel-address) (raw) (deref)) <- ((write)) ((1 channel-address) (raw)) ((3 tagged-value)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 18 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1074 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 19 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character a . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1076 to 1062
run: 20 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character a . nil)))
run: #(tagged record (character a . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1077 to character
setm: ((2 tagged-value)): setting 1078 to a
run: 21 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 22 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1105 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 23 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1107 to 0
setm: ((1 channel)): setting 1108 to 0
setm: ((1 channel)): setting 1109 to 1065
run: 24 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1110 to 0
run: 25 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1110 to 1
run: 26 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 27 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1136 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 28 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1138 to 0
setm: ((1 channel)): setting 1139 to 0
setm: ((1 channel)): setting 1140 to 1065
run: 29 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1140 tagged-value-array-address) (raw))
sizeof: ((1140 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1141 to 1065
run: 30 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1142 to 4
run: 31 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1111 to 4
run: 32 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1112 to t
run: 33 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 34 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1107 integer) (raw))
sizeof: ((1107 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1113 to 0
run: 35 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1114 to nil
run: 36 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1079 to nil
run: 37 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 38 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1081 to 1065
run: 39 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1082 to 1063
run: 40 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1066 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1066
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1083 to 1066
run: 41 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character a . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character a . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1066 to character
setm: ((8 tagged-value-address) (deref)): setting 1067 to a
run: 42 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 1
run: 43 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((9 integer))
setm: ((9 integer)) <= 4
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1084 to 4
run: 44 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1085 to t
run: 45 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 46 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (raw) (deref)))
reply: #(tagged record (0 1 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 47 main 6: (((2 character)) <- ((copy)) ((2 literal)))
run: 2 => ((2 character))
setm: ((2 character)) <= 2
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 1003 to 2
run: 48 main 7: (((3 tagged-value)) <- ((save-type)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #(tagged record (character 2)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character 2))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 1004 to character
setm: ((3 tagged-value)): setting 1005 to 2
run: 49 main 8: (((1 channel-address) (raw) (deref)) <- ((write)) ((1 channel-address) (raw)) ((3 tagged-value)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 50 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1167 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 51 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character 2 . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1169 to 1062
run: 52 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character 2 . nil)))
run: #(tagged record (character 2 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character 2 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1170 to character
setm: ((2 tagged-value)): setting 1171 to 2
run: 53 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 54 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1198 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 55 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1200 to 0
setm: ((1 channel)): setting 1201 to 1
setm: ((1 channel)): setting 1202 to 1065
run: 56 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1201 integer) (raw))
sizeof: ((1201 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1203 to 1
run: 57 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1203 to 2
run: 58 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 59 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1229 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 60 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1231 to 0
setm: ((1 channel)): setting 1232 to 1
setm: ((1 channel)): setting 1233 to 1065
run: 61 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1233 tagged-value-array-address) (raw))
sizeof: ((1233 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1234 to 1065
run: 62 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1235 to 4
run: 63 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1204 to 4
run: 64 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1205 to t
run: 65 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 66 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1200 integer) (raw))
sizeof: ((1200 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1206 to 0
run: 67 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1207 to nil
run: 68 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1172 to nil
run: 69 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 70 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1174 to 1065
run: 71 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1175 to 1063
run: 72 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1068 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1068
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1176 to 1068
run: 73 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character 2 . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character 2 . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1068 to character
setm: ((8 tagged-value-address) (deref)): setting 1069 to 2
run: 74 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 2 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 2
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 2
run: 75 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((9 integer))
setm: ((9 integer)) <= 4
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1177 to 4
run: 76 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1178 to t
run: 77 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 78 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (raw) (deref)))
reply: #(tagged record (0 2 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (0 2 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 2
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 79 main 9: (((2 character)) <- ((copy)) ((- literal)))
run: - => ((2 character))
setm: ((2 character)) <= -
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 1003 to -
run: 80 main 10: (((3 tagged-value)) <- ((save-type)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #(tagged record (character -)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character -))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 1004 to character
setm: ((3 tagged-value)): setting 1005 to -
run: 81 main 11: (((1 channel-address) (raw) (deref)) <- ((write)) ((1 channel-address) (raw)) ((3 tagged-value)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 82 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1260 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 83 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character - . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1262 to 1062
run: 84 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character - . nil)))
run: #(tagged record (character - . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character - . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1263 to character
setm: ((2 tagged-value)): setting 1264 to -
run: 85 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 86 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1291 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 87 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 2 1065 . nil)))
run: #(tagged record (0 2 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 2 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1293 to 0
setm: ((1 channel)): setting 1294 to 2
setm: ((1 channel)): setting 1295 to 1065
run: 88 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1294 integer) (raw))
sizeof: ((1294 integer) (raw))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1296 to 2
run: 89 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1296 to 3
run: 90 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 91 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1322 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 92 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 2 1065 . nil)))
run: #(tagged record (0 2 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 2 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1324 to 0
setm: ((1 channel)): setting 1325 to 2
setm: ((1 channel)): setting 1326 to 1065
run: 93 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1326 tagged-value-array-address) (raw))
sizeof: ((1326 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1327 to 1065
run: 94 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1328 to 4
run: 95 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1297 to 4
run: 96 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1298 to t
run: 97 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 98 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1293 integer) (raw))
sizeof: ((1293 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1299 to 0
run: 99 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1300 to nil
run: 100 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1265 to nil
run: 101 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 102 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1267 to 1065
run: 103 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1268 to 1063
run: 104 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1070 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1070
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1269 to 1070
run: 105 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character - . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character - . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1070 to character
setm: ((8 tagged-value-address) (deref)): setting 1071 to -
run: 106 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 3 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 3
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 3
run: 107 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((9 integer))
setm: ((9 integer)) <= 4
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1270 to 4
run: 108 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1271 to t
run: 109 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 110 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (raw) (deref)))
reply: #(tagged record (0 3 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (0 3 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 3
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 111 main 12: (((2 character)) <- ((copy)) ((a literal)))
run: a => ((2 character))
setm: ((2 character)) <= a
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 1003 to a
run: 112 main 13: (((3 tagged-value)) <- ((save-type)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #(tagged record (character a)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character a))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 1004 to character
setm: ((3 tagged-value)): setting 1005 to a
run: 113 main 14: (((1 channel-address) (raw) (deref)) <- ((write)) ((1 channel-address) (raw)) ((3 tagged-value)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 114 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1353 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 115 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character a . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1355 to 1062
run: 116 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character a . nil)))
run: #(tagged record (character a . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1356 to character
setm: ((2 tagged-value)): setting 1357 to a
run: 117 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 118 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1384 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 119 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 3 1065 . nil)))
run: #(tagged record (0 3 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 3 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1386 to 0
setm: ((1 channel)): setting 1387 to 3
setm: ((1 channel)): setting 1388 to 1065
run: 120 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1387 integer) (raw))
sizeof: ((1387 integer) (raw))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1389 to 3
run: 121 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 4 => ((4 integer))
setm: ((4 integer)) <= 4
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1389 to 4
run: 122 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 123 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1415 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 124 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 3 1065 . nil)))
run: #(tagged record (0 3 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 3 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1417 to 0
setm: ((1 channel)): setting 1418 to 3
setm: ((1 channel)): setting 1419 to 1065
run: 125 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1419 tagged-value-array-address) (raw))
sizeof: ((1419 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1420 to 1065
run: 126 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1421 to 4
run: 127 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1390 to 4
run: 128 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1391 to nil
run: 129 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 130 full? 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1389 to 0
run: 131 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1386 integer) (raw))
sizeof: ((1386 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1392 to 0
run: 132 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1393 to t
run: 133 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1358 to t
run: 134 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 135 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((5 integer-address))
setm: ((5 integer-address)) <= 1062
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 1359 to 1062
run: 136 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write to sleep queue
schedule: read-move
run: 137 read-move 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 138 read-move 1: (((1 integer)) <- ((read-file)))
run: 139 read-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 140 read-file 1: (((1 tagged-value)) ((1 channel-address) (raw) (deref)) <- ((read)) ((1 channel-address) (raw)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
run: 141 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2062 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 142 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 2064 to 1062
run: 143 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 144 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2093 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 145 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 3 1065 . nil)))
run: #(tagged record (0 3 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 3 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 2095 to 0
setm: ((1 channel)): setting 2096 to 3
setm: ((1 channel)): setting 2097 to 1065
run: 146 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((2095 integer) (raw))
sizeof: ((2095 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 2098 to 0
run: 147 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((2096 integer) (raw))
sizeof: ((2096 integer) (raw))
run: 3 => ((5 integer))
setm: ((5 integer)) <= 3
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 2099 to 3
run: 148 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 2100 to nil
run: 149 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 2065 to nil
run: 150 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 151 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 2067 to 1062
run: 152 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 2068 to 1065
run: 153 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1066 tagged-value) (raw))
sizeof: ((1066 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character a . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 2069 to character
setm: ((6 tagged-value)): setting 2070 to a
run: 154 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 1
run: 155 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((8 integer))
setm: ((8 integer)) <= 4
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 2071 to 4
run: 156 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 2072 to t
run: 157 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 158 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((1 tagged-value)) ((1 channel-address) (raw) (deref)))
reply: #(tagged record (character a . nil)) => ((1 tagged-value))
setm: ((1 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((1 tagged-value)) is 2
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value)): setting 2033 to character
setm: ((1 tagged-value)): setting 2034 to a
reply: #(tagged record (1 3 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (1 3 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 3
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 159 read-file 2: (((3 character)) <- ((copy)) ((a literal)))
run: a => ((3 character))
setm: ((3 character)) <= a
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 2035 to a
run: 160 read-file 3: (((4 integer)) <- ((character-to-integer)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: 97 => ((4 integer))
setm: ((4 integer)) <= 97
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 2036 to 97
run: 161 read-file 4: (((5 character)) <- ((maybe-coerce)) ((1 tagged-value)) ((character literal)))
m: ((1 tagged-value))
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 162 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2124 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 163 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2155 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 2155
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 2126 to 2155
run: 164 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character a . nil)) character)
run: #(tagged record (character a . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character a . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 2155 to character
setm: ((1 tagged-value-address) (deref)): setting 2156 to a
run: 165 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character a . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 2127 to character
run: 166 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((2155 type) (raw))
sizeof: ((2155 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 2128 to character
run: 167 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 2129 to t
run: 168 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 169 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2156 location) (raw))
sizeof: ((2156 location) (raw))
run: a => ((5 location))
setm: ((5 location)) <= a
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 2130 to a
run: 170 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((5 character)))
reply: a => ((5 character))
setm: ((5 character)) <= a
setm: size of ((5 character)) is 1
setm: ((5 character)): setting 2037 to a
run: 171 read-file 5: (((print)) ((5 character)))
m: ((5 character))
sizeof: ((5 character))
run: 172 print 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2157 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 173 print 1: (((jump-if)) ((2 channel-address) (raw)) ((1 offset)))
m: ((2 channel-address) (raw))
sizeof: ((2 channel-address) (raw))
run: 174 print 2: (((reply)))
reply: nil nil
run: 175 read-file 6: (((6 boolean)) <- ((equal)) ((5 character)) ((q literal)))
m: ((5 character))
sizeof: ((5 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 2038 to nil
run: 176 read-file 7: (((jump-unless)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 177 read-file 9: (((7 integer)) <- ((character-to-integer)) ((5 character)))
m: ((5 character))
sizeof: ((5 character))
run: 97 => ((7 integer))
setm: ((7 integer)) <= 97
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 2039 to 97
run: 178 read-file 10: (((7 integer)) <- ((subtract)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 2039 to 0
run: 179 read-file 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((0 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 2040 to t
run: 180 read-file 12: (((assert)) ((8 boolean)) ((file too low literal)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 181 read-file 13: (((9 boolean)) <- ((lesser-or-equal)) ((7 integer)) ((7 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 2041 to t
run: 182 read-file 14: (((assert)) ((9 boolean)) ((file too high literal)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 183 read-file 15: (((reply)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
reply: (((7 integer))) (((1 integer)))
reply: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 2002 to 0
run: 184 read-move 2: (((jump-if)) ((1 integer)) ((1 offset)))
m: ((1 integer))
sizeof: ((1 integer))
run: 185 read-move 4: (((2 integer)) <- ((read-rank)))
run: 186 read-rank 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2188 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 187 read-rank 1: (((1 tagged-value)) ((1 channel-address) (raw) (deref)) <- ((read)) ((1 channel-address) (raw)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
run: 188 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2219 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 189 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 2221 to 1062
run: 190 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 191 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2250 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 192 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 3 1065 . nil)))
run: #(tagged record (1 3 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 3 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 2252 to 1
setm: ((1 channel)): setting 2253 to 3
setm: ((1 channel)): setting 2254 to 1065
run: 193 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((2252 integer) (raw))
sizeof: ((2252 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 2255 to 1
run: 194 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((2253 integer) (raw))
sizeof: ((2253 integer) (raw))
run: 3 => ((5 integer))
setm: ((5 integer)) <= 3
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 2256 to 3
run: 195 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 2257 to nil
run: 196 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 2222 to nil
run: 197 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 198 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 2224 to 1062
run: 199 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 2225 to 1065
run: 200 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1068 tagged-value) (raw))
sizeof: ((1068 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character 2 . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character 2 . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 2226 to character
setm: ((6 tagged-value)): setting 2227 to 2
run: 201 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 2
run: 202 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((8 integer))
setm: ((8 integer)) <= 4
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 2228 to 4
run: 203 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 2229 to t
run: 204 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 205 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((1 tagged-value)) ((1 channel-address) (raw) (deref)))
reply: #(tagged record (character 2 . nil)) => ((1 tagged-value))
setm: ((1 tagged-value)) <= #(tagged record (character 2 . nil))
setm: size of ((1 tagged-value)) is 2
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value)): setting 2190 to character
setm: ((1 tagged-value)): setting 2191 to 2
reply: #(tagged record (2 3 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (2 3 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 2
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 3
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 206 read-rank 2: (((3 character)) <- ((maybe-coerce)) ((1 tagged-value)) ((character literal)))
m: ((1 tagged-value))
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 207 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2281 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 208 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2312 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 2312
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 2283 to 2312
run: 209 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character 2 . nil)) character)
run: #(tagged record (character 2 . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character 2 . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 2312 to character
setm: ((1 tagged-value-address) (deref)): setting 2313 to 2
run: 210 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character 2 . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 2284 to character
run: 211 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((2312 type) (raw))
sizeof: ((2312 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 2285 to character
run: 212 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 2286 to t
run: 213 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 214 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2313 location) (raw))
sizeof: ((2313 location) (raw))
run: 2 => ((5 location))
setm: ((5 location)) <= 2
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 2287 to 2
run: 215 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((3 character)))
reply: 2 => ((3 character))
setm: ((3 character)) <= 2
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 2192 to 2
run: 216 read-rank 3: (((print)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: 217 print 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2314 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 218 print 1: (((jump-if)) ((2 channel-address) (raw)) ((1 offset)))
m: ((2 channel-address) (raw))
sizeof: ((2 channel-address) (raw))
run: 219 print 2: (((reply)))
reply: nil nil
run: 220 read-rank 4: (((4 boolean)) <- ((equal)) ((3 character)) ((q literal)))
m: ((3 character))
sizeof: ((3 character))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 2193 to nil
run: 221 read-rank 5: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 222 read-rank 7: (((5 integer)) <- ((character-to-integer)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: 50 => ((5 integer))
setm: ((5 integer)) <= 50
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 2194 to 50
run: 223 read-rank 8: (((6 character)) <- ((copy)) ((1 literal)))
run: 1 => ((6 character))
setm: ((6 character)) <= 1
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 2195 to 1
run: 224 read-rank 9: (((7 integer)) <- ((character-to-integer)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: 49 => ((7 integer))
setm: ((7 integer)) <= 49
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 2196 to 49
run: 225 read-rank 10: (((5 integer)) <- ((subtract)) ((5 integer)) ((7 integer)))
m: ((5 integer))
sizeof: ((5 integer))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 2194 to 1
run: 226 read-rank 11: (((8 boolean)) <- ((greater-or-equal)) ((5 integer)) ((0 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 2197 to t
run: 227 read-rank 12: (((assert)) ((8 boolean)) ((rank too low literal)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 228 read-rank 13: (((9 boolean)) <- ((lesser-or-equal)) ((5 integer)) ((7 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 2198 to t
run: 229 read-rank 14: (((assert)) ((9 boolean)) ((rank too high literal)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 230 read-rank 15: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((2 integer)))
reply: 1 => ((2 integer))
setm: ((2 integer)) <= 1
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 2003 to 1
run: 231 read-move 5: (((expect-stdin)) ((- literal)))
run: 232 expect-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2345 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 233 expect-stdin 1: (((1 tagged-value)) ((1 channel-address) (raw) (deref)) <- ((read)) ((1 channel-address) (raw)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
run: 234 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2376 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 235 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 2378 to 1062
run: 236 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 237 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2407 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 238 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (2 3 1065 . nil)))
run: #(tagged record (2 3 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (2 3 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 2409 to 2
setm: ((1 channel)): setting 2410 to 3
setm: ((1 channel)): setting 2411 to 1065
run: 239 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((2409 integer) (raw))
sizeof: ((2409 integer) (raw))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 2412 to 2
run: 240 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((2410 integer) (raw))
sizeof: ((2410 integer) (raw))
run: 3 => ((5 integer))
setm: ((5 integer)) <= 3
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 2413 to 3
run: 241 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 2414 to nil
run: 242 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 2379 to nil
run: 243 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 244 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 2381 to 1062
run: 245 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 2382 to 1065
run: 246 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1070 tagged-value) (raw))
sizeof: ((1070 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character - . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character - . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 2383 to character
setm: ((6 tagged-value)): setting 2384 to -
run: 247 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 3
run: 248 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((8 integer))
setm: ((8 integer)) <= 4
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 2385 to 4
run: 249 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 2386 to t
run: 250 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 251 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((1 tagged-value)) ((1 channel-address) (raw) (deref)))
reply: #(tagged record (character - . nil)) => ((1 tagged-value))
setm: ((1 tagged-value)) <= #(tagged record (character - . nil))
setm: size of ((1 tagged-value)) is 2
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value)): setting 2347 to character
setm: ((1 tagged-value)): setting 2348 to -
reply: #(tagged record (3 3 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (3 3 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 3
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 3
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 252 expect-stdin 2: (((3 character)) <- ((maybe-coerce)) ((1 tagged-value)) ((character literal)))
m: ((1 tagged-value))
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 253 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2438 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 254 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2469 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 2469
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 2440 to 2469
run: 255 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character - . nil)) character)
run: #(tagged record (character - . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character - . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 2469 to character
setm: ((1 tagged-value-address) (deref)): setting 2470 to -
run: 256 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character - . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 2441 to character
run: 257 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((2469 type) (raw))
sizeof: ((2469 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 2442 to character
run: 258 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 2443 to t
run: 259 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 260 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2470 location) (raw))
sizeof: ((2470 location) (raw))
run: - => ((5 location))
setm: ((5 location)) <= -
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 2444 to -
run: 261 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((3 character)))
reply: - => ((3 character))
setm: ((3 character)) <= -
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 2349 to -
run: 262 expect-stdin 3: (((print)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: 263 print 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2471 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 264 print 1: (((jump-if)) ((2 channel-address) (raw)) ((1 offset)))
m: ((2 channel-address) (raw))
sizeof: ((2 channel-address) (raw))
run: 265 print 2: (((reply)))
reply: nil nil
run: 266 expect-stdin 4: (((4 character)) <- ((next-input)))
arg: nil 0 (-)
run: - => ((4 character))
setm: ((4 character)) <= -
setm: size of ((4 character)) is 1
setm: ((4 character)): setting 2350 to -
run: 267 expect-stdin 5: (((5 boolean)) <- ((equal)) ((3 character)) ((4 character)))
m: ((3 character))
sizeof: ((3 character))
m: ((4 character))
sizeof: ((4 character))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 2351 to t
run: 268 expect-stdin 6: (((assert)) ((5 boolean)) ((expected character not found literal)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 269 read-move 6: (((3 integer)) <- ((read-file)))
run: 270 read-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2502 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 271 read-file 1: (((1 tagged-value)) ((1 channel-address) (raw) (deref)) <- ((read)) ((1 channel-address) (raw)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
run: 272 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2533 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 273 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 2535 to 1062
run: 274 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 275 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2564 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 276 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (3 3 1065 . nil)))
run: #(tagged record (3 3 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (3 3 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 2566 to 3
setm: ((1 channel)): setting 2567 to 3
setm: ((1 channel)): setting 2568 to 1065
run: 277 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((2566 integer) (raw))
sizeof: ((2566 integer) (raw))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 2569 to 3
run: 278 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((2567 integer) (raw))
sizeof: ((2567 integer) (raw))
run: 3 => ((5 integer))
setm: ((5 integer)) <= 3
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 2570 to 3
run: 279 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 2571 to t
run: 280 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 2536 to t
run: 281 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 282 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 2537 to 1063
run: 283 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read to sleep queue
schedule: waking up write
schedule: write
run: 284 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1360 to 1065
run: 285 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1361 to 1063
run: 286 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1072 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1072
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1362 to 1072
run: 287 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character a . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character a . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1072 to character
setm: ((8 tagged-value-address) (deref)): setting 1073 to a
run: 288 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 4 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 4
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 4
run: 289 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((9 integer))
setm: ((9 integer)) <= 4
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1363 to 4
run: 290 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: nil => ((10 boolean))
setm: ((10 boolean)) <= nil
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1364 to nil
run: 291 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 292 write 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 0
run: 293 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (raw) (deref)))
reply: #(tagged record (3 0 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (3 0 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 3
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 294 main 15: (((2 character)) <- ((copy)) ((4 literal)))
run: 4 => ((2 character))
setm: ((2 character)) <= 4
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 1003 to 4
run: 295 main 16: (((3 tagged-value)) <- ((save-type)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #(tagged record (character 4)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character 4))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 1004 to character
setm: ((3 tagged-value)): setting 1005 to 4
run: 296 main 17: (((1 channel-address) (raw) (deref)) <- ((write)) ((1 channel-address) (raw)) ((3 tagged-value)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 297 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1446 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 298 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character 4 . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1448 to 1062
run: 299 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character 4 . nil)))
run: #(tagged record (character 4 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character 4 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1449 to character
setm: ((2 tagged-value)): setting 1450 to 4
run: 300 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 301 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1477 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 302 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (3 0 1065 . nil)))
run: #(tagged record (3 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (3 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1479 to 3
setm: ((1 channel)): setting 1480 to 0
setm: ((1 channel)): setting 1481 to 1065
run: 303 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1480 integer) (raw))
sizeof: ((1480 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1482 to 0
run: 304 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1482 to 1
run: 305 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 306 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1508 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 307 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (3 0 1065 . nil)))
run: #(tagged record (3 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (3 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1510 to 3
setm: ((1 channel)): setting 1511 to 0
setm: ((1 channel)): setting 1512 to 1065
run: 308 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1512 tagged-value-array-address) (raw))
sizeof: ((1512 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1513 to 1065
run: 309 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1514 to 4
run: 310 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1483 to 4
run: 311 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1484 to t
run: 312 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 313 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1479 integer) (raw))
sizeof: ((1479 integer) (raw))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1485 to 3
run: 314 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1486 to nil
run: 315 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1451 to nil
run: 316 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 317 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1453 to 1065
run: 318 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1454 to 1063
run: 319 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1066 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1066
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1455 to 1066
run: 320 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character 4 . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character 4 . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1066 to character
setm: ((8 tagged-value-address) (deref)): setting 1067 to 4
run: 321 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 1
run: 322 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((9 integer))
setm: ((9 integer)) <= 4
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1456 to 4
run: 323 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1457 to t
run: 324 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 325 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (raw) (deref)))
reply: #(tagged record (3 1 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (3 1 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 3
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 326 main 18: (((sleep)) ((until-routine-done literal)) ((1 integer) (routine)))
m: ((1 integer) (routine))
sizeof: ((1 integer) (routine))
schedule: pushing main to sleep queue
schedule: waking up read
schedule: read
run: 327 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 2538 to 1062
run: 328 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 2539 to 1065
run: 329 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1072 tagged-value) (raw))
sizeof: ((1072 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character a . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 2540 to character
setm: ((6 tagged-value)): setting 2541 to a
run: 330 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 4
run: 331 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((8 integer))
setm: ((8 integer)) <= 4
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 2542 to 4
run: 332 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 2543 to nil
run: 333 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 334 read 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 0
run: 335 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((1 tagged-value)) ((1 channel-address) (raw) (deref)))
reply: #(tagged record (character a . nil)) => ((1 tagged-value))
setm: ((1 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((1 tagged-value)) is 2
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value)): setting 2504 to character
setm: ((1 tagged-value)): setting 2505 to a
reply: #(tagged record (0 1 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 336 read-file 2: (((3 character)) <- ((copy)) ((a literal)))
run: a => ((3 character))
setm: ((3 character)) <= a
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 2506 to a
run: 337 read-file 3: (((4 integer)) <- ((character-to-integer)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: 97 => ((4 integer))
setm: ((4 integer)) <= 97
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 2507 to 97
run: 338 read-file 4: (((5 character)) <- ((maybe-coerce)) ((1 tagged-value)) ((character literal)))
m: ((1 tagged-value))
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 339 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2595 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 340 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2626 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 2626
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 2597 to 2626
run: 341 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character a . nil)) character)
run: #(tagged record (character a . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character a . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 2626 to character
setm: ((1 tagged-value-address) (deref)): setting 2627 to a
run: 342 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character a . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 2598 to character
run: 343 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((2626 type) (raw))
sizeof: ((2626 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 2599 to character
run: 344 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 2600 to t
run: 345 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 346 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2627 location) (raw))
sizeof: ((2627 location) (raw))
run: a => ((5 location))
setm: ((5 location)) <= a
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 2601 to a
run: 347 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((5 character)))
reply: a => ((5 character))
setm: ((5 character)) <= a
setm: size of ((5 character)) is 1
setm: ((5 character)): setting 2508 to a
run: 348 read-file 5: (((print)) ((5 character)))
m: ((5 character))
sizeof: ((5 character))
run: 349 print 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2628 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 350 print 1: (((jump-if)) ((2 channel-address) (raw)) ((1 offset)))
m: ((2 channel-address) (raw))
sizeof: ((2 channel-address) (raw))
run: 351 print 2: (((reply)))
reply: nil nil
run: 352 read-file 6: (((6 boolean)) <- ((equal)) ((5 character)) ((q literal)))
m: ((5 character))
sizeof: ((5 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 2509 to nil
run: 353 read-file 7: (((jump-unless)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 354 read-file 9: (((7 integer)) <- ((character-to-integer)) ((5 character)))
m: ((5 character))
sizeof: ((5 character))
run: 97 => ((7 integer))
setm: ((7 integer)) <= 97
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 2510 to 97
run: 355 read-file 10: (((7 integer)) <- ((subtract)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 2510 to 0
run: 356 read-file 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((0 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 2511 to t
run: 357 read-file 12: (((assert)) ((8 boolean)) ((file too low literal)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 358 read-file 13: (((9 boolean)) <- ((lesser-or-equal)) ((7 integer)) ((7 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 2512 to t
run: 359 read-file 14: (((assert)) ((9 boolean)) ((file too high literal)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 360 read-file 15: (((reply)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
reply: (((7 integer))) (((3 integer)))
reply: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 2004 to 0
run: 361 read-move 7: (((4 integer)) <- ((read-rank)))
run: 362 read-rank 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2659 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 363 read-rank 1: (((1 tagged-value)) ((1 channel-address) (raw) (deref)) <- ((read)) ((1 channel-address) (raw)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
run: 364 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2690 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 365 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 2692 to 1062
run: 366 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 367 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2721 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 368 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 2723 to 0
setm: ((1 channel)): setting 2724 to 1
setm: ((1 channel)): setting 2725 to 1065
run: 369 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((2723 integer) (raw))
sizeof: ((2723 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 2726 to 0
run: 370 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((2724 integer) (raw))
sizeof: ((2724 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 2727 to 1
run: 371 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 2728 to nil
run: 372 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 2693 to nil
run: 373 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 374 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 2695 to 1062
run: 375 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 2696 to 1065
run: 376 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1066 tagged-value) (raw))
sizeof: ((1066 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character 4 . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character 4 . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 2697 to character
setm: ((6 tagged-value)): setting 2698 to 4
run: 377 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 1
run: 378 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((8 integer))
setm: ((8 integer)) <= 4
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 2699 to 4
run: 379 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 2700 to t
run: 380 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 381 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((1 tagged-value)) ((1 channel-address) (raw) (deref)))
reply: #(tagged record (character 4 . nil)) => ((1 tagged-value))
setm: ((1 tagged-value)) <= #(tagged record (character 4 . nil))
setm: size of ((1 tagged-value)) is 2
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value)): setting 2661 to character
setm: ((1 tagged-value)): setting 2662 to 4
reply: #(tagged record (1 1 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (1 1 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 382 read-rank 2: (((3 character)) <- ((maybe-coerce)) ((1 tagged-value)) ((character literal)))
m: ((1 tagged-value))
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 383 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2752 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 384 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2783 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 2783
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 2754 to 2783
run: 385 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character 4 . nil)) character)
run: #(tagged record (character 4 . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character 4 . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 2783 to character
setm: ((1 tagged-value-address) (deref)): setting 2784 to 4
run: 386 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character 4 . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 2755 to character
run: 387 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((2783 type) (raw))
sizeof: ((2783 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 2756 to character
run: 388 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 2757 to t
run: 389 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 390 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2784 location) (raw))
sizeof: ((2784 location) (raw))
run: 4 => ((5 location))
setm: ((5 location)) <= 4
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 2758 to 4
run: 391 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((3 character)))
reply: 4 => ((3 character))
setm: ((3 character)) <= 4
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 2663 to 4
run: 392 read-rank 3: (((print)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: 393 print 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2785 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 394 print 1: (((jump-if)) ((2 channel-address) (raw)) ((1 offset)))
m: ((2 channel-address) (raw))
sizeof: ((2 channel-address) (raw))
run: 395 print 2: (((reply)))
reply: nil nil
run: 396 read-rank 4: (((4 boolean)) <- ((equal)) ((3 character)) ((q literal)))
m: ((3 character))
sizeof: ((3 character))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 2664 to nil
run: 397 read-rank 5: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 398 read-rank 7: (((5 integer)) <- ((character-to-integer)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: 52 => ((5 integer))
setm: ((5 integer)) <= 52
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 2665 to 52
run: 399 read-rank 8: (((6 character)) <- ((copy)) ((1 literal)))
run: 1 => ((6 character))
setm: ((6 character)) <= 1
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 2666 to 1
run: 400 read-rank 9: (((7 integer)) <- ((character-to-integer)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: 49 => ((7 integer))
setm: ((7 integer)) <= 49
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 2667 to 49
run: 401 read-rank 10: (((5 integer)) <- ((subtract)) ((5 integer)) ((7 integer)))
m: ((5 integer))
sizeof: ((5 integer))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((5 integer))
setm: ((5 integer)) <= 3
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 2665 to 3
run: 402 read-rank 11: (((8 boolean)) <- ((greater-or-equal)) ((5 integer)) ((0 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 2668 to t
run: 403 read-rank 12: (((assert)) ((8 boolean)) ((rank too low literal)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 404 read-rank 13: (((9 boolean)) <- ((lesser-or-equal)) ((5 integer)) ((7 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 2669 to t
run: 405 read-rank 14: (((assert)) ((9 boolean)) ((rank too high literal)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 406 read-rank 15: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((4 integer)))
reply: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 2005 to 3
run: 407 read-move 8: (((5 move-address)) <- ((new)) ((move literal)))
sizeof: ((_ move))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 2816 => ((5 move-address))
setm: ((5 move-address)) <= 2816
setm: size of ((5 move-address)) is 1
setm: ((5 move-address)): setting 2006 to 2816
run: 408 read-move 9: (((6 integer-integer-pair-address)) <- ((get-address)) ((5 move-address) (deref)) ((0 offset)))
run: 2816 => ((6 integer-integer-pair-address))
setm: ((6 integer-integer-pair-address)) <= 2816
setm: size of ((6 integer-integer-pair-address)) is 1
setm: ((6 integer-integer-pair-address)): setting 2007 to 2816
run: 409 read-move 10: (((7 integer-address)) <- ((get-address)) ((6 integer-integer-pair-address) (deref)) ((0 offset)))
run: 2816 => ((7 integer-address))
setm: ((7 integer-address)) <= 2816
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 2008 to 2816
run: 410 read-move 11: (((7 integer-address) (deref)) <- ((copy)) ((1 integer)))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 2816 to 0
run: 411 read-move 12: (((7 integer-address)) <- ((get-address)) ((6 integer-integer-pair-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 2817 => ((7 integer-address))
setm: ((7 integer-address)) <= 2817
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 2008 to 2817
run: 412 read-move 13: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 2817 to 1
run: 413 read-move 14: (((8 integer-integer-pair-address)) <- ((get-address)) ((5 move-address) (deref)) ((1 offset)))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 2818 => ((8 integer-integer-pair-address))
setm: ((8 integer-integer-pair-address)) <= 2818
setm: size of ((8 integer-integer-pair-address)) is 1
setm: ((8 integer-integer-pair-address)): setting 2009 to 2818
run: 414 read-move 15: (((7 integer-address)) <- ((get-address)) ((8 integer-integer-pair-address) (deref)) ((0 offset)))
run: 2818 => ((7 integer-address))
setm: ((7 integer-address)) <= 2818
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 2008 to 2818
run: 415 read-move 16: (((7 integer-address) (deref)) <- ((copy)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 2818 to 0
run: 416 read-move 17: (((7 integer-address)) <- ((get-address)) ((8 integer-integer-pair-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 2819 => ((7 integer-address))
setm: ((7 integer-address)) <= 2819
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 2008 to 2819
run: 417 read-move 18: (((7 integer-address) (deref)) <- ((copy)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 3
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 2819 to 3
run: 418 read-move 19: (((reply)) ((5 move-address)))
m: ((5 move-address))
sizeof: ((5 move-address))
schedule: done with routine
schedule: waking up main
schedule: main
schedule: done with routine
