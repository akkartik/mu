schedule: main
run: 1 main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
sizeof: ((_ location))
run: 1000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2 main 1: (((1 channel-address)) <- ((init-channel)) ((1 literal)))
run: 3 init-channel 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4 init-channel 1: (((1 channel-address)) <- ((new)) ((channel literal)))
sizeof: ((_ channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1033 to 1062
run: 5 init-channel 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((2 integer-address))
setm: ((2 integer-address)) <= 1062
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 1034 to 1062
run: 6 init-channel 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1062 to 0
run: 7 init-channel 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 1035 to 1063
run: 8 init-channel 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1063 to 0
run: 9 init-channel 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (1)
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1036 to 1
run: 10 init-channel 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1036 to 2
run: 11 init-channel 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1064 => ((5 tagged-value-array-address-address))
setm: ((5 tagged-value-array-address-address)) <= 1064
setm: size of ((5 tagged-value-array-address-address)) is 1
setm: ((5 tagged-value-array-address-address)): setting 1037 to 1064
run: 12 init-channel 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1065 => ((5 tagged-value-array-address-address) (deref))
setm: ((5 tagged-value-array-address-address) (deref)) <= 1065
setm: size of ((5 tagged-value-array-address-address) (deref)) is 1
setm: ((5 tagged-value-array-address-address) (deref)): setting 1064 to 1065
run: 13 init-channel 10: (((reply)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
reply: (((1 channel-address))) (((1 channel-address)))
reply: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1002 to 1062
run: 14 main 2: (((2 integer) (routine)) <- ((fork)) ((read-move fn)) ((nil literal) (globals)) ((2000 literal) (limit)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 1 => ((2 integer) (routine))
setm: ((2 integer) (routine)) <= 1
setm: size of ((2 integer) (routine)) is 1
setm: ((2 integer) (routine)): setting 1003 to 1
run: 15 main 3: (((3 character)) <- ((copy)) ((a literal)))
run: #\a => ((3 character))
setm: ((3 character)) <= #\a
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 1004 to #\a
run: 16 main 4: (((4 tagged-value)) <- ((save-type)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: #(tagged record (character #\a)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\a))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 1005 to character
setm: ((4 tagged-value)): setting 1006 to #\a
run: 17 main 5: (((1 channel-address) (deref) (nochange)) <- ((write)) ((1 channel-address)) ((4 tagged-value)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 18 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1070 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 19 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character #\a . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1072 to 1062
run: 20 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character #\a . nil)))
run: #(tagged record (character #\a . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\a . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1073 to character
setm: ((2 tagged-value)): setting 1074 to #\a
run: 21 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 22 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1101 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 23 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1103 to 0
setm: ((1 channel)): setting 1104 to 0
setm: ((1 channel)): setting 1105 to 1065
run: 24 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1104 integer) (raw))
sizeof: ((1104 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1106 to 0
run: 25 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1106 to 1
run: 26 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 27 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1132 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 28 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1134 to 0
setm: ((1 channel)): setting 1135 to 0
setm: ((1 channel)): setting 1136 to 1065
run: 29 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1136 tagged-value-array-address) (raw))
sizeof: ((1136 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1137 to 1065
run: 30 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1138 to 2
run: 31 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1107 to 2
run: 32 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1108 to t
run: 33 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 34 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1103 integer) (raw))
sizeof: ((1103 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1109 to 0
run: 35 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1110 to nil
run: 36 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1075 to nil
run: 37 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 38 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1077 to 1065
run: 39 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1078 to 1063
run: 40 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1066 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1066
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1079 to 1066
run: 41 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\a . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\a . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1066 to character
setm: ((8 tagged-value-address) (deref)): setting 1067 to #\a
run: 42 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 1
run: 43 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1080 to 2
run: 44 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1081 to t
run: 45 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 46 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (deref) (nochange)))
reply: #(tagged record (0 1 1065 . nil)) => ((1 channel-address) (deref) (nochange))
setm: ((1 channel-address) (deref) (nochange)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel-address) (deref) (nochange)) is 3
sizeof: ((1 channel-address) (deref) (nochange))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref) (nochange)): setting 1062 to 0
setm: ((1 channel-address) (deref) (nochange)): setting 1063 to 1
setm: ((1 channel-address) (deref) (nochange)): setting 1064 to 1065
run: 47 main 6: (((3 character)) <- ((copy)) ((2 literal)))
run: #\2 => ((3 character))
setm: ((3 character)) <= #\2
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 1004 to #\2
run: 48 main 7: (((4 tagged-value)) <- ((save-type)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: #(tagged record (character #\2)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\2))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 1005 to character
setm: ((4 tagged-value)): setting 1006 to #\2
run: 49 main 8: (((1 channel-address) (deref) (nochange)) <- ((write)) ((1 channel-address)) ((4 tagged-value)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 50 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1163 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 51 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character #\2 . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1165 to 1062
run: 52 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character #\2 . nil)))
run: #(tagged record (character #\2 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\2 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1166 to character
setm: ((2 tagged-value)): setting 1167 to #\2
run: 53 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 54 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1194 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 55 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1196 to 0
setm: ((1 channel)): setting 1197 to 1
setm: ((1 channel)): setting 1198 to 1065
run: 56 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1197 integer) (raw))
sizeof: ((1197 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1199 to 1
run: 57 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1199 to 2
run: 58 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 59 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1225 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 60 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1227 to 0
setm: ((1 channel)): setting 1228 to 1
setm: ((1 channel)): setting 1229 to 1065
run: 61 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1229 tagged-value-array-address) (raw))
sizeof: ((1229 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1230 to 1065
run: 62 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1231 to 2
run: 63 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1200 to 2
run: 64 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1201 to nil
run: 65 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 66 full? 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1199 to 0
run: 67 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1196 integer) (raw))
sizeof: ((1196 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1202 to 0
run: 68 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1203 to t
run: 69 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1168 to t
run: 70 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 71 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((5 integer-address))
setm: ((5 integer-address)) <= 1062
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 1169 to 1062
run: 72 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/main to sleep queue
schedule: read-move
run: 73 read-move 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 74 read-move 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101002 to 1062
run: 75 read-move 2: (((2 integer)) <- ((read-file)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 76 read-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 77 read-file 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101033 to 1062
run: 78 read-file 2: (((2 tagged-value)) ((1 channel-address) (deref) (nochange)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 79 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101062 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 80 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101064 to 1062
run: 81 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 82 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101093 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 83 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101095 to 0
setm: ((1 channel)): setting 101096 to 1
setm: ((1 channel)): setting 101097 to 1065
run: 84 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101095 integer) (raw))
sizeof: ((101095 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101098 to 0
run: 85 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101096 integer) (raw))
sizeof: ((101096 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101099 to 1
run: 86 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101100 to nil
run: 87 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 101065 to nil
run: 88 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 89 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 101067 to 1062
run: 90 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 101068 to 1065
run: 91 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1066 tagged-value) (raw))
sizeof: ((1066 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\a . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\a . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 101069 to character
setm: ((6 tagged-value)): setting 101070 to #\a
run: 92 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 1
run: 93 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101071 to 2
run: 94 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101072 to t
run: 95 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 96 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((2 tagged-value)) ((1 channel-address) (deref) (nochange)))
reply: #(tagged record (character #\a . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\a . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 101034 to character
setm: ((2 tagged-value)): setting 101035 to #\a
reply: #(tagged record (1 1 1065 . nil)) => ((1 channel-address) (deref) (nochange))
setm: ((1 channel-address) (deref) (nochange)) <= #(tagged record (1 1 1065 . nil))
setm: size of ((1 channel-address) (deref) (nochange)) is 3
sizeof: ((1 channel-address) (deref) (nochange))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref) (nochange)): setting 1062 to 1
setm: ((1 channel-address) (deref) (nochange)): setting 1063 to 1
setm: ((1 channel-address) (deref) (nochange)): setting 1064 to 1065
run: 97 read-file 3: (((4 character)) <- ((copy)) ((a literal)))
run: #\a => ((4 character))
setm: ((4 character)) <= #\a
setm: size of ((4 character)) is 1
setm: ((4 character)): setting 101036 to #\a
run: 98 read-file 4: (((5 integer)) <- ((character-to-integer)) ((4 character)))
m: ((4 character))
sizeof: ((4 character))
run: 97 => ((5 integer))
setm: ((5 integer)) <= 97
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101037 to 97
run: 99 read-file 5: (((6 character)) <- ((maybe-coerce)) ((2 tagged-value)) ((character literal)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 100 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101124 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 101 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 101155 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 101155
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 101126 to 101155
run: 102 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\a . nil)) character)
run: #(tagged record (character #\a . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\a . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 101155 to character
setm: ((1 tagged-value-address) (deref)): setting 101156 to #\a
run: 103 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\a . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 101127 to character
run: 104 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((101155 type) (raw))
sizeof: ((101155 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 101128 to character
run: 105 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101129 to t
run: 106 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 107 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((101156 location) (raw))
sizeof: ((101156 location) (raw))
run: #\a => ((5 location))
setm: ((5 location)) <= #\a
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 101130 to #\a
run: 108 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((6 character)))
reply: #\a => ((6 character))
setm: ((6 character)) <= #\a
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 101038 to #\a
run: 109 read-file 6: (((7 boolean)) <- ((equal)) ((6 character)) ((q literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 101039 to nil
run: 110 read-file 7: (((jump-unless)) ((7 boolean)) ((1 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 111 read-file 9: (((8 integer)) <- ((character-to-integer)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: 97 => ((8 integer))
setm: ((8 integer)) <= 97
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101040 to 97
run: 112 read-file 10: (((8 integer)) <- ((subtract)) ((8 integer)) ((5 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((8 integer))
setm: ((8 integer)) <= 0
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101040 to 0
run: 113 read-file 11: (((9 boolean)) <- ((greater-or-equal)) ((8 integer)) ((0 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101041 to t
run: 114 read-file 12: (((assert)) ((9 boolean)) ((file too low literal)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 115 read-file 13: (((10 boolean)) <- ((lesser-or-equal)) ((8 integer)) ((7 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 101042 to t
run: 116 read-file 14: (((assert)) ((10 boolean)) ((file too high literal)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 117 read-file 15: (((reply)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
reply: (((8 integer))) (((2 integer)))
reply: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 101003 to 0
run: 118 read-move 3: (((jump-if)) ((2 integer)) ((1 offset)))
m: ((2 integer))
sizeof: ((2 integer))
run: 119 read-move 5: (((3 integer)) <- ((read-rank)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 120 read-rank 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101157 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 121 read-rank 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101159 to 1062
run: 122 read-rank 2: (((2 tagged-value)) ((1 channel-address) (deref) (nochange)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 123 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101188 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 124 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101190 to 1062
run: 125 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 126 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101219 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 127 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1065 . nil)))
run: #(tagged record (1 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101221 to 1
setm: ((1 channel)): setting 101222 to 1
setm: ((1 channel)): setting 101223 to 1065
run: 128 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101221 integer) (raw))
sizeof: ((101221 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101224 to 1
run: 129 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101222 integer) (raw))
sizeof: ((101222 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101225 to 1
run: 130 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101226 to t
run: 131 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 101191 to t
run: 132 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 133 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 101192 to 1063
run: 134 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/read-rank/read-move to sleep queue
schedule: waking up write/main
schedule: write/main
run: 135 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1170 to 1065
run: 136 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1171 to 1063
run: 137 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1068 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1068
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1172 to 1068
run: 138 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\2 . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\2 . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1068 to character
setm: ((8 tagged-value-address) (deref)): setting 1069 to #\2
run: 139 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 2 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 2
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 2
run: 140 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1173 to 2
run: 141 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: nil => ((10 boolean))
setm: ((10 boolean)) <= nil
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1174 to nil
run: 142 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 143 write 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 0
run: 144 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (deref) (nochange)))
reply: #(tagged record (1 0 1065 . nil)) => ((1 channel-address) (deref) (nochange))
setm: ((1 channel-address) (deref) (nochange)) <= #(tagged record (1 0 1065 . nil))
setm: size of ((1 channel-address) (deref) (nochange)) is 3
sizeof: ((1 channel-address) (deref) (nochange))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref) (nochange)): setting 1062 to 1
setm: ((1 channel-address) (deref) (nochange)): setting 1063 to 0
setm: ((1 channel-address) (deref) (nochange)): setting 1064 to 1065
run: 145 main 9: (((3 character)) <- ((copy)) ((- literal)))
run: #\- => ((3 character))
setm: ((3 character)) <= #\-
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 1004 to #\-
run: 146 main 10: (((4 tagged-value)) <- ((save-type)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: #(tagged record (character #\-)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\-))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 1005 to character
setm: ((4 tagged-value)): setting 1006 to #\-
run: 147 main 11: (((1 channel-address) (deref) (nochange)) <- ((write)) ((1 channel-address)) ((4 tagged-value)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 148 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1256 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 149 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character #\- . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1258 to 1062
run: 150 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character #\- . nil)))
run: #(tagged record (character #\- . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\- . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1259 to character
setm: ((2 tagged-value)): setting 1260 to #\-
run: 151 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 152 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1287 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 153 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1065 . nil)))
run: #(tagged record (1 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1289 to 1
setm: ((1 channel)): setting 1290 to 0
setm: ((1 channel)): setting 1291 to 1065
run: 154 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1290 integer) (raw))
sizeof: ((1290 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1292 to 0
run: 155 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1292 to 1
run: 156 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 157 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1318 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 158 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1065 . nil)))
run: #(tagged record (1 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1320 to 1
setm: ((1 channel)): setting 1321 to 0
setm: ((1 channel)): setting 1322 to 1065
run: 159 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1322 tagged-value-array-address) (raw))
sizeof: ((1322 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1323 to 1065
run: 160 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1324 to 2
run: 161 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1293 to 2
run: 162 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1294 to t
run: 163 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 164 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1289 integer) (raw))
sizeof: ((1289 integer) (raw))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1295 to 1
run: 165 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1296 to t
run: 166 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1261 to t
run: 167 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 168 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((5 integer-address))
setm: ((5 integer-address)) <= 1062
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 1262 to 1062
run: 169 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/main to sleep queue
schedule: waking up read/read-rank/read-move
schedule: read/read-rank/read-move
run: 170 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 101193 to 1062
run: 171 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 101194 to 1065
run: 172 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1068 tagged-value) (raw))
sizeof: ((1068 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\2 . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\2 . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 101195 to character
setm: ((6 tagged-value)): setting 101196 to #\2
run: 173 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 2
run: 174 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101197 to 2
run: 175 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101198 to nil
run: 176 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 177 read 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 0
run: 178 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((2 tagged-value)) ((1 channel-address) (deref) (nochange)))
reply: #(tagged record (character #\2 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\2 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 101160 to character
setm: ((2 tagged-value)): setting 101161 to #\2
reply: #(tagged record (0 0 1065 . nil)) => ((1 channel-address) (deref) (nochange))
setm: ((1 channel-address) (deref) (nochange)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel-address) (deref) (nochange)) is 3
sizeof: ((1 channel-address) (deref) (nochange))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref) (nochange)): setting 1062 to 0
setm: ((1 channel-address) (deref) (nochange)): setting 1063 to 0
setm: ((1 channel-address) (deref) (nochange)): setting 1064 to 1065
run: 179 read-rank 3: (((4 character)) <- ((maybe-coerce)) ((2 tagged-value)) ((character literal)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 180 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101250 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 181 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 101281 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 101281
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 101252 to 101281
run: 182 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\2 . nil)) character)
run: #(tagged record (character #\2 . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\2 . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 101281 to character
setm: ((1 tagged-value-address) (deref)): setting 101282 to #\2
run: 183 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\2 . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 101253 to character
run: 184 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((101281 type) (raw))
sizeof: ((101281 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 101254 to character
run: 185 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101255 to t
run: 186 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 187 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((101282 location) (raw))
sizeof: ((101282 location) (raw))
run: #\2 => ((5 location))
setm: ((5 location)) <= #\2
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 101256 to #\2
run: 188 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((4 character)))
reply: #\2 => ((4 character))
setm: ((4 character)) <= #\2
setm: size of ((4 character)) is 1
setm: ((4 character)): setting 101162 to #\2
run: 189 read-rank 4: (((5 boolean)) <- ((equal)) ((4 character)) ((q literal)))
m: ((4 character))
sizeof: ((4 character))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 101163 to nil
run: 190 read-rank 5: (((jump-unless)) ((5 boolean)) ((1 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 191 read-rank 7: (((6 integer)) <- ((character-to-integer)) ((4 character)))
m: ((4 character))
sizeof: ((4 character))
run: 50 => ((6 integer))
setm: ((6 integer)) <= 50
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 101164 to 50
run: 192 read-rank 8: (((7 character)) <- ((copy)) ((1 literal)))
run: #\1 => ((7 character))
setm: ((7 character)) <= #\1
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 101165 to #\1
run: 193 read-rank 9: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 49 => ((8 integer))
setm: ((8 integer)) <= 49
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101166 to 49
run: 194 read-rank 10: (((6 integer)) <- ((subtract)) ((6 integer)) ((8 integer)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((8 integer))
sizeof: ((8 integer))
run: 1 => ((6 integer))
setm: ((6 integer)) <= 1
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 101164 to 1
run: 195 read-rank 11: (((9 boolean)) <- ((greater-or-equal)) ((6 integer)) ((0 literal)))
m: ((6 integer))
sizeof: ((6 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101167 to t
run: 196 read-rank 12: (((assert)) ((9 boolean)) ((rank too low literal)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 197 read-rank 13: (((10 boolean)) <- ((lesser-or-equal)) ((6 integer)) ((7 literal)))
m: ((6 integer))
sizeof: ((6 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 101168 to t
run: 198 read-rank 14: (((assert)) ((10 boolean)) ((rank too high literal)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 199 read-rank 15: (((reply)) ((6 integer)))
m: ((6 integer))
sizeof: ((6 integer))
reply: (((6 integer))) (((3 integer)))
reply: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 101004 to 1
run: 200 read-move 6: (((expect-stdin)) ((1 channel-address)) ((- literal)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 201 expect-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101283 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 202 expect-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #\-)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101285 to 1062
run: 203 expect-stdin 2: (((2 tagged-value)) ((1 channel-address) (deref) (nochange)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 204 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101314 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 205 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101316 to 1062
run: 206 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 207 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101345 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 208 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101347 to 0
setm: ((1 channel)): setting 101348 to 0
setm: ((1 channel)): setting 101349 to 1065
run: 209 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101347 integer) (raw))
sizeof: ((101347 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101350 to 0
run: 210 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101348 integer) (raw))
sizeof: ((101348 integer) (raw))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101351 to 0
run: 211 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101352 to t
run: 212 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 101317 to t
run: 213 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 214 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 101318 to 1063
run: 215 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/expect-stdin/read-move to sleep queue
schedule: waking up write/main
schedule: write/main
run: 216 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1263 to 1065
run: 217 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1264 to 1063
run: 218 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1066 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1066
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1265 to 1066
run: 219 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\- . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\- . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1066 to character
setm: ((8 tagged-value-address) (deref)): setting 1067 to #\-
run: 220 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 1
run: 221 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1266 to 2
run: 222 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1267 to t
run: 223 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 224 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (deref) (nochange)))
reply: #(tagged record (0 1 1065 . nil)) => ((1 channel-address) (deref) (nochange))
setm: ((1 channel-address) (deref) (nochange)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel-address) (deref) (nochange)) is 3
sizeof: ((1 channel-address) (deref) (nochange))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref) (nochange)): setting 1062 to 0
setm: ((1 channel-address) (deref) (nochange)): setting 1063 to 1
setm: ((1 channel-address) (deref) (nochange)): setting 1064 to 1065
run: 225 main 12: (((3 character)) <- ((copy)) ((a literal)))
run: #\a => ((3 character))
setm: ((3 character)) <= #\a
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 1004 to #\a
run: 226 main 13: (((4 tagged-value)) <- ((save-type)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: #(tagged record (character #\a)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\a))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 1005 to character
setm: ((4 tagged-value)): setting 1006 to #\a
run: 227 main 14: (((1 channel-address) (deref) (nochange)) <- ((write)) ((1 channel-address)) ((4 tagged-value)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 228 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1349 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 229 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character #\a . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1351 to 1062
run: 230 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character #\a . nil)))
run: #(tagged record (character #\a . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\a . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1352 to character
setm: ((2 tagged-value)): setting 1353 to #\a
run: 231 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 232 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1380 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 233 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1382 to 0
setm: ((1 channel)): setting 1383 to 1
setm: ((1 channel)): setting 1384 to 1065
run: 234 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1383 integer) (raw))
sizeof: ((1383 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1385 to 1
run: 235 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1385 to 2
run: 236 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 237 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1411 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 238 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1413 to 0
setm: ((1 channel)): setting 1414 to 1
setm: ((1 channel)): setting 1415 to 1065
run: 239 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1415 tagged-value-array-address) (raw))
sizeof: ((1415 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1416 to 1065
run: 240 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1417 to 2
run: 241 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1386 to 2
run: 242 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1387 to nil
run: 243 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 244 full? 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1385 to 0
run: 245 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1382 integer) (raw))
sizeof: ((1382 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1388 to 0
run: 246 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1389 to t
run: 247 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1354 to t
run: 248 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 249 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((5 integer-address))
setm: ((5 integer-address)) <= 1062
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 1355 to 1062
run: 250 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/main to sleep queue
schedule: waking up read/expect-stdin/read-move
schedule: read/expect-stdin/read-move
run: 251 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 101319 to 1062
run: 252 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 101320 to 1065
run: 253 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1066 tagged-value) (raw))
sizeof: ((1066 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\- . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\- . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 101321 to character
setm: ((6 tagged-value)): setting 101322 to #\-
run: 254 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 1
run: 255 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101323 to 2
run: 256 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101324 to t
run: 257 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 258 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((2 tagged-value)) ((1 channel-address) (deref) (nochange)))
reply: #(tagged record (character #\- . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\- . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 101286 to character
setm: ((2 tagged-value)): setting 101287 to #\-
reply: #(tagged record (1 1 1065 . nil)) => ((1 channel-address) (deref) (nochange))
setm: ((1 channel-address) (deref) (nochange)) <= #(tagged record (1 1 1065 . nil))
setm: size of ((1 channel-address) (deref) (nochange)) is 3
sizeof: ((1 channel-address) (deref) (nochange))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref) (nochange)): setting 1062 to 1
setm: ((1 channel-address) (deref) (nochange)): setting 1063 to 1
setm: ((1 channel-address) (deref) (nochange)): setting 1064 to 1065
run: 259 expect-stdin 3: (((4 character)) <- ((maybe-coerce)) ((2 tagged-value)) ((character literal)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 260 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101376 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 261 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 101407 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 101407
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 101378 to 101407
run: 262 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\- . nil)) character)
run: #(tagged record (character #\- . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\- . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 101407 to character
setm: ((1 tagged-value-address) (deref)): setting 101408 to #\-
run: 263 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\- . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 101379 to character
run: 264 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((101407 type) (raw))
sizeof: ((101407 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 101380 to character
run: 265 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101381 to t
run: 266 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 267 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((101408 location) (raw))
sizeof: ((101408 location) (raw))
run: #\- => ((5 location))
setm: ((5 location)) <= #\-
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 101382 to #\-
run: 268 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((4 character)))
reply: #\- => ((4 character))
setm: ((4 character)) <= #\-
setm: size of ((4 character)) is 1
setm: ((4 character)): setting 101288 to #\-
run: 269 expect-stdin 4: (((5 character)) <- ((next-input)))
arg: nil 1 (1062 #\-)
run: #\- => ((5 character))
setm: ((5 character)) <= #\-
setm: size of ((5 character)) is 1
setm: ((5 character)): setting 101289 to #\-
run: 270 expect-stdin 5: (((6 boolean)) <- ((equal)) ((4 character)) ((5 character)))
m: ((4 character))
sizeof: ((4 character))
m: ((5 character))
sizeof: ((5 character))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101290 to t
run: 271 expect-stdin 6: (((assert)) ((6 boolean)) ((expected character not found literal)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 272 read-move 7: (((4 integer)) <- ((read-file)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 273 read-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101409 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 274 read-file 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101411 to 1062
run: 275 read-file 2: (((2 tagged-value)) ((1 channel-address) (deref) (nochange)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 276 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101440 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 277 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101442 to 1062
run: 278 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 279 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101471 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 280 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1065 . nil)))
run: #(tagged record (1 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101473 to 1
setm: ((1 channel)): setting 101474 to 1
setm: ((1 channel)): setting 101475 to 1065
run: 281 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101473 integer) (raw))
sizeof: ((101473 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101476 to 1
run: 282 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101474 integer) (raw))
sizeof: ((101474 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101477 to 1
run: 283 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101478 to t
run: 284 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 101443 to t
run: 285 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 286 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 101444 to 1063
run: 287 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/read-file/read-move to sleep queue
schedule: waking up write/main
schedule: write/main
run: 288 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1356 to 1065
run: 289 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1357 to 1063
run: 290 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1068 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1068
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1358 to 1068
run: 291 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\a . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\a . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1068 to character
setm: ((8 tagged-value-address) (deref)): setting 1069 to #\a
run: 292 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 2 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 2
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 2
run: 293 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1359 to 2
run: 294 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: nil => ((10 boolean))
setm: ((10 boolean)) <= nil
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1360 to nil
run: 295 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 296 write 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 0
run: 297 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (deref) (nochange)))
reply: #(tagged record (1 0 1065 . nil)) => ((1 channel-address) (deref) (nochange))
setm: ((1 channel-address) (deref) (nochange)) <= #(tagged record (1 0 1065 . nil))
setm: size of ((1 channel-address) (deref) (nochange)) is 3
sizeof: ((1 channel-address) (deref) (nochange))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref) (nochange)): setting 1062 to 1
setm: ((1 channel-address) (deref) (nochange)): setting 1063 to 0
setm: ((1 channel-address) (deref) (nochange)): setting 1064 to 1065
run: 298 main 15: (((3 character)) <- ((copy)) ((4 literal)))
run: #\4 => ((3 character))
setm: ((3 character)) <= #\4
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 1004 to #\4
run: 299 main 16: (((4 tagged-value)) <- ((save-type)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: #(tagged record (character #\4)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\4))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 1005 to character
setm: ((4 tagged-value)): setting 1006 to #\4
run: 300 main 17: (((1 channel-address) (deref) (nochange)) <- ((write)) ((1 channel-address)) ((4 tagged-value)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 301 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1442 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 302 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character #\4 . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1444 to 1062
run: 303 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character #\4 . nil)))
run: #(tagged record (character #\4 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\4 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1445 to character
setm: ((2 tagged-value)): setting 1446 to #\4
run: 304 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 305 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1473 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 306 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1065 . nil)))
run: #(tagged record (1 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1475 to 1
setm: ((1 channel)): setting 1476 to 0
setm: ((1 channel)): setting 1477 to 1065
run: 307 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1476 integer) (raw))
sizeof: ((1476 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1478 to 0
run: 308 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1478 to 1
run: 309 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 310 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1504 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 311 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1065 . nil)))
run: #(tagged record (1 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1506 to 1
setm: ((1 channel)): setting 1507 to 0
setm: ((1 channel)): setting 1508 to 1065
run: 312 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1508 tagged-value-array-address) (raw))
sizeof: ((1508 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1509 to 1065
run: 313 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1510 to 2
run: 314 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1479 to 2
run: 315 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1480 to t
run: 316 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 317 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1475 integer) (raw))
sizeof: ((1475 integer) (raw))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1481 to 1
run: 318 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1482 to t
run: 319 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1447 to t
run: 320 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 321 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((5 integer-address))
setm: ((5 integer-address)) <= 1062
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 1448 to 1062
run: 322 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/main to sleep queue
schedule: waking up read/read-file/read-move
schedule: read/read-file/read-move
run: 323 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 101445 to 1062
run: 324 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 101446 to 1065
run: 325 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1068 tagged-value) (raw))
sizeof: ((1068 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\a . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\a . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 101447 to character
setm: ((6 tagged-value)): setting 101448 to #\a
run: 326 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 2
run: 327 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101449 to 2
run: 328 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101450 to nil
run: 329 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 330 read 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 0
run: 331 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((2 tagged-value)) ((1 channel-address) (deref) (nochange)))
reply: #(tagged record (character #\a . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\a . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 101412 to character
setm: ((2 tagged-value)): setting 101413 to #\a
reply: #(tagged record (0 0 1065 . nil)) => ((1 channel-address) (deref) (nochange))
setm: ((1 channel-address) (deref) (nochange)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel-address) (deref) (nochange)) is 3
sizeof: ((1 channel-address) (deref) (nochange))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref) (nochange)): setting 1062 to 0
setm: ((1 channel-address) (deref) (nochange)): setting 1063 to 0
setm: ((1 channel-address) (deref) (nochange)): setting 1064 to 1065
run: 332 read-file 3: (((4 character)) <- ((copy)) ((a literal)))
run: #\a => ((4 character))
setm: ((4 character)) <= #\a
setm: size of ((4 character)) is 1
setm: ((4 character)): setting 101414 to #\a
run: 333 read-file 4: (((5 integer)) <- ((character-to-integer)) ((4 character)))
m: ((4 character))
sizeof: ((4 character))
run: 97 => ((5 integer))
setm: ((5 integer)) <= 97
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101415 to 97
run: 334 read-file 5: (((6 character)) <- ((maybe-coerce)) ((2 tagged-value)) ((character literal)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 335 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101502 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 336 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 101533 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 101533
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 101504 to 101533
run: 337 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\a . nil)) character)
run: #(tagged record (character #\a . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\a . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 101533 to character
setm: ((1 tagged-value-address) (deref)): setting 101534 to #\a
run: 338 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\a . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 101505 to character
run: 339 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((101533 type) (raw))
sizeof: ((101533 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 101506 to character
run: 340 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101507 to t
run: 341 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 342 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((101534 location) (raw))
sizeof: ((101534 location) (raw))
run: #\a => ((5 location))
setm: ((5 location)) <= #\a
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 101508 to #\a
run: 343 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((6 character)))
reply: #\a => ((6 character))
setm: ((6 character)) <= #\a
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 101416 to #\a
run: 344 read-file 6: (((7 boolean)) <- ((equal)) ((6 character)) ((q literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 101417 to nil
run: 345 read-file 7: (((jump-unless)) ((7 boolean)) ((1 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 346 read-file 9: (((8 integer)) <- ((character-to-integer)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: 97 => ((8 integer))
setm: ((8 integer)) <= 97
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101418 to 97
run: 347 read-file 10: (((8 integer)) <- ((subtract)) ((8 integer)) ((5 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((8 integer))
setm: ((8 integer)) <= 0
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101418 to 0
run: 348 read-file 11: (((9 boolean)) <- ((greater-or-equal)) ((8 integer)) ((0 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101419 to t
run: 349 read-file 12: (((assert)) ((9 boolean)) ((file too low literal)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 350 read-file 13: (((10 boolean)) <- ((lesser-or-equal)) ((8 integer)) ((7 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 101420 to t
run: 351 read-file 14: (((assert)) ((10 boolean)) ((file too high literal)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 352 read-file 15: (((reply)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
reply: (((8 integer))) (((4 integer)))
reply: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101005 to 0
run: 353 read-move 8: (((5 integer)) <- ((read-rank)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 354 read-rank 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101535 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 355 read-rank 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101537 to 1062
run: 356 read-rank 2: (((2 tagged-value)) ((1 channel-address) (deref) (nochange)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 357 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101566 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 358 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101568 to 1062
run: 359 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 360 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101597 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 361 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101599 to 0
setm: ((1 channel)): setting 101600 to 0
setm: ((1 channel)): setting 101601 to 1065
run: 362 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101599 integer) (raw))
sizeof: ((101599 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101602 to 0
run: 363 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101600 integer) (raw))
sizeof: ((101600 integer) (raw))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101603 to 0
run: 364 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101604 to t
run: 365 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 101569 to t
run: 366 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 367 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 101570 to 1063
run: 368 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/read-rank/read-move to sleep queue
schedule: waking up write/main
schedule: write/main
run: 369 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1449 to 1065
run: 370 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1450 to 1063
run: 371 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1066 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1066
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1451 to 1066
run: 372 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\4 . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\4 . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1066 to character
setm: ((8 tagged-value-address) (deref)): setting 1067 to #\4
run: 373 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 1
run: 374 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1452 to 2
run: 375 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1453 to t
run: 376 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 377 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (deref) (nochange)))
reply: #(tagged record (0 1 1065 . nil)) => ((1 channel-address) (deref) (nochange))
setm: ((1 channel-address) (deref) (nochange)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel-address) (deref) (nochange)) is 3
sizeof: ((1 channel-address) (deref) (nochange))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref) (nochange)): setting 1062 to 0
setm: ((1 channel-address) (deref) (nochange)): setting 1063 to 1
setm: ((1 channel-address) (deref) (nochange)): setting 1064 to 1065
run: 378 main 18: (((3 character)) <- ((copy)) ((
 literal)))
run: #\newline => ((3 character))
setm: ((3 character)) <= #\newline
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 1004 to #\newline
run: 379 main 19: (((4 tagged-value)) <- ((save-type)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: #(tagged record (character #\newline)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\newline))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 1005 to character
setm: ((4 tagged-value)): setting 1006 to #\newline
run: 380 main 20: (((1 channel-address) (deref) (nochange)) <- ((write)) ((1 channel-address)) ((4 tagged-value)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 381 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1535 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 382 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character #\newline . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1537 to 1062
run: 383 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character #\newline . nil)))
run: #(tagged record (character #\newline . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\newline . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1538 to character
setm: ((2 tagged-value)): setting 1539 to #\newline
run: 384 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 385 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1566 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 386 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1568 to 0
setm: ((1 channel)): setting 1569 to 1
setm: ((1 channel)): setting 1570 to 1065
run: 387 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1569 integer) (raw))
sizeof: ((1569 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1571 to 1
run: 388 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1571 to 2
run: 389 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 390 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1597 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 391 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1599 to 0
setm: ((1 channel)): setting 1600 to 1
setm: ((1 channel)): setting 1601 to 1065
run: 392 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1601 tagged-value-array-address) (raw))
sizeof: ((1601 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1602 to 1065
run: 393 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1603 to 2
run: 394 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1572 to 2
run: 395 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1573 to nil
run: 396 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 397 full? 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1571 to 0
run: 398 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1568 integer) (raw))
sizeof: ((1568 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1574 to 0
run: 399 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1575 to t
run: 400 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1540 to t
run: 401 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 402 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((5 integer-address))
setm: ((5 integer-address)) <= 1062
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 1541 to 1062
run: 403 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/main to sleep queue
schedule: waking up read/read-rank/read-move
schedule: read/read-rank/read-move
run: 404 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 101571 to 1062
run: 405 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 101572 to 1065
run: 406 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1066 tagged-value) (raw))
sizeof: ((1066 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\4 . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\4 . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 101573 to character
setm: ((6 tagged-value)): setting 101574 to #\4
run: 407 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 1
run: 408 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101575 to 2
run: 409 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101576 to t
run: 410 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 411 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((2 tagged-value)) ((1 channel-address) (deref) (nochange)))
reply: #(tagged record (character #\4 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\4 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 101538 to character
setm: ((2 tagged-value)): setting 101539 to #\4
reply: #(tagged record (1 1 1065 . nil)) => ((1 channel-address) (deref) (nochange))
setm: ((1 channel-address) (deref) (nochange)) <= #(tagged record (1 1 1065 . nil))
setm: size of ((1 channel-address) (deref) (nochange)) is 3
sizeof: ((1 channel-address) (deref) (nochange))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref) (nochange)): setting 1062 to 1
setm: ((1 channel-address) (deref) (nochange)): setting 1063 to 1
setm: ((1 channel-address) (deref) (nochange)): setting 1064 to 1065
run: 412 read-rank 3: (((4 character)) <- ((maybe-coerce)) ((2 tagged-value)) ((character literal)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 413 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101628 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 414 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 101659 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 101659
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 101630 to 101659
run: 415 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\4 . nil)) character)
run: #(tagged record (character #\4 . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\4 . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 101659 to character
setm: ((1 tagged-value-address) (deref)): setting 101660 to #\4
run: 416 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\4 . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 101631 to character
run: 417 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((101659 type) (raw))
sizeof: ((101659 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 101632 to character
run: 418 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101633 to t
run: 419 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 420 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((101660 location) (raw))
sizeof: ((101660 location) (raw))
run: #\4 => ((5 location))
setm: ((5 location)) <= #\4
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 101634 to #\4
run: 421 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((4 character)))
reply: #\4 => ((4 character))
setm: ((4 character)) <= #\4
setm: size of ((4 character)) is 1
setm: ((4 character)): setting 101540 to #\4
run: 422 read-rank 4: (((5 boolean)) <- ((equal)) ((4 character)) ((q literal)))
m: ((4 character))
sizeof: ((4 character))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 101541 to nil
run: 423 read-rank 5: (((jump-unless)) ((5 boolean)) ((1 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 424 read-rank 7: (((6 integer)) <- ((character-to-integer)) ((4 character)))
m: ((4 character))
sizeof: ((4 character))
run: 52 => ((6 integer))
setm: ((6 integer)) <= 52
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 101542 to 52
run: 425 read-rank 8: (((7 character)) <- ((copy)) ((1 literal)))
run: #\1 => ((7 character))
setm: ((7 character)) <= #\1
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 101543 to #\1
run: 426 read-rank 9: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 49 => ((8 integer))
setm: ((8 integer)) <= 49
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101544 to 49
run: 427 read-rank 10: (((6 integer)) <- ((subtract)) ((6 integer)) ((8 integer)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((8 integer))
sizeof: ((8 integer))
run: 3 => ((6 integer))
setm: ((6 integer)) <= 3
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 101542 to 3
run: 428 read-rank 11: (((9 boolean)) <- ((greater-or-equal)) ((6 integer)) ((0 literal)))
m: ((6 integer))
sizeof: ((6 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101545 to t
run: 429 read-rank 12: (((assert)) ((9 boolean)) ((rank too low literal)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 430 read-rank 13: (((10 boolean)) <- ((lesser-or-equal)) ((6 integer)) ((7 literal)))
m: ((6 integer))
sizeof: ((6 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 101546 to t
run: 431 read-rank 14: (((assert)) ((10 boolean)) ((rank too high literal)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 432 read-rank 15: (((reply)) ((6 integer)))
m: ((6 integer))
sizeof: ((6 integer))
reply: (((6 integer))) (((5 integer)))
reply: 3 => ((5 integer))
setm: ((5 integer)) <= 3
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101006 to 3
run: 433 read-move 9: (((expect-stdin)) ((1 channel-address)) ((
 literal)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 434 expect-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101661 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 435 expect-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #\newline)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101663 to 1062
run: 436 expect-stdin 2: (((2 tagged-value)) ((1 channel-address) (deref) (nochange)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 437 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101692 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 438 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101694 to 1062
run: 439 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 440 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101723 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 441 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1065 . nil)))
run: #(tagged record (1 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101725 to 1
setm: ((1 channel)): setting 101726 to 1
setm: ((1 channel)): setting 101727 to 1065
run: 442 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101725 integer) (raw))
sizeof: ((101725 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101728 to 1
run: 443 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101726 integer) (raw))
sizeof: ((101726 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101729 to 1
run: 444 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101730 to t
run: 445 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 101695 to t
run: 446 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 447 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 101696 to 1063
run: 448 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/expect-stdin/read-move to sleep queue
schedule: waking up write/main
schedule: write/main
run: 449 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1542 to 1065
run: 450 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1543 to 1063
run: 451 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1068 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1068
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1544 to 1068
run: 452 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\newline . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\newline . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1068 to character
setm: ((8 tagged-value-address) (deref)): setting 1069 to #\newline
run: 453 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 2 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 2
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 2
run: 454 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1545 to 2
run: 455 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: nil => ((10 boolean))
setm: ((10 boolean)) <= nil
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1546 to nil
run: 456 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 457 write 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 0
run: 458 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (deref) (nochange)))
reply: #(tagged record (1 0 1065 . nil)) => ((1 channel-address) (deref) (nochange))
setm: ((1 channel-address) (deref) (nochange)) <= #(tagged record (1 0 1065 . nil))
setm: size of ((1 channel-address) (deref) (nochange)) is 3
sizeof: ((1 channel-address) (deref) (nochange))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref) (nochange)): setting 1062 to 1
setm: ((1 channel-address) (deref) (nochange)): setting 1063 to 0
setm: ((1 channel-address) (deref) (nochange)): setting 1064 to 1065
run: 459 main 21: (((sleep)) ((until-routine-done literal)) ((2 integer) (routine)))
m: ((2 integer) (routine))
sizeof: ((2 integer) (routine))
schedule: pushing main to sleep queue
schedule: waking up read/expect-stdin/read-move
schedule: read/expect-stdin/read-move
run: 460 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 101697 to 1062
run: 461 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 101698 to 1065
run: 462 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1068 tagged-value) (raw))
sizeof: ((1068 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\newline . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\newline . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 101699 to character
setm: ((6 tagged-value)): setting 101700 to #\newline
run: 463 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 2
run: 464 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101701 to 2
run: 465 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101702 to nil
run: 466 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 467 read 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 0
run: 468 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((2 tagged-value)) ((1 channel-address) (deref) (nochange)))
reply: #(tagged record (character #\newline . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\newline . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 101664 to character
setm: ((2 tagged-value)): setting 101665 to #\newline
reply: #(tagged record (0 0 1065 . nil)) => ((1 channel-address) (deref) (nochange))
setm: ((1 channel-address) (deref) (nochange)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel-address) (deref) (nochange)) is 3
sizeof: ((1 channel-address) (deref) (nochange))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref) (nochange)): setting 1062 to 0
setm: ((1 channel-address) (deref) (nochange)): setting 1063 to 0
setm: ((1 channel-address) (deref) (nochange)): setting 1064 to 1065
run: 469 expect-stdin 3: (((4 character)) <- ((maybe-coerce)) ((2 tagged-value)) ((character literal)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 470 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101754 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 471 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 101785 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 101785
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 101756 to 101785
run: 472 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\newline . nil)) character)
run: #(tagged record (character #\newline . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\newline . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 101785 to character
setm: ((1 tagged-value-address) (deref)): setting 101786 to #\newline
run: 473 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\newline . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 101757 to character
run: 474 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((101785 type) (raw))
sizeof: ((101785 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 101758 to character
run: 475 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101759 to t
run: 476 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 477 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((101786 location) (raw))
sizeof: ((101786 location) (raw))
run: #\newline => ((5 location))
setm: ((5 location)) <= #\newline
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 101760 to #\newline
run: 478 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((4 character)))
reply: #\newline => ((4 character))
setm: ((4 character)) <= #\newline
setm: size of ((4 character)) is 1
setm: ((4 character)): setting 101666 to #\newline
run: 479 expect-stdin 4: (((5 character)) <- ((next-input)))
arg: nil 1 (1062 #\newline)
run: #\newline => ((5 character))
setm: ((5 character)) <= #\newline
setm: size of ((5 character)) is 1
setm: ((5 character)): setting 101667 to #\newline
run: 480 expect-stdin 5: (((6 boolean)) <- ((equal)) ((4 character)) ((5 character)))
m: ((4 character))
sizeof: ((4 character))
m: ((5 character))
sizeof: ((5 character))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101668 to t
run: 481 expect-stdin 6: (((assert)) ((6 boolean)) ((expected character not found literal)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 482 read-move 10: (((6 move-address)) <- ((new)) ((move literal)))
sizeof: ((_ move))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 101787 => ((6 move-address))
setm: ((6 move-address)) <= 101787
setm: size of ((6 move-address)) is 1
setm: ((6 move-address)): setting 101007 to 101787
run: 483 read-move 11: (((7 integer-integer-pair-address)) <- ((get-address)) ((6 move-address) (deref)) ((0 offset)))
run: 101787 => ((7 integer-integer-pair-address))
setm: ((7 integer-integer-pair-address)) <= 101787
setm: size of ((7 integer-integer-pair-address)) is 1
setm: ((7 integer-integer-pair-address)): setting 101008 to 101787
run: 484 read-move 12: (((8 integer-address)) <- ((get-address)) ((7 integer-integer-pair-address) (deref)) ((0 offset)))
run: 101787 => ((8 integer-address))
setm: ((8 integer-address)) <= 101787
setm: size of ((8 integer-address)) is 1
setm: ((8 integer-address)): setting 101009 to 101787
run: 485 read-move 13: (((8 integer-address) (deref)) <- ((copy)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 0 => ((8 integer-address) (deref))
setm: ((8 integer-address) (deref)) <= 0
setm: size of ((8 integer-address) (deref)) is 1
setm: ((8 integer-address) (deref)): setting 101787 to 0
run: 486 read-move 14: (((8 integer-address)) <- ((get-address)) ((7 integer-integer-pair-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 101788 => ((8 integer-address))
setm: ((8 integer-address)) <= 101788
setm: size of ((8 integer-address)) is 1
setm: ((8 integer-address)): setting 101009 to 101788
run: 487 read-move 15: (((8 integer-address) (deref)) <- ((copy)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((8 integer-address) (deref))
setm: ((8 integer-address) (deref)) <= 1
setm: size of ((8 integer-address) (deref)) is 1
setm: ((8 integer-address) (deref)): setting 101788 to 1
run: 488 read-move 16: (((9 integer-integer-pair-address)) <- ((get-address)) ((6 move-address) (deref)) ((1 offset)))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 101789 => ((9 integer-integer-pair-address))
setm: ((9 integer-integer-pair-address)) <= 101789
setm: size of ((9 integer-integer-pair-address)) is 1
setm: ((9 integer-integer-pair-address)): setting 101010 to 101789
run: 489 read-move 17: (((8 integer-address)) <- ((get-address)) ((9 integer-integer-pair-address) (deref)) ((0 offset)))
run: 101789 => ((8 integer-address))
setm: ((8 integer-address)) <= 101789
setm: size of ((8 integer-address)) is 1
setm: ((8 integer-address)): setting 101009 to 101789
run: 490 read-move 18: (((8 integer-address) (deref)) <- ((copy)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
run: 0 => ((8 integer-address) (deref))
setm: ((8 integer-address) (deref)) <= 0
setm: size of ((8 integer-address) (deref)) is 1
setm: ((8 integer-address) (deref)): setting 101789 to 0
run: 491 read-move 19: (((8 integer-address)) <- ((get-address)) ((9 integer-integer-pair-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 101790 => ((8 integer-address))
setm: ((8 integer-address)) <= 101790
setm: size of ((8 integer-address)) is 1
setm: ((8 integer-address)): setting 101009 to 101790
run: 492 read-move 20: (((8 integer-address) (deref)) <- ((copy)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
run: 3 => ((8 integer-address) (deref))
setm: ((8 integer-address) (deref)) <= 3
setm: size of ((8 integer-address) (deref)) is 1
setm: ((8 integer-address) (deref)): setting 101790 to 3
run: 493 read-move 21: (((reply)) ((6 move-address)))
m: ((6 move-address))
sizeof: ((6 move-address))
schedule: done with routine 
schedule: waking up main
schedule: main
schedule: done with routine 
