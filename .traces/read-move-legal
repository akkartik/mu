schedule: main
run: 1 main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
sizeof: ((_ location))
run: 1000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2 main 1: (((1 channel-address) (raw)) <- ((init-channel)) ((3 literal)))
run: 3 init-channel 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4 init-channel 1: (((1 channel-address)) <- ((new)) ((channel literal)))
sizeof: ((_ channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1033 to 1062
run: 5 init-channel 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((2 integer-address))
setm: ((2 integer-address)) <= 1062
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 1034 to 1062
run: 6 init-channel 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1062 to 0
run: 7 init-channel 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 1035 to 1063
run: 8 init-channel 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1063 to 0
run: 9 init-channel 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (3)
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1036 to 3
run: 10 init-channel 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 4 => ((4 integer))
setm: ((4 integer)) <= 4
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1036 to 4
run: 11 init-channel 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1064 => ((5 tagged-value-array-address-address))
setm: ((5 tagged-value-array-address-address)) <= 1064
setm: size of ((5 tagged-value-array-address-address)) is 1
setm: ((5 tagged-value-array-address-address)): setting 1037 to 1064
run: 12 init-channel 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1065 => ((5 tagged-value-array-address-address) (deref))
setm: ((5 tagged-value-array-address-address) (deref)) <= 1065
setm: size of ((5 tagged-value-array-address-address) (deref)) is 1
setm: ((5 tagged-value-array-address-address) (deref)): setting 1064 to 1065
run: 13 init-channel 10: (((reply)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
reply: (((1 channel-address))) (((1 channel-address) (raw)))
reply: 1062 => ((1 channel-address) (raw))
setm: ((1 channel-address) (raw)) <= 1062
setm: size of ((1 channel-address) (raw)) is 1
setm: ((1 channel-address) (raw)): setting 1 to 1062
run: 14 main 2: (((1 integer) (routine)) <- ((fork-helper)) ((read-move fn)) ((nil literal) (globals)) ((nil literal) (limit)))
run: 1 => ((1 integer) (routine))
setm: ((1 integer) (routine)) <= 1
setm: size of ((1 integer) (routine)) is 1
setm: ((1 integer) (routine)): setting 1002 to 1
run: 15 main 3: (((2 character)) <- ((copy)) ((a literal)))
run: a => ((2 character))
setm: ((2 character)) <= a
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 1003 to a
run: 16 main 4: (((3 tagged-value)) <- ((save-type)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #(tagged record (character a)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character a))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 1004 to character
setm: ((3 tagged-value)): setting 1005 to a
run: 17 main 5: (((1 channel-address) (raw) (deref)) <- ((write)) ((1 channel-address) (raw)) ((3 tagged-value)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 18 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1074 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 19 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character a . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1076 to 1062
run: 20 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character a . nil)))
run: #(tagged record (character a . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1077 to character
setm: ((2 tagged-value)): setting 1078 to a
run: 21 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 22 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1105 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 23 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1107 to 0
setm: ((1 channel)): setting 1108 to 0
setm: ((1 channel)): setting 1109 to 1065
run: 24 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1110 to 0
run: 25 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1110 to 1
run: 26 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 27 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1136 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 28 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1138 to 0
setm: ((1 channel)): setting 1139 to 0
setm: ((1 channel)): setting 1140 to 1065
run: 29 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1140 tagged-value-array-address) (raw))
sizeof: ((1140 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1141 to 1065
run: 30 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1142 to 4
run: 31 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1111 to 4
run: 32 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1112 to t
run: 33 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 34 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1107 integer) (raw))
sizeof: ((1107 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1113 to 0
run: 35 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1114 to nil
run: 36 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1079 to nil
run: 37 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 38 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1081 to 1065
run: 39 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1082 to 1063
run: 40 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1066 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1066
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1083 to 1066
run: 41 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character a . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character a . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1066 to character
setm: ((8 tagged-value-address) (deref)): setting 1067 to a
run: 42 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 1
run: 43 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((9 integer))
setm: ((9 integer)) <= 4
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1084 to 4
run: 44 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1085 to t
run: 45 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 46 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (raw) (deref)))
reply: #(tagged record (0 1 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 47 main 6: (((2 character)) <- ((copy)) ((2 literal)))
run: 2 => ((2 character))
setm: ((2 character)) <= 2
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 1003 to 2
run: 48 main 7: (((3 tagged-value)) <- ((save-type)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #(tagged record (character 2)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character 2))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 1004 to character
setm: ((3 tagged-value)): setting 1005 to 2
run: 49 main 8: (((1 channel-address) (raw) (deref)) <- ((write)) ((1 channel-address) (raw)) ((3 tagged-value)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 50 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1167 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 51 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character 2 . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1169 to 1062
run: 52 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character 2 . nil)))
run: #(tagged record (character 2 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character 2 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1170 to character
setm: ((2 tagged-value)): setting 1171 to 2
run: 53 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 54 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1198 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 55 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1200 to 0
setm: ((1 channel)): setting 1201 to 1
setm: ((1 channel)): setting 1202 to 1065
run: 56 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1201 integer) (raw))
sizeof: ((1201 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1203 to 1
run: 57 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1203 to 2
run: 58 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 59 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1229 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 60 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1231 to 0
setm: ((1 channel)): setting 1232 to 1
setm: ((1 channel)): setting 1233 to 1065
run: 61 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1233 tagged-value-array-address) (raw))
sizeof: ((1233 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1234 to 1065
run: 62 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1235 to 4
run: 63 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1204 to 4
run: 64 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1205 to t
run: 65 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 66 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1200 integer) (raw))
sizeof: ((1200 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1206 to 0
run: 67 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1207 to nil
run: 68 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1172 to nil
run: 69 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 70 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1174 to 1065
run: 71 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1175 to 1063
run: 72 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1068 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1068
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1176 to 1068
run: 73 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character 2 . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character 2 . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1068 to character
setm: ((8 tagged-value-address) (deref)): setting 1069 to 2
run: 74 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 2 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 2
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 2
run: 75 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((9 integer))
setm: ((9 integer)) <= 4
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1177 to 4
run: 76 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1178 to t
run: 77 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 78 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (raw) (deref)))
reply: #(tagged record (0 2 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (0 2 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 2
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 79 main 9: (((2 character)) <- ((copy)) ((- literal)))
run: - => ((2 character))
setm: ((2 character)) <= -
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 1003 to -
run: 80 main 10: (((3 tagged-value)) <- ((save-type)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #(tagged record (character -)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character -))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 1004 to character
setm: ((3 tagged-value)): setting 1005 to -
run: 81 main 11: (((1 channel-address) (raw) (deref)) <- ((write)) ((1 channel-address) (raw)) ((3 tagged-value)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 82 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1260 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 83 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character - . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1262 to 1062
run: 84 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character - . nil)))
run: #(tagged record (character - . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character - . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1263 to character
setm: ((2 tagged-value)): setting 1264 to -
run: 85 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 86 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1291 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 87 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 2 1065 . nil)))
run: #(tagged record (0 2 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 2 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1293 to 0
setm: ((1 channel)): setting 1294 to 2
setm: ((1 channel)): setting 1295 to 1065
run: 88 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1294 integer) (raw))
sizeof: ((1294 integer) (raw))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1296 to 2
run: 89 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1296 to 3
run: 90 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 91 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1322 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 92 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 2 1065 . nil)))
run: #(tagged record (0 2 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 2 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1324 to 0
setm: ((1 channel)): setting 1325 to 2
setm: ((1 channel)): setting 1326 to 1065
run: 93 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1326 tagged-value-array-address) (raw))
sizeof: ((1326 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1327 to 1065
run: 94 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1328 to 4
run: 95 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1297 to 4
run: 96 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1298 to t
run: 97 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 98 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1293 integer) (raw))
sizeof: ((1293 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1299 to 0
run: 99 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1300 to nil
run: 100 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1265 to nil
run: 101 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 102 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1267 to 1065
run: 103 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1268 to 1063
run: 104 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1070 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1070
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1269 to 1070
run: 105 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character - . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character - . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1070 to character
setm: ((8 tagged-value-address) (deref)): setting 1071 to -
run: 106 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 3 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 3
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 3
run: 107 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((9 integer))
setm: ((9 integer)) <= 4
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1270 to 4
run: 108 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1271 to t
run: 109 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 110 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (raw) (deref)))
reply: #(tagged record (0 3 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (0 3 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 3
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 111 main 12: (((2 character)) <- ((copy)) ((a literal)))
run: a => ((2 character))
setm: ((2 character)) <= a
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 1003 to a
run: 112 main 13: (((3 tagged-value)) <- ((save-type)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #(tagged record (character a)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character a))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 1004 to character
setm: ((3 tagged-value)): setting 1005 to a
run: 113 main 14: (((1 channel-address) (raw) (deref)) <- ((write)) ((1 channel-address) (raw)) ((3 tagged-value)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 114 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1353 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 115 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character a . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1355 to 1062
run: 116 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character a . nil)))
run: #(tagged record (character a . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1356 to character
setm: ((2 tagged-value)): setting 1357 to a
run: 117 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 118 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1384 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 119 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 3 1065 . nil)))
run: #(tagged record (0 3 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 3 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1386 to 0
setm: ((1 channel)): setting 1387 to 3
setm: ((1 channel)): setting 1388 to 1065
run: 120 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1387 integer) (raw))
sizeof: ((1387 integer) (raw))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1389 to 3
run: 121 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 4 => ((4 integer))
setm: ((4 integer)) <= 4
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1389 to 4
run: 122 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 123 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1415 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 124 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 3 1065 . nil)))
run: #(tagged record (0 3 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 3 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1417 to 0
setm: ((1 channel)): setting 1418 to 3
setm: ((1 channel)): setting 1419 to 1065
run: 125 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1419 tagged-value-array-address) (raw))
sizeof: ((1419 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1420 to 1065
run: 126 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1421 to 4
run: 127 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1390 to 4
run: 128 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1391 to nil
run: 129 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 130 full? 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1389 to 0
run: 131 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1386 integer) (raw))
sizeof: ((1386 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1392 to 0
run: 132 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1393 to t
run: 133 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1358 to t
run: 134 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 135 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((5 integer-address))
setm: ((5 integer-address)) <= 1062
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 1359 to 1062
run: 136 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write to sleep queue
schedule: read-move
run: 137 read-move 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 138 read-move 1: (((1 character)) <- ((copy)) ((a literal)))
run: a => ((1 character))
setm: ((1 character)) <= a
setm: size of ((1 character)) is 1
setm: ((1 character)): setting 2002 to a
run: 139 read-move 2: (((2 integer)) <- ((character-to-integer)) ((1 character)))
m: ((1 character))
sizeof: ((1 character))
run: 97 => ((2 integer))
setm: ((2 integer)) <= 97
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 2003 to 97
run: 140 read-move 3: (((3 character)) <- ((copy)) ((1 literal)))
run: 1 => ((3 character))
setm: ((3 character)) <= 1
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 2004 to 1
run: 141 read-move 4: (((4 integer)) <- ((character-to-integer)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: 49 => ((4 integer))
setm: ((4 integer)) <= 49
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 2005 to 49
run: 142 read-move 5: (((5 tagged-value)) ((1 channel-address) (raw) (deref)) <- ((read)) ((1 channel-address) (raw)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
run: 143 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 144 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 2033 to 1062
run: 145 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 146 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2062 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 147 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 3 1065 . nil)))
run: #(tagged record (0 3 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 3 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 2064 to 0
setm: ((1 channel)): setting 2065 to 3
setm: ((1 channel)): setting 2066 to 1065
run: 148 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((2064 integer) (raw))
sizeof: ((2064 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 2067 to 0
run: 149 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((2065 integer) (raw))
sizeof: ((2065 integer) (raw))
run: 3 => ((5 integer))
setm: ((5 integer)) <= 3
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 2068 to 3
run: 150 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 2069 to nil
run: 151 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 2034 to nil
run: 152 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 153 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 2036 to 1062
run: 154 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 2037 to 1065
run: 155 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1066 tagged-value) (raw))
sizeof: ((1066 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character a . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 2038 to character
setm: ((6 tagged-value)): setting 2039 to a
run: 156 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 1
run: 157 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((8 integer))
setm: ((8 integer)) <= 4
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 2040 to 4
run: 158 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 2041 to t
run: 159 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 160 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((5 tagged-value)) ((1 channel-address) (raw) (deref)))
reply: #(tagged record (character a . nil)) => ((5 tagged-value))
setm: ((5 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((5 tagged-value)) is 2
sizeof: ((5 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((5 tagged-value)): setting 2006 to character
setm: ((5 tagged-value)): setting 2007 to a
reply: #(tagged record (1 3 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (1 3 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 3
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 161 read-move 6: (((7 character)) <- ((maybe-coerce)) ((5 tagged-value)) ((character literal)))
m: ((5 tagged-value))
sizeof: ((5 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 162 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2093 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 163 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2124 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 2124
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 2095 to 2124
run: 164 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character a . nil)) character)
run: #(tagged record (character a . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character a . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 2124 to character
setm: ((1 tagged-value-address) (deref)): setting 2125 to a
run: 165 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character a . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 2096 to character
run: 166 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((2124 type) (raw))
sizeof: ((2124 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 2097 to character
run: 167 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 2098 to t
run: 168 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 169 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2125 location) (raw))
sizeof: ((2125 location) (raw))
run: a => ((5 location))
setm: ((5 location)) <= a
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 2099 to a
run: 170 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((7 character)))
reply: a => ((7 character))
setm: ((7 character)) <= a
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 2008 to a
run: 171 read-move 7: (((print)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 172 print 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2126 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 173 print 1: (((jump-if)) ((2 channel-address) (raw)) ((1 offset)))
m: ((2 channel-address) (raw))
sizeof: ((2 channel-address) (raw))
run: 174 print 2: (((reply)))
reply: nil nil
run: 175 read-move 8: (((8 boolean)) <- ((equal)) ((7 character)) ((q literal)))
m: ((7 character))
sizeof: ((7 character))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 2009 to nil
run: 176 read-move 9: (((jump-unless)) ((8 boolean)) ((1 offset)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 177 read-move 11: (((9 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 97 => ((9 integer))
setm: ((9 integer)) <= 97
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 2010 to 97
run: 178 read-move 12: (((9 integer)) <- ((subtract)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: 0 => ((9 integer))
setm: ((9 integer)) <= 0
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 2010 to 0
run: 179 read-move 13: (((10 boolean)) <- ((greater-or-equal)) ((9 integer)) ((0 literal)))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 2011 to t
run: 180 read-move 14: (((assert)) ((10 boolean)) ((from-file too low literal)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 181 read-move 15: (((11 boolean)) <- ((lesser-or-equal)) ((9 integer)) ((7 literal)))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((11 boolean))
setm: ((11 boolean)) <= t
setm: size of ((11 boolean)) is 1
setm: ((11 boolean)): setting 2012 to t
run: 182 read-move 16: (((assert)) ((11 boolean)) ((from-file too high literal)))
m: ((11 boolean))
sizeof: ((11 boolean))
run: 183 read-move 17: (((5 tagged-value)) ((1 channel-address) (raw) (deref)) <- ((read)) ((1 channel-address) (raw)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
run: 184 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2157 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 185 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 2159 to 1062
run: 186 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 187 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2188 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 188 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 3 1065 . nil)))
run: #(tagged record (1 3 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 3 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 2190 to 1
setm: ((1 channel)): setting 2191 to 3
setm: ((1 channel)): setting 2192 to 1065
run: 189 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((2190 integer) (raw))
sizeof: ((2190 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 2193 to 1
run: 190 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((2191 integer) (raw))
sizeof: ((2191 integer) (raw))
run: 3 => ((5 integer))
setm: ((5 integer)) <= 3
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 2194 to 3
run: 191 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 2195 to nil
run: 192 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 2160 to nil
run: 193 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 194 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 2162 to 1062
run: 195 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 2163 to 1065
run: 196 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1068 tagged-value) (raw))
sizeof: ((1068 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character 2 . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character 2 . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 2164 to character
setm: ((6 tagged-value)): setting 2165 to 2
run: 197 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 2
run: 198 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((8 integer))
setm: ((8 integer)) <= 4
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 2166 to 4
run: 199 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 2167 to t
run: 200 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 201 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((5 tagged-value)) ((1 channel-address) (raw) (deref)))
reply: #(tagged record (character 2 . nil)) => ((5 tagged-value))
setm: ((5 tagged-value)) <= #(tagged record (character 2 . nil))
setm: size of ((5 tagged-value)) is 2
sizeof: ((5 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((5 tagged-value)): setting 2006 to character
setm: ((5 tagged-value)): setting 2007 to 2
reply: #(tagged record (2 3 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (2 3 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 2
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 3
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 202 read-move 18: (((7 character)) <- ((maybe-coerce)) ((5 tagged-value)) ((character literal)))
m: ((5 tagged-value))
sizeof: ((5 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 203 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2219 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 204 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2250 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 2250
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 2221 to 2250
run: 205 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character 2 . nil)) character)
run: #(tagged record (character 2 . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character 2 . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 2250 to character
setm: ((1 tagged-value-address) (deref)): setting 2251 to 2
run: 206 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character 2 . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 2222 to character
run: 207 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((2250 type) (raw))
sizeof: ((2250 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 2223 to character
run: 208 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 2224 to t
run: 209 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 210 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2251 location) (raw))
sizeof: ((2251 location) (raw))
run: 2 => ((5 location))
setm: ((5 location)) <= 2
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 2225 to 2
run: 211 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((7 character)))
reply: 2 => ((7 character))
setm: ((7 character)) <= 2
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 2008 to 2
run: 212 read-move 19: (((print)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 213 print 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2252 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 214 print 1: (((jump-if)) ((2 channel-address) (raw)) ((1 offset)))
m: ((2 channel-address) (raw))
sizeof: ((2 channel-address) (raw))
run: 215 print 2: (((reply)))
reply: nil nil
run: 216 read-move 20: (((12 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 50 => ((12 integer))
setm: ((12 integer)) <= 50
setm: size of ((12 integer)) is 1
setm: ((12 integer)): setting 2013 to 50
run: 217 read-move 21: (((12 integer)) <- ((subtract)) ((12 integer)) ((4 integer)))
m: ((12 integer))
sizeof: ((12 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((12 integer))
setm: ((12 integer)) <= 1
setm: size of ((12 integer)) is 1
setm: ((12 integer)): setting 2013 to 1
run: 218 read-move 22: (((10 boolean)) <- ((greater-or-equal)) ((12 integer)) ((0 literal)))
m: ((12 integer))
sizeof: ((12 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 2011 to t
run: 219 read-move 23: (((assert)) ((10 boolean)) ((from-rank too low literal)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 220 read-move 24: (((11 boolean)) <- ((lesser-or-equal)) ((12 integer)) ((7 literal)))
m: ((12 integer))
sizeof: ((12 integer))
run: t => ((11 boolean))
setm: ((11 boolean)) <= t
setm: size of ((11 boolean)) is 1
setm: ((11 boolean)): setting 2012 to t
run: 221 read-move 25: (((assert)) ((11 boolean)) ((from-rank too high literal)))
m: ((11 boolean))
sizeof: ((11 boolean))
run: 222 read-move 26: (((5 tagged-value)) ((1 channel-address) (raw) (deref)) <- ((read)) ((1 channel-address) (raw)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
run: 223 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2283 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 224 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 2285 to 1062
run: 225 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 226 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2314 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 227 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (2 3 1065 . nil)))
run: #(tagged record (2 3 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (2 3 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 2316 to 2
setm: ((1 channel)): setting 2317 to 3
setm: ((1 channel)): setting 2318 to 1065
run: 228 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((2316 integer) (raw))
sizeof: ((2316 integer) (raw))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 2319 to 2
run: 229 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((2317 integer) (raw))
sizeof: ((2317 integer) (raw))
run: 3 => ((5 integer))
setm: ((5 integer)) <= 3
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 2320 to 3
run: 230 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 2321 to nil
run: 231 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 2286 to nil
run: 232 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 233 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 2288 to 1062
run: 234 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 2289 to 1065
run: 235 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1070 tagged-value) (raw))
sizeof: ((1070 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character - . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character - . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 2290 to character
setm: ((6 tagged-value)): setting 2291 to -
run: 236 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 3
run: 237 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((8 integer))
setm: ((8 integer)) <= 4
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 2292 to 4
run: 238 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 2293 to t
run: 239 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 240 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((5 tagged-value)) ((1 channel-address) (raw) (deref)))
reply: #(tagged record (character - . nil)) => ((5 tagged-value))
setm: ((5 tagged-value)) <= #(tagged record (character - . nil))
setm: size of ((5 tagged-value)) is 2
sizeof: ((5 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((5 tagged-value)): setting 2006 to character
setm: ((5 tagged-value)): setting 2007 to -
reply: #(tagged record (3 3 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (3 3 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 3
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 3
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 241 read-move 27: (((7 character)) <- ((maybe-coerce)) ((5 tagged-value)) ((character literal)))
m: ((5 tagged-value))
sizeof: ((5 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 242 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2345 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 243 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2376 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 2376
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 2347 to 2376
run: 244 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character - . nil)) character)
run: #(tagged record (character - . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character - . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 2376 to character
setm: ((1 tagged-value-address) (deref)): setting 2377 to -
run: 245 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character - . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 2348 to character
run: 246 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((2376 type) (raw))
sizeof: ((2376 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 2349 to character
run: 247 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 2350 to t
run: 248 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 249 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2377 location) (raw))
sizeof: ((2377 location) (raw))
run: - => ((5 location))
setm: ((5 location)) <= -
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 2351 to -
run: 250 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((7 character)))
reply: - => ((7 character))
setm: ((7 character)) <= -
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 2008 to -
run: 251 read-move 28: (((print)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 252 print 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2378 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 253 print 1: (((jump-if)) ((2 channel-address) (raw)) ((1 offset)))
m: ((2 channel-address) (raw))
sizeof: ((2 channel-address) (raw))
run: 254 print 2: (((reply)))
reply: nil nil
run: 255 read-move 29: (((13 boolean)) <- ((equal)) ((7 character)) ((- literal)))
m: ((7 character))
sizeof: ((7 character))
run: t => ((13 boolean))
setm: ((13 boolean)) <= t
setm: size of ((13 boolean)) is 1
setm: ((13 boolean)): setting 2014 to t
run: 256 read-move 30: (((assert)) ((13 boolean)) ((expected hyphen literal)))
m: ((13 boolean))
sizeof: ((13 boolean))
run: 257 read-move 31: (((5 tagged-value)) ((1 channel-address) (raw) (deref)) <- ((read)) ((1 channel-address) (raw)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
run: 258 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2409 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 259 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 2411 to 1062
run: 260 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 261 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2440 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 262 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (3 3 1065 . nil)))
run: #(tagged record (3 3 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (3 3 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 2442 to 3
setm: ((1 channel)): setting 2443 to 3
setm: ((1 channel)): setting 2444 to 1065
run: 263 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((2442 integer) (raw))
sizeof: ((2442 integer) (raw))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 2445 to 3
run: 264 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((2443 integer) (raw))
sizeof: ((2443 integer) (raw))
run: 3 => ((5 integer))
setm: ((5 integer)) <= 3
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 2446 to 3
run: 265 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 2447 to t
run: 266 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 2412 to t
run: 267 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 268 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 2413 to 1063
run: 269 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read to sleep queue
schedule: waking up write
schedule: write
run: 270 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1360 to 1065
run: 271 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1361 to 1063
run: 272 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1072 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1072
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1362 to 1072
run: 273 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character a . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character a . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1072 to character
setm: ((8 tagged-value-address) (deref)): setting 1073 to a
run: 274 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 4 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 4
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 4
run: 275 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((9 integer))
setm: ((9 integer)) <= 4
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1363 to 4
run: 276 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: nil => ((10 boolean))
setm: ((10 boolean)) <= nil
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1364 to nil
run: 277 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 278 write 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 0
run: 279 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (raw) (deref)))
reply: #(tagged record (3 0 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (3 0 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 3
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 280 main 15: (((2 character)) <- ((copy)) ((4 literal)))
run: 4 => ((2 character))
setm: ((2 character)) <= 4
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 1003 to 4
run: 281 main 16: (((3 tagged-value)) <- ((save-type)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #(tagged record (character 4)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character 4))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 1004 to character
setm: ((3 tagged-value)): setting 1005 to 4
run: 282 main 17: (((1 channel-address) (raw) (deref)) <- ((write)) ((1 channel-address) (raw)) ((3 tagged-value)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 283 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1446 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 284 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character 4 . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1448 to 1062
run: 285 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character 4 . nil)))
run: #(tagged record (character 4 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character 4 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1449 to character
setm: ((2 tagged-value)): setting 1450 to 4
run: 286 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 287 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1477 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 288 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (3 0 1065 . nil)))
run: #(tagged record (3 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (3 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1479 to 3
setm: ((1 channel)): setting 1480 to 0
setm: ((1 channel)): setting 1481 to 1065
run: 289 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1480 integer) (raw))
sizeof: ((1480 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1482 to 0
run: 290 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1482 to 1
run: 291 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 292 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1508 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 293 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (3 0 1065 . nil)))
run: #(tagged record (3 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (3 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1510 to 3
setm: ((1 channel)): setting 1511 to 0
setm: ((1 channel)): setting 1512 to 1065
run: 294 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1512 tagged-value-array-address) (raw))
sizeof: ((1512 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1513 to 1065
run: 295 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1514 to 4
run: 296 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1483 to 4
run: 297 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1484 to t
run: 298 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 299 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1479 integer) (raw))
sizeof: ((1479 integer) (raw))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1485 to 3
run: 300 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1486 to nil
run: 301 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1451 to nil
run: 302 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 303 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1453 to 1065
run: 304 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1454 to 1063
run: 305 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1066 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1066
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1455 to 1066
run: 306 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character 4 . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character 4 . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1066 to character
setm: ((8 tagged-value-address) (deref)): setting 1067 to 4
run: 307 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 1
run: 308 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((9 integer))
setm: ((9 integer)) <= 4
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1456 to 4
run: 309 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1457 to t
run: 310 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 311 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (raw) (deref)))
reply: #(tagged record (3 1 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (3 1 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 3
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 312 main 18: (((sleep)) ((until-routine-done literal)) ((1 integer) (routine)))
m: ((1 integer) (routine))
sizeof: ((1 integer) (routine))
schedule: pushing main to sleep queue
schedule: waking up read
schedule: read
run: 313 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 2414 to 1062
run: 314 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 2415 to 1065
run: 315 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1072 tagged-value) (raw))
sizeof: ((1072 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character a . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 2416 to character
setm: ((6 tagged-value)): setting 2417 to a
run: 316 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 4
run: 317 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((8 integer))
setm: ((8 integer)) <= 4
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 2418 to 4
run: 318 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 2419 to nil
run: 319 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 320 read 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 0
run: 321 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((5 tagged-value)) ((1 channel-address) (raw) (deref)))
reply: #(tagged record (character a . nil)) => ((5 tagged-value))
setm: ((5 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((5 tagged-value)) is 2
sizeof: ((5 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((5 tagged-value)): setting 2006 to character
setm: ((5 tagged-value)): setting 2007 to a
reply: #(tagged record (0 1 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 322 read-move 32: (((7 character)) <- ((maybe-coerce)) ((5 tagged-value)) ((character literal)))
m: ((5 tagged-value))
sizeof: ((5 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 323 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2471 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 324 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2502 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 2502
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 2473 to 2502
run: 325 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character a . nil)) character)
run: #(tagged record (character a . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character a . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 2502 to character
setm: ((1 tagged-value-address) (deref)): setting 2503 to a
run: 326 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character a . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 2474 to character
run: 327 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((2502 type) (raw))
sizeof: ((2502 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 2475 to character
run: 328 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 2476 to t
run: 329 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 330 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2503 location) (raw))
sizeof: ((2503 location) (raw))
run: a => ((5 location))
setm: ((5 location)) <= a
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 2477 to a
run: 331 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((7 character)))
reply: a => ((7 character))
setm: ((7 character)) <= a
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 2008 to a
run: 332 read-move 33: (((print)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 333 print 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2504 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 334 print 1: (((jump-if)) ((2 channel-address) (raw)) ((1 offset)))
m: ((2 channel-address) (raw))
sizeof: ((2 channel-address) (raw))
run: 335 print 2: (((reply)))
reply: nil nil
run: 336 read-move 34: (((14 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 97 => ((14 integer))
setm: ((14 integer)) <= 97
setm: size of ((14 integer)) is 1
setm: ((14 integer)): setting 2015 to 97
run: 337 read-move 35: (((14 integer)) <- ((subtract)) ((14 integer)) ((2 integer)))
m: ((14 integer))
sizeof: ((14 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: 0 => ((14 integer))
setm: ((14 integer)) <= 0
setm: size of ((14 integer)) is 1
setm: ((14 integer)): setting 2015 to 0
run: 338 read-move 36: (((10 boolean)) <- ((greater-or-equal)) ((14 integer)) ((0 literal)))
m: ((14 integer))
sizeof: ((14 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 2011 to t
run: 339 read-move 37: (((assert)) ((10 boolean)) ((to-file too low literal)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 340 read-move 38: (((11 boolean)) <- ((lesser-or-equal)) ((14 integer)) ((7 literal)))
m: ((14 integer))
sizeof: ((14 integer))
run: t => ((11 boolean))
setm: ((11 boolean)) <= t
setm: size of ((11 boolean)) is 1
setm: ((11 boolean)): setting 2012 to t
run: 341 read-move 39: (((assert)) ((11 boolean)) ((to-file too high literal)))
m: ((11 boolean))
sizeof: ((11 boolean))
run: 342 read-move 40: (((5 tagged-value)) ((1 channel-address) (raw) (deref)) <- ((read)) ((1 channel-address) (raw)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
run: 343 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2535 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 344 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 2537 to 1062
run: 345 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 346 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2566 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 347 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 2568 to 0
setm: ((1 channel)): setting 2569 to 1
setm: ((1 channel)): setting 2570 to 1065
run: 348 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((2568 integer) (raw))
sizeof: ((2568 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 2571 to 0
run: 349 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((2569 integer) (raw))
sizeof: ((2569 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 2572 to 1
run: 350 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 2573 to nil
run: 351 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 2538 to nil
run: 352 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 353 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 2540 to 1062
run: 354 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 2541 to 1065
run: 355 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1066 tagged-value) (raw))
sizeof: ((1066 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character 4 . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character 4 . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 2542 to character
setm: ((6 tagged-value)): setting 2543 to 4
run: 356 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 1
run: 357 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((8 integer))
setm: ((8 integer)) <= 4
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 2544 to 4
run: 358 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 2545 to t
run: 359 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 360 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((5 tagged-value)) ((1 channel-address) (raw) (deref)))
reply: #(tagged record (character 4 . nil)) => ((5 tagged-value))
setm: ((5 tagged-value)) <= #(tagged record (character 4 . nil))
setm: size of ((5 tagged-value)) is 2
sizeof: ((5 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((5 tagged-value)): setting 2006 to character
setm: ((5 tagged-value)): setting 2007 to 4
reply: #(tagged record (1 1 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (1 1 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 361 read-move 41: (((7 character)) <- ((maybe-coerce)) ((5 tagged-value)) ((character literal)))
m: ((5 tagged-value))
sizeof: ((5 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 362 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2597 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 363 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2628 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 2628
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 2599 to 2628
run: 364 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character 4 . nil)) character)
run: #(tagged record (character 4 . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character 4 . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 2628 to character
setm: ((1 tagged-value-address) (deref)): setting 2629 to 4
run: 365 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character 4 . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 2600 to character
run: 366 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((2628 type) (raw))
sizeof: ((2628 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 2601 to character
run: 367 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 2602 to t
run: 368 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 369 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2629 location) (raw))
sizeof: ((2629 location) (raw))
run: 4 => ((5 location))
setm: ((5 location)) <= 4
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 2603 to 4
run: 370 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((7 character)))
reply: 4 => ((7 character))
setm: ((7 character)) <= 4
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 2008 to 4
run: 371 read-move 42: (((print)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 372 print 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2630 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 373 print 1: (((jump-if)) ((2 channel-address) (raw)) ((1 offset)))
m: ((2 channel-address) (raw))
sizeof: ((2 channel-address) (raw))
run: 374 print 2: (((reply)))
reply: nil nil
run: 375 read-move 43: (((15 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 52 => ((15 integer))
setm: ((15 integer)) <= 52
setm: size of ((15 integer)) is 1
setm: ((15 integer)): setting 2016 to 52
run: 376 read-move 44: (((15 integer)) <- ((subtract)) ((15 integer)) ((4 integer)))
m: ((15 integer))
sizeof: ((15 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((15 integer))
setm: ((15 integer)) <= 3
setm: size of ((15 integer)) is 1
setm: ((15 integer)): setting 2016 to 3
run: 377 read-move 45: (((10 boolean)) <- ((greater-or-equal)) ((15 integer)) ((0 literal)))
m: ((15 integer))
sizeof: ((15 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 2011 to t
run: 378 read-move 46: (((assert)) ((10 boolean)) ((to-rank too low literal)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 379 read-move 47: (((11 boolean)) <- ((lesser-or-equal)) ((15 integer)) ((7 literal)))
m: ((15 integer))
sizeof: ((15 integer))
run: t => ((11 boolean))
setm: ((11 boolean)) <= t
setm: size of ((11 boolean)) is 1
setm: ((11 boolean)): setting 2012 to t
run: 380 read-move 48: (((assert)) ((11 boolean)) ((to-rank too high literal)))
m: ((11 boolean))
sizeof: ((11 boolean))
run: 381 read-move 49: (((16 move-address)) <- ((new)) ((move literal)))
sizeof: ((_ move))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 2661 => ((16 move-address))
setm: ((16 move-address)) <= 2661
setm: size of ((16 move-address)) is 1
setm: ((16 move-address)): setting 2017 to 2661
run: 382 read-move 50: (((17 integer-integer-pair-address)) <- ((get-address)) ((16 move-address) (deref)) ((0 offset)))
run: 2661 => ((17 integer-integer-pair-address))
setm: ((17 integer-integer-pair-address)) <= 2661
setm: size of ((17 integer-integer-pair-address)) is 1
setm: ((17 integer-integer-pair-address)): setting 2018 to 2661
run: 383 read-move 51: (((18 integer-address)) <- ((get-address)) ((17 integer-integer-pair-address) (deref)) ((0 offset)))
run: 2661 => ((18 integer-address))
setm: ((18 integer-address)) <= 2661
setm: size of ((18 integer-address)) is 1
setm: ((18 integer-address)): setting 2019 to 2661
run: 384 read-move 52: (((18 integer-address) (deref)) <- ((copy)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
run: 0 => ((18 integer-address) (deref))
setm: ((18 integer-address) (deref)) <= 0
setm: size of ((18 integer-address) (deref)) is 1
setm: ((18 integer-address) (deref)): setting 2661 to 0
run: 385 read-move 53: (((18 integer-address)) <- ((get-address)) ((17 integer-integer-pair-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 2662 => ((18 integer-address))
setm: ((18 integer-address)) <= 2662
setm: size of ((18 integer-address)) is 1
setm: ((18 integer-address)): setting 2019 to 2662
run: 386 read-move 54: (((18 integer-address) (deref)) <- ((copy)) ((12 integer)))
m: ((12 integer))
sizeof: ((12 integer))
run: 1 => ((18 integer-address) (deref))
setm: ((18 integer-address) (deref)) <= 1
setm: size of ((18 integer-address) (deref)) is 1
setm: ((18 integer-address) (deref)): setting 2662 to 1
run: 387 read-move 55: (((19 integer-integer-pair-address)) <- ((get-address)) ((16 move-address) (deref)) ((1 offset)))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 2663 => ((19 integer-integer-pair-address))
setm: ((19 integer-integer-pair-address)) <= 2663
setm: size of ((19 integer-integer-pair-address)) is 1
setm: ((19 integer-integer-pair-address)): setting 2020 to 2663
run: 388 read-move 56: (((18 integer-address)) <- ((get-address)) ((19 integer-integer-pair-address) (deref)) ((0 offset)))
run: 2663 => ((18 integer-address))
setm: ((18 integer-address)) <= 2663
setm: size of ((18 integer-address)) is 1
setm: ((18 integer-address)): setting 2019 to 2663
run: 389 read-move 57: (((18 integer-address) (deref)) <- ((copy)) ((14 integer)))
m: ((14 integer))
sizeof: ((14 integer))
run: 0 => ((18 integer-address) (deref))
setm: ((18 integer-address) (deref)) <= 0
setm: size of ((18 integer-address) (deref)) is 1
setm: ((18 integer-address) (deref)): setting 2663 to 0
run: 390 read-move 58: (((18 integer-address)) <- ((get-address)) ((19 integer-integer-pair-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 2664 => ((18 integer-address))
setm: ((18 integer-address)) <= 2664
setm: size of ((18 integer-address)) is 1
setm: ((18 integer-address)): setting 2019 to 2664
run: 391 read-move 59: (((18 integer-address) (deref)) <- ((copy)) ((15 integer)))
m: ((15 integer))
sizeof: ((15 integer))
run: 3 => ((18 integer-address) (deref))
setm: ((18 integer-address) (deref)) <= 3
setm: size of ((18 integer-address) (deref)) is 1
setm: ((18 integer-address) (deref)): setting 2664 to 3
run: 392 read-move 60: (((reply)) ((16 move-address)))
m: ((16 move-address))
sizeof: ((16 move-address))
schedule: done with routine
schedule: waking up main
schedule: main
schedule: done with routine
