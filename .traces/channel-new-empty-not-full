schedule: main
run: -- nil
run: 1 main 0: (((1 channel-address)) <- ((init-channel)) ((3 literal)))
run: -- nil
run: 2 init-channel 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 1000 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: -- ((1000 30))
run: 3 init-channel 1: (((1 channel-address)) <- ((new)) ((channel literal)))
sizeof: ((_ channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1031 => ((1 channel-address))
setm: ((1 channel-address)) <= 1031
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1001 to 1031
run: -- ((1000 30) (1001 1031))
run: 4 init-channel 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1031 => ((2 integer-address))
setm: ((2 integer-address)) <= 1031
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 1002 to 1031
run: -- ((1000 30) (1001 1031) (1002 1031))
run: 5 init-channel 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1031 to 0
run: -- ((1000 30) (1001 1031) (1002 1031) (1031 0))
run: 6 init-channel 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1032 => ((3 integer-address))
setm: ((3 integer-address)) <= 1032
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 1003 to 1032
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1031 0))
run: 7 init-channel 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1032 to 0
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1031 0) (1032 0))
run: 8 init-channel 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (3)
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1004 to 3
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 3) (1031 0) (1032 0))
run: 9 init-channel 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
add: 3 1
m: ((4 integer))
sizeof: ((4 integer))
run: 4 => ((4 integer))
setm: ((4 integer)) <= 4
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1004 to 4
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1031 0) (1032 0))
run: 10 init-channel 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1033 => ((5 tagged-value-array-address-address))
setm: ((5 tagged-value-array-address-address)) <= 1033
setm: size of ((5 tagged-value-array-address-address)) is 1
setm: ((5 tagged-value-array-address-address)): setting 1005 to 1033
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0))
run: 11 init-channel 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1034 => ((5 tagged-value-array-address-address) (deref))
setm: ((5 tagged-value-array-address-address) (deref)) <= 1034
setm: size of ((5 tagged-value-array-address-address) (deref)) is 1
setm: ((5 tagged-value-array-address-address) (deref)): setting 1033 to 1034
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4))
run: 12 init-channel 10: (((reply)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
reply: (((1 channel-address))) (((1 channel-address)))
reply: 1031 => ((1 channel-address))
setm: ((1 channel-address)) <= 1031
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1 to 1031
run: -- ((1 1031) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4))
run: 13 main 1: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: -- ((1 1031) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4))
run: 14 empty? 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 1043 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: -- ((1 1031) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30))
run: 15 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1034 . nil)))
run: #(tagged record (0 0 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1044 to 0
setm: ((1 channel)): setting 1045 to 0
setm: ((1 channel)): setting 1046 to 1034
run: -- ((1 1031) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034))
run: 16 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1044 integer) (raw))
sizeof: ((1044 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1047 to 0
run: -- ((1 1031) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0))
run: 17 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1045 integer) (raw))
sizeof: ((1045 integer) (raw))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1048 to 0
run: -- ((1 1031) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0))
run: 18 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1049 to t
run: -- ((1 1031) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t))
run: 19 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 2 to t
run: -- ((1 1031) (2 t) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t))
run: 20 main 2: (((3 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: -- ((1 1031) (2 t) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t))
run: 21 full? 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 1074 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: -- ((1 1031) (2 t) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t) (1074 30))
run: 22 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1034 . nil)))
run: #(tagged record (0 0 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1075 to 0
setm: ((1 channel)): setting 1076 to 0
setm: ((1 channel)): setting 1077 to 1034
run: -- ((1 1031) (2 t) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t) (1074 30) (1075 0) (1076 0) (1077 1034))
run: 23 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1076 integer) (raw))
sizeof: ((1076 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1078 to 0
run: -- ((1 1031) (2 t) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t) (1074 30) (1075 0) (1076 0) (1077 1034) (1078 0))
run: 24 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
add: 0 1
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1078 to 1
run: -- ((1 1031) (2 t) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t) (1074 30) (1075 0) (1076 0) (1077 1034) (1078 1))
run: 25 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: -- ((1 1031) (2 t) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t) (1074 30) (1075 0) (1076 0) (1077 1034) (1078 1))
run: 26 capacity 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 1105 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: -- ((1 1031) (2 t) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t) (1074 30) (1075 0) (1076 0) (1077 1034) (1078 1) (1105 30))
run: 27 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1034 . nil)))
run: #(tagged record (0 0 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1106 to 0
setm: ((1 channel)): setting 1107 to 0
setm: ((1 channel)): setting 1108 to 1034
run: -- ((1 1031) (2 t) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t) (1074 30) (1075 0) (1076 0) (1077 1034) (1078 1) (1105 30) (1106 0) (1107 0) (1108 1034))
run: 28 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1108 tagged-value-array-address) (raw))
sizeof: ((1108 tagged-value-array-address) (raw))
run: 1034 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1034
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1109 to 1034
run: -- ((1 1031) (2 t) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t) (1074 30) (1075 0) (1076 0) (1077 1034) (1078 1) (1105 30) (1106 0) (1107 0) (1108 1034) (1109 1034))
run: 29 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1110 to 4
run: -- ((1 1031) (2 t) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t) (1074 30) (1075 0) (1076 0) (1077 1034) (1078 1) (1105 30) (1106 0) (1107 0) (1108 1034) (1109 1034) (1110 4))
run: 30 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1079 to 4
run: -- ((1 1031) (2 t) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t) (1074 30) (1075 0) (1076 0) (1077 1034) (1078 1) (1079 4) (1105 30) (1106 0) (1107 0) (1108 1034) (1109 1034) (1110 4))
run: 31 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1080 to t
run: -- ((1 1031) (2 t) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t) (1074 30) (1075 0) (1076 0) (1077 1034) (1078 1) (1079 4) (1080 t) (1105 30) (1106 0) (1107 0) (1108 1034) (1109 1034) (1110 4))
run: 32 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
jump: checking that t is t
jump: jumping to 8
run: -- ((1 1031) (2 t) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t) (1074 30) (1075 0) (1076 0) (1077 1034) (1078 1) (1079 4) (1080 t) (1105 30) (1106 0) (1107 0) (1108 1034) (1109 1034) (1110 4))
run: 33 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1075 integer) (raw))
sizeof: ((1075 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1081 to 0
run: -- ((1 1031) (2 t) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t) (1074 30) (1075 0) (1076 0) (1077 1034) (1078 1) (1079 4) (1080 t) (1081 0) (1105 30) (1106 0) (1107 0) (1108 1034) (1109 1034) (1110 4))
run: 34 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1082 to nil
run: -- ((1 1031) (2 t) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 30) (1044 0) (1045 0) (1046 1034) (1047 0) (1048 0) (1049 t) (1074 30) (1075 0) (1076 0) (1077 1034) (1078 1) (1079 4) (1080 t) (1081 0) (1105 30) (1106 0) (1107 0) (1108 1034) (1109 1034) (1110 4))
run: 35 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 3 to nil
schedule: done with routine
