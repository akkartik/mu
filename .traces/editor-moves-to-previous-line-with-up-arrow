 102 run: assume-console [
    left-click 2, 1
    press up-arrow
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": "literal"}
9993 parse:   ingredient: {"1": "literal"}
9992 load: after rewriting: left-click 2, 1
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"up-arrow": <>}
9992 load: after rewriting: press up-arrow
9999 mem: storing 'left-click' event starting at 1321
9999 mem: storing 'press' event starting at 1325
9999 mem: storing console in 1329
9999 mem: storing console data in 1331
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1001
9991 transform: --- type-check 'call' instructions inside recipe run1001
9991 transform: --- type-check calls inside recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1329
9999 mem: location 2 is 1154
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1332
9999 mem: storing 14 in location 1333
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1335
9999 mem: incrementing refcount of 1012: 77 -> 78
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1329 in location 1336
9999 mem: incrementing refcount of 1329: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1337
9999 mem: incrementing refcount of 1154: 6 -> 7
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1338
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1339
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1335 is 1012
9999 mem: location 1338 is 1
9999 mem: location 1339 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 78 -> 79
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1257
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 105 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 105 run: *row <- copy new-row
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 105 run: *column <- copy new-column
9999 mem: location 1258 is 0
9999 mem: location 1260 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 79 -> 78
9999 mem: storing 1012 in location 1335
9999 mem: incrementing refcount of 1012: 78 -> 79
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1336 is 1329
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1329 in location 1291
9999 mem: incrementing refcount of 1329: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1291 is 1329
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1291 is 1329
9999 mem: skipping refcount at 1329
9999 mem: location 1330 is 0
9999 mem: location 1331 is 1319
9999 mem: location 1291 is 1329
9999 mem: skipping refcount at 1329
9998 run: address to copy is 1330
9999 mem: storing 1330 in location 1292
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1291 is 1329
9999 mem: skipping refcount at 1329
9999 mem: location 1330 is 0
9999 mem: location 1331 is 1319
9999 mem: location 1291 is 1329
9999 mem: skipping refcount at 1329
9998 run: address to copy is 1331
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1331 is 1319
9999 mem: storing 1319 in location 1293
9999 mem: incrementing refcount of 1319: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1293 is 1319
9999 mem: skipping refcount at 1319
9999 mem: storing 2 in location 1294
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1292 is 1330
9999 mem: location 1330 is 0
9999 mem: location 1294 is 2
9999 mem: storing 0 in location 1295
 105 run: jump-unless done?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1293 is 1319
9999 mem: skipping refcount at 1319
9998 run: base address is 1320
9999 mem: location 1292 is 1330
9999 mem: location 1330 is 0
9998 run: address to copy is 1321
9998 run: its type is event
9999 mem: location 1321 is 2
9999 mem: location 1322 is 65513
9999 mem: location 1323 is 2
9999 mem: location 1324 is 1
9999 mem: storing 2 in location 1297
9999 mem: storing 65513 in location 1298
9999 mem: storing 2 in location 1299
9999 mem: storing 1 in location 1300
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1292 is 1330
9999 mem: location 1330 is 0
9999 mem: location 1292 is 1330
9999 mem: storing 1 in location 1330
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1297 is 2
9999 mem: location 1298 is 65513
9999 mem: location 1299 is 2
9999 mem: location 1300 is 1
9999 mem: location 1291 is 1329
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 1]
9998 run: result 1 is 1329
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1340
9999 mem: storing 65513 in location 1341
9999 mem: storing 2 in location 1342
9999 mem: storing 1 in location 1343
9999 mem: decrementing refcount of 1329: 2 -> 1
9999 mem: storing 1329 in location 1336
9999 mem: incrementing refcount of 1329: 1 -> 2
9999 mem: storing 1 in location 1344
9999 mem: storing 0 in location 1345
 104 run: jump-unless found?, 
9999 mem: location 1344 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1345 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1340 is 2
9999 mem: location 1341 is 65513
9999 mem: location 1342 is 2
9999 mem: location 1343 is 1
9999 mem: storing 1341 in location 1346
 104 run: jump-unless t, 
9999 mem: location 1346 is 1341
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1335 is 1012
9999 mem: location 1337 is 1154
9999 mem: location 1346 is 1341
9999 mem: location 1341 is 65513
9999 mem: location 1342 is 2
9999 mem: location 1343 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1348
9999 mem: storing 27 in location 1349
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1351
9999 mem: incrementing refcount of 1012: 79 -> 80
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1352
9999 mem: incrementing refcount of 1154: 7 -> 8
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1353
9999 mem: storing 2 in location 1354
9999 mem: storing 1 in location 1355
 105 run: jump-if editor, 1:offset
9999 mem: location 1352 is 1154
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1353 is 65513
9999 mem: location 1354 is 2
9999 mem: location 1355 is 1
9998 run: address to copy is 1354
9998 run: its type is number
9999 mem: location 1354 is 2
9999 mem: storing 2 in location 1356
 105 run: jump-if click-row, 1:offset
9999 mem: location 1356 is 2
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1353 is 65513
9999 mem: location 1354 is 2
9999 mem: location 1355 is 1
9998 run: address to copy is 1355
9998 run: its type is number
9999 mem: location 1355 is 1
9999 mem: storing 1 in location 1357
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1352 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1352 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1358
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1357 is 1
9999 mem: location 1358 is 0
9999 mem: storing 0 in location 1359
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1359 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1352 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1352 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1360
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1357 is 1
9999 mem: location 1360 is 9
9999 mem: storing 0 in location 1361
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1361 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1352 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1352 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1362
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1352 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1352 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1363
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1352 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1352 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1364
9999 mem: incrementing refcount of 1176: 11 -> 12
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1351 is 1012
9999 mem: location 1352 is 1154
9999 mem: location 1356 is 2
9999 mem: location 1357 is 1
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1377
9999 mem: storing 26 in location 1378
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1380
9999 mem: incrementing refcount of 1012: 80 -> 81
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1381
9999 mem: incrementing refcount of 1154: 8 -> 9
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1382
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1383
 106 run: jump-if editor, 1:offset
9999 mem: location 1381 is 1154
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1381 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1381 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1384
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1381 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1381 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1385
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1380 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1197
9999 mem: incrementing refcount of 1012: 81 -> 82
 107 run: jump-unless screen, 
9999 mem: location 1197 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1198
 107 run: reply height:number
9999 mem: location 1198 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1386
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1381 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1381 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1387
9999 mem: incrementing refcount of 1176: 12 -> 13
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1387 is 1176
9999 mem: storing 1176 in location 1388
9999 mem: incrementing refcount of 1176: 13 -> 14
 106 run: curr <- next_2 curr
9999 mem: location 1387 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1197
9999 mem: incrementing refcount of 1176: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1190
9999 mem: location 1179 is 0
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1178 is 1190
9999 mem: storing 1190 in location 1198
9999 mem: incrementing refcount of 1190: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1176: 15 -> 14
9999 mem: storing 1190 in location 1387
9999 mem: incrementing refcount of 1190: 15 -> 16
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1389
 106 run: column:number <- copy left
9999 mem: location 1384 is 0
9999 mem: storing 0 in location 1390
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1381 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1381 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1391
 106 run: *cursor-row <- copy target-row
9999 mem: location 1382 is 2
9999 mem: location 1391 is 1162
9999 mem: storing 2 in location 1162
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1381 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1381 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1392
 106 run: *cursor-column <- copy target-column
9999 mem: location 1383 is 1
9999 mem: location 1392 is 1163
9999 mem: storing 1 in location 1163
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1381 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1381 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1393
 106 run: jump-unless curr, 
9999 mem: location 1387 is 1190
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1389 is 1
9999 mem: location 1386 is 5
9999 mem: storing 0 in location 1394
 106 run: jump-if off-screen?, 
9999 mem: location 1394 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1389 is 1
9999 mem: location 1391 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 0 in location 1395
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1395 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1387 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 97
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1387 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1191
9998 run: its type is character
9999 mem: location 1191 is 97
9999 mem: storing 97 in location 1397
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1397 is 97
9999 mem: storing 0 in location 1398
 106 run: jump-unless newline?, 
9999 mem: location 1398 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1390 is 0
9999 mem: location 1385 is 9
9999 mem: storing 0 in location 1400
 106 run: jump-unless at-right?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1387 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1197
9999 mem: incrementing refcount of 1190: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1190
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 97
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1199
9999 mem: storing 1199 in location 1198
9999 mem: incrementing refcount of 1199: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1190: 17 -> 16
9999 mem: storing 1199 in location 1387
9999 mem: incrementing refcount of 1199: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1388 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1197
9999 mem: incrementing refcount of 1176: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1190
9999 mem: location 1179 is 0
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1178 is 1190
9999 mem: storing 1190 in location 1198
9999 mem: incrementing refcount of 1190: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1176: 15 -> 14
9999 mem: storing 1190 in location 1388
9999 mem: incrementing refcount of 1190: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1387 is 1199
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1389 is 1
9999 mem: location 1386 is 5
9999 mem: storing 0 in location 1394
 106 run: jump-if off-screen?, 
9999 mem: location 1394 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1389 is 1
9999 mem: location 1391 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 0 in location 1395
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1395 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1387 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 98
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1387 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is character
9999 mem: location 1200 is 98
9999 mem: storing 98 in location 1397
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1397 is 98
9999 mem: storing 0 in location 1398
 106 run: jump-unless newline?, 
9999 mem: location 1398 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1390 is 1
9999 mem: location 1385 is 9
9999 mem: storing 0 in location 1400
 106 run: jump-unless at-right?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1387 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1197
9999 mem: incrementing refcount of 1199: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1199
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 98
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1198
9999 mem: incrementing refcount of 1203: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 17 -> 16
9999 mem: storing 1203 in location 1387
9999 mem: incrementing refcount of 1203: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1388 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1197
9999 mem: incrementing refcount of 1190: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1190
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 97
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1199
9999 mem: storing 1199 in location 1198
9999 mem: incrementing refcount of 1199: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1190: 19 -> 18
9999 mem: storing 1199 in location 1388
9999 mem: incrementing refcount of 1199: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1387 is 1203
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1389 is 1
9999 mem: location 1386 is 5
9999 mem: storing 0 in location 1394
 106 run: jump-if off-screen?, 
9999 mem: location 1394 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1389 is 1
9999 mem: location 1391 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 0 in location 1395
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1395 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1387 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 99
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1387 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 99
9999 mem: storing 99 in location 1397
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1397 is 99
9999 mem: storing 0 in location 1398
 106 run: jump-unless newline?, 
9999 mem: location 1398 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1390 is 2
9999 mem: location 1385 is 9
9999 mem: storing 0 in location 1400
 106 run: jump-unless at-right?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1387 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1197
9999 mem: incrementing refcount of 1203: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 99
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 17 -> 16
9999 mem: storing 1207 in location 1387
9999 mem: incrementing refcount of 1207: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1388 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1197
9999 mem: incrementing refcount of 1199: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1199
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 98
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1198
9999 mem: incrementing refcount of 1203: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 19 -> 18
9999 mem: storing 1203 in location 1388
9999 mem: incrementing refcount of 1203: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1387 is 1207
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1389 is 1
9999 mem: location 1386 is 5
9999 mem: storing 0 in location 1394
 106 run: jump-if off-screen?, 
9999 mem: location 1394 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1389 is 1
9999 mem: location 1391 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 0 in location 1395
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1395 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1387 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1387 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 10
9999 mem: storing 10 in location 1397
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1397 is 10
9999 mem: storing 1 in location 1398
 106 run: jump-unless newline?, 
9999 mem: location 1398 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1389 is 1
9999 mem: location 1391 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 0 in location 1395
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1395 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1389 is 1
9999 mem: storing 2 in location 1389
 106 run: column <- copy left
9999 mem: location 1384 is 0
9999 mem: storing 0 in location 1390
 106 run: curr <- next_2 curr
9999 mem: location 1387 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1197
9999 mem: incrementing refcount of 1207: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1198
9999 mem: incrementing refcount of 1211: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 17 -> 16
9999 mem: storing 1211 in location 1387
9999 mem: incrementing refcount of 1211: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1388 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1197
9999 mem: incrementing refcount of 1203: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 99
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 19 -> 18
9999 mem: storing 1207 in location 1388
9999 mem: incrementing refcount of 1207: 17 -> 18
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1387 is 1211
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1389 is 2
9999 mem: location 1386 is 5
9999 mem: storing 0 in location 1394
 106 run: jump-if off-screen?, 
9999 mem: location 1394 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1389 is 2
9999 mem: location 1391 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 1 in location 1395
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1395 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1390 is 0
9999 mem: location 1392 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 0 in location 1396
 106 run: jump-unless at-cursor?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1387 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 100
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1387 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 100
9999 mem: storing 100 in location 1397
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1397 is 100
9999 mem: storing 0 in location 1398
 106 run: jump-unless newline?, 
9999 mem: location 1398 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1390 is 0
9999 mem: location 1385 is 9
9999 mem: storing 0 in location 1400
 106 run: jump-unless at-right?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1387 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1197
9999 mem: incrementing refcount of 1211: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 100
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1198
9999 mem: incrementing refcount of 1215: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 17 -> 16
9999 mem: storing 1215 in location 1387
9999 mem: incrementing refcount of 1215: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1388 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1197
9999 mem: incrementing refcount of 1207: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1198
9999 mem: incrementing refcount of 1211: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 19 -> 18
9999 mem: storing 1211 in location 1388
9999 mem: incrementing refcount of 1211: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1387 is 1215
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1389 is 2
9999 mem: location 1386 is 5
9999 mem: storing 0 in location 1394
 106 run: jump-if off-screen?, 
9999 mem: location 1394 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1389 is 2
9999 mem: location 1391 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 1 in location 1395
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1395 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1390 is 1
9999 mem: location 1392 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1396
 106 run: jump-unless at-cursor?, 
9999 mem: location 1396 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1388 is 1211
9999 mem: location 1393 is 1158
9999 mem: decrementing refcount of 1176: 14 -> 13
9999 mem: storing 1211 in location 1158
9999 mem: incrementing refcount of 1211: 18 -> 19
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1387 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 101
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1387 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 101
9999 mem: storing 101 in location 1397
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1397 is 101
9999 mem: storing 0 in location 1398
 106 run: jump-unless newline?, 
9999 mem: location 1398 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1390 is 1
9999 mem: location 1385 is 9
9999 mem: storing 0 in location 1400
 106 run: jump-unless at-right?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1387 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1197
9999 mem: incrementing refcount of 1215: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1215
9998 run: jumping to instruction 4
9990 schedule: next_2/snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-moves-to-previous-line-with-up-arrow
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 101
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1198
9999 mem: incrementing refcount of 1219: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 17 -> 16
9999 mem: storing 1219 in location 1387
9999 mem: incrementing refcount of 1219: 13 -> 14
 106 run: prev <- next_2 prev
9999 mem: location 1388 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1197
9999 mem: incrementing refcount of 1211: 19 -> 20
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 100
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1198
9999 mem: incrementing refcount of 1215: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 20 -> 19
9999 mem: storing 1215 in location 1388
9999 mem: incrementing refcount of 1215: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1387 is 1219
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1389 is 2
9999 mem: location 1386 is 5
9999 mem: storing 0 in location 1394
 106 run: jump-if off-screen?, 
9999 mem: location 1394 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1389 is 2
9999 mem: location 1391 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 1 in location 1395
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1395 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1390 is 2
9999 mem: location 1392 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 0 in location 1396
 106 run: jump-unless at-cursor?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1387 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 102
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1387 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is character
9999 mem: location 1220 is 102
9999 mem: storing 102 in location 1397
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1397 is 102
9999 mem: storing 0 in location 1398
 106 run: jump-unless newline?, 
9999 mem: location 1398 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1390 is 2
9999 mem: location 1385 is 9
9999 mem: storing 0 in location 1400
 106 run: jump-unless at-right?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1387 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1197
9999 mem: incrementing refcount of 1219: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 102
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1197 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 0
9999 mem: storing 0 in location 1198
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1219: 15 -> 14
9999 mem: storing 0 in location 1387
 106 run: prev <- next_2 prev
9999 mem: location 1388 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1197
9999 mem: incrementing refcount of 1215: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1215
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 101
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1198
9999 mem: incrementing refcount of 1219: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 19 -> 18
9999 mem: storing 1219 in location 1388
9999 mem: incrementing refcount of 1219: 15 -> 16
 106 run: column <- add column, 1
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1387 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1389 is 2
9999 mem: location 1391 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 1 in location 1395
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1390 is 3
9999 mem: location 1392 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 0 in location 1401
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1395 is 1
9999 mem: location 1401 is 0
9999 mem: storing 0 in location 1402
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1389 is 2
9999 mem: location 1391 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 0 in location 1403
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1402 is 0
9999 mem: location 1403 is 0
9999 mem: storing 0 in location 1404
 106 run: jump-unless before-cursor?, 
9999 mem: location 1404 is 0
9998 run: jumping to instruction 72
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1381 is 1154
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9999 mem: decrementing refcount of 1154: 9 -> 8
9999 mem: storing 1154 in location 1352
9999 mem: incrementing refcount of 1154: 8 -> 9
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1365
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1352 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1352 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1366
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1352 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1352 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1367
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1352 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1352 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1368
9999 mem: incrementing refcount of 1176: 13 -> 14
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1365 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1000 in location 1370
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1362 is 1
9999 mem: location 1363 is 0
9999 mem: location 1364 is 1176
9999 mem: location 1366 is 2
9999 mem: location 1367 is 1
9999 mem: location 1368 is 1176
9999 mem: location 1365 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1176 in location 1004
9999 mem: storing 2 in location 1005
9999 mem: storing 1 in location 1006
9999 mem: storing 1176 in location 1007
9999 mem: storing 0 in location 1008
 105 run: editor <- add-operation editor, op
9999 mem: location 1352 is 1154
9999 mem: location 1370 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1405
9999 mem: storing 5 in location 1406
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1408
9999 mem: incrementing refcount of 1154: 9 -> 10
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1409
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1408 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1408 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1410
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1409 is 1000
9999 mem: location 1410 is 1165
9999 mem: location 1165 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1256
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1257
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1412
9999 mem: storing 1412 in location 1258
9999 mem: incrementing refcount of 1412: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1258 is 1412
9999 mem: skipping refcount at 1412
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1413 is 0
9999 mem: location 1414 is 0
9999 mem: location 1258 is 1412
9999 mem: skipping refcount at 1412
9998 run: address to copy is 1413
9999 mem: storing 1413 in location 1259
 107 run: *val <- copy x
9999 mem: location 1256 is 1000
9999 mem: location 1259 is 1413
9999 mem: storing 1000 in location 1413
9999 mem: incrementing refcount of 1000: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1258 is 1412
9999 mem: skipping refcount at 1412
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1413 is 1000
9999 mem: location 1414 is 0
9999 mem: location 1258 is 1412
9999 mem: skipping refcount at 1412
9999 type: type deduced to be address$
9998 run: address to copy is 1414
9999 mem: storing 1414 in location 1260
 107 run: *next <- copy in
9999 mem: location 1257 is 0
9999 mem: location 1260 is 1414
9999 mem: storing 0 in location 1414
 107 run: reply result
9999 mem: location 1258 is 1412
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1412
9999 mem: location 1410 is 1165
9999 mem: storing 1412 in location 1165
9999 mem: incrementing refcount of 1412: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1408 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1408 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1411
 106 run: *redo <- copy 0
9999 mem: location 1411 is 1166
9999 mem: storing 0 in location 1166
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1408 is 1154
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9999 mem: decrementing refcount of 1154: 10 -> 9
9999 mem: storing 1154 in location 1352
9999 mem: incrementing refcount of 1154: 9 -> 10
 105 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1338
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1339
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1335 is 1012
9999 mem: location 1338 is 2
9999 mem: location 1339 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 82 -> 83
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1257
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1258
 105 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 105 run: *row <- copy new-row
9999 mem: location 1257 is 2
9999 mem: location 1259 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 105 run: *column <- copy new-column
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 83 -> 82
9999 mem: storing 1012 in location 1335
9999 mem: incrementing refcount of 1012: 82 -> 83
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1336 is 1329
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1329 in location 1291
9999 mem: incrementing refcount of 1329: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1291 is 1329
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1291 is 1329
9999 mem: skipping refcount at 1329
9999 mem: location 1330 is 1
9999 mem: location 1331 is 1319
9999 mem: location 1291 is 1329
9999 mem: skipping refcount at 1329
9998 run: address to copy is 1330
9999 mem: storing 1330 in location 1292
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1291 is 1329
9999 mem: skipping refcount at 1329
9999 mem: location 1330 is 1
9999 mem: location 1331 is 1319
9999 mem: location 1291 is 1329
9999 mem: skipping refcount at 1329
9998 run: address to copy is 1331
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1331 is 1319
9999 mem: storing 1319 in location 1293
9999 mem: incrementing refcount of 1319: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1293 is 1319
9999 mem: skipping refcount at 1319
9999 mem: storing 2 in location 1294
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1292 is 1330
9999 mem: location 1330 is 1
9999 mem: location 1294 is 2
9999 mem: storing 0 in location 1295
 105 run: jump-unless done?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1293 is 1319
9999 mem: skipping refcount at 1319
9998 run: base address is 1320
9999 mem: location 1292 is 1330
9999 mem: location 1330 is 1
9998 run: address to copy is 1325
9998 run: its type is event
9999 mem: location 1325 is 1
9999 mem: location 1326 is 65517
9999 mem: location 1327 is 0
9999 mem: location 1328 is 0
9999 mem: storing 1 in location 1297
9999 mem: storing 65517 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1292 is 1330
9999 mem: location 1330 is 1
9999 mem: location 1292 is 1330
9999 mem: storing 2 in location 1330
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1297 is 1
9999 mem: location 1298 is 65517
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 mem: location 1291 is 1329
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65517, 0, 0]
9998 run: result 1 is 1329
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1340
9999 mem: storing 65517 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: decrementing refcount of 1329: 3 -> 2
9999 mem: storing 1329 in location 1336
9999 mem: incrementing refcount of 1329: 2 -> 3
9999 mem: storing 1 in location 1344
9999 mem: storing 0 in location 1345
 104 run: jump-unless found?, 
9999 mem: location 1344 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1345 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1340 is 1
9999 mem: location 1341 is 65517
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1346
 104 run: jump-unless t, 
9999 mem: location 1346 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1335 is 1012
9999 mem: location 1337 is 1154
9999 mem: location 1340 is 1
9999 mem: location 1341 is 65517
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1415
9999 mem: storing 85 in location 1416
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1418
9999 mem: incrementing refcount of 1012: 83 -> 84
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1419
9999 mem: incrementing refcount of 1154: 10 -> 11
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1420
9999 mem: storing 65517 in location 1421
9999 mem: storing 0 in location 1422
9999 mem: storing 0 in location 1423
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1424
 105 run: jump-if editor, 1:offset
9999 mem: location 1419 is 1154
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1418 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1197
9999 mem: incrementing refcount of 1012: 84 -> 85
 106 run: jump-unless screen, 
9999 mem: location 1197 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1198
 106 run: reply width:number
9999 mem: location 1198 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1425
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1418 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1197
9999 mem: incrementing refcount of 1012: 85 -> 86
 106 run: jump-unless screen, 
9999 mem: location 1197 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1198
 106 run: reply height:number
9999 mem: location 1198 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1426
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1427
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1428
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1429
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1430
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1431
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1430 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1432
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1431 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1433
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1420 is 1
9999 mem: location 1421 is 65517
9999 mem: location 1422 is 0
9999 mem: location 1423 is 0
9999 mem: storing 0 in location 1434
 105 run: jump-unless c, 
9999 mem: location 1434 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1420 is 1
9999 mem: location 1421 is 65517
9999 mem: location 1422 is 0
9999 mem: location 1423 is 0
9999 mem: storing 1421 in location 1488
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1488 is 1421
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1488 is 1421
9999 mem: location 1421 is 65517
9999 mem: storing 0 in location 1451
 105 run: jump-unless page-up?, 
9999 mem: location 1451 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1488 is 1421
9999 mem: location 1421 is 65517
9999 mem: storing 0 in location 1467
 105 run: jump-unless page-down?, 
9999 mem: location 1467 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1488 is 1421
9999 mem: location 1421 is 65517
9999 mem: storing 0 in location 1474
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1474 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1488 is 1421
9999 mem: location 1421 is 65517
9999 mem: storing 0 in location 1475
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1475 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1488 is 1421
9999 mem: location 1421 is 65517
9999 mem: storing 0 in location 1489
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1489 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1488 is 1421
9999 mem: location 1421 is 65517
9999 mem: storing 1 in location 1490
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1490 is 1
9998 run: jump-unless fell through
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1454
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1455
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1456
9999 mem: incrementing refcount of 1176: 14 -> 15
 105 run: editor, go-render? <- move-to-previous-line editor
9999 mem: location 1419 is 1154
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 20
9999 mem: allocating size 22
9999 mem: new alloc: 1502
9999 mem: storing 20 in location 1503
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1505
9999 mem: incrementing refcount of 1154: 11 -> 12
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1505 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1505 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1506
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1505 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1505 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1507
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1505 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1505 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1508
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1505 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1505 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1509
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1505 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1505 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1510
 106 run: already-at-top?:boolean <- lesser-or-equal *cursor-row, 1/top
9999 mem: location 1506 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 0 in location 1511
 106 run: jump-if already-at-top?, 
9999 mem: location 1511 is 0
9998 run: jump-if fell through
 106 run: curr:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1508 is 1158
9999 mem: location 1158 is 1211
9999 mem: storing 1211 in location 1512
9999 mem: incrementing refcount of 1211: 19 -> 20
 106 run: old:address:shared:duplex-list:character <- copy curr
9999 mem: location 1512 is 1211
9999 mem: storing 1211 in location 1513
9999 mem: incrementing refcount of 1211: 20 -> 21
 106 run: c2:character <- get *curr, value:offset
9999 mem: location 1512 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 100
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1512 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 100
9999 mem: storing 100 in location 1514
 106 run: at-newline?:boolean <- equal c2, 10/newline
9999 mem: location 1514 is 100
9999 mem: storing 0 in location 1515
 106 run: jump-if at-newline?, 
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 106 run: curr:address:shared:duplex-list:character <- before-previous-line curr, editor
9999 mem: location 1512 is 1211
9999 mem: location 1505 is 1154
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: allocating size 15
9999 mem: new alloc: 1524
9999 mem: storing 13 in location 1525
 107 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1527
9999 mem: incrementing refcount of 1211: 21 -> 22
 107 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1528
9999 mem: incrementing refcount of 1154: 12 -> 13
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1527 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 100
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1527 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 100
9999 mem: storing 100 in location 1529
 107 run: left:number <- get *editor, left:offset
9999 mem: location 1528 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1528 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1530
 107 run: right:number <- get *editor, right:offset
9999 mem: location 1528 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1528 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1531
 107 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1531 is 9
9999 mem: location 1530 is 0
9999 mem: storing 9 in location 1532
 107 run: sentinel:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1528 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1528 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1176
9999 mem: storing 1176 in location 1533
9999 mem: incrementing refcount of 1176: 15 -> 16
 107 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1527 is 1211
9999 mem: location 1533 is 1176
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 108 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1170
9999 mem: incrementing refcount of 1211: 22 -> 23
 108 run: start:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1171
9999 mem: incrementing refcount of 1176: 16 -> 17
 108 run: result:number <- copy 0
9999 mem: storing 0 in location 1172
 108 run: jump-if curr, 1:offset
9999 mem: location 1170 is 1211
9998 run: jumping to instruction 6
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1170 is 1211
9999 mem: location 1171 is 1176
9999 mem: storing 0 in location 1173
 108 run: jump-unless at-start?, 1:offset
9999 mem: location 1173 is 0
9998 run: jumping to instruction 9
 108 run: curr <- prev_2 curr
9999 mem: location 1170 is 1211
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1197
9999 mem: incrementing refcount of 1211: 23 -> 24
 109 run: jump-if in, 1:offset
9999 mem: location 1197 is 1211
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 100
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1214
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1214 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 18 -> 19
 109 run: reply result
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1211: 24 -> 23
9999 mem: storing 1207 in location 1170
9999 mem: incrementing refcount of 1207: 19 -> 20
 108 run: jump-unless curr, 
9999 mem: location 1170 is 1207
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1170 is 1207
9999 mem: location 1171 is 1176
9999 mem: storing 0 in location 1173
 108 run: jump-if at-start?, 
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1170 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1170 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 10
9999 mem: storing 10 in location 1174
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 10
9999 mem: storing 1 in location 1175
 108 run: jump-if at-newline?, 
9999 mem: location 1175 is 1
9998 run: jumping to instruction 19
 108 run: reply result:number
9999 mem: location 1172 is 0
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 1534
 107 run: jump-if len, 
9999 mem: location 1534 is 0
9998 run: jump-if fell through
 107 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1527 is 1211
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1197
9999 mem: incrementing refcount of 1211: 23 -> 24
 108 run: jump-if in, 1:offset
9999 mem: location 1197 is 1211
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 100
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1214
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1214 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 20 -> 21
 108 run: reply result
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1535
9999 mem: incrementing refcount of 1207: 21 -> 22
 107 run: jump-if prev, 1:offset
9999 mem: location 1535 is 1207
9998 run: jumping to instruction 14
 107 run: reply prev
9999 mem: location 1535 is 1207
9999 abandon: saving in free-list of size 15
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1211: 24 -> 23
9999 mem: storing 1207 in location 1512
9999 mem: incrementing refcount of 1207: 22 -> 23
 106 run: no-motion?:boolean <- equal curr, old
9999 mem: location 1512 is 1207
9999 mem: location 1513 is 1211
9999 mem: storing 0 in location 1516
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1517
 106 run: jump-unless no-motion?, 1:offset
9999 mem: location 1516 is 0
9998 run: jumping to instruction 21
 106 run: old <- copy curr
9999 mem: location 1512 is 1207
9999 mem: decrementing refcount of 1211: 23 -> 22
9999 mem: storing 1207 in location 1513
9999 mem: incrementing refcount of 1207: 23 -> 24
 106 run: curr <- before-previous-line curr, editor
9999 mem: location 1512 is 1207
9999 mem: location 1505 is 1154
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: allocating size 15
9999 abandon: picking up space from free-list of size 15
 107 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1527
9999 mem: incrementing refcount of 1207: 24 -> 25
 107 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1528
9999 mem: incrementing refcount of 1154: 13 -> 14
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1527 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1527 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 10
9999 mem: storing 10 in location 1529
 107 run: left:number <- get *editor, left:offset
9999 mem: location 1528 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1528 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1530
 107 run: right:number <- get *editor, right:offset
9999 mem: location 1528 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1528 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1531
 107 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1531 is 9
9999 mem: location 1530 is 0
9999 mem: storing 9 in location 1532
 107 run: sentinel:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1528 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1528 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1176
9999 mem: storing 1176 in location 1533
9999 mem: incrementing refcount of 1176: 17 -> 18
 107 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1527 is 1207
9999 mem: location 1533 is 1176
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 108 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1170
9999 mem: incrementing refcount of 1207: 25 -> 26
 108 run: start:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1171
9999 mem: incrementing refcount of 1176: 18 -> 19
 108 run: result:number <- copy 0
9999 mem: storing 0 in location 1172
 108 run: jump-if curr, 1:offset
9999 mem: location 1170 is 1207
9998 run: jumping to instruction 6
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1170 is 1207
9999 mem: location 1171 is 1176
9999 mem: storing 0 in location 1173
 108 run: jump-unless at-start?, 1:offset
9999 mem: location 1173 is 0
9998 run: jumping to instruction 9
 108 run: curr <- prev_2 curr
9999 mem: location 1170 is 1207
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1197
9999 mem: incrementing refcount of 1207: 26 -> 27
 109 run: jump-if in, 1:offset
9999 mem: location 1197 is 1207
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1210
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1210 is 1203
9999 mem: storing 1203 in location 1198
9999 mem: incrementing refcount of 1203: 18 -> 19
 109 run: reply result
9999 mem: location 1198 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1207: 27 -> 26
9999 mem: storing 1203 in location 1170
9999 mem: incrementing refcount of 1203: 19 -> 20
 108 run: jump-unless curr, 
9999 mem: location 1170 is 1203
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1170 is 1203
9999 mem: location 1171 is 1176
9999 mem: storing 0 in location 1173
 108 run: jump-if at-start?, 
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1170 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 99
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1170 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 99
9999 mem: storing 99 in location 1174
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 99
9999 mem: storing 0 in location 1175
 108 run: jump-if at-newline?, 
9999 mem: location 1175 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1172 is 0
9999 mem: storing 1 in location 1172
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1170 is 1203
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1197
9999 mem: incrementing refcount of 1203: 20 -> 21
 109 run: jump-if in, 1:offset
9999 mem: location 1197 is 1203
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 99
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1206
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1206 is 1199
9999 mem: storing 1199 in location 1198
9999 mem: incrementing refcount of 1199: 18 -> 19
 109 run: reply result
9999 mem: location 1198 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1203: 21 -> 20
9999 mem: storing 1199 in location 1170
9999 mem: incrementing refcount of 1199: 19 -> 20
 108 run: jump-unless curr, 
9999 mem: location 1170 is 1199
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1170 is 1199
9999 mem: location 1171 is 1176
9999 mem: storing 0 in location 1173
 108 run: jump-if at-start?, 
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1170 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 98
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1170 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is character
9999 mem: location 1200 is 98
9999 mem: storing 98 in location 1174
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 98
9999 mem: storing 0 in location 1175
 108 run: jump-if at-newline?, 
9999 mem: location 1175 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1172 is 1
9999 mem: storing 2 in location 1172
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1170 is 1199
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1197
9999 mem: incrementing refcount of 1199: 20 -> 21
 109 run: jump-if in, 1:offset
9999 mem: location 1197 is 1199
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 98
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1202
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1202 is 1190
9999 mem: storing 1190 in location 1198
9999 mem: incrementing refcount of 1190: 18 -> 19
 109 run: reply result
9999 mem: location 1198 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1199: 21 -> 20
9999 mem: storing 1190 in location 1170
9999 mem: incrementing refcount of 1190: 19 -> 20
 108 run: jump-unless curr, 
9999 mem: location 1170 is 1190
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1170 is 1190
9999 mem: location 1171 is 1176
9999 mem: storing 0 in location 1173
 108 run: jump-if at-start?, 
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1170 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 97
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1170 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1191
9998 run: its type is character
9999 mem: location 1191 is 97
9999 mem: storing 97 in location 1174
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 97
9999 mem: storing 0 in location 1175
 108 run: jump-if at-newline?, 
9999 mem: location 1175 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1172 is 2
9999 mem: storing 3 in location 1172
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1170 is 1190
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1197
9999 mem: incrementing refcount of 1190: 20 -> 21
 109 run: jump-if in, 1:offset
9999 mem: location 1197 is 1190
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 97
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1193
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1193 is 1176
9999 mem: storing 1176 in location 1198
9999 mem: incrementing refcount of 1176: 19 -> 20
 109 run: reply result
9999 mem: location 1198 is 1176
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1176
9999 mem: decrementing refcount of 1190: 21 -> 20
9999 mem: storing 1176 in location 1170
9999 mem: incrementing refcount of 1176: 20 -> 21
 108 run: jump-unless curr, 
9999 mem: location 1170 is 1176
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1170 is 1176
9999 mem: location 1171 is 1176
9999 mem: storing 1 in location 1173
 108 run: jump-if at-start?, 
9999 mem: location 1173 is 1
9998 run: jumping to instruction 19
 108 run: reply result:number
9999 mem: location 1172 is 3
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 3
9999 mem: storing 3 in location 1534
 107 run: jump-if len, 
9999 mem: location 1534 is 3
9998 run: jumping to instruction 15
 107 run: _, max:number <- divide-with-remainder len, max-line-length
9999 mem: location 1534 is 3
9999 mem: location 1532 is 9
9999 mem: storing 3 in location 1536
 107 run: jump-if max, 
9999 mem: location 1536 is 3
9998 run: jumping to instruction 20
 107 run: max <- add max, 1
9999 mem: location 1536 is 3
9999 mem: storing 4 in location 1536
 107 run: count:number <- copy 0
9999 mem: storing 0 in location 1537
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1537 is 0
9999 mem: location 1536 is 4
9999 mem: storing 0 in location 1538
 107 run: jump-if done?, 
9999 mem: location 1538 is 0
9998 run: jump-if fell through
 107 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1527 is 1207
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1197
9999 mem: incrementing refcount of 1207: 26 -> 27
 108 run: jump-if in, 1:offset
9999 mem: location 1197 is 1207
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1210
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1210 is 1203
9999 mem: storing 1203 in location 1198
9999 mem: incrementing refcount of 1203: 20 -> 21
 108 run: reply result
9999 mem: location 1198 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1203
9999 mem: storing 1203 in location 1535
9999 mem: incrementing refcount of 1203: 21 -> 22
 107 run: jump-unless prev, 
9999 mem: location 1535 is 1203
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1535 is 1203
9999 mem: decrementing refcount of 1207: 27 -> 26
9999 mem: storing 1203 in location 1527
9999 mem: incrementing refcount of 1203: 22 -> 23
 107 run: count <- add count, 1
9999 mem: location 1537 is 0
9999 mem: storing 1 in location 1537
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1537 is 1
9999 mem: location 1536 is 4
9999 mem: storing 0 in location 1538
 107 run: jump-if done?, 
9999 mem: location 1538 is 0
9998 run: jump-if fell through
 107 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1527 is 1203
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1197
9999 mem: incrementing refcount of 1203: 23 -> 24
 108 run: jump-if in, 1:offset
9999 mem: location 1197 is 1203
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 99
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1206
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1206 is 1199
9999 mem: storing 1199 in location 1198
9999 mem: incrementing refcount of 1199: 20 -> 21
 108 run: reply result
9999 mem: location 1198 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1203: 24 -> 23
9999 mem: storing 1199 in location 1535
9999 mem: incrementing refcount of 1199: 21 -> 22
 107 run: jump-unless prev, 
9999 mem: location 1535 is 1199
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1535 is 1199
9999 mem: decrementing refcount of 1203: 23 -> 22
9999 mem: storing 1199 in location 1527
9999 mem: incrementing refcount of 1199: 22 -> 23
 107 run: count <- add count, 1
9999 mem: location 1537 is 1
9999 mem: storing 2 in location 1537
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1537 is 2
9999 mem: location 1536 is 4
9999 mem: storing 0 in location 1538
 107 run: jump-if done?, 
9999 mem: location 1538 is 0
9998 run: jump-if fell through
 107 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1527 is 1199
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1197
9999 mem: incrementing refcount of 1199: 23 -> 24
 108 run: jump-if in, 1:offset
9999 mem: location 1197 is 1199
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 98
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1202
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1202 is 1190
9999 mem: storing 1190 in location 1198
9999 mem: incrementing refcount of 1190: 20 -> 21
 108 run: reply result
9999 mem: location 1198 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1199: 24 -> 23
9999 mem: storing 1190 in location 1535
9999 mem: incrementing refcount of 1190: 21 -> 22
 107 run: jump-unless prev, 
9999 mem: location 1535 is 1190
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1535 is 1190
9999 mem: decrementing refcount of 1199: 23 -> 22
9999 mem: storing 1190 in location 1527
9999 mem: incrementing refcount of 1190: 22 -> 23
 107 run: count <- add count, 1
9999 mem: location 1537 is 2
9999 mem: storing 3 in location 1537
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1537 is 3
9999 mem: location 1536 is 4
9999 mem: storing 0 in location 1538
 107 run: jump-if done?, 
9999 mem: location 1538 is 0
9998 run: jump-if fell through
 107 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1527 is 1190
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1197
9999 mem: incrementing refcount of 1190: 23 -> 24
 108 run: jump-if in, 1:offset
9999 mem: location 1197 is 1190
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 97
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1193
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1193 is 1176
9999 mem: storing 1176 in location 1198
9999 mem: incrementing refcount of 1176: 21 -> 22
 108 run: reply result
9999 mem: location 1198 is 1176
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1176
9999 mem: decrementing refcount of 1190: 24 -> 23
9999 mem: storing 1176 in location 1535
9999 mem: incrementing refcount of 1176: 22 -> 23
 107 run: jump-unless prev, 
9999 mem: location 1535 is 1176
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1535 is 1176
9999 mem: decrementing refcount of 1190: 23 -> 22
9999 mem: storing 1176 in location 1527
9999 mem: incrementing refcount of 1176: 23 -> 24
 107 run: count <- add count, 1
9999 mem: location 1537 is 3
9999 mem: storing 4 in location 1537
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1537 is 4
9999 mem: location 1536 is 4
9999 mem: storing 1 in location 1538
 107 run: jump-if done?, 
9999 mem: location 1538 is 1
9998 run: jumping to instruction 31
 107 run: reply curr
9999 mem: location 1527 is 1176
9999 abandon: saving in free-list of size 15
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: decrementing refcount of 1207: 26 -> 25
9999 mem: storing 1176 in location 1512
9999 mem: incrementing refcount of 1176: 24 -> 25
 106 run: no-motion?:boolean <- equal curr, old
9999 mem: location 1512 is 1176
9999 mem: location 1513 is 1207
9999 mem: storing 0 in location 1516
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1517
 106 run: jump-unless no-motion?, 1:offset
9999 mem: location 1516 is 0
9998 run: jumping to instruction 29
 106 run: *before-cursor <- copy curr
9999 mem: location 1512 is 1176
9999 mem: location 1508 is 1158
9999 mem: decrementing refcount of 1211: 22 -> 21
9999 mem: storing 1176 in location 1158
9999 mem: incrementing refcount of 1176: 25 -> 26
 106 run: *cursor-row <- subtract *cursor-row, 1
9999 mem: location 1506 is 1162
9999 mem: location 1162 is 2
9999 mem: location 1506 is 1162
9999 mem: storing 1 in location 1162
 106 run: target-column:number <- copy *cursor-column
9999 mem: location 1507 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1518
 106 run: *cursor-column <- copy left
9999 mem: location 1509 is 0
9999 mem: location 1507 is 1163
9999 mem: storing 0 in location 1163
 106 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1507 is 1163
9999 mem: location 1163 is 0
9999 mem: location 1518 is 1
9999 mem: storing 0 in location 1519
 106 run: jump-if done?, 
9999 mem: location 1519 is 0
9998 run: jump-if fell through
 106 run: curr:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1508 is 1158
9999 mem: location 1158 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1197
9999 mem: incrementing refcount of 1176: 26 -> 27
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1190
9999 mem: location 1179 is 0
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1178 is 1190
9999 mem: storing 1190 in location 1198
9999 mem: incrementing refcount of 1190: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1176: 27 -> 26
9999 mem: storing 1190 in location 1512
9999 mem: incrementing refcount of 1190: 23 -> 24
 106 run: jump-unless curr, 
9999 mem: location 1512 is 1190
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1512 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 97
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1512 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1191
9998 run: its type is character
9999 mem: location 1191 is 97
9999 mem: storing 97 in location 1520
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1520 is 97
9999 mem: storing 0 in location 1515
 106 run: jump-if at-newline?, 
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 106 run: *before-cursor <- copy curr
9999 mem: location 1512 is 1190
9999 mem: location 1508 is 1158
9999 mem: decrementing refcount of 1176: 26 -> 25
9999 mem: storing 1190 in location 1158
9999 mem: incrementing refcount of 1190: 24 -> 25
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1507 is 1163
9999 mem: location 1163 is 0
9999 mem: location 1507 is 1163
9999 mem: storing 1 in location 1163
 106 run: jump 
9998 run: jumping to instruction 35
 106 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1507 is 1163
9999 mem: location 1163 is 1
9999 mem: location 1518 is 1
9999 mem: storing 1 in location 1519
 106 run: jump-if done?, 
9999 mem: location 1519 is 1
9998 run: jumping to instruction 45
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1517
 106 run: reply editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1505 is 1154
9999 mem: location 1517 is 0
9999 abandon: saving in free-list of size 22
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1154: 14 -> 13
9999 mem: storing 1154 in location 1419
9999 mem: incrementing refcount of 1154: 13 -> 14
9999 mem: storing 0 in location 1424
 105 run: undo-coalesce-tag:number <- copy 3/up-arrow
9999 mem: storing 3 in location 1457
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1458
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1459
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1460
9999 mem: incrementing refcount of 1176: 25 -> 26
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1457 is 3
9998 run: jump-unless fell through
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1438
 105 run: jump-unless *undo, 
9999 mem: location 1438 is 1165
9999 mem: location 1165 is 1412
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1438 is 1165
9999 mem: location 1165 is 1412
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1412 in location 1197
9999 mem: incrementing refcount of 1412: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1197 is 1412
9999 mem: skipping refcount at 1412
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1413 is 1000
9999 mem: location 1414 is 0
9999 mem: location 1197 is 1412
9999 mem: skipping refcount at 1412
9998 run: address to copy is 1413
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1413 is 1000
9999 mem: storing 1000 in location 1198
9999 mem: incrementing refcount of 1000: 4 -> 5
 106 run: reply result:_elem
9999 mem: location 1198 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1437
9999 mem: incrementing refcount of 1000: 5 -> 6
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1437 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1176
9999 mem: location 1005 is 2
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1176
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1437 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1443
 105 run: jump-unless move, 
9999 mem: location 1443 is 1002
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1443 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1176
9999 mem: location 1005 is 2
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1176
9999 mem: location 1008 is 0
9999 mem: location 1443 is 1002
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1461
 105 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1457 is 3
9999 mem: location 1461 is 0
9999 mem: storing 0 in location 1462
 105 run: jump-unless coalesce?, 
9999 mem: location 1462 is 0
9998 run: jumping to instruction 666
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: decrementing refcount of 1000: 6 -> 5
9999 mem: storing 1120 in location 1437
9999 mem: incrementing refcount of 1120: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1454 is 2
9999 mem: location 1455 is 1
9999 mem: location 1456 is 1176
9999 mem: location 1458 is 1
9999 mem: location 1459 is 1
9999 mem: location 1460 is 1176
9999 mem: location 1457 is 3
9999 mem: location 1437 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1437 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1 in location 1121
9999 mem: storing 2 in location 1122
9999 mem: storing 1 in location 1123
9999 mem: storing 1176 in location 1124
9999 mem: storing 1 in location 1125
9999 mem: storing 1 in location 1126
9999 mem: storing 1176 in location 1127
9999 mem: storing 3 in location 1128
 105 run: editor <- add-operation editor, op
9999 mem: location 1419 is 1154
9999 mem: location 1437 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1408
9999 mem: incrementing refcount of 1154: 14 -> 15
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1409
9999 mem: incrementing refcount of 1120: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1408 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1412
9999 mem: location 1166 is 0
9999 mem: location 1408 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1410
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1409 is 1120
9999 mem: location 1410 is 1165
9999 mem: location 1165 is 1412
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1256
9999 mem: incrementing refcount of 1120: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1412 in location 1257
9999 mem: incrementing refcount of 1412: 3 -> 4
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1539
9999 mem: storing 1539 in location 1258
9999 mem: incrementing refcount of 1539: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1258 is 1539
9999 mem: skipping refcount at 1539
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1540 is 0
9999 mem: location 1541 is 0
9999 mem: location 1258 is 1539
9999 mem: skipping refcount at 1539
9998 run: address to copy is 1540
9999 mem: storing 1540 in location 1259
 107 run: *val <- copy x
9999 mem: location 1256 is 1120
9999 mem: location 1259 is 1540
9999 mem: storing 1120 in location 1540
9999 mem: incrementing refcount of 1120: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1258 is 1539
9999 mem: skipping refcount at 1539
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1540 is 1120
9999 mem: location 1541 is 0
9999 mem: location 1258 is 1539
9999 mem: skipping refcount at 1539
9999 type: type deduced to be address$
9998 run: address to copy is 1541
9999 mem: storing 1541 in location 1260
 107 run: *next <- copy in
9999 mem: location 1257 is 1412
9999 mem: location 1260 is 1541
9999 mem: storing 1412 in location 1541
9999 mem: incrementing refcount of 1412: 4 -> 5
 107 run: reply result
9999 mem: location 1258 is 1539
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1539
9999 mem: location 1410 is 1165
9999 mem: decrementing refcount of 1412: 5 -> 4
9999 mem: storing 1539 in location 1165
9999 mem: incrementing refcount of 1539: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1408 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1408 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1411
 106 run: *redo <- copy 0
9999 mem: location 1411 is 1166
9999 mem: storing 0 in location 1166
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1408 is 1154
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9999 mem: decrementing refcount of 1154: 15 -> 14
9999 mem: storing 1154 in location 1419
9999 mem: incrementing refcount of 1154: 14 -> 15
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1418 is 1012
9999 mem: location 1419 is 1154
9999 mem: location 1424 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1154
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 86 -> 85
9999 mem: storing 1012 in location 1335
9999 mem: incrementing refcount of 1012: 85 -> 86
9999 mem: decrementing refcount of 1154: 15 -> 14
9999 mem: storing 1154 in location 1337
9999 mem: incrementing refcount of 1154: 14 -> 15
9999 mem: storing 0 in location 1347
 104 run: jump-unless go-render?, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1338
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1339
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1335 is 1012
9999 mem: location 1338 is 1
9999 mem: location 1339 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 86 -> 87
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1257
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1258
 105 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 105 run: *row <- copy new-row
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 105 run: *column <- copy new-column
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 87 -> 86
9999 mem: storing 1012 in location 1335
9999 mem: incrementing refcount of 1012: 86 -> 87
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1336 is 1329
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1329 in location 1291
9999 mem: incrementing refcount of 1329: 3 -> 4
 105 run: jump-unless console, 
9999 mem: location 1291 is 1329
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1291 is 1329
9999 mem: skipping refcount at 1329
9999 mem: location 1330 is 2
9999 mem: location 1331 is 1319
9999 mem: location 1291 is 1329
9999 mem: skipping refcount at 1329
9998 run: address to copy is 1330
9999 mem: storing 1330 in location 1292
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1291 is 1329
9999 mem: skipping refcount at 1329
9999 mem: location 1330 is 2
9999 mem: location 1331 is 1319
9999 mem: location 1291 is 1329
9999 mem: skipping refcount at 1329
9998 run: address to copy is 1331
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1331 is 1319
9999 mem: storing 1319 in location 1293
9999 mem: incrementing refcount of 1319: 2 -> 3
 105 run: max:number <- length *buf
9999 mem: location 1293 is 1319
9999 mem: skipping refcount at 1319
9999 mem: storing 2 in location 1294
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1292 is 1330
9999 mem: location 1330 is 2
9999 mem: location 1294 is 2
9999 mem: storing 1 in location 1295
 105 run: jump-unless done?, 
9999 mem: location 1295 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1194 in location 1296
9999 mem: incrementing refcount of 1194: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1296 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1291 is 1329
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1329
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: decrementing refcount of 1329: 4 -> 3
9999 mem: storing 1329 in location 1336
9999 mem: incrementing refcount of 1329: 3 -> 4
9999 mem: storing 1 in location 1344
9999 mem: storing 1 in location 1345
 104 run: jump-unless found?, 
9999 mem: location 1344 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1345 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1335 is 1012
9999 mem: location 1336 is 1329
9999 mem: location 1337 is 1154
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 2 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 2 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 1
    4 <- 1
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label 0, [print-character]
 102 run: assume-console [
    type [0]
  ]
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type [0]
9999 mem: storing 'type' event starting at 1544
9999 mem: storing 'text' tag at 1544
9999 mem: storing character 48 at 1545
9999 mem: storing console in 1548
9999 mem: storing console data in 1550
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1002 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1002
9991 transform: --- deduce types for recipe run1002
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1002
9991 transform: --- transform names for recipe run1002
9991 transform: --- resolve ambiguous calls for recipe run1002
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1002
9991 transform: --- transform braces for recipe run1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1002
9991 transform: --- type-check 'call' instructions inside recipe run1002
9991 transform: --- type-check calls inside recipe run1002
9991 transform: --- convert 'new' to 'allocate' for recipe run1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1548
9999 mem: location 2 is 1154
9999 trace: incrementing callstack depth to 3
9990 schedule: editor-event-loop/run1002/scenario-editor-moves-to-previous-line-with-up-arrow
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1335
9999 mem: incrementing refcount of 1012: 87 -> 88
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1548 in location 1336
9999 mem: incrementing refcount of 1548: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1337
9999 mem: incrementing refcount of 1154: 15 -> 16
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1338
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1339
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1335 is 1012
9999 mem: location 1338 is 1
9999 mem: location 1339 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 88 -> 89
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1257
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1258
 105 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 105 run: *row <- copy new-row
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 105 run: *column <- copy new-column
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 89 -> 88
9999 mem: storing 1012 in location 1335
9999 mem: incrementing refcount of 1012: 88 -> 89
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1336 is 1548
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1548 in location 1291
9999 mem: incrementing refcount of 1548: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1291 is 1548
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1291 is 1548
9999 mem: skipping refcount at 1548
9999 mem: location 1549 is 0
9999 mem: location 1550 is 1542
9999 mem: location 1291 is 1548
9999 mem: skipping refcount at 1548
9998 run: address to copy is 1549
9999 mem: storing 1549 in location 1292
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1291 is 1548
9999 mem: skipping refcount at 1548
9999 mem: location 1549 is 0
9999 mem: location 1550 is 1542
9999 mem: location 1291 is 1548
9999 mem: skipping refcount at 1548
9998 run: address to copy is 1550
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1550 is 1542
9999 mem: storing 1542 in location 1293
9999 mem: incrementing refcount of 1542: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1293 is 1542
9999 mem: skipping refcount at 1542
9999 mem: storing 1 in location 1294
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1292 is 1549
9999 mem: location 1549 is 0
9999 mem: location 1294 is 1
9999 mem: storing 0 in location 1295
 105 run: jump-unless done?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1293 is 1542
9999 mem: skipping refcount at 1542
9998 run: base address is 1543
9999 mem: location 1292 is 1549
9999 mem: location 1549 is 0
9998 run: address to copy is 1544
9998 run: its type is event
9999 mem: location 1544 is 0
9999 mem: location 1545 is 48
9999 mem: location 1546 is 0
9999 mem: location 1547 is 0
9999 mem: storing 0 in location 1297
9999 mem: storing 48 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1292 is 1549
9999 mem: location 1549 is 0
9999 mem: location 1292 is 1549
9999 mem: storing 1 in location 1549
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1297 is 0
9999 mem: location 1298 is 48
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 mem: location 1291 is 1548
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1548
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1340
9999 mem: storing 48 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: decrementing refcount of 1548: 2 -> 1
9999 mem: storing 1548 in location 1336
9999 mem: incrementing refcount of 1548: 1 -> 2
9999 mem: storing 1 in location 1344
9999 mem: storing 0 in location 1345
 104 run: jump-unless found?, 
9999 mem: location 1344 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1345 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1340 is 0
9999 mem: location 1341 is 48
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1346
 104 run: jump-unless t, 
9999 mem: location 1346 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1335 is 1012
9999 mem: location 1337 is 1154
9999 mem: location 1340 is 0
9999 mem: location 1341 is 48
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1418
9999 mem: incrementing refcount of 1012: 89 -> 90
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1419
9999 mem: incrementing refcount of 1154: 16 -> 17
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1420
9999 mem: storing 48 in location 1421
9999 mem: storing 0 in location 1422
9999 mem: storing 0 in location 1423
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1424
 105 run: jump-if editor, 1:offset
9999 mem: location 1419 is 1154
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1418 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1551
9999 mem: storing 3 in location 1552
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1554
9999 mem: incrementing refcount of 1012: 90 -> 91
 106 run: jump-unless screen, 
9999 mem: location 1554 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1554 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1554 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1555
 106 run: reply width:number
9999 mem: location 1555 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1425
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1418 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1554
9999 mem: incrementing refcount of 1012: 91 -> 92
 106 run: jump-unless screen, 
9999 mem: location 1554 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1554 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1554 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1555
 106 run: reply height:number
9999 mem: location 1555 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1426
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1427
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1428
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1429
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1430
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1431
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1430 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1432
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1431 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1433
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1420 is 0
9999 mem: location 1421 is 48
9999 mem: location 1422 is 0
9999 mem: location 1423 is 0
9999 mem: storing 1421 in location 1434
 105 run: jump-unless c, 
9999 mem: location 1434 is 1421
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 48
9999 mem: storing 0 in location 1435
 105 run: jump-unless redo?, 
9999 mem: location 1435 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 48
9999 mem: storing 0 in location 1446
 105 run: jump-unless undo?, 
9999 mem: location 1446 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 48
9999 mem: storing 0 in location 1451
 105 run: jump-unless page-up?, 
9999 mem: location 1451 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 48
9999 mem: storing 0 in location 1467
 105 run: jump-unless page-down?, 
9999 mem: location 1467 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 48
9999 mem: storing 0 in location 1468
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1468 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 48
9999 mem: storing 0 in location 1473
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1473 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 48
9999 mem: storing 0 in location 1474
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1474 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 48
9999 mem: storing 0 in location 1475
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1475 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 48
9999 mem: storing 0 in location 1476
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1476 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 48
9999 mem: storing 0 in location 1480
 105 run: jump-unless tab?, 
9999 mem: location 1480 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 48
9999 mem: storing 0 in location 1484
 105 run: jump-unless newline?, 
9999 mem: location 1484 is 0
9998 run: jumping to instruction 402
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 48
9999 mem: storing 1 in location 1487
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1424
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1487 is 1
9998 run: jumping to instruction 407
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1469
9999 mem: incrementing refcount of 1176: 26 -> 27
 105 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1429 is 1158
9999 mem: location 1158 is 1190
9999 mem: storing 1190 in location 1481
9999 mem: incrementing refcount of 1190: 25 -> 26
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1419 is 1154
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 48
9999 mem: location 1418 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1556
9999 mem: storing 31 in location 1557
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1559
9999 mem: incrementing refcount of 1154: 17 -> 18
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1560
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1561
9999 mem: incrementing refcount of 1012: 92 -> 93
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1559 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1190
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1559 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1562
 106 run: insert_2 c, *before-cursor
9999 mem: location 1560 is 48
9999 mem: location 1562 is 1158
9999 mem: location 1158 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1170
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1171
9999 mem: incrementing refcount of 1190: 26 -> 27
 107 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1589
9999 mem: storing 1589 in location 1172
9999 mem: incrementing refcount of 1589: 0 -> 1
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1172 is 1589
9999 mem: skipping refcount at 1589
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1590 is 0
9999 mem: location 1591 is 0
9999 mem: location 1592 is 0
9999 mem: location 1172 is 1589
9999 mem: skipping refcount at 1589
9998 run: address to copy is 1590
9999 mem: storing 1590 in location 1173
 107 run: *val <- copy x
9999 mem: location 1170 is 48
9999 mem: location 1173 is 1590
9999 mem: storing 48 in location 1590
 107 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1171 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 97
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1171 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1199
9999 mem: storing 1199 in location 1174
9999 mem: incrementing refcount of 1199: 22 -> 23
 107 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1171 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 97
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1171 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9999 mem: storing 1192 in location 1175
 107 run: *y <- copy new-node
9999 mem: location 1172 is 1589
9999 mem: location 1175 is 1192
9999 mem: decrementing refcount of 1199: 23 -> 22
9999 mem: storing 1589 in location 1192
9999 mem: incrementing refcount of 1589: 1 -> 2
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1172 is 1589
9999 mem: skipping refcount at 1589
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1590 is 48
9999 mem: location 1591 is 0
9999 mem: location 1592 is 0
9999 mem: location 1172 is 1589
9999 mem: skipping refcount at 1589
9999 type: type deduced to be character$
9998 run: address to copy is 1592
9999 mem: storing 1592 in location 1175
 107 run: *y <- copy in
9999 mem: location 1171 is 1190
9999 mem: location 1175 is 1592
9999 mem: storing 1190 in location 1592
9999 mem: incrementing refcount of 1190: 27 -> 28
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1172 is 1589
9999 mem: skipping refcount at 1589
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1590 is 48
9999 mem: location 1591 is 0
9999 mem: location 1592 is 1190
9999 mem: location 1172 is 1589
9999 mem: skipping refcount at 1589
9999 type: type deduced to be character$
9998 run: address to copy is 1591
9999 mem: storing 1591 in location 1175
 107 run: *y <- copy next-node
9999 mem: location 1174 is 1199
9999 mem: location 1175 is 1591
9999 mem: storing 1199 in location 1591
9999 mem: incrementing refcount of 1199: 22 -> 23
 107 run: jump-if next-node, 1:offset
9999 mem: location 1174 is 1199
9998 run: jumping to instruction 15
 107 run: y <- get-address *next-node, prev:offset
9999 mem: location 1174 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 98
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1174 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1202
9999 mem: storing 1202 in location 1175
 107 run: *y <- copy new-node
9999 mem: location 1172 is 1589
9999 mem: location 1175 is 1202
9999 mem: decrementing refcount of 1190: 28 -> 27
9999 mem: storing 1589 in location 1202
9999 mem: incrementing refcount of 1589: 2 -> 3
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1171 is 1190
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1562 is 1158
9999 mem: location 1158 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1554
9999 mem: incrementing refcount of 1190: 27 -> 28
 107 run: jump-if in, 1:offset
9999 mem: location 1554 is 1190
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1554 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 97
9999 mem: location 1192 is 1589
9999 mem: location 1193 is 1176
9999 mem: location 1554 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1589
9999 mem: storing 1589 in location 1555
9999 mem: incrementing refcount of 1589: 3 -> 4
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1555 is 1589
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1589
9999 mem: location 1562 is 1158
9999 mem: decrementing refcount of 1190: 28 -> 27
9999 mem: storing 1589 in location 1158
9999 mem: incrementing refcount of 1589: 4 -> 5
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1559 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1589
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1559 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1563
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1559 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1589
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1559 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1564
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1559 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1589
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1559 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1565
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1559 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1589
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1559 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1566
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1563 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1567
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1564 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1568
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1561 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1554
9999 mem: incrementing refcount of 1012: 93 -> 94
 107 run: jump-unless screen, 
9999 mem: location 1554 is 1012
9998 run: jump-unless fell through
 107 run: width <- get *screen, num-columns:offset
9999 mem: location 1554 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1554 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1555
 107 run: reply width:number
9999 mem: location 1555 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1569
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1561 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1554
9999 mem: incrementing refcount of 1012: 94 -> 95
 107 run: jump-unless screen, 
9999 mem: location 1554 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1554 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1554 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1555
 107 run: reply height:number
9999 mem: location 1555 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1570
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1566 is 9
9999 mem: storing 8 in location 1571
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1564 is 1163
9999 mem: location 1163 is 1
9999 mem: location 1571 is 8
9999 mem: storing 0 in location 1572
 106 run: jump-unless at-wrap?, 
9999 mem: location 1572 is 0
9998 run: jumping to instruction 41
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1564 is 1163
9999 mem: location 1163 is 1
9999 mem: location 1564 is 1163
9999 mem: storing 2 in location 1163
 106 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1562 is 1158
9999 mem: location 1158 is 1589
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1589 in location 1554
9999 mem: incrementing refcount of 1589: 5 -> 6
 107 run: jump-if in, 1:offset
9999 mem: location 1554 is 1589
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1554 is 1589
9999 mem: skipping refcount at 1589
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1590 is 48
9999 mem: location 1591 is 1199
9999 mem: location 1592 is 1190
9999 mem: location 1554 is 1589
9999 mem: skipping refcount at 1589
9999 type: type deduced to be character$
9998 run: address to copy is 1591
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1591 is 1199
9999 mem: storing 1199 in location 1555
9999 mem: incrementing refcount of 1199: 23 -> 24
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1555 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1579
9999 mem: incrementing refcount of 1199: 24 -> 25
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1579 is 1199
9999 mem: storing 0 in location 1580
 106 run: jump-unless at-end?, 
9999 mem: location 1580 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless next, 
9999 mem: location 1579 is 1199
9998 run: jump-unless fell through
 106 run: at-right?:boolean <- greater-or-equal *cursor-column, screen-width
9999 mem: location 1564 is 1163
9999 mem: location 1163 is 2
9999 mem: location 1569 is 10
9999 mem: storing 0 in location 1583
 106 run: jump-if at-right?, 
9999 mem: location 1583 is 0
9998 run: jump-if fell through
 106 run: curr:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1562 is 1158
9999 mem: location 1158 is 1589
9999 mem: storing 1589 in location 1585
9999 mem: incrementing refcount of 1589: 6 -> 7
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1561 is 1012
9999 mem: location 1567 is 1
9999 mem: location 1568 is 1
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 95 -> 96
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1257
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1258
 107 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 107 run: *row <- copy new-row
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 107 run: *column <- copy new-column
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column:number <- copy save-column
9999 mem: location 1568 is 1
9999 mem: storing 1 in location 1586
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1578
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1586 is 1
9999 mem: location 1566 is 9
9999 mem: storing 0 in location 1583
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1583 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1585 is 1589
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1585 is 1589
9999 mem: skipping refcount at 1589
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1590 is 48
9999 mem: location 1591 is 1199
9999 mem: location 1592 is 1190
9999 mem: location 1585 is 1589
9999 mem: skipping refcount at 1589
9998 run: address to copy is 1590
9998 run: its type is character
9999 mem: location 1590 is 48
9999 mem: storing 48 in location 1587
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1587 is 48
9999 mem: storing 0 in location 1588
 106 run: jump-if at-newline?, 
9999 mem: location 1588 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1561 is 1012
9999 mem: location 1587 is 48
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 96 -> 97
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1266
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1268
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 48
  90 print-character: 48 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 48
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 55 -> 56
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 48
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 11
9999 mem: storing 1042 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1283 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 48
9999 mem: location 1284 is 1042
9999 mem: storing 48 in location 1042
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1042
9999 mem: location 1042 is 48
9999 mem: location 1043 is 7
9999 mem: location 1283 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1043
9999 mem: storing 7 in location 1043
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1274 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1586 is 1
9999 mem: storing 2 in location 1586
 106 run: curr <- next_2 curr
9999 mem: location 1585 is 1589
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1589 in location 1554
9999 mem: incrementing refcount of 1589: 7 -> 8
 107 run: jump-if in, 1:offset
9999 mem: location 1554 is 1589
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1554 is 1589
9999 mem: skipping refcount at 1589
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1590 is 48
9999 mem: location 1591 is 1199
9999 mem: location 1592 is 1190
9999 mem: location 1554 is 1589
9999 mem: skipping refcount at 1589
9999 type: type deduced to be character$
9998 run: address to copy is 1591
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1591 is 1199
9999 mem: storing 1199 in location 1555
9999 mem: incrementing refcount of 1199: 25 -> 26
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1555 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1589: 8 -> 7
9999 mem: storing 1199 in location 1585
9999 mem: incrementing refcount of 1199: 26 -> 27
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1578
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1586 is 2
9999 mem: location 1566 is 9
9999 mem: storing 0 in location 1583
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1583 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1585 is 1199
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1585 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 98
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1589
9999 mem: location 1585 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is character
9999 mem: location 1200 is 98
9999 mem: storing 98 in location 1587
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1587 is 98
9999 mem: storing 0 in location 1588
 106 run: jump-if at-newline?, 
9999 mem: location 1588 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1561 is 1012
9999 mem: location 1587 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 97 -> 98
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1266
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1268
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 98
  90 print-character: 98 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 98
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 56 -> 57
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 98
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 12
9999 mem: storing 1044 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1283 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 98
9999 mem: location 1284 is 1044
9999 mem: storing 98 in location 1044
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1044
9999 mem: location 1044 is 98
9999 mem: location 1045 is 7
9999 mem: location 1283 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1045
9999 mem: storing 7 in location 1045
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1274 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1586 is 2
9999 mem: storing 3 in location 1586
 106 run: curr <- next_2 curr
9999 mem: location 1585 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1554
9999 mem: incrementing refcount of 1199: 27 -> 28
 107 run: jump-if in, 1:offset
9999 mem: location 1554 is 1199
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1554 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 98
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1589
9999 mem: location 1554 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1555
9999 mem: incrementing refcount of 1203: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1555 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 28 -> 27
9999 mem: storing 1203 in location 1585
9999 mem: incrementing refcount of 1203: 23 -> 24
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1578
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1586 is 3
9999 mem: location 1566 is 9
9999 mem: storing 0 in location 1583
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1583 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1585 is 1203
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1585 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 99
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1585 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 99
9999 mem: storing 99 in location 1587
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1587 is 99
9999 mem: storing 0 in location 1588
 106 run: jump-if at-newline?, 
9999 mem: location 1588 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1561 is 1012
9999 mem: location 1587 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 98 -> 99
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1266
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1268
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 99
  90 print-character: 99 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 99
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 57 -> 58
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 99
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 13
9999 mem: storing 1046 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1283 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 99
9999 mem: location 1284 is 1046
9999 mem: storing 99 in location 1046
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1046
9999 mem: location 1046 is 99
9999 mem: location 1047 is 7
9999 mem: location 1283 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1047
9999 mem: storing 7 in location 1047
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1274 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1586 is 3
9999 mem: storing 4 in location 1586
 106 run: curr <- next_2 curr
9999 mem: location 1585 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1554
9999 mem: incrementing refcount of 1203: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1554 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1554 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 99
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1554 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1555
9999 mem: incrementing refcount of 1207: 25 -> 26
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1555 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 25 -> 24
9999 mem: storing 1207 in location 1585
9999 mem: incrementing refcount of 1207: 26 -> 27
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1578
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1586 is 4
9999 mem: location 1566 is 9
9999 mem: storing 0 in location 1583
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1583 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1585 is 1207
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1585 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1585 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 10
9999 mem: storing 10 in location 1587
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1587 is 10
9999 mem: storing 1 in location 1588
 106 run: jump-if at-newline?, 
9999 mem: location 1588 is 1
9998 run: jumping to instruction 77
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1578
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1559 is 1154
9999 mem: location 1561 is 1012
9999 mem: location 1578 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1154: 18 -> 17
9999 mem: storing 1154 in location 1419
9999 mem: incrementing refcount of 1154: 17 -> 18
9999 mem: decrementing refcount of 1012: 99 -> 98
9999 mem: storing 1012 in location 1418
9999 mem: incrementing refcount of 1012: 98 -> 99
9999 mem: storing 0 in location 1424
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1589
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 2
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1471
9999 mem: incrementing refcount of 1176: 27 -> 28
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1589
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 2
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1419 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1438
 105 run: jump-unless *undo, 
9999 mem: location 1438 is 1165
9999 mem: location 1165 is 1539
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1438 is 1165
9999 mem: location 1165 is 1539
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1539 in location 1554
9999 mem: incrementing refcount of 1539: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1554 is 1539
9999 mem: skipping refcount at 1539
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1540 is 1120
9999 mem: location 1541 is 1412
9999 mem: location 1554 is 1539
9999 mem: skipping refcount at 1539
9998 run: address to copy is 1540
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1540 is 1120
9999 mem: storing 1120 in location 1555
9999 mem: incrementing refcount of 1120: 4 -> 5
 106 run: reply result:_elem
9999 mem: location 1555 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1437
9999 mem: incrementing refcount of 1120: 5 -> 6
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1437 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1176
9999 mem: location 1125 is 1
9999 mem: location 1126 is 1
9999 mem: location 1127 is 1176
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1437 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1444
 105 run: jump-unless typing, 
9999 mem: location 1444 is 0
9998 run: jumping to instruction 429
 105 run: insert-from:address:shared:duplex-list:character <- next_2 cursor-before
9999 mem: location 1481 is 1190
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1554
9999 mem: incrementing refcount of 1190: 27 -> 28
 106 run: jump-if in, 1:offset
9999 mem: location 1554 is 1190
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1554 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 97
9999 mem: location 1192 is 1589
9999 mem: location 1193 is 1176
9999 mem: location 1554 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1589
9999 mem: storing 1589 in location 1555
9999 mem: incrementing refcount of 1589: 7 -> 8
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1555 is 1589
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1589
9999 mem: storing 1589 in location 1445
9999 mem: incrementing refcount of 1589: 8 -> 9
 105 run: insert-to:address:shared:duplex-list:character <- next_2 insert-from
9999 mem: location 1445 is 1589
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1589 in location 1554
9999 mem: incrementing refcount of 1589: 9 -> 10
 106 run: jump-if in, 1:offset
9999 mem: location 1554 is 1589
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1554 is 1589
9999 mem: skipping refcount at 1589
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1590 is 48
9999 mem: location 1591 is 1199
9999 mem: location 1592 is 1190
9999 mem: location 1554 is 1589
9999 mem: skipping refcount at 1589
9999 type: type deduced to be character$
9998 run: address to copy is 1591
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1591 is 1199
9999 mem: storing 1199 in location 1555
9999 mem: incrementing refcount of 1199: 27 -> 28
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1555 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1483
9999 mem: incrementing refcount of 1199: 28 -> 29
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 mem: new alloc: 1593
9999 mem: decrementing refcount of 1120: 6 -> 5
9999 mem: storing 1593 in location 1437
9999 mem: incrementing refcount of 1593: 0 -> 1
 105 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1432 is 1
9999 mem: location 1433 is 1
9999 mem: location 1469 is 1176
9999 mem: location 1430 is 1162
9999 mem: location 1162 is 1
9999 mem: location 1431 is 1163
9999 mem: location 1163 is 2
9999 mem: location 1471 is 1176
9999 mem: location 1445 is 1589
9999 mem: location 1483 is 1199
9999 mem: location 1437 is 1593
9999 mem: skipping refcount at 1593
9999 mem: location 1437 is 1593
9999 mem: skipping refcount at 1593
9999 mem: storing 0 in location 1594
9999 mem: storing 1 in location 1595
9999 mem: storing 1 in location 1596
9999 mem: storing 1176 in location 1597
9999 mem: storing 1 in location 1598
9999 mem: storing 2 in location 1599
9999 mem: storing 1176 in location 1600
9999 mem: storing 1589 in location 1601
9999 mem: storing 1199 in location 1602
9999 mem: storing 1 in location 1603
 105 run: editor <- add-operation editor, op
9999 mem: location 1419 is 1154
9999 mem: location 1437 is 1593
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1408
9999 mem: incrementing refcount of 1154: 18 -> 19
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1593 in location 1409
9999 mem: incrementing refcount of 1593: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1408 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1589
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 2
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 0
9999 mem: location 1408 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1410
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1409 is 1593
9999 mem: location 1410 is 1165
9999 mem: location 1165 is 1539
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1593 in location 1256
9999 mem: incrementing refcount of 1593: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1539 in location 1257
9999 mem: incrementing refcount of 1539: 3 -> 4
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1605
9999 mem: storing 1605 in location 1258
9999 mem: incrementing refcount of 1605: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1258 is 1605
9999 mem: skipping refcount at 1605
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1606 is 0
9999 mem: location 1607 is 0
9999 mem: location 1258 is 1605
9999 mem: skipping refcount at 1605
9998 run: address to copy is 1606
9999 mem: storing 1606 in location 1259
 107 run: *val <- copy x
9999 mem: location 1256 is 1593
9999 mem: location 1259 is 1606
9999 mem: storing 1593 in location 1606
9999 mem: incrementing refcount of 1593: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1258 is 1605
9999 mem: skipping refcount at 1605
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1606 is 1593
9999 mem: location 1607 is 0
9999 mem: location 1258 is 1605
9999 mem: skipping refcount at 1605
9999 type: type deduced to be address$
9998 run: address to copy is 1607
9999 mem: storing 1607 in location 1260
 107 run: *next <- copy in
9999 mem: location 1257 is 1539
9999 mem: location 1260 is 1607
9999 mem: storing 1539 in location 1607
9999 mem: incrementing refcount of 1539: 4 -> 5
 107 run: reply result
9999 mem: location 1258 is 1605
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1605
9999 mem: location 1410 is 1165
9999 mem: decrementing refcount of 1539: 5 -> 4
9999 mem: storing 1605 in location 1165
9999 mem: incrementing refcount of 1605: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1408 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1589
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 2
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1605
9999 mem: location 1166 is 0
9999 mem: location 1408 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1411
 106 run: *redo <- copy 0
9999 mem: location 1411 is 1166
9999 mem: storing 0 in location 1166
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1408 is 1154
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9999 mem: decrementing refcount of 1154: 19 -> 18
9999 mem: storing 1154 in location 1419
9999 mem: incrementing refcount of 1154: 18 -> 19
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1418 is 1012
9999 mem: location 1419 is 1154
9999 mem: location 1424 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1154
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 99 -> 98
9999 mem: storing 1012 in location 1335
9999 mem: incrementing refcount of 1012: 98 -> 99
9999 mem: decrementing refcount of 1154: 19 -> 18
9999 mem: storing 1154 in location 1337
9999 mem: incrementing refcount of 1154: 18 -> 19
9999 mem: storing 0 in location 1347
 104 run: jump-unless go-render?, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1589
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 2
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1605
9999 mem: location 1166 is 0
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1338
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1589
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 2
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1605
9999 mem: location 1166 is 0
9999 mem: location 1337 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 2
9999 mem: storing 2 in location 1339
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1335 is 1012
9999 mem: location 1338 is 1
9999 mem: location 1339 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 99 -> 100
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1257
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1258
 105 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 105 run: *row <- copy new-row
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 105 run: *column <- copy new-column
9999 mem: location 1258 is 2
9999 mem: location 1260 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 100 -> 99
9999 mem: storing 1012 in location 1335
9999 mem: incrementing refcount of 1012: 99 -> 100
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1336 is 1548
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1548 in location 1291
9999 mem: incrementing refcount of 1548: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1291 is 1548
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1291 is 1548
9999 mem: skipping refcount at 1548
9999 mem: location 1549 is 1
9999 mem: location 1550 is 1542
9999 mem: location 1291 is 1548
9999 mem: skipping refcount at 1548
9998 run: address to copy is 1549
9999 mem: storing 1549 in location 1292
9990 schedule: read-event/editor-event-loop/run1002/scenario-editor-moves-to-previous-line-with-up-arrow
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1291 is 1548
9999 mem: skipping refcount at 1548
9999 mem: location 1549 is 1
9999 mem: location 1550 is 1542
9999 mem: location 1291 is 1548
9999 mem: skipping refcount at 1548
9998 run: address to copy is 1550
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1550 is 1542
9999 mem: storing 1542 in location 1293
9999 mem: incrementing refcount of 1542: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1293 is 1542
9999 mem: skipping refcount at 1542
9999 mem: storing 1 in location 1294
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1292 is 1549
9999 mem: location 1549 is 1
9999 mem: location 1294 is 1
9999 mem: storing 1 in location 1295
 105 run: jump-unless done?, 
9999 mem: location 1295 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1551 in location 1296
9999 mem: incrementing refcount of 1551: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1296 is 1551
9999 mem: skipping refcount at 1551
9999 mem: location 1552 is 0
9999 mem: location 1553 is 0
9999 mem: location 1554 is 0
9999 mem: location 1555 is 0
9999 mem: location 1291 is 1548
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1548
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: decrementing refcount of 1548: 3 -> 2
9999 mem: storing 1548 in location 1336
9999 mem: incrementing refcount of 1548: 2 -> 3
9999 mem: storing 1 in location 1344
9999 mem: storing 1 in location 1345
 104 run: jump-unless found?, 
9999 mem: location 1344 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1345 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1335 is 1012
9999 mem: location 1336 is 1548
9999 mem: location 1337 is 1154
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .a0bc      .
    .def       .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
