 101 run: assume-console [
    left-click 3, 0
    press left-arrow
    type [0]
  ]
parse: instruction: left-click
parse:   ingredient: {name: "3", properties: ["3": "literal"]}
parse:   ingredient: {name: "0", properties: ["0": "literal"]}
parse: instruction: press
parse:   ingredient: {name: "left-arrow", properties: ["left-arrow": ]}
parse: instruction: type
parse:   ingredient: {name: "0", properties: [_: "literal-string"]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: editor-event-loop ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1296
9999 mem: location 2 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1257
 102 run: console:address <- next-ingredient 
9999 mem: storing 1296 in location 1258
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1259
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1258 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1298
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1300
 103 run: break-unless x, 
9999 mem: location 1300 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1300 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1283
9999 mem: location 1300 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1301
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1300 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1283
9999 mem: location 1300 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1283
9999 mem: storing 1283 in location 1302
 103 run: max:number <- length *buf
9999 mem: location 1302 is 1283
9999 mem: storing 3 in location 1303
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1301 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1303 is 3
9999 mem: storing 0 in location 1304
 103 run: break-unless done?, 
9999 mem: location 1304 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1302 is 1283
9999 mem: location 1301 is 1296
9999 mem: location 1296 is 0
9999 run: address to copy is 1284
9999 run: its type is event
9999 mem: location 1284 is 2
9999 mem: location 1285 is 65513
9999 mem: location 1286 is 3
9999 mem: location 1287 is 0
9999 mem: storing 2 in location 1306
9999 mem: storing 65513 in location 1307
9999 mem: storing 3 in location 1308
9999 mem: storing 0 in location 1309
 103 run: *idx <- add *idx, 1
9999 mem: location 1301 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1301 is 1296
9999 mem: storing 1 in location 1296
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1306 is 2
9999 mem: location 1307 is 65513
9999 mem: location 1308 is 3
9999 mem: location 1309 is 0
9999 mem: location 1300 is 1296
9999 run: result 0 is [2, 65513, 3, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 2 in location 1260
9999 mem: storing 65513 in location 1261
9999 mem: storing 3 in location 1262
9999 mem: storing 0 in location 1263
9999 mem: storing 1296 in location 1258
9999 mem: storing 1 in location 1264
9999 mem: storing 0 in location 1265
 102 run: loop-unless found?, 
9999 mem: location 1264 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1265 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1260 is 2
9999 mem: location 1261 is 65513
9999 mem: location 1262 is 3
9999 mem: location 1263 is 0
9999 mem: storing 1261 in location 1266
 102 run: break-unless t, 
9999 mem: location 1266 is 1261
9999 run: jump-unless fell through
 102 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1257 is 1009
9999 mem: location 1259 is 1115
9999 mem: location 1266 is 1261
9999 mem: location 1261 is 65513
9999 mem: location 1262 is 3
9999 mem: location 1263 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: new alloc: 1311
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1313
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1314
 103 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1315
9999 mem: storing 3 in location 1316
9999 mem: storing 0 in location 1317
 103 run: jump-if editor, 1:offset
9999 mem: location 1314 is 1115
9999 run: jumping to instruction 6
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1315 is 65513
9999 mem: location 1316 is 3
9999 mem: location 1317 is 0
9999 run: address to copy is 1317
9999 run: its type is number
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1318
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1314 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1314 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1319
 103 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1318 is 0
9999 mem: location 1319 is 0
9999 mem: storing 0 in location 1320
 103 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1320 is 0
9999 run: jumping to instruction 11
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1314 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1314 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1321
 103 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1318 is 0
9999 mem: location 1321 is 9
9999 mem: storing 0 in location 1322
 103 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1322 is 0
9999 run: jumping to instruction 15
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1314 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1314 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1323
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1314 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1314 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1324
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1314 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1314 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1153
9999 mem: storing 1153 in location 1325
 103 run: click-row:number <- get t, row:offset
9999 mem: location 1315 is 65513
9999 mem: location 1316 is 3
9999 mem: location 1317 is 0
9999 run: address to copy is 1316
9999 run: its type is number
9999 mem: location 1316 is 3
9999 mem: storing 3 in location 1326
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1315 is 65513
9999 mem: location 1316 is 3
9999 mem: location 1317 is 0
9999 run: address to copy is 1317
9999 run: its type is number
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1318
 103 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1313 is 1009
9999 mem: location 1314 is 1115
9999 mem: location 1326 is 3
9999 mem: location 1318 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1180
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1181
 104 run: target-row:number <- next-ingredient 
9999 mem: storing 3 in location 1182
 104 run: target-column:number <- next-ingredient 
9999 mem: storing 0 in location 1183
 104 run: jump-if editor, 1:offset
9999 mem: location 1181 is 1115
9999 run: jumping to instruction 7
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1181 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1181 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1184
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1181 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1181 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1185
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1180 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 105 run: break-unless sc, 
9999 mem: location 1161 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1162
 105 run: reply height
9999 mem: location 1162 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1186
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1181 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1181 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1153
9999 mem: storing 1153 in location 1187
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1187 is 1153
9999 mem: storing 1153 in location 1188
 104 run: curr <- next-duplex curr
9999 mem: location 1187 is 1153
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1153 in location 1161
 105 run: jump-if in, 1:offset
9999 mem: location 1161 is 1153
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1153
9999 mem: location 1153 is 167
9999 mem: location 1154 is 1156
9999 mem: location 1155 is 0
9999 mem: location 1161 is 1153
9999 run: address to copy is 1154
9999 run: its type is address
9999 mem: location 1154 is 1156
9999 mem: storing 1156 in location 1162
 105 run: reply result
9999 mem: location 1162 is 1156
9999 run: result 0 is 1156
9999 mem: storing 1156 in location 1187
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1189
 104 run: column:number <- copy left
9999 mem: location 1184 is 0
9999 mem: storing 0 in location 1190
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1181 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1181 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1191
 104 run: *cursor-row <- copy target-row
9999 mem: location 1182 is 3
9999 mem: location 1191 is 1121
9999 mem: location 1191 is 1121
9999 mem: storing 3 in location 1121
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1181 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1181 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1192
 104 run: *cursor-column <- copy target-column
9999 mem: location 1183 is 0
9999 mem: location 1192 is 1122
9999 mem: location 1192 is 1122
9999 mem: storing 0 in location 1122
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1181 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1181 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1193
 104 run: break-unless curr, 
9999 mem: location 1187 is 1156
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1189 is 1
9999 mem: location 1186 is 5
9999 mem: storing 0 in location 1194
 104 run: break-if off-screen?, 
9999 mem: location 1194 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1189 is 1
9999 mem: location 1191 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1195
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 31
schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-moves-cursor-to-previous-line-with-left-arrow-at-start-of-line-4
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1187 is 1156
9999 mem: location 1156 is 97
9999 mem: location 1157 is 1163
9999 mem: location 1158 is 1153
9999 mem: location 1187 is 1156
9999 run: address to copy is 1156
9999 run: its type is number
9999 mem: location 1156 is 97
9999 mem: storing 97 in location 1197
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1198
 104 run: break-unless newline?, 
9999 mem: location 1198 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1190 is 0
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1200
 104 run: break-unless at-right?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1187 is 1156
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1156 in location 1161
 105 run: jump-if in, 1:offset
9999 mem: location 1161 is 1156
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1156
9999 mem: location 1156 is 97
9999 mem: location 1157 is 1163
9999 mem: location 1158 is 1153
9999 mem: location 1161 is 1156
9999 run: address to copy is 1157
9999 run: its type is address
9999 mem: location 1157 is 1163
9999 mem: storing 1163 in location 1162
 105 run: reply result
9999 mem: location 1162 is 1163
9999 run: result 0 is 1163
9999 mem: storing 1163 in location 1187
 104 run: prev <- next-duplex prev
9999 mem: location 1188 is 1153
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1153 in location 1161
 105 run: jump-if in, 1:offset
9999 mem: location 1161 is 1153
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1153
9999 mem: location 1153 is 167
9999 mem: location 1154 is 1156
9999 mem: location 1155 is 0
9999 mem: location 1161 is 1153
9999 run: address to copy is 1154
9999 run: its type is address
9999 mem: location 1154 is 1156
9999 mem: storing 1156 in location 1162
 105 run: reply result
9999 mem: location 1162 is 1156
9999 run: result 0 is 1156
9999 mem: storing 1156 in location 1188
 104 run: column <- add column, 1
9999 mem: location 1190 is 0
9999 mem: storing 1 in location 1190
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1187 is 1163
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1189 is 1
9999 mem: location 1186 is 5
9999 mem: storing 0 in location 1194
 104 run: break-if off-screen?, 
9999 mem: location 1194 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1189 is 1
9999 mem: location 1191 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1195
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1187 is 1163
9999 mem: location 1163 is 98
9999 mem: location 1164 is 1166
9999 mem: location 1165 is 1156
9999 mem: location 1187 is 1163
9999 run: address to copy is 1163
9999 run: its type is number
9999 mem: location 1163 is 98
9999 mem: storing 98 in location 1197
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 98
9999 mem: storing 0 in location 1198
 104 run: break-unless newline?, 
9999 mem: location 1198 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1190 is 1
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1200
 104 run: break-unless at-right?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1187 is 1163
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1161
 105 run: jump-if in, 1:offset
9999 mem: location 1161 is 1163
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1163
9999 mem: location 1163 is 98
9999 mem: location 1164 is 1166
9999 mem: location 1165 is 1156
9999 mem: location 1161 is 1163
9999 run: address to copy is 1164
9999 run: its type is address
9999 mem: location 1164 is 1166
9999 mem: storing 1166 in location 1162
 105 run: reply result
9999 mem: location 1162 is 1166
9999 run: result 0 is 1166
9999 mem: storing 1166 in location 1187
 104 run: prev <- next-duplex prev
9999 mem: location 1188 is 1156
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1156 in location 1161
 105 run: jump-if in, 1:offset
9999 mem: location 1161 is 1156
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1156
9999 mem: location 1156 is 97
9999 mem: location 1157 is 1163
9999 mem: location 1158 is 1153
9999 mem: location 1161 is 1156
9999 run: address to copy is 1157
9999 run: its type is address
9999 mem: location 1157 is 1163
9999 mem: storing 1163 in location 1162
 105 run: reply result
9999 mem: location 1162 is 1163
9999 run: result 0 is 1163
9999 mem: storing 1163 in location 1188
 104 run: column <- add column, 1
9999 mem: location 1190 is 1
9999 mem: storing 2 in location 1190
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1187 is 1166
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1189 is 1
9999 mem: location 1186 is 5
9999 mem: storing 0 in location 1194
 104 run: break-if off-screen?, 
9999 mem: location 1194 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1189 is 1
9999 mem: location 1191 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1195
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1187 is 1166
9999 mem: location 1166 is 99
9999 mem: location 1167 is 1169
9999 mem: location 1168 is 1163
9999 mem: location 1187 is 1166
9999 run: address to copy is 1166
9999 run: its type is number
9999 mem: location 1166 is 99
9999 mem: storing 99 in location 1197
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 99
9999 mem: storing 0 in location 1198
 104 run: break-unless newline?, 
9999 mem: location 1198 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1190 is 2
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1200
 104 run: break-unless at-right?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1187 is 1166
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1166 in location 1161
 105 run: jump-if in, 1:offset
9999 mem: location 1161 is 1166
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1166
9999 mem: location 1166 is 99
9999 mem: location 1167 is 1169
9999 mem: location 1168 is 1163
9999 mem: location 1161 is 1166
9999 run: address to copy is 1167
9999 run: its type is address
9999 mem: location 1167 is 1169
9999 mem: storing 1169 in location 1162
 105 run: reply result
9999 mem: location 1162 is 1169
9999 run: result 0 is 1169
9999 mem: storing 1169 in location 1187
 104 run: prev <- next-duplex prev
9999 mem: location 1188 is 1163
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1161
 105 run: jump-if in, 1:offset
9999 mem: location 1161 is 1163
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1163
9999 mem: location 1163 is 98
9999 mem: location 1164 is 1166
9999 mem: location 1165 is 1156
9999 mem: location 1161 is 1163
9999 run: address to copy is 1164
9999 run: its type is address
9999 mem: location 1164 is 1166
9999 mem: storing 1166 in location 1162
 105 run: reply result
9999 mem: location 1162 is 1166
9999 run: result 0 is 1166
9999 mem: storing 1166 in location 1188
 104 run: column <- add column, 1
9999 mem: location 1190 is 2
9999 mem: storing 3 in location 1190
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1187 is 1169
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1189 is 1
9999 mem: location 1186 is 5
9999 mem: storing 0 in location 1194
 104 run: break-if off-screen?, 
9999 mem: location 1194 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1189 is 1
9999 mem: location 1191 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1195
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1187 is 1169
9999 mem: location 1169 is 10
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1166
9999 mem: location 1187 is 1169
9999 run: address to copy is 1169
9999 run: its type is number
9999 mem: location 1169 is 10
9999 mem: storing 10 in location 1197
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 10
9999 mem: storing 1 in location 1198
 104 run: break-unless newline?, 
9999 mem: location 1198 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1189 is 1
9999 mem: location 1191 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1195
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 43
 104 run: row <- add row, 1
9999 mem: location 1189 is 1
9999 mem: storing 2 in location 1189
 104 run: column <- copy left
9999 mem: location 1184 is 0
9999 mem: storing 0 in location 1190
 104 run: curr <- next-duplex curr
9999 mem: location 1187 is 1169
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1169 in location 1161
 105 run: jump-if in, 1:offset
9999 mem: location 1161 is 1169
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1169
9999 mem: location 1169 is 10
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1166
9999 mem: location 1161 is 1169
9999 run: address to copy is 1170
9999 run: its type is address
9999 mem: location 1170 is 1172
9999 mem: storing 1172 in location 1162
 105 run: reply result
9999 mem: location 1162 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1187
 104 run: prev <- next-duplex prev
9999 mem: location 1188 is 1166
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1166 in location 1161
 105 run: jump-if in, 1:offset
9999 mem: location 1161 is 1166
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1166
9999 mem: location 1166 is 99
9999 mem: location 1167 is 1169
9999 mem: location 1168 is 1163
9999 mem: location 1161 is 1166
9999 run: address to copy is 1167
9999 run: its type is address
9999 mem: location 1167 is 1169
9999 mem: storing 1169 in location 1162
 105 run: reply result
9999 mem: location 1162 is 1169
9999 run: result 0 is 1169
9999 mem: storing 1169 in location 1188
 104 run: loop +next-character:label
9999 run: jumping to instruction 22
 104 run: break-unless curr, 
9999 mem: location 1187 is 1172
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1189 is 2
9999 mem: location 1186 is 5
9999 mem: storing 0 in location 1194
 104 run: break-if off-screen?, 
9999 mem: location 1194 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1189 is 2
9999 mem: location 1191 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1195
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1187 is 1172
9999 mem: location 1172 is 10
9999 mem: location 1173 is 1175
9999 mem: location 1174 is 1169
9999 mem: location 1187 is 1172
9999 run: address to copy is 1172
9999 run: its type is number
9999 mem: location 1172 is 10
9999 mem: storing 10 in location 1197
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 10
9999 mem: storing 1 in location 1198
 104 run: break-unless newline?, 
9999 mem: location 1198 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1189 is 2
9999 mem: location 1191 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1195
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 43
 104 run: row <- add row, 1
9999 mem: location 1189 is 2
9999 mem: storing 3 in location 1189
 104 run: column <- copy left
9999 mem: location 1184 is 0
9999 mem: storing 0 in location 1190
 104 run: curr <- next-duplex curr
9999 mem: location 1187 is 1172
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1161
 105 run: jump-if in, 1:offset
9999 mem: location 1161 is 1172
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1172
9999 mem: location 1172 is 10
9999 mem: location 1173 is 1175
9999 mem: location 1174 is 1169
9999 mem: location 1161 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1175
9999 mem: storing 1175 in location 1162
 105 run: reply result
9999 mem: location 1162 is 1175
9999 run: result 0 is 1175
9999 mem: storing 1175 in location 1187
 104 run: prev <- next-duplex prev
9999 mem: location 1188 is 1169
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1169 in location 1161
 105 run: jump-if in, 1:offset
9999 mem: location 1161 is 1169
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1169
9999 mem: location 1169 is 10
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1166
9999 mem: location 1161 is 1169
9999 run: address to copy is 1170
9999 run: its type is address
9999 mem: location 1170 is 1172
9999 mem: storing 1172 in location 1162
 105 run: reply result
9999 mem: location 1162 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1188
 104 run: loop +next-character:label
9999 run: jumping to instruction 22
 104 run: break-unless curr, 
9999 mem: location 1187 is 1175
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1189 is 3
9999 mem: location 1186 is 5
9999 mem: storing 0 in location 1194
 104 run: break-if off-screen?, 
9999 mem: location 1194 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1189 is 3
9999 mem: location 1191 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 1 in location 1195
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1195 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1190 is 0
9999 mem: location 1192 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1196
 104 run: break-unless at-cursor?, 
9999 mem: location 1196 is 1
9999 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1188 is 1172
9999 mem: location 1193 is 1118
9999 mem: location 1193 is 1118
9999 mem: storing 1172 in location 1118
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1187 is 1175
9999 mem: location 1175 is 100
9999 mem: location 1176 is 0
9999 mem: location 1177 is 1172
9999 mem: location 1187 is 1175
9999 run: address to copy is 1175
9999 run: its type is number
9999 mem: location 1175 is 100
9999 mem: storing 100 in location 1197
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1198
 104 run: break-unless newline?, 
9999 mem: location 1198 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1190 is 0
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1200
 104 run: break-unless at-right?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1187 is 1175
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1175 in location 1161
 105 run: jump-if in, 1:offset
9999 mem: location 1161 is 1175
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1175
9999 mem: location 1175 is 100
9999 mem: location 1176 is 0
9999 mem: location 1177 is 1172
9999 mem: location 1161 is 1175
9999 run: address to copy is 1176
9999 run: its type is address
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1162
 105 run: reply result
9999 mem: location 1162 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1187
 104 run: prev <- next-duplex prev
9999 mem: location 1188 is 1172
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1161
 105 run: jump-if in, 1:offset
9999 mem: location 1161 is 1172
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1172
9999 mem: location 1172 is 10
9999 mem: location 1173 is 1175
9999 mem: location 1174 is 1169
9999 mem: location 1161 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1175
9999 mem: storing 1175 in location 1162
 105 run: reply result
9999 mem: location 1162 is 1175
9999 run: result 0 is 1175
9999 mem: storing 1175 in location 1188
 104 run: column <- add column, 1
9999 mem: location 1190 is 0
9999 mem: storing 1 in location 1190
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1187 is 0
9999 run: jumping to instruction 61
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1189 is 3
9999 mem: location 1191 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 1 in location 1195
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1190 is 1
9999 mem: location 1192 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1201
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1195 is 1
9999 mem: location 1201 is 0
9999 mem: storing 0 in location 1202
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1189 is 3
9999 mem: location 1191 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1203
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1202 is 0
9999 mem: location 1203 is 0
9999 mem: storing 0 in location 1204
 104 run: break-unless before-cursor?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 72
 104 run: reply editor/same-as-ingredient:1
9999 mem: location 1181 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1314
 103 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1327
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1314 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1314 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 3
9999 mem: storing 3 in location 1328
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1314 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1314 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1329
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1314 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1314 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1153
9999 mem: storing 1153 in location 1330
 103 run: break-unless undo-coalesce-tag, 
9999 mem: location 1327 is 0
9999 run: jumping to instruction 43
 103 run: op:address:operation <- new operation:type
9999 mem: storing 1212 in location 1332
 103 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1323 is 1
9999 mem: location 1324 is 0
9999 mem: location 1325 is 1153
9999 mem: location 1328 is 3
9999 mem: location 1329 is 0
9999 mem: location 1330 is 1153
9999 mem: location 1327 is 0
9999 mem: location 1332 is 1212
9999 mem: location 1332 is 1212
9999 mem: storing 1 in location 1212
9999 mem: storing 1 in location 1213
9999 mem: storing 0 in location 1214
9999 mem: storing 1153 in location 1215
9999 mem: storing 3 in location 1216
9999 mem: storing 0 in location 1217
9999 mem: storing 1153 in location 1218
9999 mem: storing 0 in location 1219
 103 run: editor <- add-operation editor, op
9999 mem: location 1314 is 1115
9999 mem: location 1332 is 1212
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1251
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1212 in location 1252
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1251 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1251 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1253
 104 run: *undo <- push op, *undo
9999 mem: location 1252 is 1212
9999 mem: location 1253 is 1124
9999 mem: location 1124 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1212 in location 1207
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1208
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1339
9999 mem: storing 1339 in location 1209
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1209 is 1339
9999 mem: location 1339 is 0
9999 mem: location 1340 is 0
9999 mem: location 1209 is 1339
9999 run: address to copy is 1339
9999 mem: storing 1339 in location 1210
 105 run: *val <- copy x
9999 mem: location 1207 is 1212
9999 mem: location 1210 is 1339
9999 mem: location 1210 is 1339
9999 mem: storing 1212 in location 1339
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1209 is 1339
9999 mem: location 1339 is 1212
9999 mem: location 1340 is 0
9999 mem: location 1209 is 1339
9999 run: address to copy is 1340
9999 mem: storing 1340 in location 1211
 105 run: *next <- copy in
9999 mem: location 1208 is 0
9999 mem: location 1211 is 1340
9999 mem: location 1211 is 1340
9999 mem: storing 0 in location 1340
 105 run: reply result
9999 mem: location 1209 is 1339
9999 run: result 0 is 1339
9999 mem: location 1253 is 1124
9999 mem: storing 1339 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1251 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1251 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1254
 104 run: *redo <- copy 0
9999 mem: location 1254 is 1125
9999 mem: location 1254 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1251 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1314
 103 run: reply 1/true
 102 run: loop +next-event:label
9999 run: jumping to instruction 6
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1258 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1300
 103 run: break-unless x, 
9999 mem: location 1300 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1300 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1297 is 1283
9999 mem: location 1300 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1301
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1300 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1297 is 1283
9999 mem: location 1300 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1283
9999 mem: storing 1283 in location 1302
 103 run: max:number <- length *buf
9999 mem: location 1302 is 1283
9999 mem: storing 3 in location 1303
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1301 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1303 is 3
9999 mem: storing 0 in location 1304
 103 run: break-unless done?, 
9999 mem: location 1304 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1302 is 1283
9999 mem: location 1301 is 1296
9999 mem: location 1296 is 1
9999 run: address to copy is 1288
9999 run: its type is event
9999 mem: location 1288 is 1
9999 mem: location 1289 is 65515
9999 mem: location 1290 is 0
9999 mem: location 1291 is 0
9999 mem: storing 1 in location 1306
9999 mem: storing 65515 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: storing 0 in location 1309
 103 run: *idx <- add *idx, 1
9999 mem: location 1301 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1301 is 1296
9999 mem: storing 2 in location 1296
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1306 is 1
9999 mem: location 1307 is 65515
9999 mem: location 1308 is 0
9999 mem: location 1309 is 0
9999 mem: location 1300 is 1296
9999 run: result 0 is [1, 65515, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1260
9999 mem: storing 65515 in location 1261
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
9999 mem: storing 1296 in location 1258
9999 mem: storing 1 in location 1264
9999 mem: storing 0 in location 1265
 102 run: loop-unless found?, 
9999 mem: location 1264 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1265 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1260 is 1
9999 mem: location 1261 is 65515
9999 mem: location 1262 is 0
9999 mem: location 1263 is 0
9999 mem: storing 0 in location 1266
 102 run: break-unless t, 
9999 mem: location 1266 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1266 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1257 is 1009
9999 mem: location 1259 is 1115
9999 mem: location 1260 is 1
9999 mem: location 1261 is 65515
9999 mem: location 1262 is 0
9999 mem: location 1263 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: new alloc: 1341
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1343
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1344
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1345
9999 mem: storing 65515 in location 1346
9999 mem: storing 0 in location 1347
9999 mem: storing 0 in location 1348
 103 run: jump-if editor, 1:offset
9999 mem: location 1344 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1343 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 104 run: break-unless sc, 
9999 mem: location 1161 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1162
 104 run: reply width
9999 mem: location 1162 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1349
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1343 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 104 run: break-unless sc, 
9999 mem: location 1161 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1162
 104 run: reply height
9999 mem: location 1162 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1350
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1351
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1352
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1353
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1354
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1355
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1354 is 1121
9999 mem: location 1121 is 3
9999 mem: location 1354 is 1121
9999 mem: location 1354 is 1121
9999 mem: storing 3 in location 1356
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1355 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1355 is 1122
9999 mem: location 1355 is 1122
9999 mem: storing 0 in location 1357
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1345 is 1
9999 mem: location 1346 is 65515
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 mem: storing 0 in location 1358
 103 run: break-unless c, 
9999 mem: location 1358 is 0
9999 run: jumping to instruction 432
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1345 is 1
9999 mem: location 1346 is 65515
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 mem: storing 1346 in location 1413
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1413 is 1346
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1413 is 1346
9999 mem: location 1346 is 65515
9999 mem: storing 0 in location 1375
 103 run: break-unless page-up?, 
9999 mem: location 1375 is 0
9999 run: jumping to instruction 477
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1413 is 1346
9999 mem: location 1346 is 65515
9999 mem: storing 0 in location 1391
 103 run: break-unless page-down?, 
9999 mem: location 1391 is 0
9999 run: jumping to instruction 519
 103 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1413 is 1346
9999 mem: location 1346 is 65515
9999 mem: storing 0 in location 1398
 103 run: break-unless move-to-end-of-line?, 
9999 mem: location 1398 is 0
9999 run: jumping to instruction 556
 103 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1413 is 1346
9999 mem: location 1346 is 65515
9999 mem: storing 0 in location 1399
 103 run: break-unless move-to-start-of-line?, 
9999 mem: location 1399 is 0
9999 run: jumping to instruction 593
 103 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1413 is 1346
9999 mem: location 1346 is 65515
9999 mem: storing 0 in location 1414
 103 run: break-unless move-to-next-line?, 
9999 mem: location 1414 is 0
9999 run: jumping to instruction 630
 103 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1413 is 1346
9999 mem: location 1346 is 65515
9999 mem: storing 0 in location 1415
 103 run: break-unless move-to-previous-line?, 
9999 mem: location 1415 is 0
9999 run: jumping to instruction 667
 103 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1413 is 1346
9999 mem: location 1346 is 65515
9999 mem: storing 1 in location 1416
 103 run: break-unless move-to-previous-character?, 
9999 mem: location 1416 is 1
9999 run: jump-unless fell through
 103 run: trace 10, [app], [left arrow]
  10 app: left arrow 
 103 run: prev:address:duplex-list <- prev-duplex *before-cursor
9999 mem: location 1353 is 1118
9999 mem: location 1118 is 1172
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1161
 104 run: jump-if in, 1:offset
9999 mem: location 1161 is 1172
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1161 is 1172
9999 mem: location 1172 is 10
9999 mem: location 1173 is 1175
9999 mem: location 1174 is 1169
9999 mem: location 1161 is 1172
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1169
9999 mem: storing 1169 in location 1162
 104 run: reply result
9999 mem: location 1162 is 1169
9999 run: result 0 is 1169
9999 mem: storing 1169 in location 1417
 103 run: jump-if prev, 1:offset
9999 mem: location 1417 is 1169
9999 run: jumping to instruction 675
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 3
9999 mem: storing 3 in location 1378
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1379
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1153
9999 mem: storing 1153 in location 1380
 103 run: editor, go-render? <- move-cursor-coordinates-left editor
9999 mem: location 1344 is 1115
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: new alloc: 1427
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1429
 104 run: before-cursor:address:duplex-list <- get *editor, before-cursor:offset
9999 mem: location 1429 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1429 is 1115
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 1172
9999 mem: storing 1172 in location 1430
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1429 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1429 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1431
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1429 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1429 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1432
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1429 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1429 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1433
 104 run: at-left-margin?:boolean <- equal *cursor-column, left
9999 mem: location 1432 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1433 is 0
9999 mem: storing 1 in location 1434
 104 run: break-if at-left-margin?, 
9999 mem: location 1434 is 1
9999 run: jumping to instruction 12
 104 run: top-of-screen?:boolean <- equal *cursor-row, 1
9999 mem: location 1431 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1435
 104 run: go-render?:boolean <- copy 0/false
9999 mem: storing 0 in location 1436
 104 run: break-if top-of-screen?, 
9999 mem: location 1435 is 0
9999 run: jump-if fell through
 104 run: *cursor-row <- subtract *cursor-row, 1
9999 mem: location 1431 is 1121
9999 mem: location 1121 is 3
9999 mem: location 1431 is 1121
9999 mem: storing 2 in location 1121
 104 run: break-unless top-of-screen?, 
9999 mem: location 1435 is 0
9999 run: jumping to instruction 30
 104 run: previous-character:character <- get *before-cursor, value:offset
9999 mem: location 1430 is 1172
9999 mem: location 1172 is 10
9999 mem: location 1173 is 1175
9999 mem: location 1174 is 1169
9999 mem: location 1430 is 1172
9999 run: address to copy is 1172
9999 run: its type is number
9999 mem: location 1172 is 10
9999 mem: storing 10 in location 1440
 104 run: previous-character-is-newline?:boolean <- equal previous-character, 10/newline
9999 mem: location 1440 is 10
9999 mem: storing 1 in location 1441
 104 run: break-unless previous-character-is-newline?, 
9999 mem: location 1441 is 1
9999 run: jump-unless fell through
 104 run: trace 10, [app], [switching to previous line]
  10 app: switching to previous line 
 104 run: d:address:duplex-list <- get *editor, data:offset
9999 mem: location 1429 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1429 is 1115
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1153
9999 mem: storing 1153 in location 1442
 104 run: end-of-line:number <- previous-line-length before-cursor, d
9999 mem: location 1430 is 1172
9999 mem: location 1442 is 1153
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1147
 105 run: start:address:duplex-list <- next-ingredient 
9999 mem: storing 1153 in location 1148
 105 run: result:number <- copy 0
9999 mem: storing 0 in location 1149
 105 run: jump-if curr, 1:offset
9999 mem: location 1147 is 1172
9999 run: jumping to instruction 6
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1147 is 1172
9999 mem: location 1148 is 1153
9999 mem: storing 0 in location 1150
 105 run: jump-unless at-start?, 1:offset
9999 mem: location 1150 is 0
9999 run: jumping to instruction 9
 105 run: curr <- prev-duplex curr
9999 mem: location 1147 is 1172
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1161
 106 run: jump-if in, 1:offset
9999 mem: location 1161 is 1172
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1161 is 1172
9999 mem: location 1172 is 10
9999 mem: location 1173 is 1175
9999 mem: location 1174 is 1169
9999 mem: location 1161 is 1172
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1169
9999 mem: storing 1169 in location 1162
 106 run: reply result
9999 mem: location 1162 is 1169
9999 run: result 0 is 1169
9999 mem: storing 1169 in location 1147
 105 run: break-unless curr, 
9999 mem: location 1147 is 1169
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1147 is 1169
9999 mem: location 1148 is 1153
9999 mem: storing 0 in location 1150
 105 run: break-if at-start?, 
9999 mem: location 1150 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1147 is 1169
9999 mem: location 1169 is 10
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1166
9999 mem: location 1147 is 1169
9999 run: address to copy is 1169
9999 run: its type is number
9999 mem: location 1169 is 10
9999 mem: storing 10 in location 1151
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1151 is 10
9999 mem: storing 1 in location 1152
 105 run: break-if at-newline?, 
9999 mem: location 1152 is 1
9999 run: jumping to instruction 19
 105 run: reply result
9999 mem: location 1149 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1443
 104 run: *cursor-column <- add left, end-of-line
9999 mem: location 1433 is 0
9999 mem: location 1443 is 0
9999 mem: location 1432 is 1122
9999 mem: storing 0 in location 1122
 104 run: reply editor/same-as-ingredient:0, go-render?
9999 mem: location 1429 is 1115
9999 mem: location 1436 is 0
9999 run: result 0 is 1115
9999 run: result 1 is 0
9999 mem: storing 1115 in location 1344
9999 mem: storing 0 in location 1401
 103 run: *before-cursor <- copy prev
9999 mem: location 1417 is 1169
9999 mem: location 1353 is 1118
9999 mem: location 1353 is 1118
9999 mem: storing 1169 in location 1118
 103 run: undo-coalesce-tag:number <- copy 1/left-arrow
9999 mem: storing 1 in location 1381
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1169
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1382
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1169
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1383
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1169
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1153
9999 mem: storing 1153 in location 1384
 103 run: break-unless undo-coalesce-tag, 
9999 mem: location 1381 is 1
9999 run: jump-unless fell through
 103 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1169
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1362
 103 run: break-unless *undo, 
9999 mem: location 1362 is 1124
9999 mem: location 1124 is 1339
9999 run: jump-unless fell through
 103 run: op:address:operation <- first *undo
9999 mem: location 1362 is 1124
9999 mem: location 1124 is 1339
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:list <- next-ingredient 
9999 mem: storing 1339 in location 1161
 104 run: result:location <- get *in, value:offset
9999 mem: location 1161 is 1339
9999 mem: location 1339 is 1212
9999 mem: location 1340 is 0
9999 mem: location 1161 is 1339
9999 run: address to copy is 1339
9999 run: its type is number
9999 mem: location 1339 is 1212
9999 mem: storing 1212 in location 1162
 104 run: reply result
9999 mem: location 1162 is 1212
9999 run: result 0 is 1212
9999 mem: storing 1212 in location 1361
 103 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1361 is 1212
9999 mem: location 1212 is 1
9999 mem: location 1213 is 1
9999 mem: location 1214 is 0
9999 mem: location 1215 is 1153
9999 mem: location 1216 is 3
9999 mem: location 1217 is 0
9999 mem: location 1218 is 1153
9999 mem: location 1219 is 0
9999 mem: location 1220 is 0
9999 mem: location 1221 is 0
9999 mem: location 1222 is 0
9999 mem: location 1361 is 1212
9999 mem: storing 1213 in location 1367
 103 run: break-unless move, 
9999 mem: location 1367 is 1213
9999 run: jump-unless fell through
 103 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1367 is 1213
9999 mem: location 1213 is 1
9999 mem: location 1214 is 0
9999 mem: location 1215 is 1153
9999 mem: location 1216 is 3
9999 mem: location 1217 is 0
9999 mem: location 1218 is 1153
9999 mem: location 1219 is 0
9999 mem: location 1367 is 1213
9999 run: address to copy is 1219
9999 run: its type is number
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1385
 103 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1381 is 1
9999 mem: location 1385 is 0
9999 mem: storing 0 in location 1386
 103 run: break-unless coalesce?, 
9999 mem: location 1386 is 0
9999 run: jumping to instruction 702
 103 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1445
9999 mem: storing 1445 in location 1361
 103 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1378 is 3
9999 mem: location 1379 is 0
9999 mem: location 1380 is 1153
9999 mem: location 1382 is 2
9999 mem: location 1383 is 0
9999 mem: location 1384 is 1153
9999 mem: location 1381 is 1
9999 mem: location 1361 is 1445
9999 mem: location 1361 is 1445
9999 mem: storing 1 in location 1445
9999 mem: storing 3 in location 1446
9999 mem: storing 0 in location 1447
9999 mem: storing 1153 in location 1448
9999 mem: storing 2 in location 1449
9999 mem: storing 0 in location 1450
9999 mem: storing 1153 in location 1451
9999 mem: storing 1 in location 1452
 103 run: editor <- add-operation editor, op
9999 mem: location 1344 is 1115
9999 mem: location 1361 is 1445
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1251
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1445 in location 1252
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1251 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1169
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1339
9999 mem: location 1125 is 0
9999 mem: location 1251 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1253
 104 run: *undo <- push op, *undo
9999 mem: location 1252 is 1445
9999 mem: location 1253 is 1124
9999 mem: location 1124 is 1339
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1445 in location 1207
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1339 in location 1208
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1456
9999 mem: storing 1456 in location 1209
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1209 is 1456
9999 mem: location 1456 is 0
9999 mem: location 1457 is 0
9999 mem: location 1209 is 1456
9999 run: address to copy is 1456
9999 mem: storing 1456 in location 1210
 105 run: *val <- copy x
9999 mem: location 1207 is 1445
9999 mem: location 1210 is 1456
9999 mem: location 1210 is 1456
9999 mem: storing 1445 in location 1456
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1209 is 1456
9999 mem: location 1456 is 1445
9999 mem: location 1457 is 0
9999 mem: location 1209 is 1456
9999 run: address to copy is 1457
9999 mem: storing 1457 in location 1211
 105 run: *next <- copy in
9999 mem: location 1208 is 1339
9999 mem: location 1211 is 1457
9999 mem: location 1211 is 1457
9999 mem: storing 1339 in location 1457
 105 run: reply result
9999 mem: location 1209 is 1456
9999 run: result 0 is 1456
9999 mem: location 1253 is 1124
9999 mem: storing 1456 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1251 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1169
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1456
9999 mem: location 1125 is 0
9999 mem: location 1251 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1254
 104 run: *redo <- copy 0
9999 mem: location 1254 is 1125
9999 mem: location 1254 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1251 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1344
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1343 is 1009
9999 mem: location 1344 is 1115
9999 mem: location 1401 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1257
9999 mem: storing 1115 in location 1259
9999 mem: storing 0 in location 1267
 102 run: break-unless go-render?, 
9999 mem: location 1267 is 0
9999 run: jumping to instruction 22
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1258 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1300
 103 run: break-unless x, 
9999 mem: location 1300 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1300 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1297 is 1283
9999 mem: location 1300 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1301
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1300 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1297 is 1283
9999 mem: location 1300 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1283
9999 mem: storing 1283 in location 1302
 103 run: max:number <- length *buf
9999 mem: location 1302 is 1283
9999 mem: storing 3 in location 1303
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1301 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1303 is 3
9999 mem: storing 0 in location 1304
 103 run: break-unless done?, 
9999 mem: location 1304 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1302 is 1283
9999 mem: location 1301 is 1296
9999 mem: location 1296 is 2
9999 run: address to copy is 1292
9999 run: its type is event
9999 mem: location 1292 is 0
9999 mem: location 1293 is 48
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: storing 0 in location 1306
9999 mem: storing 48 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: storing 0 in location 1309
 103 run: *idx <- add *idx, 1
9999 mem: location 1301 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1301 is 1296
9999 mem: storing 3 in location 1296
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1306 is 0
9999 mem: location 1307 is 48
9999 mem: location 1308 is 0
9999 mem: location 1309 is 0
9999 mem: location 1300 is 1296
9999 run: result 0 is [0, 48, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1260
9999 mem: storing 48 in location 1261
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
9999 mem: storing 1296 in location 1258
9999 mem: storing 1 in location 1264
9999 mem: storing 0 in location 1265
 102 run: loop-unless found?, 
9999 mem: location 1264 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1265 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1260 is 0
9999 mem: location 1261 is 48
9999 mem: location 1262 is 0
9999 mem: location 1263 is 0
9999 mem: storing 0 in location 1266
 102 run: break-unless t, 
9999 mem: location 1266 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1266 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1257 is 1009
9999 mem: location 1259 is 1115
9999 mem: location 1260 is 0
9999 mem: location 1261 is 48
9999 mem: location 1262 is 0
9999 mem: location 1263 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1343
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1344
 103 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1345
9999 mem: storing 48 in location 1346
9999 mem: storing 0 in location 1347
9999 mem: storing 0 in location 1348
 103 run: jump-if editor, 1:offset
9999 mem: location 1344 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1343 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 104 run: break-unless sc, 
9999 mem: location 1161 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1162
 104 run: reply width
9999 mem: location 1162 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1349
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1343 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 104 run: break-unless sc, 
9999 mem: location 1161 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1162
 104 run: reply height
9999 mem: location 1162 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1350
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1169
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1456
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1351
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1169
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1456
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1352
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1169
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1456
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1353
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1169
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1456
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1354
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1169
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1456
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1355
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1354 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1354 is 1121
9999 mem: location 1354 is 1121
9999 mem: storing 2 in location 1356
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1355 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1355 is 1122
9999 mem: location 1355 is 1122
9999 mem: storing 0 in location 1357
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1345 is 0
9999 mem: location 1346 is 48
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 mem: storing 1346 in location 1358
 103 run: break-unless c, 
9999 mem: location 1358 is 1346
9999 run: jump-unless fell through
 103 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 103 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1358 is 1346
9999 mem: location 1346 is 48
9999 mem: storing 0 in location 1359
 103 run: break-unless redo?, 
9999 mem: location 1359 is 0
9999 run: jumping to instruction 60
 103 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1358 is 1346
9999 mem: location 1346 is 48
9999 mem: storing 0 in location 1370
 103 run: break-unless undo?, 
9999 mem: location 1370 is 0
9999 run: jumping to instruction 107
 103 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1358 is 1346
9999 mem: location 1346 is 48
9999 mem: storing 0 in location 1375
 103 run: break-unless page-up?, 
9999 mem: location 1375 is 0
9999 run: jumping to instruction 149
 103 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1358 is 1346
9999 mem: location 1346 is 48
9999 mem: storing 0 in location 1391
 103 run: break-unless page-down?, 
9999 mem: location 1391 is 0
9999 run: jumping to instruction 191
 103 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1358 is 1346
9999 mem: location 1346 is 48
9999 mem: storing 0 in location 1392
 103 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1392 is 0
9999 run: jumping to instruction 210
 103 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1358 is 1346
9999 mem: location 1346 is 48
9999 mem: storing 0 in location 1397
 103 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1397 is 0
9999 run: jumping to instruction 229
schedule: handle-keyboard-event/editor-event-loop/run1001/scenario-editor-moves-cursor-to-previous-line-with-left-arrow-at-start-of-line-4
 103 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1358 is 1346
9999 mem: location 1346 is 48
9999 mem: storing 0 in location 1398
 103 run: break-unless move-to-end-of-line?, 
9999 mem: location 1398 is 0
9999 run: jumping to instruction 266
 103 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1358 is 1346
9999 mem: location 1346 is 48
9999 mem: storing 0 in location 1399
 103 run: break-unless move-to-start-of-line?, 
9999 mem: location 1399 is 0
9999 run: jumping to instruction 303
 103 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1358 is 1346
9999 mem: location 1346 is 48
9999 mem: storing 0 in location 1400
 103 run: break-unless delete-previous-character?, 
9999 mem: location 1400 is 0
9999 run: jumping to instruction 343
 103 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1358 is 1346
9999 mem: location 1346 is 48
9999 mem: storing 0 in location 1405
 103 run: break-unless tab?, 
9999 mem: location 1405 is 0
9999 run: jumping to instruction 379
 103 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1358 is 1346
9999 mem: location 1346 is 48
9999 mem: storing 0 in location 1409
 103 run: break-unless newline?, 
9999 mem: location 1409 is 0
9999 run: jumping to instruction 397
 103 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1358 is 1346
9999 mem: location 1346 is 48
9999 mem: storing 1 in location 1412
 103 run: jump-if regular-character?, 1:offset
9999 mem: location 1412 is 1
9999 run: jumping to instruction 401
 103 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1169
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1456
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1153
9999 mem: storing 1153 in location 1393
 103 run: cursor-before:address:duplex-list <- copy *before-cursor
9999 mem: location 1353 is 1118
9999 mem: location 1118 is 1169
9999 mem: location 1353 is 1118
9999 mem: location 1353 is 1118
9999 mem: storing 1169 in location 1406
 103 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1344 is 1115
9999 mem: location 1358 is 1346
9999 mem: location 1346 is 48
9999 mem: location 1343 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 30
9999 mem: new alloc: 1458
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1460
 104 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1461
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1462
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1460 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1169
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1456
9999 mem: location 1125 is 0
9999 mem: location 1460 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1463
 104 run: insert-duplex c, *before-cursor
9999 mem: location 1461 is 48
9999 mem: location 1463 is 1118
9999 mem: location 1118 is 1169
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:location <- next-ingredient 
9999 mem: storing 48 in location 1147
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1169 in location 1148
 105 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1489
9999 mem: storing 1489 in location 1149
 105 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1149 is 1489
9999 mem: location 1489 is 0
9999 mem: location 1490 is 0
9999 mem: location 1491 is 0
9999 mem: location 1149 is 1489
9999 run: address to copy is 1489
9999 mem: storing 1489 in location 1150
 105 run: *val <- copy x
9999 mem: location 1147 is 48
9999 mem: location 1150 is 1489
9999 mem: location 1150 is 1489
9999 mem: storing 48 in location 1489
 105 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1148 is 1169
9999 mem: location 1169 is 10
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1166
9999 mem: location 1148 is 1169
9999 run: address to copy is 1170
9999 run: its type is address
9999 mem: location 1170 is 1172
9999 mem: storing 1172 in location 1151
 105 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1148 is 1169
9999 mem: location 1169 is 10
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1166
9999 mem: location 1148 is 1169
9999 run: address to copy is 1170
9999 mem: storing 1170 in location 1152
 105 run: *y <- copy new-node
9999 mem: location 1149 is 1489
9999 mem: location 1152 is 1170
9999 mem: location 1152 is 1170
9999 mem: storing 1489 in location 1170
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1149 is 1489
9999 mem: location 1489 is 48
9999 mem: location 1490 is 0
9999 mem: location 1491 is 0
9999 mem: location 1149 is 1489
9999 run: address to copy is 1491
9999 mem: storing 1491 in location 1152
 105 run: *y <- copy in
9999 mem: location 1148 is 1169
9999 mem: location 1152 is 1491
9999 mem: location 1152 is 1491
9999 mem: storing 1169 in location 1491
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1149 is 1489
9999 mem: location 1489 is 48
9999 mem: location 1490 is 0
9999 mem: location 1491 is 1169
9999 mem: location 1149 is 1489
9999 run: address to copy is 1490
9999 mem: storing 1490 in location 1152
 105 run: *y <- copy next-node
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1490
9999 mem: location 1152 is 1490
9999 mem: storing 1172 in location 1490
 105 run: jump-if next-node, 1:offset
9999 mem: location 1151 is 1172
9999 run: jumping to instruction 15
 105 run: y <- get-address *next-node, prev:offset
9999 mem: location 1151 is 1172
9999 mem: location 1172 is 10
9999 mem: location 1173 is 1175
9999 mem: location 1174 is 1169
9999 mem: location 1151 is 1172
9999 run: address to copy is 1174
9999 mem: storing 1174 in location 1152
 105 run: *y <- copy new-node
9999 mem: location 1149 is 1489
9999 mem: location 1152 is 1174
9999 mem: location 1152 is 1174
9999 mem: storing 1489 in location 1174
 105 run: reply new-node
9999 mem: location 1149 is 1489
 104 run: *before-cursor <- next-duplex *before-cursor
9999 mem: location 1463 is 1118
9999 mem: location 1118 is 1169
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1169 in location 1161
 105 run: jump-if in, 1:offset
9999 mem: location 1161 is 1169
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1169
9999 mem: location 1169 is 10
9999 mem: location 1170 is 1489
9999 mem: location 1171 is 1166
9999 mem: location 1161 is 1169
9999 run: address to copy is 1170
9999 run: its type is address
9999 mem: location 1170 is 1489
9999 mem: storing 1489 in location 1162
 105 run: reply result
9999 mem: location 1162 is 1489
9999 run: result 0 is 1489
9999 mem: location 1463 is 1118
9999 mem: storing 1489 in location 1118
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1460 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1489
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1456
9999 mem: location 1125 is 0
9999 mem: location 1460 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1464
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1460 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1489
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1456
9999 mem: location 1125 is 0
9999 mem: location 1460 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1465
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1460 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1489
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1456
9999 mem: location 1125 is 0
9999 mem: location 1460 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1466
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1460 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1489
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1456
9999 mem: location 1125 is 0
9999 mem: location 1460 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1467
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1464 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1464 is 1121
9999 mem: location 1464 is 1121
9999 mem: storing 2 in location 1468
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1465 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1465 is 1122
9999 mem: location 1465 is 1122
9999 mem: storing 0 in location 1469
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1462 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 105 run: break-unless sc, 
9999 mem: location 1161 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1162
 105 run: reply width
9999 mem: location 1162 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1470
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1462 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 105 run: break-unless sc, 
9999 mem: location 1161 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1162
 105 run: reply height
9999 mem: location 1162 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1471
 104 run: wrap-column:number <- subtract right, 1
9999 mem: location 1467 is 9
9999 mem: storing 8 in location 1472
 104 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1465 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1472 is 8
9999 mem: storing 0 in location 1473
 104 run: break-unless at-wrap?, 
9999 mem: location 1473 is 0
9999 run: jumping to instruction 38
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1465 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1465 is 1122
9999 mem: storing 1 in location 1122
 104 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1463 is 1118
9999 mem: location 1118 is 1489
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1489 in location 1161
 105 run: jump-if in, 1:offset
9999 mem: location 1161 is 1489
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1489
9999 mem: location 1489 is 48
9999 mem: location 1490 is 1172
9999 mem: location 1491 is 1169
9999 mem: location 1161 is 1489
9999 run: address to copy is 1490
9999 run: its type is address
9999 mem: location 1490 is 1172
9999 mem: storing 1172 in location 1162
 105 run: reply result
9999 mem: location 1162 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1479
 104 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1479 is 1172
9999 mem: storing 0 in location 1480
 104 run: break-unless at-end?, 
9999 mem: location 1480 is 0
9999 run: jumping to instruction 52
 104 run: break-unless next, 
9999 mem: location 1479 is 1172
9999 run: jump-unless fell through
 104 run: at-right?:boolean <- greater-or-equal *cursor-column, screen-width
9999 mem: location 1465 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1470 is 10
9999 mem: storing 0 in location 1483
 104 run: break-if at-right?, 
9999 mem: location 1483 is 0
9999 run: jump-if fell through
 104 run: curr:address:duplex-list <- copy *before-cursor
9999 mem: location 1463 is 1118
9999 mem: location 1118 is 1489
9999 mem: location 1463 is 1118
9999 mem: location 1463 is 1118
9999 mem: storing 1489 in location 1485
 104 run: move-cursor screen, save-row, save-column
9999 mem: location 1462 is 1009
9999 mem: location 1468 is 2
9999 mem: location 1469 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1207
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1208
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1209
 105 run: break-unless sc, 
9999 mem: location 1207 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1207 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1207 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1210
 105 run: *row <- copy new-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1011
9999 mem: location 1210 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1207 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1207 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1211
 105 run: *column <- copy new-column
9999 mem: location 1209 is 0
9999 mem: location 1211 is 1012
9999 mem: location 1211 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1207 is 1009
 104 run: curr-column:number <- copy save-column
9999 mem: location 1469 is 0
9999 mem: storing 0 in location 1486
 104 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1486 is 0
9999 mem: location 1470 is 10
9999 mem: storing 0 in location 1483
 104 run: jump-unless at-right?, 1:offset
9999 mem: location 1483 is 0
9999 run: jumping to instruction 64
 104 run: break-unless curr, 
9999 mem: location 1485 is 1489
9999 run: jump-unless fell through
 104 run: currc:character <- get *curr, value:offset
9999 mem: location 1485 is 1489
9999 mem: location 1489 is 48
9999 mem: location 1490 is 1172
9999 mem: location 1491 is 1169
9999 mem: location 1485 is 1489
9999 run: address to copy is 1489
9999 run: its type is number
9999 mem: location 1489 is 48
9999 mem: storing 48 in location 1487
 104 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1487 is 48
9999 mem: storing 0 in location 1488
 104 run: break-if at-newline?, 
9999 mem: location 1488 is 0
9999 run: jump-if fell through
 104 run: print-character screen, currc
9999 mem: location 1462 is 1009
9999 mem: location 1487 is 48
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1225
 105 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1226
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1227
9999 mem: storing 0 in location 1228
 105 run: break-if color-found?, 
9999 mem: location 1228 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1227
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1229
9999 mem: storing 0 in location 1230
 105 run: break-if bg-color-found?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1229
 105 run: trace 90, [print-character], c
9999 mem: location 1226 is 48
  90 print-character: 48 
 105 run: break-unless sc, 
9999 mem: location 1225 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1225 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1225 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1231
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1225 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1225 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1232
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1225 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1225 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1233
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1233 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1234
 105 run: jump-if legal?, 1:offset
9999 mem: location 1234 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1233 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1232 is 5
9999 mem: storing 1 in location 1234
 105 run: jump-if legal?, 1:offset
9999 mem: location 1234 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1225 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1225 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1235
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1235 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1234
 105 run: jump-if legal?, 1:offset
9999 mem: location 1234 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1235 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1231 is 10
9999 mem: storing 1 in location 1234
 105 run: jump-if legal?, 1:offset
9999 mem: location 1234 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1226 is 48
9999 mem: storing 0 in location 1236
 105 run: break-unless newline?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1233 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1231 is 10
9999 mem: storing 20 in location 1239
 105 run: index <- add index, *column
9999 mem: location 1239 is 20
9999 mem: location 1235 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1239
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1225 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1225 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1240
 105 run: len:number <- length *buf
9999 mem: location 1240 is 1014
9999 mem: storing 50 in location 1241
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1226 is 48
9999 mem: storing 0 in location 1242
 105 run: break-unless backspace?, 
9999 mem: location 1242 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1240 is 1014
9999 mem: location 1239 is 20
9999 mem: storing 1055 in location 1244
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1244 is 1055
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1244 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1245
 105 run: *cursor-contents <- copy c
9999 mem: location 1226 is 48
9999 mem: location 1245 is 1055
9999 mem: location 1245 is 1055
9999 mem: storing 48 in location 1055
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1244 is 1055
9999 mem: location 1055 is 48
9999 mem: location 1056 is 7
9999 mem: location 1244 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1246
 105 run: *cursor-color <- copy color
9999 mem: location 1227 is 7
9999 mem: location 1246 is 1056
9999 mem: location 1246 is 1056
9999 mem: storing 7 in location 1056
 105 run: right:number <- subtract width, 1
9999 mem: location 1231 is 10
9999 mem: storing 9 in location 1247
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1235 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1248
 105 run: break-if at-right?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1235 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1235 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1225 is 1009
 104 run: curr-column <- add curr-column, 1
9999 mem: location 1486 is 0
9999 mem: storing 1 in location 1486
 104 run: curr <- next-duplex curr
9999 mem: location 1485 is 1489
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1489 in location 1161
 105 run: jump-if in, 1:offset
9999 mem: location 1161 is 1489
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1489
9999 mem: location 1489 is 48
9999 mem: location 1490 is 1172
9999 mem: location 1491 is 1169
9999 mem: location 1161 is 1489
9999 run: address to copy is 1490
9999 run: its type is address
9999 mem: location 1490 is 1172
9999 mem: storing 1172 in location 1162
 105 run: reply result
9999 mem: location 1162 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1485
 104 run: loop 
9999 run: jumping to instruction 61
 104 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1486 is 1
9999 mem: location 1470 is 10
9999 mem: storing 0 in location 1483
 104 run: jump-unless at-right?, 1:offset
9999 mem: location 1483 is 0
9999 run: jumping to instruction 64
 104 run: break-unless curr, 
9999 mem: location 1485 is 1172
9999 run: jump-unless fell through
 104 run: currc:character <- get *curr, value:offset
9999 mem: location 1485 is 1172
9999 mem: location 1172 is 10
9999 mem: location 1173 is 1175
9999 mem: location 1174 is 1489
9999 mem: location 1485 is 1172
9999 run: address to copy is 1172
9999 run: its type is number
9999 mem: location 1172 is 10
9999 mem: storing 10 in location 1487
 104 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1487 is 10
9999 mem: storing 1 in location 1488
 104 run: break-if at-newline?, 
9999 mem: location 1488 is 1
9999 run: jumping to instruction 72
 104 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:2, 0/no-more-render
9999 mem: location 1460 is 1115
9999 mem: location 1462 is 1009
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 mem: storing 1115 in location 1344
9999 mem: storing 1009 in location 1343
9999 mem: storing 0 in location 1401
 103 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1489
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1456
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1153
9999 mem: storing 1153 in location 1395
 103 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1344 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1489
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1456
9999 mem: location 1125 is 0
9999 mem: location 1344 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1362
 103 run: break-unless *undo, 
9999 mem: location 1362 is 1124
9999 mem: location 1124 is 1456
9999 run: jump-unless fell through
 103 run: op:address:operation <- first *undo
9999 mem: location 1362 is 1124
9999 mem: location 1124 is 1456
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:list <- next-ingredient 
9999 mem: storing 1456 in location 1161
 104 run: result:location <- get *in, value:offset
9999 mem: location 1161 is 1456
9999 mem: location 1456 is 1445
9999 mem: location 1457 is 1339
9999 mem: location 1161 is 1456
9999 run: address to copy is 1456
9999 run: its type is number
9999 mem: location 1456 is 1445
9999 mem: storing 1445 in location 1162
 104 run: reply result
9999 mem: location 1162 is 1445
9999 run: result 0 is 1445
9999 mem: storing 1445 in location 1361
 103 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1361 is 1445
9999 mem: location 1445 is 1
9999 mem: location 1446 is 3
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1153
9999 mem: location 1449 is 2
9999 mem: location 1450 is 0
9999 mem: location 1451 is 1153
9999 mem: location 1452 is 1
9999 mem: location 1453 is 0
9999 mem: location 1454 is 0
9999 mem: location 1455 is 0
9999 mem: location 1361 is 1445
9999 mem: storing 0 in location 1368
 103 run: break-unless typing, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 423
 103 run: insert-from:address:duplex-list <- next-duplex cursor-before
9999 mem: location 1406 is 1169
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1169 in location 1161
 104 run: jump-if in, 1:offset
9999 mem: location 1161 is 1169
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1169
9999 mem: location 1169 is 10
9999 mem: location 1170 is 1489
9999 mem: location 1171 is 1166
9999 mem: location 1161 is 1169
9999 run: address to copy is 1170
9999 run: its type is address
9999 mem: location 1170 is 1489
9999 mem: storing 1489 in location 1162
 104 run: reply result
9999 mem: location 1162 is 1489
9999 run: result 0 is 1489
9999 mem: storing 1489 in location 1369
 103 run: insert-to:address:duplex-list <- next-duplex insert-from
9999 mem: location 1369 is 1489
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1489 in location 1161
 104 run: jump-if in, 1:offset
9999 mem: location 1161 is 1489
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1161 is 1489
9999 mem: location 1489 is 48
9999 mem: location 1490 is 1172
9999 mem: location 1491 is 1169
9999 mem: location 1161 is 1489
9999 run: address to copy is 1490
9999 run: its type is address
9999 mem: location 1490 is 1172
9999 mem: storing 1172 in location 1162
 104 run: reply result
9999 mem: location 1162 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1408
 103 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1492
9999 mem: storing 1492 in location 1361
 103 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1356 is 2
9999 mem: location 1357 is 0
9999 mem: location 1393 is 1153
9999 mem: location 1354 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1355 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1395 is 1153
9999 mem: location 1369 is 1489
9999 mem: location 1408 is 1172
9999 mem: location 1361 is 1492
9999 mem: location 1361 is 1492
9999 mem: storing 0 in location 1492
9999 mem: storing 2 in location 1493
9999 mem: storing 0 in location 1494
9999 mem: storing 1153 in location 1495
9999 mem: storing 2 in location 1496
9999 mem: storing 1 in location 1497
9999 mem: storing 1153 in location 1498
9999 mem: storing 1489 in location 1499
9999 mem: storing 1172 in location 1500
9999 mem: storing 1 in location 1501
 103 run: editor <- add-operation editor, op
9999 mem: location 1344 is 1115
9999 mem: location 1361 is 1492
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1251
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1492 in location 1252
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1251 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1489
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1456
9999 mem: location 1125 is 0
9999 mem: location 1251 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1253
 104 run: *undo <- push op, *undo
9999 mem: location 1252 is 1492
9999 mem: location 1253 is 1124
9999 mem: location 1124 is 1456
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1492 in location 1207
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1456 in location 1208
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1503
9999 mem: storing 1503 in location 1209
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1209 is 1503
9999 mem: location 1503 is 0
9999 mem: location 1504 is 0
9999 mem: location 1209 is 1503
9999 run: address to copy is 1503
9999 mem: storing 1503 in location 1210
 105 run: *val <- copy x
9999 mem: location 1207 is 1492
9999 mem: location 1210 is 1503
9999 mem: location 1210 is 1503
9999 mem: storing 1492 in location 1503
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1209 is 1503
9999 mem: location 1503 is 1492
9999 mem: location 1504 is 0
9999 mem: location 1209 is 1503
9999 run: address to copy is 1504
9999 mem: storing 1504 in location 1211
 105 run: *next <- copy in
9999 mem: location 1208 is 1456
9999 mem: location 1211 is 1504
9999 mem: location 1211 is 1504
9999 mem: storing 1456 in location 1504
 105 run: reply result
9999 mem: location 1209 is 1503
9999 run: result 0 is 1503
9999 mem: location 1253 is 1124
9999 mem: storing 1503 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1251 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1153
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1489
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1503
9999 mem: location 1125 is 0
9999 mem: location 1251 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1254
 104 run: *redo <- copy 0
9999 mem: location 1254 is 1125
9999 mem: location 1254 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1251 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1344
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1343 is 1009
9999 mem: location 1344 is 1115
9999 mem: location 1401 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1257
9999 mem: storing 1115 in location 1259
9999 mem: storing 0 in location 1267
 102 run: break-unless go-render?, 
9999 mem: location 1267 is 0
9999 run: jumping to instruction 22
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1258 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1300
 103 run: break-unless x, 
9999 mem: location 1300 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1300 is 1296
9999 mem: location 1296 is 3
9999 mem: location 1297 is 1283
9999 mem: location 1300 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1301
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1300 is 1296
9999 mem: location 1296 is 3
9999 mem: location 1297 is 1283
9999 mem: location 1300 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1283
9999 mem: storing 1283 in location 1302
 103 run: max:number <- length *buf
9999 mem: location 1302 is 1283
9999 mem: storing 3 in location 1303
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1301 is 1296
9999 mem: location 1296 is 3
9999 mem: location 1303 is 3
9999 mem: storing 1 in location 1304
 103 run: break-unless done?, 
9999 mem: location 1304 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1159 in location 1305
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1305 is 1159
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1300 is 1296
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1260
9999 mem: storing 0 in location 1261
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
9999 mem: storing 1296 in location 1258
9999 mem: storing 1 in location 1264
9999 mem: storing 1 in location 1265
 102 run: loop-unless found?, 
9999 mem: location 1264 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1265 is 1
9999 run: jumping to instruction 25
 100 run: screen-should-contain [
    .          .
    .abc       .
    .0         .
    .d         .
    .┈┈┈┈┈┈┈┈┈┈.
  ]
 100 run: check-trace-count-for-label 1, [print-character]
