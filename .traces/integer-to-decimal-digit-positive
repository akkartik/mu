parse: instruction: run
parse:   ingredient: {name: "\n    1:address:array:character/raw <- integer-to-decimal-string 234\n    2:array:character/raw <- copy 1:address:array:character/lookup/raw\n  ", properties: [_: "literal-string"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "\n    2:string <- [234]\n  ", properties: [_: "literal-string"]}
after-brace: recipe scenario-integer-to-decimal-digit-positive
after-brace: run ...
after-brace: memory-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: scenario-integer-to-decimal-digit-positive
 101 run: run [
    1:address:array:character/raw <- integer-to-decimal-string 234
    2:array:character/raw <- copy 1:address:array:character/lookup/raw
  ]
parse: instruction: integer-to-decimal-string
parse:   ingredient: {name: "234", properties: ["234": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character", "raw": ]}
parse: instruction: copy
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character", "lookup": , "raw": ]}
parse:   product: {name: "2", properties: ["2": "array":"character", "raw": ]}
after-brace: recipe run1001
after-brace: integer-to-decimal-string ...
after-brace: copy ...
 101 run: 1:address:array:character/raw <- integer-to-decimal-string 234
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 16
9999 mem: new alloc: 1000
 102 run: n:number <- next-ingredient 
9999 mem: storing 234 in location 1002
 102 run: break-if n:number, 
9999 mem: location 1002 is 234
9999 run: jumping to instruction 6
 102 run: negate-result:boolean <- copy 0
9999 mem: storing 0 in location 1004
 102 run: negative?:boolean <- lesser-than n:number, 0
9999 mem: location 1002 is 234
9999 mem: storing 0 in location 1005
 102 run: break-unless negative?:boolean, 
9999 mem: location 1005 is 0
9999 run: jumping to instruction 13
 102 run: tmp:address:buffer <- new-buffer 30
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1017
 103 run: result:address:buffer <- new buffer:type
9999 mem: new alloc: 1024
9999 mem: storing 1024 in location 1019
 103 run: len:address:number <- get-address result:address:buffer/lookup, length:offset
9999 mem: location 1019 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1019 is 1024
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1020
 103 run: len:address:number/lookup <- copy 0
9999 mem: location 1020 is 1024
9999 mem: storing 0 in location 1024
 103 run: s:address:address:array:character <- get-address result:address:buffer/lookup, data:offset
9999 mem: location 1019 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1019 is 1024
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1021
 103 run: capacity:number, found?:boolean <- next-ingredient 
9999 mem: storing 30 in location 1022
9999 mem: storing 1 in location 1023
 103 run: assert found?:boolean, [new-buffer must get a capacity argument]
9999 mem: location 1023 is 1
 103 run: s:address:address:array:character/lookup <- new character:type, capacity:number
9999 mem: location 1022 is 30
9999 mem: array size is 30
9999 mem: new alloc: 1026
9999 mem: location 1021 is 1025
9999 mem: storing 1026 in location 1025
 103 run: reply result:address:buffer
9999 mem: location 1019 is 1024
9999 run: result 0 is 1024
9999 mem: storing 1024 in location 1006
 102 run: digit-base:number <- copy 48
9999 mem: storing 48 in location 1007
 102 run: done?:boolean <- equal n:number, 0
9999 mem: location 1002 is 234
9999 mem: storing 0 in location 1008
 102 run: break-if done?:boolean, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 102 run: n:number, digit:number <- divide-with-remainder n:number, 10
9999 mem: location 1002 is 234
9999 mem: storing 23 in location 1002
9999 mem: storing 4 in location 1009
 102 run: c:character <- add digit-base:number, digit:number
9999 mem: location 1007 is 48
9999 mem: location 1009 is 4
9999 mem: storing 52 in location 1010
 102 run: tmp:address:buffer <- buffer-append tmp:address:buffer, c:character
9999 mem: location 1006 is 1024
9999 mem: location 1010 is 52
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: new alloc: 1057
 103 run: in:address:buffer <- next-ingredient 
9999 mem: storing 1024 in location 1059
 103 run: c:character <- next-ingredient 
9999 mem: storing 52 in location 1060
 103 run: len:address:number <- get-address in:address:buffer/lookup, length:offset
9999 mem: location 1059 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 1026
9999 mem: location 1059 is 1024
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1061
 103 run: backspace?:boolean <- equal c:character, 8/backspace
9999 mem: location 1060 is 52
9999 mem: storing 0 in location 1062
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1062 is 0
9999 run: jumping to instruction 12
 103 run: full?:boolean <- buffer-full? in:address:buffer
9999 mem: location 1059 is 1024
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: in:address:buffer <- next-ingredient 
9999 mem: storing 1024 in location 1019
 104 run: len:number <- get in:address:buffer/lookup, length:offset
9999 mem: location 1019 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 1026
9999 mem: location 1019 is 1024
9999 run: address to copy is 1024
9999 run: its type is number
9999 mem: location 1024 is 0
9999 mem: storing 0 in location 1020
 104 run: s:address:array:character <- get in:address:buffer/lookup, data:offset
9999 mem: location 1019 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 1026
9999 mem: location 1019 is 1024
9999 run: address to copy is 1025
9999 run: its type is address
9999 mem: location 1025 is 1026
9999 mem: storing 1026 in location 1021
 104 run: capacity:number <- length s:address:array:character/lookup
9999 mem: location 1021 is 1026
9999 mem: location 1026 is 30
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1021 is 1026
9999 mem: storing 30 in location 1022
 104 run: result:boolean <- greater-or-equal len:number, capacity:number
9999 mem: location 1020 is 0
9999 mem: location 1022 is 30
9999 mem: storing 0 in location 1023
 104 run: reply result:boolean
9999 mem: location 1023 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1064
 103 run: break-unless full?:boolean, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 17
 103 run: s:address:array:character <- get in:address:buffer/lookup, data:offset
9999 mem: location 1059 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 1026
9999 mem: location 1059 is 1024
9999 run: address to copy is 1025
9999 run: its type is address
9999 mem: location 1025 is 1026
9999 mem: storing 1026 in location 1065
 103 run: dest:address:character <- index-address s:address:array:character/lookup, len:address:number/lookup
9999 mem: location 1065 is 1026
9999 mem: location 1026 is 30
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1061 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1065 is 1026
9999 mem: location 1061 is 1024
9999 mem: location 1024 is 0
9999 mem: storing 1027 in location 1066
 103 run: dest:address:character/lookup <- copy c:character
9999 mem: location 1060 is 52
9999 mem: location 1066 is 1027
9999 mem: storing 52 in location 1027
 103 run: len:address:number/lookup <- add len:address:number/lookup, 1
9999 mem: location 1061 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1061 is 1024
9999 mem: storing 1 in location 1024
 103 run: reply in:address:buffer/same-as-ingredient:0
9999 mem: location 1059 is 1024
9999 run: result 0 is 1024
9999 mem: storing 1024 in location 1006
 102 run: loop 
9999 run: jumping to instruction 17
 102 run: done?:boolean <- equal n:number, 0
9999 mem: location 1002 is 23
9999 mem: storing 0 in location 1008
 102 run: break-if done?:boolean, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 102 run: n:number, digit:number <- divide-with-remainder n:number, 10
9999 mem: location 1002 is 23
9999 mem: storing 2 in location 1002
9999 mem: storing 3 in location 1009
 102 run: c:character <- add digit-base:number, digit:number
9999 mem: location 1007 is 48
9999 mem: location 1009 is 3
9999 mem: storing 51 in location 1010
 102 run: tmp:address:buffer <- buffer-append tmp:address:buffer, c:character
9999 mem: location 1006 is 1024
9999 mem: location 1010 is 51
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
 103 run: in:address:buffer <- next-ingredient 
9999 mem: storing 1024 in location 1059
 103 run: c:character <- next-ingredient 
9999 mem: storing 51 in location 1060
 103 run: len:address:number <- get-address in:address:buffer/lookup, length:offset
9999 mem: location 1059 is 1024
9999 mem: location 1024 is 1
9999 mem: location 1025 is 1026
9999 mem: location 1059 is 1024
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1061
 103 run: backspace?:boolean <- equal c:character, 8/backspace
9999 mem: location 1060 is 51
9999 mem: storing 0 in location 1062
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1062 is 0
9999 run: jumping to instruction 12
 103 run: full?:boolean <- buffer-full? in:address:buffer
9999 mem: location 1059 is 1024
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: in:address:buffer <- next-ingredient 
9999 mem: storing 1024 in location 1019
 104 run: len:number <- get in:address:buffer/lookup, length:offset
9999 mem: location 1019 is 1024
9999 mem: location 1024 is 1
9999 mem: location 1025 is 1026
9999 mem: location 1019 is 1024
9999 run: address to copy is 1024
9999 run: its type is number
9999 mem: location 1024 is 1
9999 mem: storing 1 in location 1020
 104 run: s:address:array:character <- get in:address:buffer/lookup, data:offset
9999 mem: location 1019 is 1024
9999 mem: location 1024 is 1
9999 mem: location 1025 is 1026
9999 mem: location 1019 is 1024
9999 run: address to copy is 1025
9999 run: its type is address
9999 mem: location 1025 is 1026
9999 mem: storing 1026 in location 1021
 104 run: capacity:number <- length s:address:array:character/lookup
9999 mem: location 1021 is 1026
9999 mem: location 1026 is 30
9999 mem: location 1027 is 52
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1021 is 1026
9999 mem: storing 30 in location 1022
 104 run: result:boolean <- greater-or-equal len:number, capacity:number
9999 mem: location 1020 is 1
9999 mem: location 1022 is 30
9999 mem: storing 0 in location 1023
 104 run: reply result:boolean
9999 mem: location 1023 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1064
 103 run: break-unless full?:boolean, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 17
 103 run: s:address:array:character <- get in:address:buffer/lookup, data:offset
9999 mem: location 1059 is 1024
9999 mem: location 1024 is 1
9999 mem: location 1025 is 1026
9999 mem: location 1059 is 1024
9999 run: address to copy is 1025
9999 run: its type is address
9999 mem: location 1025 is 1026
9999 mem: storing 1026 in location 1065
 103 run: dest:address:character <- index-address s:address:array:character/lookup, len:address:number/lookup
9999 mem: location 1065 is 1026
9999 mem: location 1026 is 30
9999 mem: location 1027 is 52
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1061 is 1024
9999 mem: location 1024 is 1
9999 mem: location 1065 is 1026
9999 mem: location 1061 is 1024
9999 mem: location 1024 is 1
9999 mem: storing 1028 in location 1066
 103 run: dest:address:character/lookup <- copy c:character
9999 mem: location 1060 is 51
9999 mem: location 1066 is 1028
9999 mem: storing 51 in location 1028
 103 run: len:address:number/lookup <- add len:address:number/lookup, 1
9999 mem: location 1061 is 1024
9999 mem: location 1024 is 1
9999 mem: location 1061 is 1024
9999 mem: storing 2 in location 1024
 103 run: reply in:address:buffer/same-as-ingredient:0
9999 mem: location 1059 is 1024
9999 run: result 0 is 1024
9999 mem: storing 1024 in location 1006
 102 run: loop 
9999 run: jumping to instruction 17
 102 run: done?:boolean <- equal n:number, 0
9999 mem: location 1002 is 2
9999 mem: storing 0 in location 1008
 102 run: break-if done?:boolean, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 102 run: n:number, digit:number <- divide-with-remainder n:number, 10
9999 mem: location 1002 is 2
9999 mem: storing 0 in location 1002
9999 mem: storing 2 in location 1009
 102 run: c:character <- add digit-base:number, digit:number
9999 mem: location 1007 is 48
9999 mem: location 1009 is 2
9999 mem: storing 50 in location 1010
 102 run: tmp:address:buffer <- buffer-append tmp:address:buffer, c:character
9999 mem: location 1006 is 1024
9999 mem: location 1010 is 50
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
 103 run: in:address:buffer <- next-ingredient 
9999 mem: storing 1024 in location 1059
 103 run: c:character <- next-ingredient 
9999 mem: storing 50 in location 1060
 103 run: len:address:number <- get-address in:address:buffer/lookup, length:offset
9999 mem: location 1059 is 1024
9999 mem: location 1024 is 2
9999 mem: location 1025 is 1026
9999 mem: location 1059 is 1024
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1061
 103 run: backspace?:boolean <- equal c:character, 8/backspace
9999 mem: location 1060 is 50
9999 mem: storing 0 in location 1062
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1062 is 0
9999 run: jumping to instruction 12
 103 run: full?:boolean <- buffer-full? in:address:buffer
9999 mem: location 1059 is 1024
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: in:address:buffer <- next-ingredient 
9999 mem: storing 1024 in location 1019
 104 run: len:number <- get in:address:buffer/lookup, length:offset
9999 mem: location 1019 is 1024
9999 mem: location 1024 is 2
9999 mem: location 1025 is 1026
9999 mem: location 1019 is 1024
9999 run: address to copy is 1024
9999 run: its type is number
9999 mem: location 1024 is 2
9999 mem: storing 2 in location 1020
 104 run: s:address:array:character <- get in:address:buffer/lookup, data:offset
9999 mem: location 1019 is 1024
9999 mem: location 1024 is 2
9999 mem: location 1025 is 1026
9999 mem: location 1019 is 1024
9999 run: address to copy is 1025
9999 run: its type is address
9999 mem: location 1025 is 1026
9999 mem: storing 1026 in location 1021
 104 run: capacity:number <- length s:address:array:character/lookup
9999 mem: location 1021 is 1026
9999 mem: location 1026 is 30
9999 mem: location 1027 is 52
9999 mem: location 1028 is 51
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1021 is 1026
9999 mem: storing 30 in location 1022
 104 run: result:boolean <- greater-or-equal len:number, capacity:number
9999 mem: location 1020 is 2
9999 mem: location 1022 is 30
9999 mem: storing 0 in location 1023
 104 run: reply result:boolean
9999 mem: location 1023 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1064
 103 run: break-unless full?:boolean, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 17
 103 run: s:address:array:character <- get in:address:buffer/lookup, data:offset
9999 mem: location 1059 is 1024
9999 mem: location 1024 is 2
9999 mem: location 1025 is 1026
9999 mem: location 1059 is 1024
9999 run: address to copy is 1025
9999 run: its type is address
9999 mem: location 1025 is 1026
9999 mem: storing 1026 in location 1065
 103 run: dest:address:character <- index-address s:address:array:character/lookup, len:address:number/lookup
9999 mem: location 1065 is 1026
9999 mem: location 1026 is 30
9999 mem: location 1027 is 52
9999 mem: location 1028 is 51
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1061 is 1024
9999 mem: location 1024 is 2
9999 mem: location 1065 is 1026
9999 mem: location 1061 is 1024
9999 mem: location 1024 is 2
9999 mem: storing 1029 in location 1066
 103 run: dest:address:character/lookup <- copy c:character
9999 mem: location 1060 is 50
9999 mem: location 1066 is 1029
9999 mem: storing 50 in location 1029
 103 run: len:address:number/lookup <- add len:address:number/lookup, 1
9999 mem: location 1061 is 1024
9999 mem: location 1024 is 2
9999 mem: location 1061 is 1024
9999 mem: storing 3 in location 1024
 103 run: reply in:address:buffer/same-as-ingredient:0
9999 mem: location 1059 is 1024
9999 run: result 0 is 1024
9999 mem: storing 1024 in location 1006
 102 run: loop 
9999 run: jumping to instruction 17
 102 run: done?:boolean <- equal n:number, 0
9999 mem: location 1002 is 0
9999 mem: storing 1 in location 1008
 102 run: break-if done?:boolean, 
9999 mem: location 1008 is 1
9999 run: jumping to instruction 23
 102 run: break-unless negate-result:boolean, 
9999 mem: location 1004 is 0
9999 run: jumping to instruction 27
 102 run: len:number <- get tmp:address:buffer/lookup, length:offset
9999 mem: location 1006 is 1024
9999 mem: location 1024 is 3
9999 mem: location 1025 is 1026
9999 mem: location 1006 is 1024
9999 run: address to copy is 1024
9999 run: its type is number
9999 mem: location 1024 is 3
9999 mem: storing 3 in location 1011
 102 run: buf:address:array:character <- get tmp:address:buffer/lookup, data:offset
9999 mem: location 1006 is 1024
9999 mem: location 1024 is 3
9999 mem: location 1025 is 1026
9999 mem: location 1006 is 1024
9999 run: address to copy is 1025
9999 run: its type is address
9999 mem: location 1025 is 1026
9999 mem: storing 1026 in location 1012
 102 run: result:address:array:character <- new character:type, len:number
9999 mem: location 1011 is 3
9999 mem: array size is 3
9999 mem: new alloc: 1067
9999 mem: storing 1067 in location 1003
 102 run: i:number <- subtract len:number, 1
9999 mem: location 1011 is 3
9999 mem: storing 2 in location 1013
 102 run: j:number <- copy 0
9999 mem: storing 0 in location 1014
 102 run: done?:boolean <- lesser-than i:number, 0
9999 mem: location 1013 is 2
9999 mem: storing 0 in location 1008
 102 run: break-if done?:boolean, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 102 run: src:character <- index buf:address:array:character/lookup, i:number
9999 mem: location 1012 is 1026
9999 mem: location 1026 is 30
9999 mem: location 1027 is 52
9999 mem: location 1028 is 51
9999 mem: location 1029 is 50
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1013 is 2
9999 mem: location 1012 is 1026
9999 mem: location 1013 is 2
9999 run: address to copy is 1029
9999 run: its type is character
9999 mem: location 1029 is 50
9999 mem: storing 50 in location 1015
 102 run: dest:address:character <- index-address result:address:array:character/lookup, j:number
9999 mem: location 1003 is 1067
9999 mem: location 1067 is 3
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1014 is 0
9999 mem: location 1003 is 1067
9999 mem: location 1014 is 0
9999 mem: storing 1068 in location 1016
 102 run: dest:address:character/lookup <- copy src:character
9999 mem: location 1015 is 50
9999 mem: location 1016 is 1068
9999 mem: storing 50 in location 1068
 102 run: i:number <- subtract i:number, 1
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1013
 102 run: j:number <- add j:number, 1
9999 mem: location 1014 is 0
9999 mem: storing 1 in location 1014
 102 run: loop 
9999 run: jumping to instruction 34
 102 run: done?:boolean <- lesser-than i:number, 0
9999 mem: location 1013 is 1
9999 mem: storing 0 in location 1008
 102 run: break-if done?:boolean, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 102 run: src:character <- index buf:address:array:character/lookup, i:number
9999 mem: location 1012 is 1026
9999 mem: location 1026 is 30
9999 mem: location 1027 is 52
9999 mem: location 1028 is 51
9999 mem: location 1029 is 50
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1013 is 1
9999 mem: location 1012 is 1026
9999 mem: location 1013 is 1
9999 run: address to copy is 1028
9999 run: its type is character
9999 mem: location 1028 is 51
9999 mem: storing 51 in location 1015
 102 run: dest:address:character <- index-address result:address:array:character/lookup, j:number
9999 mem: location 1003 is 1067
9999 mem: location 1067 is 3
9999 mem: location 1068 is 50
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1014 is 1
9999 mem: location 1003 is 1067
9999 mem: location 1014 is 1
9999 mem: storing 1069 in location 1016
 102 run: dest:address:character/lookup <- copy src:character
9999 mem: location 1015 is 51
9999 mem: location 1016 is 1069
9999 mem: storing 51 in location 1069
 102 run: i:number <- subtract i:number, 1
9999 mem: location 1013 is 1
9999 mem: storing 0 in location 1013
 102 run: j:number <- add j:number, 1
9999 mem: location 1014 is 1
9999 mem: storing 2 in location 1014
 102 run: loop 
9999 run: jumping to instruction 34
 102 run: done?:boolean <- lesser-than i:number, 0
9999 mem: location 1013 is 0
9999 mem: storing 0 in location 1008
 102 run: break-if done?:boolean, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 102 run: src:character <- index buf:address:array:character/lookup, i:number
9999 mem: location 1012 is 1026
9999 mem: location 1026 is 30
9999 mem: location 1027 is 52
9999 mem: location 1028 is 51
9999 mem: location 1029 is 50
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1013 is 0
9999 mem: location 1012 is 1026
9999 mem: location 1013 is 0
9999 run: address to copy is 1027
9999 run: its type is character
9999 mem: location 1027 is 52
9999 mem: storing 52 in location 1015
 102 run: dest:address:character <- index-address result:address:array:character/lookup, j:number
9999 mem: location 1003 is 1067
9999 mem: location 1067 is 3
9999 mem: location 1068 is 50
9999 mem: location 1069 is 51
9999 mem: location 1070 is 0
9999 mem: location 1014 is 2
9999 mem: location 1003 is 1067
9999 mem: location 1014 is 2
9999 mem: storing 1070 in location 1016
 102 run: dest:address:character/lookup <- copy src:character
9999 mem: location 1015 is 52
9999 mem: location 1016 is 1070
9999 mem: storing 52 in location 1070
 102 run: i:number <- subtract i:number, 1
9999 mem: location 1013 is 0
9999 mem: storing -1 in location 1013
 102 run: j:number <- add j:number, 1
9999 mem: location 1014 is 2
9999 mem: storing 3 in location 1014
 102 run: loop 
9999 run: jumping to instruction 34
 102 run: done?:boolean <- lesser-than i:number, 0
9999 mem: location 1013 is -1
9999 mem: storing 1 in location 1008
 102 run: break-if done?:boolean, 
9999 mem: location 1008 is 1
9999 run: jumping to instruction 42
 102 run: reply result:address:array:character
9999 mem: location 1003 is 1067
9999 run: result 0 is 1067
9999 mem: storing 1067 in location 1
 101 run: 2:array:character/raw <- copy 1:address:array:character/lookup/raw
9999 mem: location 1 is 1067
9999 mem: location 1067 is 3
9999 mem: location 1068 is 50
9999 mem: location 1069 is 51
9999 mem: location 1070 is 52
9999 mem: storing 3 in location 2
9999 mem: storing 50 in location 3
9999 mem: storing 51 in location 4
9999 mem: storing 52 in location 5
 100 run: memory-should-contain [
    2:string <- [234]
  ]
9999 run: checking string length at 2
9999 run: checking location 3
9999 run: checking location 4
9999 run: checking location 5
