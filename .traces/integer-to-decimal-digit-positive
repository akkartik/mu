parse: instruction: run
parse:   ingredient: {name: "
    1:address:array:character/raw <- integer-to-decimal-string 234:literal
    2:array:character/raw <- copy 1:address:array:character/deref/raw
  ", properties: ["
    1:address:array:character/raw <- integer-to-decimal-string 234:literal
    2:array:character/raw <- copy 1:address:array:character/deref/raw
  ": "literal-string"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "
    2:string <- [234]
  ", properties: ["
    2:string <- [234]
  ": "literal-string"]}
after-brace: recipe integer-to-decimal-digit-positive
after-brace: run ...
after-brace: memory-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: integer-to-decimal-digit-positive
 101 run: run [
    1:address:array:character/raw <- integer-to-decimal-string 234:literal
    2:array:character/raw <- copy 1:address:array:character/deref/raw
  ]
parse: instruction: integer-to-decimal-string
parse:   ingredient: {name: "234", properties: ["234": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character", "raw": ]}
parse: instruction: copy
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character", "deref": , "raw": ]}
parse:   product: {name: "2", properties: ["2": "array":"character", "raw": ]}
after-brace: recipe run1001
after-brace: integer-to-decimal-string ...
after-brace: copy ...
 101 run: 1:address:array:character/raw <- integer-to-decimal-string 234:literal
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: n:number <- next-ingredient 
9999 mem: storing 234 in location 1002
 102 run: break-if n:number, 
9999 mem: location 1002 is 234
9999 run: jumping to instruction 6
 102 run: negate-result:boolean <- copy 0:literal
9999 mem: storing 0 in location 1004
 102 run: negative?:boolean <- lesser-than n:number, 0:literal
9999 mem: location 1002 is 234
9999 mem: storing 0 in location 1005
 102 run: break-unless negative?:boolean, 
9999 mem: location 1005 is 0
9999 run: jumping to instruction 13
 102 run: tmp:address:buffer <- init-buffer 30:literal
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1031
 103 run: result:address:buffer <- new buffer:type
9999 mem: new alloc: 1062
9999 mem: storing 1062 in location 1033
 103 run: len:address:number <- get-address result:address:buffer/deref, length:offset
9999 mem: location 1033 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1033 is 1062
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1034
 103 run: len:address:number/deref <- copy 0:literal
9999 mem: location 1034 is 1062
9999 mem: storing 0 in location 1062
 103 run: s:address:address:array:character <- get-address result:address:buffer/deref, data:offset
9999 mem: location 1033 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1033 is 1062
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1035
 103 run: capacity:number <- next-ingredient 
9999 mem: storing 30 in location 1036
 103 run: s:address:address:array:character/deref <- new character:type, capacity:number
9999 mem: location 1036 is 30
9999 mem: array size is 30
9999 mem: new alloc: 1064
9999 mem: location 1035 is 1063
9999 mem: storing 1064 in location 1063
 103 run: reply result:address:buffer
9999 mem: location 1033 is 1062
9999 run: result 0 is 1062
9999 mem: storing 1062 in location 1006
 102 run: digit-base:number <- copy 48:literal
9999 mem: storing 48 in location 1007
 102 run: done?:boolean <- equal n:number, 0:literal
9999 mem: location 1002 is 234
9999 mem: storing 0 in location 1008
 102 run: break-if done?:boolean, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 102 run: n:number, digit:number <- divide-with-remainder n:number, 10:literal
9999 mem: location 1002 is 234
9999 mem: storing 23 in location 1002
9999 mem: storing 4 in location 1009
 102 run: c:character <- add digit-base:number, digit:number
9999 mem: location 1007 is 48
9999 mem: location 1009 is 4
9999 mem: storing 52 in location 1010
 102 run: tmp:address:buffer <- buffer-append tmp:address:buffer, c:character
9999 mem: location 1006 is 1062
9999 mem: location 1010 is 52
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1095
 103 run: in:address:buffer <- next-ingredient 
9999 mem: storing 1062 in location 1097
 103 run: c:character <- next-ingredient 
9999 mem: storing 52 in location 1098
 103 run: full?:boolean <- buffer-full? in:address:buffer
9999 mem: location 1097 is 1062
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1126
 104 run: in:address:buffer <- next-ingredient 
9999 mem: storing 1062 in location 1128
 104 run: len:number <- get in:address:buffer/deref, length:offset
9999 mem: location 1128 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1064
9999 mem: location 1128 is 1062
9999 run: address to copy is 1062
9999 run: its type is 1
9999 mem: location 1062 is 0
9999 mem: storing 0 in location 1129
 104 run: s:address:array:character <- get in:address:buffer/deref, data:offset
9999 mem: location 1128 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1064
9999 mem: location 1128 is 1062
9999 run: address to copy is 1063
9999 run: its type is 2
9999 mem: location 1063 is 1064
9999 mem: storing 1064 in location 1130
 104 run: capacity:number <- length s:address:array:character/deref
9999 mem: location 1130 is 1064
9999 mem: location 1064 is 30
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1130 is 1064
9999 mem: storing 30 in location 1131
 104 run: result:boolean <- greater-or-equal len:number, capacity:number
9999 mem: location 1129 is 0
9999 mem: location 1131 is 30
9999 mem: storing 0 in location 1132
 104 run: reply result:boolean
9999 mem: location 1132 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1099
 103 run: break-unless full?:boolean, 
9999 mem: location 1099 is 0
9999 run: jumping to instruction 7
 103 run: len:address:number <- get-address in:address:buffer/deref, length:offset
9999 mem: location 1097 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1064
9999 mem: location 1097 is 1062
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1100
 103 run: s:address:array:character <- get in:address:buffer/deref, data:offset
9999 mem: location 1097 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1064
9999 mem: location 1097 is 1062
9999 run: address to copy is 1063
9999 run: its type is 2
9999 mem: location 1063 is 1064
9999 mem: storing 1064 in location 1101
 103 run: dest:address:character <- index-address s:address:array:character/deref, len:address:number/deref
9999 mem: location 1101 is 1064
9999 mem: location 1064 is 30
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1101 is 1064
9999 mem: location 1100 is 1062
9999 mem: location 1062 is 0
9999 mem: storing 1065 in location 1102
 103 run: dest:address:character/deref <- copy c:character
9999 mem: location 1098 is 52
9999 mem: location 1102 is 1065
9999 mem: storing 52 in location 1065
 103 run: len:address:number/deref <- add len:address:number/deref, 1:literal
9999 mem: location 1100 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1100 is 1062
9999 mem: storing 1 in location 1062
 103 run: reply in:address:buffer/same-as-ingredient:0
9999 mem: location 1097 is 1062
9999 run: result 0 is 1062
9999 mem: storing 1062 in location 1006
 102 run: loop 
9999 run: jumping to instruction 17
 102 run: done?:boolean <- equal n:number, 0:literal
9999 mem: location 1002 is 23
9999 mem: storing 0 in location 1008
 102 run: break-if done?:boolean, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 102 run: n:number, digit:number <- divide-with-remainder n:number, 10:literal
9999 mem: location 1002 is 23
9999 mem: storing 2 in location 1002
9999 mem: storing 3 in location 1009
 102 run: c:character <- add digit-base:number, digit:number
9999 mem: location 1007 is 48
9999 mem: location 1009 is 3
9999 mem: storing 51 in location 1010
 102 run: tmp:address:buffer <- buffer-append tmp:address:buffer, c:character
9999 mem: location 1006 is 1062
9999 mem: location 1010 is 51
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1157
 103 run: in:address:buffer <- next-ingredient 
9999 mem: storing 1062 in location 1159
 103 run: c:character <- next-ingredient 
9999 mem: storing 51 in location 1160
 103 run: full?:boolean <- buffer-full? in:address:buffer
9999 mem: location 1159 is 1062
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1188
 104 run: in:address:buffer <- next-ingredient 
9999 mem: storing 1062 in location 1190
 104 run: len:number <- get in:address:buffer/deref, length:offset
9999 mem: location 1190 is 1062
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1064
9999 mem: location 1190 is 1062
9999 run: address to copy is 1062
9999 run: its type is 1
9999 mem: location 1062 is 1
9999 mem: storing 1 in location 1191
 104 run: s:address:array:character <- get in:address:buffer/deref, data:offset
9999 mem: location 1190 is 1062
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1064
9999 mem: location 1190 is 1062
9999 run: address to copy is 1063
9999 run: its type is 2
9999 mem: location 1063 is 1064
9999 mem: storing 1064 in location 1192
 104 run: capacity:number <- length s:address:array:character/deref
9999 mem: location 1192 is 1064
9999 mem: location 1064 is 30
9999 mem: location 1065 is 52
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1192 is 1064
9999 mem: storing 30 in location 1193
 104 run: result:boolean <- greater-or-equal len:number, capacity:number
9999 mem: location 1191 is 1
9999 mem: location 1193 is 30
9999 mem: storing 0 in location 1194
 104 run: reply result:boolean
9999 mem: location 1194 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1161
 103 run: break-unless full?:boolean, 
9999 mem: location 1161 is 0
9999 run: jumping to instruction 7
 103 run: len:address:number <- get-address in:address:buffer/deref, length:offset
9999 mem: location 1159 is 1062
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1064
9999 mem: location 1159 is 1062
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1162
 103 run: s:address:array:character <- get in:address:buffer/deref, data:offset
9999 mem: location 1159 is 1062
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1064
9999 mem: location 1159 is 1062
9999 run: address to copy is 1063
9999 run: its type is 2
9999 mem: location 1063 is 1064
9999 mem: storing 1064 in location 1163
 103 run: dest:address:character <- index-address s:address:array:character/deref, len:address:number/deref
9999 mem: location 1163 is 1064
9999 mem: location 1064 is 30
9999 mem: location 1065 is 52
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1162 is 1062
9999 mem: location 1062 is 1
9999 mem: location 1163 is 1064
9999 mem: location 1162 is 1062
9999 mem: location 1062 is 1
9999 mem: storing 1066 in location 1164
 103 run: dest:address:character/deref <- copy c:character
9999 mem: location 1160 is 51
9999 mem: location 1164 is 1066
9999 mem: storing 51 in location 1066
 103 run: len:address:number/deref <- add len:address:number/deref, 1:literal
9999 mem: location 1162 is 1062
9999 mem: location 1062 is 1
9999 mem: location 1162 is 1062
9999 mem: storing 2 in location 1062
 103 run: reply in:address:buffer/same-as-ingredient:0
9999 mem: location 1159 is 1062
9999 run: result 0 is 1062
9999 mem: storing 1062 in location 1006
 102 run: loop 
9999 run: jumping to instruction 17
 102 run: done?:boolean <- equal n:number, 0:literal
9999 mem: location 1002 is 2
9999 mem: storing 0 in location 1008
 102 run: break-if done?:boolean, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 102 run: n:number, digit:number <- divide-with-remainder n:number, 10:literal
9999 mem: location 1002 is 2
9999 mem: storing 0 in location 1002
9999 mem: storing 2 in location 1009
 102 run: c:character <- add digit-base:number, digit:number
9999 mem: location 1007 is 48
9999 mem: location 1009 is 2
9999 mem: storing 50 in location 1010
 102 run: tmp:address:buffer <- buffer-append tmp:address:buffer, c:character
9999 mem: location 1006 is 1062
9999 mem: location 1010 is 50
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1219
 103 run: in:address:buffer <- next-ingredient 
9999 mem: storing 1062 in location 1221
 103 run: c:character <- next-ingredient 
9999 mem: storing 50 in location 1222
 103 run: full?:boolean <- buffer-full? in:address:buffer
9999 mem: location 1221 is 1062
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1250
 104 run: in:address:buffer <- next-ingredient 
9999 mem: storing 1062 in location 1252
 104 run: len:number <- get in:address:buffer/deref, length:offset
9999 mem: location 1252 is 1062
9999 mem: location 1062 is 2
9999 mem: location 1063 is 1064
9999 mem: location 1252 is 1062
9999 run: address to copy is 1062
9999 run: its type is 1
9999 mem: location 1062 is 2
9999 mem: storing 2 in location 1253
 104 run: s:address:array:character <- get in:address:buffer/deref, data:offset
9999 mem: location 1252 is 1062
9999 mem: location 1062 is 2
9999 mem: location 1063 is 1064
9999 mem: location 1252 is 1062
9999 run: address to copy is 1063
9999 run: its type is 2
9999 mem: location 1063 is 1064
9999 mem: storing 1064 in location 1254
 104 run: capacity:number <- length s:address:array:character/deref
9999 mem: location 1254 is 1064
9999 mem: location 1064 is 30
9999 mem: location 1065 is 52
9999 mem: location 1066 is 51
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1254 is 1064
9999 mem: storing 30 in location 1255
 104 run: result:boolean <- greater-or-equal len:number, capacity:number
9999 mem: location 1253 is 2
9999 mem: location 1255 is 30
9999 mem: storing 0 in location 1256
 104 run: reply result:boolean
9999 mem: location 1256 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1223
 103 run: break-unless full?:boolean, 
9999 mem: location 1223 is 0
9999 run: jumping to instruction 7
 103 run: len:address:number <- get-address in:address:buffer/deref, length:offset
9999 mem: location 1221 is 1062
9999 mem: location 1062 is 2
9999 mem: location 1063 is 1064
9999 mem: location 1221 is 1062
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1224
 103 run: s:address:array:character <- get in:address:buffer/deref, data:offset
9999 mem: location 1221 is 1062
9999 mem: location 1062 is 2
9999 mem: location 1063 is 1064
9999 mem: location 1221 is 1062
9999 run: address to copy is 1063
9999 run: its type is 2
9999 mem: location 1063 is 1064
9999 mem: storing 1064 in location 1225
 103 run: dest:address:character <- index-address s:address:array:character/deref, len:address:number/deref
9999 mem: location 1225 is 1064
9999 mem: location 1064 is 30
9999 mem: location 1065 is 52
9999 mem: location 1066 is 51
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1224 is 1062
9999 mem: location 1062 is 2
9999 mem: location 1225 is 1064
9999 mem: location 1224 is 1062
9999 mem: location 1062 is 2
9999 mem: storing 1067 in location 1226
 103 run: dest:address:character/deref <- copy c:character
9999 mem: location 1222 is 50
9999 mem: location 1226 is 1067
9999 mem: storing 50 in location 1067
 103 run: len:address:number/deref <- add len:address:number/deref, 1:literal
9999 mem: location 1224 is 1062
9999 mem: location 1062 is 2
9999 mem: location 1224 is 1062
9999 mem: storing 3 in location 1062
 103 run: reply in:address:buffer/same-as-ingredient:0
9999 mem: location 1221 is 1062
9999 run: result 0 is 1062
9999 mem: storing 1062 in location 1006
 102 run: loop 
9999 run: jumping to instruction 17
 102 run: done?:boolean <- equal n:number, 0:literal
9999 mem: location 1002 is 0
9999 mem: storing 1 in location 1008
 102 run: break-if done?:boolean, 
9999 mem: location 1008 is 1
9999 run: jumping to instruction 23
 102 run: break-unless negate-result:boolean, 
9999 mem: location 1004 is 0
9999 run: jumping to instruction 27
 102 run: len:number <- get tmp:address:buffer/deref, length:offset
9999 mem: location 1006 is 1062
9999 mem: location 1062 is 3
9999 mem: location 1063 is 1064
9999 mem: location 1006 is 1062
9999 run: address to copy is 1062
9999 run: its type is 1
9999 mem: location 1062 is 3
9999 mem: storing 3 in location 1011
 102 run: buf:address:array:character <- get tmp:address:buffer/deref, data:offset
9999 mem: location 1006 is 1062
9999 mem: location 1062 is 3
9999 mem: location 1063 is 1064
9999 mem: location 1006 is 1062
9999 run: address to copy is 1063
9999 run: its type is 2
9999 mem: location 1063 is 1064
9999 mem: storing 1064 in location 1012
 102 run: result:address:array:character <- new character:type, len:number
9999 mem: location 1011 is 3
9999 mem: array size is 3
9999 mem: new alloc: 1281
9999 mem: storing 1281 in location 1003
 102 run: i:number <- subtract len:number, 1:literal
9999 mem: location 1011 is 3
9999 mem: storing 2 in location 1013
 102 run: j:number <- copy 0:literal
9999 mem: storing 0 in location 1014
 102 run: done?:boolean <- lesser-than i:number, 0:literal
9999 mem: location 1013 is 2
9999 mem: storing 0 in location 1008
 102 run: break-if done?:boolean, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 102 run: src:character <- index buf:address:array:character/deref, i:number
9999 mem: location 1012 is 1064
9999 mem: location 1064 is 30
9999 mem: location 1065 is 52
9999 mem: location 1066 is 51
9999 mem: location 1067 is 50
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1013 is 2
9999 mem: location 1012 is 1064
9999 mem: location 1013 is 2
9999 run: address to copy is 1067
9999 run: its type is 4
9999 mem: location 1067 is 50
9999 mem: storing 50 in location 1015
 102 run: dest:address:character <- index-address result:address:array:character/deref, j:number
9999 mem: location 1003 is 1281
9999 mem: location 1281 is 3
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: location 1014 is 0
9999 mem: location 1003 is 1281
9999 mem: location 1014 is 0
9999 mem: storing 1282 in location 1016
 102 run: dest:address:character/deref <- copy src:character
9999 mem: location 1015 is 50
9999 mem: location 1016 is 1282
9999 mem: storing 50 in location 1282
 102 run: i:number <- subtract i:number, 1:literal
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1013
 102 run: j:number <- add j:number, 1:literal
9999 mem: location 1014 is 0
9999 mem: storing 1 in location 1014
 102 run: loop 
9999 run: jumping to instruction 34
 102 run: done?:boolean <- lesser-than i:number, 0:literal
9999 mem: location 1013 is 1
9999 mem: storing 0 in location 1008
 102 run: break-if done?:boolean, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 102 run: src:character <- index buf:address:array:character/deref, i:number
9999 mem: location 1012 is 1064
9999 mem: location 1064 is 30
9999 mem: location 1065 is 52
9999 mem: location 1066 is 51
9999 mem: location 1067 is 50
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1013 is 1
9999 mem: location 1012 is 1064
9999 mem: location 1013 is 1
9999 run: address to copy is 1066
9999 run: its type is 4
9999 mem: location 1066 is 51
9999 mem: storing 51 in location 1015
 102 run: dest:address:character <- index-address result:address:array:character/deref, j:number
9999 mem: location 1003 is 1281
9999 mem: location 1281 is 3
9999 mem: location 1282 is 50
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: location 1014 is 1
9999 mem: location 1003 is 1281
9999 mem: location 1014 is 1
9999 mem: storing 1283 in location 1016
 102 run: dest:address:character/deref <- copy src:character
9999 mem: location 1015 is 51
9999 mem: location 1016 is 1283
9999 mem: storing 51 in location 1283
 102 run: i:number <- subtract i:number, 1:literal
9999 mem: location 1013 is 1
9999 mem: storing 0 in location 1013
 102 run: j:number <- add j:number, 1:literal
9999 mem: location 1014 is 1
9999 mem: storing 2 in location 1014
 102 run: loop 
9999 run: jumping to instruction 34
 102 run: done?:boolean <- lesser-than i:number, 0:literal
9999 mem: location 1013 is 0
9999 mem: storing 0 in location 1008
 102 run: break-if done?:boolean, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 102 run: src:character <- index buf:address:array:character/deref, i:number
9999 mem: location 1012 is 1064
9999 mem: location 1064 is 30
9999 mem: location 1065 is 52
9999 mem: location 1066 is 51
9999 mem: location 1067 is 50
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1013 is 0
9999 mem: location 1012 is 1064
9999 mem: location 1013 is 0
9999 run: address to copy is 1065
9999 run: its type is 4
9999 mem: location 1065 is 52
9999 mem: storing 52 in location 1015
 102 run: dest:address:character <- index-address result:address:array:character/deref, j:number
9999 mem: location 1003 is 1281
9999 mem: location 1281 is 3
9999 mem: location 1282 is 50
9999 mem: location 1283 is 51
9999 mem: location 1284 is 0
9999 mem: location 1014 is 2
9999 mem: location 1003 is 1281
9999 mem: location 1014 is 2
9999 mem: storing 1284 in location 1016
 102 run: dest:address:character/deref <- copy src:character
9999 mem: location 1015 is 52
9999 mem: location 1016 is 1284
9999 mem: storing 52 in location 1284
 102 run: i:number <- subtract i:number, 1:literal
9999 mem: location 1013 is 0
9999 mem: storing -1 in location 1013
 102 run: j:number <- add j:number, 1:literal
9999 mem: location 1014 is 2
9999 mem: storing 3 in location 1014
 102 run: loop 
9999 run: jumping to instruction 34
 102 run: done?:boolean <- lesser-than i:number, 0:literal
9999 mem: location 1013 is -1
9999 mem: storing 1 in location 1008
 102 run: break-if done?:boolean, 
9999 mem: location 1008 is 1
9999 run: jumping to instruction 42
 102 run: reply result:address:array:character
9999 mem: location 1003 is 1281
9999 run: result 0 is 1281
9999 mem: storing 1281 in location 1
 101 run: 2:array:character/raw <- copy 1:address:array:character/deref/raw
9999 mem: location 1 is 1281
9999 mem: location 1281 is 3
9999 mem: location 1282 is 50
9999 mem: location 1283 is 51
9999 mem: location 1284 is 52
9999 mem: storing 3 in location 2
9999 mem: storing 50 in location 3
9999 mem: storing 51 in location 4
9999 mem: storing 52 in location 5
 100 run: memory-should-contain [
    2:string <- [234]
  ]
9999 run: checking string length at 2
9999 run: checking location 3
9999 run: checking location 4
9999 run: checking location 5
