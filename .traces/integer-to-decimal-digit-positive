parse: instruction: run
parse:   ingredient: {name: "
    1:address:array:character/raw <- integer-to-decimal-string 234:literal
    2:array:character/raw <- copy 1:address:array:character/deref/raw
  ", value: 0, type: 0, properties: ["
    1:address:array:character/raw <- integer-to-decimal-string 234:literal
    2:array:character/raw <- copy 1:address:array:character/deref/raw
  ": "literal-string"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "
    2:string <- [234]
  ", value: 0, type: 0, properties: ["
    2:string <- [234]
  ": "literal-string"]}
after-brace: recipe integer-to-decimal-digit-positive
after-brace: run ...
after-brace: memory-should-contain ...
new: routine allocated memory from 1000 to 101000
schedule: integer-to-decimal-digit-positive
run: instruction integer-to-decimal-digit-positive/0
run: run/55 {name: "
    1:address:array:character/raw <- integer-to-decimal-string 234:literal
    2:array:character/raw <- copy 1:address:array:character/deref/raw
  ", value: 0, type: 0, properties: ["
    1:address:array:character/raw <- integer-to-decimal-string 234:literal
    2:array:character/raw <- copy 1:address:array:character/deref/raw
  ": "literal-string"]}
run: ingredient 0 is 
    1:address:array:character/raw <- integer-to-decimal-string 234:literal
    2:array:character/raw <- copy 1:address:array:character/deref/raw
  
parse: instruction: integer-to-decimal-string
parse:   ingredient: {name: "234", value: 0, type: 0, properties: ["234": "literal"]}
parse:   product: {name: "1", value: 0, type: 2-5-4, properties: ["1": "address":"array":"character", "raw": ]}
parse: instruction: copy
parse:   ingredient: {name: "1", value: 0, type: 2-5-4, properties: ["1": "address":"array":"character", "deref": , "raw": ]}
parse:   product: {name: "2", value: 0, type: 5-4, properties: ["2": "array":"character", "raw": ]}
after-brace: recipe run1001
after-brace: integer-to-decimal-string ...
after-brace: copy ...
run: instruction run1001/0
run: {name: "1", value: 1, type: 2-5-4, properties: ["1": "address":"array":"character", "raw": ]} <- integer-to-decimal-string/105 {name: "234", value: 234, type: 0, properties: ["234": "literal"]}
run: ingredient 0 is 234
run: instruction integer-to-decimal-string/0
run: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/52 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run: ingredient 0 is location
run: ingredient 1 is 30
mem: array size is 30
mem: new alloc: 1000
run: product 0 is default-space
run: instruction integer-to-decimal-string/1
run: {name: "n", value: 1, type: 1, properties: ["n": "number"]} <- next-ingredient/34 
run: product 0 is n
mem: storing 234 in location 1002
run: instruction integer-to-decimal-string/3
run: break-if/11 {name: "n", value: 1, type: 1, properties: ["n": "number"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run: ingredient 0 is n
mem: location 1002 is 234
run: ingredient 1 is 
run: jumping to instruction 6
run: instruction integer-to-decimal-string/7
run: {name: "negate-result", value: 3, type: 3, properties: ["negate-result": "boolean"]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run: ingredient 0 is 0
run: product 0 is negate-result
mem: storing 0 in location 1004
run: instruction integer-to-decimal-string/9
run: {name: "negative?", value: 4, type: 3, properties: ["negative?": "boolean"]} <- lesser-than/15 {name: "n", value: 1, type: 1, properties: ["n": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run: ingredient 0 is n
mem: location 1002 is 234
run: ingredient 1 is 0
run: product 0 is negative?
mem: storing 0 in location 1005
run: instruction integer-to-decimal-string/10
run: break-unless/12 {name: "negative?", value: 4, type: 3, properties: ["negative?": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run: ingredient 0 is negative?
mem: location 1005 is 0
run: ingredient 1 is 
run: jumping to instruction 13
run: instruction integer-to-decimal-string/14
run: {name: "tmp", value: 5, type: 2-10, properties: ["tmp": "address":"buffer"]} <- init-buffer/101 {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run: ingredient 0 is 30
run: instruction init-buffer/0
run: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/52 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run: ingredient 0 is location
run: ingredient 1 is 30
mem: array size is 30
mem: new alloc: 1031
run: product 0 is default-space
run: instruction init-buffer/1
run: {name: "result", value: 1, type: 2-10, properties: ["result": "address":"buffer"]} <- new/52 {name: "buffer", value: 10, type: 0, properties: ["buffer": "type"]}
run: ingredient 0 is buffer
mem: new alloc: 1062
run: product 0 is result
mem: storing 1062 in location 1033
run: instruction init-buffer/2
run: {name: "len", value: 2, type: 2-1, properties: ["len": "address":"number"]} <- get-address/29 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run: ingredient 0 is result
mem: location 1033 is 1062
mem: location 1062 is 0
mem: location 1063 is 0
run: ingredient 1 is length
mem: location 1033 is 1062
run: address to copy is 1062
run: product 0 is len
mem: storing 1062 in location 1034
run: instruction init-buffer/3
run: {name: "len", value: 2, type: 2-1, properties: ["len": "address":"number", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run: ingredient 0 is 0
run: product 0 is len
mem: location 1034 is 1062
mem: storing 0 in location 1062
run: instruction init-buffer/4
run: {name: "s", value: 3, type: 2-2-5-4, properties: ["s": "address":"address":"array":"character"]} <- get-address/29 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run: ingredient 0 is result
mem: location 1033 is 1062
mem: location 1062 is 0
mem: location 1063 is 0
run: ingredient 1 is data
mem: location 1033 is 1062
run: address to copy is 1063
run: product 0 is s
mem: storing 1063 in location 1035
run: instruction init-buffer/5
run: {name: "capacity", value: 4, type: 1, properties: ["capacity": "number"]} <- next-ingredient/34 
run: product 0 is capacity
mem: storing 30 in location 1036
run: instruction init-buffer/6
run: {name: "s", value: 3, type: 2-2-5-4, properties: ["s": "address":"address":"array":"character", "deref": ]} <- new/52 {name: "character", value: 4, type: 0, properties: ["character": "type"]}, {name: "capacity", value: 4, type: 1, properties: ["capacity": "number"]}
run: ingredient 0 is character
run: ingredient 1 is capacity
mem: location 1036 is 30
mem: array size is 30
mem: new alloc: 1064
run: product 0 is s
mem: location 1035 is 1063
mem: storing 1064 in location 1063
run: instruction init-buffer/7
run: reply/37 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"buffer"]}
run: ingredient 0 is result
mem: location 1033 is 1062
run: result 0 is 1062
run: product 0 is tmp
mem: storing 1062 in location 1006
run: instruction integer-to-decimal-string/15
run: {name: "digit-base", value: 6, type: 1, properties: ["digit-base": "number"]} <- copy/1 {name: "48", value: 48, type: 0, properties: ["48": "literal"]}
run: ingredient 0 is 48
run: product 0 is digit-base
mem: storing 48 in location 1007
run: instruction integer-to-decimal-string/17
run: {name: "done?", value: 7, type: 3, properties: ["done?": "boolean"]} <- equal/13 {name: "n", value: 1, type: 1, properties: ["n": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run: ingredient 0 is n
mem: location 1002 is 234
run: ingredient 1 is 0
run: product 0 is done?
mem: storing 0 in location 1008
run: instruction integer-to-decimal-string/18
run: break-if/11 {name: "done?", value: 7, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run: ingredient 0 is done?
mem: location 1008 is 0
run: ingredient 1 is 
run: jump-if fell through
run: instruction integer-to-decimal-string/19
run: {name: "n", value: 1, type: 1, properties: ["n": "number"]}, {name: "digit", value: 8, type: 1, properties: ["digit": "number"]} <- divide-with-remainder/6 {name: "n", value: 1, type: 1, properties: ["n": "number"]}, {name: "10", value: 10, type: 0, properties: ["10": "literal"]}
run: ingredient 0 is n
mem: location 1002 is 234
run: ingredient 1 is 10
run: product 0 is n
mem: storing 23 in location 1002
run: product 1 is digit
mem: storing 4 in location 1009
run: instruction integer-to-decimal-string/20
run: {name: "c", value: 9, type: 4, properties: ["c": "character"]} <- add/2 {name: "digit-base", value: 6, type: 1, properties: ["digit-base": "number"]}, {name: "digit", value: 8, type: 1, properties: ["digit": "number"]}
run: ingredient 0 is digit-base
mem: location 1007 is 48
run: ingredient 1 is digit
mem: location 1009 is 4
run: product 0 is c
mem: storing 52 in location 1010
run: instruction integer-to-decimal-string/21
run: {name: "tmp", value: 5, type: 2-10, properties: ["tmp": "address":"buffer"]} <- buffer-append/104 {name: "tmp", value: 5, type: 2-10, properties: ["tmp": "address":"buffer"]}, {name: "c", value: 9, type: 4, properties: ["c": "character"]}
run: ingredient 0 is tmp
mem: location 1006 is 1062
run: ingredient 1 is c
mem: location 1010 is 52
run: instruction buffer-append/0
run: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/52 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run: ingredient 0 is location
run: ingredient 1 is 30
mem: array size is 30
mem: new alloc: 1095
run: product 0 is default-space
run: instruction buffer-append/1
run: {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer"]} <- next-ingredient/34 
run: product 0 is in
mem: storing 1062 in location 1097
run: instruction buffer-append/2
run: {name: "c", value: 2, type: 4, properties: ["c": "character"]} <- next-ingredient/34 
run: product 0 is c
mem: storing 52 in location 1098
run: instruction buffer-append/4
run: {name: "full?", value: 3, type: 3, properties: ["full?": "boolean"]} <- buffer-full?/103 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer"]}
run: ingredient 0 is in
mem: location 1097 is 1062
run: instruction buffer-full?/0
run: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/52 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run: ingredient 0 is location
run: ingredient 1 is 30
mem: array size is 30
mem: new alloc: 1126
run: product 0 is default-space
run: instruction buffer-full?/1
run: {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer"]} <- next-ingredient/34 
run: product 0 is in
mem: storing 1062 in location 1128
run: instruction buffer-full?/2
run: {name: "len", value: 2, type: 1, properties: ["len": "number"]} <- get/28 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run: ingredient 0 is in
mem: location 1128 is 1062
mem: location 1062 is 0
mem: location 1063 is 1064
run: ingredient 1 is length
mem: location 1128 is 1062
run: address to copy is 1062
run: its type is 1
mem: location 1062 is 0
run: product 0 is len
mem: storing 0 in location 1129
run: instruction buffer-full?/3
run: {name: "s", value: 3, type: 2-5-4, properties: ["s": "address":"array":"character"]} <- get/28 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run: ingredient 0 is in
mem: location 1128 is 1062
mem: location 1062 is 0
mem: location 1063 is 1064
run: ingredient 1 is data
mem: location 1128 is 1062
run: address to copy is 1063
run: its type is 2
mem: location 1063 is 1064
run: product 0 is s
mem: storing 1064 in location 1130
run: instruction buffer-full?/4
run: {name: "capacity", value: 4, type: 1, properties: ["capacity": "number"]} <- length/32 {name: "s", value: 3, type: 2-5-4, properties: ["s": "address":"array":"character", "deref": ]}
run: ingredient 0 is s
mem: location 1130 is 1064
mem: location 1064 is 30
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1077 is 0
mem: location 1078 is 0
mem: location 1079 is 0
mem: location 1080 is 0
mem: location 1081 is 0
mem: location 1082 is 0
mem: location 1083 is 0
mem: location 1084 is 0
mem: location 1085 is 0
mem: location 1086 is 0
mem: location 1087 is 0
mem: location 1088 is 0
mem: location 1089 is 0
mem: location 1090 is 0
mem: location 1091 is 0
mem: location 1092 is 0
mem: location 1093 is 0
mem: location 1094 is 0
mem: location 1130 is 1064
run: product 0 is capacity
mem: storing 30 in location 1131
run: instruction buffer-full?/5
run: {name: "result", value: 5, type: 3, properties: ["result": "boolean"]} <- greater-or-equal/16 {name: "len", value: 2, type: 1, properties: ["len": "number"]}, {name: "capacity", value: 4, type: 1, properties: ["capacity": "number"]}
run: ingredient 0 is len
mem: location 1129 is 0
run: ingredient 1 is capacity
mem: location 1131 is 30
run: product 0 is result
mem: storing 0 in location 1132
run: instruction buffer-full?/6
run: reply/37 {name: "result", value: 5, type: 3, properties: ["result": "boolean"]}
run: ingredient 0 is result
mem: location 1132 is 0
run: result 0 is 0
run: product 0 is full?
mem: storing 0 in location 1099
run: instruction buffer-append/5
run: break-unless/12 {name: "full?", value: 3, type: 3, properties: ["full?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run: ingredient 0 is full?
mem: location 1099 is 0
run: ingredient 1 is 
run: jumping to instruction 7
run: instruction buffer-append/8
run: {name: "len", value: 4, type: 2-1, properties: ["len": "address":"number"]} <- get-address/29 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run: ingredient 0 is in
mem: location 1097 is 1062
mem: location 1062 is 0
mem: location 1063 is 1064
run: ingredient 1 is length
mem: location 1097 is 1062
run: address to copy is 1062
run: product 0 is len
mem: storing 1062 in location 1100
run: instruction buffer-append/9
run: {name: "s", value: 5, type: 2-5-4, properties: ["s": "address":"array":"character"]} <- get/28 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run: ingredient 0 is in
mem: location 1097 is 1062
mem: location 1062 is 0
mem: location 1063 is 1064
run: ingredient 1 is data
mem: location 1097 is 1062
run: address to copy is 1063
run: its type is 2
mem: location 1063 is 1064
run: product 0 is s
mem: storing 1064 in location 1101
run: instruction buffer-append/10
run: {name: "dest", value: 6, type: 2-4, properties: ["dest": "address":"character"]} <- index-address/31 {name: "s", value: 5, type: 2-5-4, properties: ["s": "address":"array":"character", "deref": ]}, {name: "len", value: 4, type: 2-1, properties: ["len": "address":"number", "deref": ]}
run: ingredient 0 is s
mem: location 1101 is 1064
mem: location 1064 is 30
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1077 is 0
mem: location 1078 is 0
mem: location 1079 is 0
mem: location 1080 is 0
mem: location 1081 is 0
mem: location 1082 is 0
mem: location 1083 is 0
mem: location 1084 is 0
mem: location 1085 is 0
mem: location 1086 is 0
mem: location 1087 is 0
mem: location 1088 is 0
mem: location 1089 is 0
mem: location 1090 is 0
mem: location 1091 is 0
mem: location 1092 is 0
mem: location 1093 is 0
mem: location 1094 is 0
run: ingredient 1 is len
mem: location 1100 is 1062
mem: location 1062 is 0
mem: location 1101 is 1064
mem: location 1100 is 1062
mem: location 1062 is 0
run: product 0 is dest
mem: storing 1065 in location 1102
run: instruction buffer-append/11
run: {name: "dest", value: 6, type: 2-4, properties: ["dest": "address":"character", "deref": ]} <- copy/1 {name: "c", value: 2, type: 4, properties: ["c": "character"]}
run: ingredient 0 is c
mem: location 1098 is 52
run: product 0 is dest
mem: location 1102 is 1065
mem: storing 52 in location 1065
run: instruction buffer-append/12
run: {name: "len", value: 4, type: 2-1, properties: ["len": "address":"number", "deref": ]} <- add/2 {name: "len", value: 4, type: 2-1, properties: ["len": "address":"number", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run: ingredient 0 is len
mem: location 1100 is 1062
mem: location 1062 is 0
run: ingredient 1 is 1
run: product 0 is len
mem: location 1100 is 1062
mem: storing 1 in location 1062
run: instruction buffer-append/13
run: reply/37 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer", "same-as-ingredient": "0"]}
run: ingredient 0 is in
mem: location 1097 is 1062
run: result 0 is 1062
run: product 0 is tmp
mem: storing 1062 in location 1006
run: instruction integer-to-decimal-string/22
run: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run: ingredient 0 is 
run: jumping to instruction 17
run: instruction integer-to-decimal-string/17
run: {name: "done?", value: 7, type: 3, properties: ["done?": "boolean"]} <- equal/13 {name: "n", value: 1, type: 1, properties: ["n": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run: ingredient 0 is n
mem: location 1002 is 23
run: ingredient 1 is 0
run: product 0 is done?
mem: storing 0 in location 1008
run: instruction integer-to-decimal-string/18
run: break-if/11 {name: "done?", value: 7, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run: ingredient 0 is done?
mem: location 1008 is 0
run: ingredient 1 is 
run: jump-if fell through
run: instruction integer-to-decimal-string/19
run: {name: "n", value: 1, type: 1, properties: ["n": "number"]}, {name: "digit", value: 8, type: 1, properties: ["digit": "number"]} <- divide-with-remainder/6 {name: "n", value: 1, type: 1, properties: ["n": "number"]}, {name: "10", value: 10, type: 0, properties: ["10": "literal"]}
run: ingredient 0 is n
mem: location 1002 is 23
run: ingredient 1 is 10
run: product 0 is n
mem: storing 2 in location 1002
run: product 1 is digit
mem: storing 3 in location 1009
run: instruction integer-to-decimal-string/20
run: {name: "c", value: 9, type: 4, properties: ["c": "character"]} <- add/2 {name: "digit-base", value: 6, type: 1, properties: ["digit-base": "number"]}, {name: "digit", value: 8, type: 1, properties: ["digit": "number"]}
run: ingredient 0 is digit-base
mem: location 1007 is 48
run: ingredient 1 is digit
mem: location 1009 is 3
run: product 0 is c
mem: storing 51 in location 1010
run: instruction integer-to-decimal-string/21
run: {name: "tmp", value: 5, type: 2-10, properties: ["tmp": "address":"buffer"]} <- buffer-append/104 {name: "tmp", value: 5, type: 2-10, properties: ["tmp": "address":"buffer"]}, {name: "c", value: 9, type: 4, properties: ["c": "character"]}
run: ingredient 0 is tmp
mem: location 1006 is 1062
run: ingredient 1 is c
mem: location 1010 is 51
run: instruction buffer-append/0
run: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/52 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run: ingredient 0 is location
run: ingredient 1 is 30
mem: array size is 30
mem: new alloc: 1157
run: product 0 is default-space
run: instruction buffer-append/1
run: {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer"]} <- next-ingredient/34 
run: product 0 is in
mem: storing 1062 in location 1159
run: instruction buffer-append/2
run: {name: "c", value: 2, type: 4, properties: ["c": "character"]} <- next-ingredient/34 
run: product 0 is c
mem: storing 51 in location 1160
run: instruction buffer-append/4
run: {name: "full?", value: 3, type: 3, properties: ["full?": "boolean"]} <- buffer-full?/103 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer"]}
run: ingredient 0 is in
mem: location 1159 is 1062
run: instruction buffer-full?/0
run: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/52 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run: ingredient 0 is location
run: ingredient 1 is 30
mem: array size is 30
mem: new alloc: 1188
run: product 0 is default-space
run: instruction buffer-full?/1
run: {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer"]} <- next-ingredient/34 
run: product 0 is in
mem: storing 1062 in location 1190
run: instruction buffer-full?/2
run: {name: "len", value: 2, type: 1, properties: ["len": "number"]} <- get/28 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run: ingredient 0 is in
mem: location 1190 is 1062
mem: location 1062 is 1
mem: location 1063 is 1064
run: ingredient 1 is length
mem: location 1190 is 1062
run: address to copy is 1062
run: its type is 1
mem: location 1062 is 1
run: product 0 is len
mem: storing 1 in location 1191
run: instruction buffer-full?/3
run: {name: "s", value: 3, type: 2-5-4, properties: ["s": "address":"array":"character"]} <- get/28 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run: ingredient 0 is in
mem: location 1190 is 1062
mem: location 1062 is 1
mem: location 1063 is 1064
run: ingredient 1 is data
mem: location 1190 is 1062
run: address to copy is 1063
run: its type is 2
mem: location 1063 is 1064
run: product 0 is s
mem: storing 1064 in location 1192
run: instruction buffer-full?/4
run: {name: "capacity", value: 4, type: 1, properties: ["capacity": "number"]} <- length/32 {name: "s", value: 3, type: 2-5-4, properties: ["s": "address":"array":"character", "deref": ]}
run: ingredient 0 is s
mem: location 1192 is 1064
mem: location 1064 is 30
mem: location 1065 is 52
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1077 is 0
mem: location 1078 is 0
mem: location 1079 is 0
mem: location 1080 is 0
mem: location 1081 is 0
mem: location 1082 is 0
mem: location 1083 is 0
mem: location 1084 is 0
mem: location 1085 is 0
mem: location 1086 is 0
mem: location 1087 is 0
mem: location 1088 is 0
mem: location 1089 is 0
mem: location 1090 is 0
mem: location 1091 is 0
mem: location 1092 is 0
mem: location 1093 is 0
mem: location 1094 is 0
mem: location 1192 is 1064
run: product 0 is capacity
mem: storing 30 in location 1193
run: instruction buffer-full?/5
run: {name: "result", value: 5, type: 3, properties: ["result": "boolean"]} <- greater-or-equal/16 {name: "len", value: 2, type: 1, properties: ["len": "number"]}, {name: "capacity", value: 4, type: 1, properties: ["capacity": "number"]}
run: ingredient 0 is len
mem: location 1191 is 1
run: ingredient 1 is capacity
mem: location 1193 is 30
run: product 0 is result
mem: storing 0 in location 1194
run: instruction buffer-full?/6
run: reply/37 {name: "result", value: 5, type: 3, properties: ["result": "boolean"]}
run: ingredient 0 is result
mem: location 1194 is 0
run: result 0 is 0
run: product 0 is full?
mem: storing 0 in location 1161
run: instruction buffer-append/5
run: break-unless/12 {name: "full?", value: 3, type: 3, properties: ["full?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run: ingredient 0 is full?
mem: location 1161 is 0
run: ingredient 1 is 
run: jumping to instruction 7
run: instruction buffer-append/8
run: {name: "len", value: 4, type: 2-1, properties: ["len": "address":"number"]} <- get-address/29 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run: ingredient 0 is in
mem: location 1159 is 1062
mem: location 1062 is 1
mem: location 1063 is 1064
run: ingredient 1 is length
mem: location 1159 is 1062
run: address to copy is 1062
run: product 0 is len
mem: storing 1062 in location 1162
run: instruction buffer-append/9
run: {name: "s", value: 5, type: 2-5-4, properties: ["s": "address":"array":"character"]} <- get/28 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run: ingredient 0 is in
mem: location 1159 is 1062
mem: location 1062 is 1
mem: location 1063 is 1064
run: ingredient 1 is data
mem: location 1159 is 1062
run: address to copy is 1063
run: its type is 2
mem: location 1063 is 1064
run: product 0 is s
mem: storing 1064 in location 1163
run: instruction buffer-append/10
run: {name: "dest", value: 6, type: 2-4, properties: ["dest": "address":"character"]} <- index-address/31 {name: "s", value: 5, type: 2-5-4, properties: ["s": "address":"array":"character", "deref": ]}, {name: "len", value: 4, type: 2-1, properties: ["len": "address":"number", "deref": ]}
run: ingredient 0 is s
mem: location 1163 is 1064
mem: location 1064 is 30
mem: location 1065 is 52
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1077 is 0
mem: location 1078 is 0
mem: location 1079 is 0
mem: location 1080 is 0
mem: location 1081 is 0
mem: location 1082 is 0
mem: location 1083 is 0
mem: location 1084 is 0
mem: location 1085 is 0
mem: location 1086 is 0
mem: location 1087 is 0
mem: location 1088 is 0
mem: location 1089 is 0
mem: location 1090 is 0
mem: location 1091 is 0
mem: location 1092 is 0
mem: location 1093 is 0
mem: location 1094 is 0
run: ingredient 1 is len
mem: location 1162 is 1062
mem: location 1062 is 1
mem: location 1163 is 1064
mem: location 1162 is 1062
mem: location 1062 is 1
run: product 0 is dest
mem: storing 1066 in location 1164
run: instruction buffer-append/11
run: {name: "dest", value: 6, type: 2-4, properties: ["dest": "address":"character", "deref": ]} <- copy/1 {name: "c", value: 2, type: 4, properties: ["c": "character"]}
run: ingredient 0 is c
mem: location 1160 is 51
run: product 0 is dest
mem: location 1164 is 1066
mem: storing 51 in location 1066
run: instruction buffer-append/12
run: {name: "len", value: 4, type: 2-1, properties: ["len": "address":"number", "deref": ]} <- add/2 {name: "len", value: 4, type: 2-1, properties: ["len": "address":"number", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run: ingredient 0 is len
mem: location 1162 is 1062
mem: location 1062 is 1
run: ingredient 1 is 1
run: product 0 is len
mem: location 1162 is 1062
mem: storing 2 in location 1062
run: instruction buffer-append/13
run: reply/37 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer", "same-as-ingredient": "0"]}
run: ingredient 0 is in
mem: location 1159 is 1062
run: result 0 is 1062
run: product 0 is tmp
mem: storing 1062 in location 1006
run: instruction integer-to-decimal-string/22
run: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run: ingredient 0 is 
run: jumping to instruction 17
run: instruction integer-to-decimal-string/17
run: {name: "done?", value: 7, type: 3, properties: ["done?": "boolean"]} <- equal/13 {name: "n", value: 1, type: 1, properties: ["n": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run: ingredient 0 is n
mem: location 1002 is 2
run: ingredient 1 is 0
run: product 0 is done?
mem: storing 0 in location 1008
run: instruction integer-to-decimal-string/18
run: break-if/11 {name: "done?", value: 7, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run: ingredient 0 is done?
mem: location 1008 is 0
run: ingredient 1 is 
run: jump-if fell through
run: instruction integer-to-decimal-string/19
run: {name: "n", value: 1, type: 1, properties: ["n": "number"]}, {name: "digit", value: 8, type: 1, properties: ["digit": "number"]} <- divide-with-remainder/6 {name: "n", value: 1, type: 1, properties: ["n": "number"]}, {name: "10", value: 10, type: 0, properties: ["10": "literal"]}
run: ingredient 0 is n
mem: location 1002 is 2
run: ingredient 1 is 10
run: product 0 is n
mem: storing 0 in location 1002
run: product 1 is digit
mem: storing 2 in location 1009
run: instruction integer-to-decimal-string/20
run: {name: "c", value: 9, type: 4, properties: ["c": "character"]} <- add/2 {name: "digit-base", value: 6, type: 1, properties: ["digit-base": "number"]}, {name: "digit", value: 8, type: 1, properties: ["digit": "number"]}
run: ingredient 0 is digit-base
mem: location 1007 is 48
run: ingredient 1 is digit
mem: location 1009 is 2
run: product 0 is c
mem: storing 50 in location 1010
run: instruction integer-to-decimal-string/21
run: {name: "tmp", value: 5, type: 2-10, properties: ["tmp": "address":"buffer"]} <- buffer-append/104 {name: "tmp", value: 5, type: 2-10, properties: ["tmp": "address":"buffer"]}, {name: "c", value: 9, type: 4, properties: ["c": "character"]}
run: ingredient 0 is tmp
mem: location 1006 is 1062
run: ingredient 1 is c
mem: location 1010 is 50
run: instruction buffer-append/0
run: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/52 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run: ingredient 0 is location
run: ingredient 1 is 30
mem: array size is 30
mem: new alloc: 1219
run: product 0 is default-space
run: instruction buffer-append/1
run: {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer"]} <- next-ingredient/34 
run: product 0 is in
mem: storing 1062 in location 1221
run: instruction buffer-append/2
run: {name: "c", value: 2, type: 4, properties: ["c": "character"]} <- next-ingredient/34 
run: product 0 is c
mem: storing 50 in location 1222
run: instruction buffer-append/4
run: {name: "full?", value: 3, type: 3, properties: ["full?": "boolean"]} <- buffer-full?/103 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer"]}
run: ingredient 0 is in
mem: location 1221 is 1062
run: instruction buffer-full?/0
run: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/52 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run: ingredient 0 is location
run: ingredient 1 is 30
mem: array size is 30
mem: new alloc: 1250
run: product 0 is default-space
run: instruction buffer-full?/1
run: {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer"]} <- next-ingredient/34 
run: product 0 is in
mem: storing 1062 in location 1252
run: instruction buffer-full?/2
run: {name: "len", value: 2, type: 1, properties: ["len": "number"]} <- get/28 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run: ingredient 0 is in
mem: location 1252 is 1062
mem: location 1062 is 2
mem: location 1063 is 1064
run: ingredient 1 is length
mem: location 1252 is 1062
run: address to copy is 1062
run: its type is 1
mem: location 1062 is 2
run: product 0 is len
mem: storing 2 in location 1253
run: instruction buffer-full?/3
run: {name: "s", value: 3, type: 2-5-4, properties: ["s": "address":"array":"character"]} <- get/28 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run: ingredient 0 is in
mem: location 1252 is 1062
mem: location 1062 is 2
mem: location 1063 is 1064
run: ingredient 1 is data
mem: location 1252 is 1062
run: address to copy is 1063
run: its type is 2
mem: location 1063 is 1064
run: product 0 is s
mem: storing 1064 in location 1254
run: instruction buffer-full?/4
run: {name: "capacity", value: 4, type: 1, properties: ["capacity": "number"]} <- length/32 {name: "s", value: 3, type: 2-5-4, properties: ["s": "address":"array":"character", "deref": ]}
run: ingredient 0 is s
mem: location 1254 is 1064
mem: location 1064 is 30
mem: location 1065 is 52
mem: location 1066 is 51
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1077 is 0
mem: location 1078 is 0
mem: location 1079 is 0
mem: location 1080 is 0
mem: location 1081 is 0
mem: location 1082 is 0
mem: location 1083 is 0
mem: location 1084 is 0
mem: location 1085 is 0
mem: location 1086 is 0
mem: location 1087 is 0
mem: location 1088 is 0
mem: location 1089 is 0
mem: location 1090 is 0
mem: location 1091 is 0
mem: location 1092 is 0
mem: location 1093 is 0
mem: location 1094 is 0
mem: location 1254 is 1064
run: product 0 is capacity
mem: storing 30 in location 1255
run: instruction buffer-full?/5
run: {name: "result", value: 5, type: 3, properties: ["result": "boolean"]} <- greater-or-equal/16 {name: "len", value: 2, type: 1, properties: ["len": "number"]}, {name: "capacity", value: 4, type: 1, properties: ["capacity": "number"]}
run: ingredient 0 is len
mem: location 1253 is 2
run: ingredient 1 is capacity
mem: location 1255 is 30
run: product 0 is result
mem: storing 0 in location 1256
run: instruction buffer-full?/6
run: reply/37 {name: "result", value: 5, type: 3, properties: ["result": "boolean"]}
run: ingredient 0 is result
mem: location 1256 is 0
run: result 0 is 0
run: product 0 is full?
mem: storing 0 in location 1223
run: instruction buffer-append/5
run: break-unless/12 {name: "full?", value: 3, type: 3, properties: ["full?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run: ingredient 0 is full?
mem: location 1223 is 0
run: ingredient 1 is 
run: jumping to instruction 7
run: instruction buffer-append/8
run: {name: "len", value: 4, type: 2-1, properties: ["len": "address":"number"]} <- get-address/29 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run: ingredient 0 is in
mem: location 1221 is 1062
mem: location 1062 is 2
mem: location 1063 is 1064
run: ingredient 1 is length
mem: location 1221 is 1062
run: address to copy is 1062
run: product 0 is len
mem: storing 1062 in location 1224
run: instruction buffer-append/9
run: {name: "s", value: 5, type: 2-5-4, properties: ["s": "address":"array":"character"]} <- get/28 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run: ingredient 0 is in
mem: location 1221 is 1062
mem: location 1062 is 2
mem: location 1063 is 1064
run: ingredient 1 is data
mem: location 1221 is 1062
run: address to copy is 1063
run: its type is 2
mem: location 1063 is 1064
run: product 0 is s
mem: storing 1064 in location 1225
run: instruction buffer-append/10
run: {name: "dest", value: 6, type: 2-4, properties: ["dest": "address":"character"]} <- index-address/31 {name: "s", value: 5, type: 2-5-4, properties: ["s": "address":"array":"character", "deref": ]}, {name: "len", value: 4, type: 2-1, properties: ["len": "address":"number", "deref": ]}
run: ingredient 0 is s
mem: location 1225 is 1064
mem: location 1064 is 30
mem: location 1065 is 52
mem: location 1066 is 51
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1077 is 0
mem: location 1078 is 0
mem: location 1079 is 0
mem: location 1080 is 0
mem: location 1081 is 0
mem: location 1082 is 0
mem: location 1083 is 0
mem: location 1084 is 0
mem: location 1085 is 0
mem: location 1086 is 0
mem: location 1087 is 0
mem: location 1088 is 0
mem: location 1089 is 0
mem: location 1090 is 0
mem: location 1091 is 0
mem: location 1092 is 0
mem: location 1093 is 0
mem: location 1094 is 0
run: ingredient 1 is len
mem: location 1224 is 1062
mem: location 1062 is 2
mem: location 1225 is 1064
mem: location 1224 is 1062
mem: location 1062 is 2
run: product 0 is dest
mem: storing 1067 in location 1226
run: instruction buffer-append/11
run: {name: "dest", value: 6, type: 2-4, properties: ["dest": "address":"character", "deref": ]} <- copy/1 {name: "c", value: 2, type: 4, properties: ["c": "character"]}
run: ingredient 0 is c
mem: location 1222 is 50
run: product 0 is dest
mem: location 1226 is 1067
mem: storing 50 in location 1067
run: instruction buffer-append/12
run: {name: "len", value: 4, type: 2-1, properties: ["len": "address":"number", "deref": ]} <- add/2 {name: "len", value: 4, type: 2-1, properties: ["len": "address":"number", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run: ingredient 0 is len
mem: location 1224 is 1062
mem: location 1062 is 2
run: ingredient 1 is 1
run: product 0 is len
mem: location 1224 is 1062
mem: storing 3 in location 1062
run: instruction buffer-append/13
run: reply/37 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"buffer", "same-as-ingredient": "0"]}
run: ingredient 0 is in
mem: location 1221 is 1062
run: result 0 is 1062
run: product 0 is tmp
mem: storing 1062 in location 1006
run: instruction integer-to-decimal-string/22
run: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run: ingredient 0 is 
run: jumping to instruction 17
run: instruction integer-to-decimal-string/17
run: {name: "done?", value: 7, type: 3, properties: ["done?": "boolean"]} <- equal/13 {name: "n", value: 1, type: 1, properties: ["n": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run: ingredient 0 is n
mem: location 1002 is 0
run: ingredient 1 is 0
run: product 0 is done?
mem: storing 1 in location 1008
run: instruction integer-to-decimal-string/18
run: break-if/11 {name: "done?", value: 7, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run: ingredient 0 is done?
mem: location 1008 is 1
run: ingredient 1 is 
run: jumping to instruction 23
run: instruction integer-to-decimal-string/25
run: break-unless/12 {name: "negate-result", value: 3, type: 3, properties: ["negate-result": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run: ingredient 0 is negate-result
mem: location 1004 is 0
run: ingredient 1 is 
run: jumping to instruction 27
run: instruction integer-to-decimal-string/28
run: {name: "len", value: 10, type: 1, properties: ["len": "number"]} <- get/28 {name: "tmp", value: 5, type: 2-10, properties: ["tmp": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run: ingredient 0 is tmp
mem: location 1006 is 1062
mem: location 1062 is 3
mem: location 1063 is 1064
run: ingredient 1 is length
mem: location 1006 is 1062
run: address to copy is 1062
run: its type is 1
mem: location 1062 is 3
run: product 0 is len
mem: storing 3 in location 1011
run: instruction integer-to-decimal-string/29
run: {name: "buf", value: 11, type: 2-5-4, properties: ["buf": "address":"array":"character"]} <- get/28 {name: "tmp", value: 5, type: 2-10, properties: ["tmp": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run: ingredient 0 is tmp
mem: location 1006 is 1062
mem: location 1062 is 3
mem: location 1063 is 1064
run: ingredient 1 is data
mem: location 1006 is 1062
run: address to copy is 1063
run: its type is 2
mem: location 1063 is 1064
run: product 0 is buf
mem: storing 1064 in location 1012
run: instruction integer-to-decimal-string/30
run: {name: "result", value: 2, type: 2-5-4, properties: ["result": "address":"array":"character"]} <- new/52 {name: "character", value: 4, type: 0, properties: ["character": "type"]}, {name: "len", value: 10, type: 1, properties: ["len": "number"]}
run: ingredient 0 is character
run: ingredient 1 is len
mem: location 1011 is 3
mem: array size is 3
mem: new alloc: 1281
run: product 0 is result
mem: storing 1281 in location 1003
run: instruction integer-to-decimal-string/31
run: {name: "i", value: 12, type: 1, properties: ["i": "number"]} <- subtract/3 {name: "len", value: 10, type: 1, properties: ["len": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run: ingredient 0 is len
mem: location 1011 is 3
run: ingredient 1 is 1
run: product 0 is i
mem: storing 2 in location 1013
run: instruction integer-to-decimal-string/32
run: {name: "j", value: 13, type: 1, properties: ["j": "number"]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run: ingredient 0 is 0
run: product 0 is j
mem: storing 0 in location 1014
run: instruction integer-to-decimal-string/34
run: {name: "done?", value: 7, type: 3, properties: ["done?": "boolean"]} <- lesser-than/15 {name: "i", value: 12, type: 1, properties: ["i": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run: ingredient 0 is i
mem: location 1013 is 2
run: ingredient 1 is 0
run: product 0 is done?
mem: storing 0 in location 1008
run: instruction integer-to-decimal-string/35
run: break-if/11 {name: "done?", value: 7, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 6, type: 0, properties: ["": ]}
run: ingredient 0 is done?
mem: location 1008 is 0
run: ingredient 1 is 
run: jump-if fell through
run: instruction integer-to-decimal-string/36
run: {name: "src", value: 14, type: 4, properties: ["src": "character"]} <- index/30 {name: "buf", value: 11, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 12, type: 1, properties: ["i": "number"]}
run: ingredient 0 is buf
mem: location 1012 is 1064
mem: location 1064 is 30
mem: location 1065 is 52
mem: location 1066 is 51
mem: location 1067 is 50
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1077 is 0
mem: location 1078 is 0
mem: location 1079 is 0
mem: location 1080 is 0
mem: location 1081 is 0
mem: location 1082 is 0
mem: location 1083 is 0
mem: location 1084 is 0
mem: location 1085 is 0
mem: location 1086 is 0
mem: location 1087 is 0
mem: location 1088 is 0
mem: location 1089 is 0
mem: location 1090 is 0
mem: location 1091 is 0
mem: location 1092 is 0
mem: location 1093 is 0
mem: location 1094 is 0
run: ingredient 1 is i
mem: location 1013 is 2
mem: location 1012 is 1064
mem: location 1013 is 2
run: address to copy is 1067
run: its type is 4
mem: location 1067 is 50
run: product 0 is src
mem: storing 50 in location 1015
run: instruction integer-to-decimal-string/37
run: {name: "dest", value: 15, type: 2-4, properties: ["dest": "address":"character"]} <- index-address/31 {name: "result", value: 2, type: 2-5-4, properties: ["result": "address":"array":"character", "deref": ]}, {name: "j", value: 13, type: 1, properties: ["j": "number"]}
run: ingredient 0 is result
mem: location 1003 is 1281
mem: location 1281 is 3
mem: location 1282 is 0
mem: location 1283 is 0
mem: location 1284 is 0
run: ingredient 1 is j
mem: location 1014 is 0
mem: location 1003 is 1281
mem: location 1014 is 0
run: product 0 is dest
mem: storing 1282 in location 1016
run: instruction integer-to-decimal-string/38
run: {name: "dest", value: 15, type: 2-4, properties: ["dest": "address":"character", "deref": ]} <- copy/1 {name: "src", value: 14, type: 4, properties: ["src": "character"]}
run: ingredient 0 is src
mem: location 1015 is 50
run: product 0 is dest
mem: location 1016 is 1282
mem: storing 50 in location 1282
run: instruction integer-to-decimal-string/39
run: {name: "i", value: 12, type: 1, properties: ["i": "number"]} <- subtract/3 {name: "i", value: 12, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run: ingredient 0 is i
mem: location 1013 is 2
run: ingredient 1 is 1
run: product 0 is i
mem: storing 1 in location 1013
run: instruction integer-to-decimal-string/40
run: {name: "j", value: 13, type: 1, properties: ["j": "number"]} <- add/2 {name: "j", value: 13, type: 1, properties: ["j": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run: ingredient 0 is j
mem: location 1014 is 0
run: ingredient 1 is 1
run: product 0 is j
mem: storing 1 in location 1014
run: instruction integer-to-decimal-string/41
run: loop/10 {name: "", value: -8, type: 0, properties: ["": ]}
run: ingredient 0 is 
run: jumping to instruction 34
run: instruction integer-to-decimal-string/34
run: {name: "done?", value: 7, type: 3, properties: ["done?": "boolean"]} <- lesser-than/15 {name: "i", value: 12, type: 1, properties: ["i": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run: ingredient 0 is i
mem: location 1013 is 1
run: ingredient 1 is 0
run: product 0 is done?
mem: storing 0 in location 1008
run: instruction integer-to-decimal-string/35
run: break-if/11 {name: "done?", value: 7, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 6, type: 0, properties: ["": ]}
run: ingredient 0 is done?
mem: location 1008 is 0
run: ingredient 1 is 
run: jump-if fell through
run: instruction integer-to-decimal-string/36
run: {name: "src", value: 14, type: 4, properties: ["src": "character"]} <- index/30 {name: "buf", value: 11, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 12, type: 1, properties: ["i": "number"]}
run: ingredient 0 is buf
mem: location 1012 is 1064
mem: location 1064 is 30
mem: location 1065 is 52
mem: location 1066 is 51
mem: location 1067 is 50
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1077 is 0
mem: location 1078 is 0
mem: location 1079 is 0
mem: location 1080 is 0
mem: location 1081 is 0
mem: location 1082 is 0
mem: location 1083 is 0
mem: location 1084 is 0
mem: location 1085 is 0
mem: location 1086 is 0
mem: location 1087 is 0
mem: location 1088 is 0
mem: location 1089 is 0
mem: location 1090 is 0
mem: location 1091 is 0
mem: location 1092 is 0
mem: location 1093 is 0
mem: location 1094 is 0
run: ingredient 1 is i
mem: location 1013 is 1
mem: location 1012 is 1064
mem: location 1013 is 1
run: address to copy is 1066
run: its type is 4
mem: location 1066 is 51
run: product 0 is src
mem: storing 51 in location 1015
run: instruction integer-to-decimal-string/37
run: {name: "dest", value: 15, type: 2-4, properties: ["dest": "address":"character"]} <- index-address/31 {name: "result", value: 2, type: 2-5-4, properties: ["result": "address":"array":"character", "deref": ]}, {name: "j", value: 13, type: 1, properties: ["j": "number"]}
run: ingredient 0 is result
mem: location 1003 is 1281
mem: location 1281 is 3
mem: location 1282 is 50
mem: location 1283 is 0
mem: location 1284 is 0
run: ingredient 1 is j
mem: location 1014 is 1
mem: location 1003 is 1281
mem: location 1014 is 1
run: product 0 is dest
mem: storing 1283 in location 1016
run: instruction integer-to-decimal-string/38
run: {name: "dest", value: 15, type: 2-4, properties: ["dest": "address":"character", "deref": ]} <- copy/1 {name: "src", value: 14, type: 4, properties: ["src": "character"]}
run: ingredient 0 is src
mem: location 1015 is 51
run: product 0 is dest
mem: location 1016 is 1283
mem: storing 51 in location 1283
run: instruction integer-to-decimal-string/39
run: {name: "i", value: 12, type: 1, properties: ["i": "number"]} <- subtract/3 {name: "i", value: 12, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run: ingredient 0 is i
mem: location 1013 is 1
run: ingredient 1 is 1
run: product 0 is i
mem: storing 0 in location 1013
run: instruction integer-to-decimal-string/40
run: {name: "j", value: 13, type: 1, properties: ["j": "number"]} <- add/2 {name: "j", value: 13, type: 1, properties: ["j": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run: ingredient 0 is j
mem: location 1014 is 1
run: ingredient 1 is 1
run: product 0 is j
mem: storing 2 in location 1014
run: instruction integer-to-decimal-string/41
run: loop/10 {name: "", value: -8, type: 0, properties: ["": ]}
run: ingredient 0 is 
run: jumping to instruction 34
run: instruction integer-to-decimal-string/34
run: {name: "done?", value: 7, type: 3, properties: ["done?": "boolean"]} <- lesser-than/15 {name: "i", value: 12, type: 1, properties: ["i": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run: ingredient 0 is i
mem: location 1013 is 0
run: ingredient 1 is 0
run: product 0 is done?
mem: storing 0 in location 1008
run: instruction integer-to-decimal-string/35
run: break-if/11 {name: "done?", value: 7, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 6, type: 0, properties: ["": ]}
run: ingredient 0 is done?
mem: location 1008 is 0
run: ingredient 1 is 
run: jump-if fell through
run: instruction integer-to-decimal-string/36
run: {name: "src", value: 14, type: 4, properties: ["src": "character"]} <- index/30 {name: "buf", value: 11, type: 2-5-4, properties: ["buf": "address":"array":"character", "deref": ]}, {name: "i", value: 12, type: 1, properties: ["i": "number"]}
run: ingredient 0 is buf
mem: location 1012 is 1064
mem: location 1064 is 30
mem: location 1065 is 52
mem: location 1066 is 51
mem: location 1067 is 50
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1077 is 0
mem: location 1078 is 0
mem: location 1079 is 0
mem: location 1080 is 0
mem: location 1081 is 0
mem: location 1082 is 0
mem: location 1083 is 0
mem: location 1084 is 0
mem: location 1085 is 0
mem: location 1086 is 0
mem: location 1087 is 0
mem: location 1088 is 0
mem: location 1089 is 0
mem: location 1090 is 0
mem: location 1091 is 0
mem: location 1092 is 0
mem: location 1093 is 0
mem: location 1094 is 0
run: ingredient 1 is i
mem: location 1013 is 0
mem: location 1012 is 1064
mem: location 1013 is 0
run: address to copy is 1065
run: its type is 4
mem: location 1065 is 52
run: product 0 is src
mem: storing 52 in location 1015
run: instruction integer-to-decimal-string/37
run: {name: "dest", value: 15, type: 2-4, properties: ["dest": "address":"character"]} <- index-address/31 {name: "result", value: 2, type: 2-5-4, properties: ["result": "address":"array":"character", "deref": ]}, {name: "j", value: 13, type: 1, properties: ["j": "number"]}
run: ingredient 0 is result
mem: location 1003 is 1281
mem: location 1281 is 3
mem: location 1282 is 50
mem: location 1283 is 51
mem: location 1284 is 0
run: ingredient 1 is j
mem: location 1014 is 2
mem: location 1003 is 1281
mem: location 1014 is 2
run: product 0 is dest
mem: storing 1284 in location 1016
run: instruction integer-to-decimal-string/38
run: {name: "dest", value: 15, type: 2-4, properties: ["dest": "address":"character", "deref": ]} <- copy/1 {name: "src", value: 14, type: 4, properties: ["src": "character"]}
run: ingredient 0 is src
mem: location 1015 is 52
run: product 0 is dest
mem: location 1016 is 1284
mem: storing 52 in location 1284
run: instruction integer-to-decimal-string/39
run: {name: "i", value: 12, type: 1, properties: ["i": "number"]} <- subtract/3 {name: "i", value: 12, type: 1, properties: ["i": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run: ingredient 0 is i
mem: location 1013 is 0
run: ingredient 1 is 1
run: product 0 is i
mem: storing -1 in location 1013
run: instruction integer-to-decimal-string/40
run: {name: "j", value: 13, type: 1, properties: ["j": "number"]} <- add/2 {name: "j", value: 13, type: 1, properties: ["j": "number"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run: ingredient 0 is j
mem: location 1014 is 2
run: ingredient 1 is 1
run: product 0 is j
mem: storing 3 in location 1014
run: instruction integer-to-decimal-string/41
run: loop/10 {name: "", value: -8, type: 0, properties: ["": ]}
run: ingredient 0 is 
run: jumping to instruction 34
run: instruction integer-to-decimal-string/34
run: {name: "done?", value: 7, type: 3, properties: ["done?": "boolean"]} <- lesser-than/15 {name: "i", value: 12, type: 1, properties: ["i": "number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run: ingredient 0 is i
mem: location 1013 is -1
run: ingredient 1 is 0
run: product 0 is done?
mem: storing 1 in location 1008
run: instruction integer-to-decimal-string/35
run: break-if/11 {name: "done?", value: 7, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 6, type: 0, properties: ["": ]}
run: ingredient 0 is done?
mem: location 1008 is 1
run: ingredient 1 is 
run: jumping to instruction 42
run: instruction integer-to-decimal-string/43
run: reply/37 {name: "result", value: 2, type: 2-5-4, properties: ["result": "address":"array":"character"]}
run: ingredient 0 is result
mem: location 1003 is 1281
run: result 0 is 1281
run: product 0 is 1
mem: storing 1281 in location 1
run: instruction run1001/1
run: {name: "2", value: 2, type: 5-4, properties: ["2": "array":"character", "raw": ]} <- copy/1 {name: "1", value: 1, type: 2-5-4, properties: ["1": "address":"array":"character", "deref": , "raw": ]}
run: ingredient 0 is 1
mem: location 1 is 1281
mem: location 1281 is 3
mem: location 1282 is 50
mem: location 1283 is 51
mem: location 1284 is 52
run: product 0 is 2
mem: storing 3 in location 2
mem: storing 50 in location 3
mem: storing 51 in location 4
mem: storing 52 in location 5
run: instruction integer-to-decimal-digit-positive/1
run: memory-should-contain/56 {name: "
    2:string <- [234]
  ", value: 0, type: 0, properties: ["
    2:string <- [234]
  ": "literal-string"]}
run: ingredient 0 is 
    2:string <- [234]
  
run: checking string length at 2
run: checking location 3
run: checking location 4
run: checking location 5
