 102 run: assume-console [
    press delete
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"delete": <>}
9992 load: after rewriting: press delete
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1002 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1002
9991 transform: --- deduce types for recipe run1002
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1002
9991 transform: --- transform names for recipe run1002
9991 transform: --- resolve ambiguous calls for recipe run1002
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1002
9991 transform: --- transform braces for recipe run1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1002
9991 transform: --- type-check 'call' instructions inside recipe run1002
9991 transform: --- type-check calls inside recipe run1002
9991 transform: --- convert 'new' to 'allocate' for recipe run1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1011
9999 mem: location 901 is 1405
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1275
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1405 in location 1276
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1277
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1277 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1277 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1278
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1277 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1277 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1279
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1275 is 1011
9999 mem: location 1278 is 1
9999 mem: location 1279 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1207
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1208
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1209
 105 run: jump-unless screen, 
9999 mem: location 1207 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1207 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1207 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1210
 105 run: *row <- copy new-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1013
9999 mem: storing 1 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1207 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1207 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1211
 105 run: *column <- copy new-column
9999 mem: location 1209 is 0
9999 mem: location 1211 is 1014
9999 mem: storing 0 in location 1014
 105 run: reply screen:address:shared:screen
9999 mem: location 1207 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1275
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1276 is 1405
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1405 in location 1240
 105 run: jump-unless console, 
9999 mem: location 1240 is 1405
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1240 is 1405
9999 mem: location 1405 is 0
9999 mem: location 1406 is 1400
9999 mem: location 1240 is 1405
9998 run: address to copy is 1405
9999 mem: storing 1405 in location 1241
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1240 is 1405
9999 mem: location 1405 is 0
9999 mem: location 1406 is 1400
9999 mem: location 1240 is 1405
9998 run: address to copy is 1406
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1406 is 1400
9999 mem: storing 1400 in location 1242
 105 run: max:number <- length *buf
9999 mem: location 1242 is 1400
9999 mem: storing 1 in location 1243
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1241 is 1405
9999 mem: location 1405 is 0
9999 mem: location 1243 is 1
9999 mem: storing 0 in location 1244
 105 run: jump-unless done?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1242 is 1400
9999 mem: location 1241 is 1405
9999 mem: location 1405 is 0
9998 run: address to copy is 1401
9998 run: its type is event
9999 mem: location 1401 is 1
9999 mem: location 1402 is 65522
9999 mem: location 1403 is 0
9999 mem: location 1404 is 0
9999 mem: storing 1 in location 1246
9999 mem: storing 65522 in location 1247
9999 mem: storing 0 in location 1248
9999 mem: storing 0 in location 1249
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1241 is 1405
9999 mem: location 1405 is 0
9999 mem: location 1241 is 1405
9999 mem: storing 1 in location 1405
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1246 is 1
9999 mem: location 1247 is 65522
9999 mem: location 1248 is 0
9999 mem: location 1249 is 0
9999 mem: location 1240 is 1405
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65522, 0, 0]
9998 run: result 1 is 1405
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1280
9999 mem: storing 65522 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 1405 in location 1276
9999 mem: storing 1 in location 1284
9999 mem: storing 0 in location 1285
 104 run: jump-unless found?, 
9999 mem: location 1284 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1280 is 1
9999 mem: location 1281 is 65522
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 mem: storing 0 in location 1286
 104 run: jump-unless t, 
9999 mem: location 1286 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1286 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1275 is 1011
9999 mem: location 1277 is 1000
9999 mem: location 1280 is 1
9999 mem: location 1281 is 65522
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1290
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1291
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1292
9999 mem: storing 65522 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1296
 105 run: jump-if editor, 1:offset
9999 mem: location 1291 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1290 is 1011
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1407
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1409
 106 run: jump-unless screen, 
9999 mem: location 1409 is 1011
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1409 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1409 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1410
 106 run: reply width:number
9999 mem: location 1410 is 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1297
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1290 is 1011
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1409
 106 run: jump-unless screen, 
9999 mem: location 1409 is 1011
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1409 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1409 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1410
 106 run: reply height:number
9999 mem: location 1410 is 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1298
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1291 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1291 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1299
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1291 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1291 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1300
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1291 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1291 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1301
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1291 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1291 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1302
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1291 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1291 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1303
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1302 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1304
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1303 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1305
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1292 is 1
9999 mem: location 1293 is 65522
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: storing 0 in location 1306
 105 run: jump-unless c, 
9999 mem: location 1306 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1292 is 1
9999 mem: location 1293 is 65522
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: storing 1293 in location 1360
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1360 is 1293
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1360 is 1293
9999 mem: location 1293 is 65522
9999 mem: storing 0 in location 1323
 105 run: jump-unless page-up?, 
9999 mem: location 1323 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1360 is 1293
9999 mem: location 1293 is 65522
9999 mem: storing 0 in location 1339
 105 run: jump-unless page-down?, 
9999 mem: location 1339 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1360 is 1293
9999 mem: location 1293 is 65522
9999 mem: storing 0 in location 1346
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1346 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1360 is 1293
9999 mem: location 1293 is 65522
9999 mem: storing 0 in location 1347
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1360 is 1293
9999 mem: location 1293 is 65522
9999 mem: storing 0 in location 1361
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1361 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1360 is 1293
9999 mem: location 1293 is 65522
9999 mem: storing 0 in location 1362
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1362 is 0
9998 run: jumping to instruction 673
 105 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1360 is 1293
9999 mem: location 1293 is 65522
9999 mem: storing 0 in location 1363
 105 run: jump-unless move-to-previous-character?, 
9999 mem: location 1363 is 0
9998 run: jumping to instruction 716
 105 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1360 is 1293
9999 mem: location 1293 is 65522
9999 mem: storing 0 in location 1365
 105 run: jump-unless move-to-next-character?, 
9999 mem: location 1365 is 0
9998 run: jumping to instruction 757
 105 run: delete-next-character?:boolean <- equal *k, 65522/delete
9999 mem: location 1360 is 1293
9999 mem: location 1293 is 65522
9999 mem: storing 1 in location 1367
 105 run: jump-unless delete-next-character?, 
9999 mem: location 1367 is 1
9998 run: jump-unless fell through
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1291 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1291 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1152
9999 mem: storing 1152 in location 1341
 105 run: editor, screen, go-render?:boolean, deleted-cell:address:shared:duplex-list:character <- delete-at-cursor editor, screen
9999 mem: location 1291 is 1000
9999 mem: location 1290 is 1011
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1376
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1377
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1376 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1376 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1378
 106 run: data:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1376 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1376 is 1000
9998 run: address to copy is 1000
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1000 is 1152
9999 mem: storing 1152 in location 1379
 106 run: deleted-cell:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1378 is 1003
9999 mem: location 1003 is 1152
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1409
 107 run: jump-if in, 1:offset
9999 mem: location 1409 is 1152
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1409 is 1152
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1152 is 167
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 0
9999 mem: location 1409 is 1152
9999 type: type deduced to be character$
9998 run: address to copy is 1153
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1153 is 1171
9999 mem: storing 1171 in location 1410
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1410 is 1171
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1171
9999 mem: storing 1171 in location 1380
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1381
 106 run: jump-if deleted-cell, 1:offset
9999 mem: location 1380 is 1171
9998 run: jumping to instruction 9
 106 run: currc:character <- get *deleted-cell, value:offset
9999 mem: location 1380 is 1171
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1171 is 98
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1152
9999 mem: location 1380 is 1171
9998 run: address to copy is 1171
9998 run: its type is character
9999 mem: location 1171 is 98
9999 mem: storing 98 in location 1382
 106 run: data <- remove_2 deleted-cell, data
9999 mem: location 1380 is 1171
9999 mem: location 1379 is 1152
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:address:shared:duplex-list:_elem/contained-in:in <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1207
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1208
 107 run: jump-if x, 1:offset
9999 mem: location 1207 is 1171
9998 run: jumping to instruction 5
 107 run: next-node:address:shared:duplex-list:_elem <- get *x, next:offset
9999 mem: location 1207 is 1171
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1171 is 98
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1152
9999 mem: location 1207 is 1171
9999 type: type deduced to be character$
9998 run: address to copy is 1172
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1172 is 1174
9999 mem: storing 1174 in location 1209
 107 run: prev-node:address:shared:duplex-list:_elem <- get *x, prev:offset
9999 mem: location 1207 is 1171
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1171 is 98
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1152
9999 mem: location 1207 is 1171
9999 type: type deduced to be character$
9998 run: address to copy is 1173
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1173 is 1152
9999 mem: storing 1152 in location 1210
 107 run: tmp:address:address:shared:duplex-list:_elem <- get-address *x, next:offset
9999 mem: location 1207 is 1171
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1171 is 98
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1152
9999 mem: location 1207 is 1171
9999 type: type deduced to be character$
9998 run: address to copy is 1172
9999 mem: storing 1172 in location 1211
 107 run: *tmp <- copy 0
9999 mem: location 1211 is 1172
9999 mem: storing 0 in location 1172
 107 run: tmp <- get-address *x, prev:offset
9999 mem: location 1207 is 1171
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1171 is 98
9999 mem: location 1172 is 0
9999 mem: location 1173 is 1152
9999 mem: location 1207 is 1171
9999 type: type deduced to be character$
9998 run: address to copy is 1173
9999 mem: storing 1173 in location 1211
 107 run: *tmp <- copy 0
9999 mem: location 1211 is 1173
9999 mem: storing 0 in location 1173
 107 run: jump-unless next-node, 
9999 mem: location 1209 is 1174
9998 run: jump-unless fell through
 107 run: tmp <- get-address *next-node, prev:offset
9999 mem: location 1209 is 1174
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1174 is 99
9999 mem: location 1175 is 0
9999 mem: location 1176 is 1171
9999 mem: location 1209 is 1174
9999 type: type deduced to be character$
9998 run: address to copy is 1176
9999 mem: storing 1176 in location 1211
 107 run: *tmp <- copy prev-node
9999 mem: location 1210 is 1152
9999 mem: location 1211 is 1176
9999 mem: storing 1152 in location 1176
 107 run: jump-unless prev-node, 
9999 mem: location 1210 is 1152
9998 run: jump-unless fell through
 107 run: tmp <- get-address *prev-node, next:offset
9999 mem: location 1210 is 1152
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1152 is 167
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 0
9999 mem: location 1210 is 1152
9999 type: type deduced to be character$
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1211
 107 run: *tmp <- copy next-node
9999 mem: location 1209 is 1174
9999 mem: location 1211 is 1153
9999 mem: storing 1174 in location 1153
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1208 is 1152
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1152
9999 mem: storing 1152 in location 1379
 106 run: deleted-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1382 is 98
9999 mem: storing 0 in location 1383
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1381
 106 run: jump-unless deleted-newline?, 1:offset
9999 mem: location 1383 is 0
9998 run: jumping to instruction 15
 106 run: curr:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1378 is 1003
9999 mem: location 1003 is 1152
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1409
 107 run: jump-if in, 1:offset
9999 mem: location 1409 is 1152
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1409 is 1152
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1152 is 167
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 0
9999 mem: location 1409 is 1152
9999 type: type deduced to be character$
9998 run: address to copy is 1153
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1153 is 1174
9999 mem: storing 1174 in location 1410
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1410 is 1174
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1174
9999 mem: storing 1174 in location 1384
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1376 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1376 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1385
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1376 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1376 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1386
 106 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1377 is 1011
9999 mem: location 1385 is 1006
9999 mem: location 1006 is 1
9999 mem: location 1386 is 1007
9999 mem: location 1007 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1207
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1208
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1209
 107 run: jump-unless screen, 
9999 mem: location 1207 is 1011
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1207 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1207 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1210
 107 run: *row <- copy new-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1013
9999 mem: storing 1 in location 1013
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1207 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1207 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1211
 107 run: *column <- copy new-column
9999 mem: location 1209 is 0
9999 mem: location 1211 is 1014
9999 mem: storing 0 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1207 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1377
 106 run: curr-column:number <- copy *cursor-column
9999 mem: location 1386 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1387
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1377 is 1011
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1409
 107 run: jump-unless screen, 
9999 mem: location 1409 is 1011
9998 run: jump-unless fell through
 107 run: width <- get *screen, num-columns:offset
9999 mem: location 1409 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1409 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1410
 107 run: reply width:number
9999 mem: location 1410 is 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1388
 106 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1387 is 0
9999 mem: location 1388 is 10
9999 mem: storing 0 in location 1389
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1381
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1389 is 0
9998 run: jumping to instruction 26
 106 run: jump-unless curr, 
9999 mem: location 1384 is 1174
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1384 is 1174
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1174 is 99
9999 mem: location 1175 is 0
9999 mem: location 1176 is 1152
9999 mem: location 1384 is 1174
9998 run: address to copy is 1174
9998 run: its type is character
9999 mem: location 1174 is 99
9999 mem: storing 99 in location 1382
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1382 is 99
9999 mem: storing 0 in location 1390
 106 run: jump-if at-newline?, 
9999 mem: location 1390 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, currc
9999 mem: location 1377 is 1011
9999 mem: location 1382 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1214
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 99
  90 print-character: 99 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1214 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1214 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1214 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1221 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1214 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1224
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1220 is 10
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 99
9999 mem: storing 0 in location 1225
 107 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1220 is 10
9999 mem: storing 10 in location 1228
 107 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 10 in location 1228
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1214 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1229
 107 run: len:number <- length *buf
9999 mem: location 1229 is 1016
9999 mem: storing 50 in location 1230
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 99
9999 mem: storing 0 in location 1231
 107 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1016
9999 mem: location 1228 is 10
9999 mem: storing 1037 in location 1233
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1233 is 1037
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1234
 107 run: *cursor-contents <- copy c
9999 mem: location 1215 is 99
9999 mem: location 1234 is 1037
9999 mem: storing 99 in location 1037
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1037
9999 mem: location 1037 is 99
9999 mem: location 1038 is 7
9999 mem: location 1233 is 1037
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1235
 107 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1038
9999 mem: storing 7 in location 1038
 107 run: right:number <- subtract width, 1
9999 mem: location 1220 is 10
9999 mem: storing 9 in location 1236
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1236 is 9
9999 mem: storing 0 in location 1237
 107 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1224 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1224 is 1014
9999 mem: storing 1 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1377
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1387 is 0
9999 mem: storing 1 in location 1387
 106 run: curr <- next_2 curr
9999 mem: location 1384 is 1174
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1174 in location 1409
 107 run: jump-if in, 1:offset
9999 mem: location 1409 is 1174
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1409 is 1174
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1174 is 99
9999 mem: location 1175 is 0
9999 mem: location 1176 is 1152
9999 mem: location 1409 is 1174
9999 type: type deduced to be character$
9998 run: address to copy is 1175
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1175 is 0
9999 mem: storing 0 in location 1410
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1410 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1384
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1387 is 1
9999 mem: location 1388 is 10
9999 mem: storing 0 in location 1389
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1381
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1389 is 0
9998 run: jumping to instruction 26
 106 run: jump-unless curr, 
9999 mem: location 1384 is 0
9998 run: jumping to instruction 34
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1391
 106 run: screen <- print screen, space
9999 mem: location 1377 is 1011
9999 mem: location 1391 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1214
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1214 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1214 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1214 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1221 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1214 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1224
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1220 is 10
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 107 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1220 is 10
9999 mem: storing 10 in location 1228
 107 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 11 in location 1228
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1214 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1229
 107 run: len:number <- length *buf
9999 mem: location 1229 is 1016
9999 mem: storing 50 in location 1230
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1016
9999 mem: location 1228 is 11
9999 mem: storing 1039 in location 1233
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1233 is 1039
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1234
 107 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1039
9999 mem: storing 32 in location 1039
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1233 is 1039
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1235
 107 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1040
9999 mem: storing 7 in location 1040
 107 run: right:number <- subtract width, 1
9999 mem: location 1220 is 10
9999 mem: storing 9 in location 1236
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1236 is 9
9999 mem: storing 0 in location 1237
 107 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1224 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1224 is 1014
9999 mem: storing 2 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1377
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1381
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean, deleted-cell:address:shared:duplex-list:character
9999 mem: location 1376 is 1000
9999 mem: location 1377 is 1011
9999 mem: location 1381 is 0
9999 mem: location 1380 is 1171
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 1011
9998 run: result 2 is 0
9998 run: result 3 is 1171
9999 mem: storing 1000 in location 1291
9999 mem: storing 1011 in location 1290
9999 mem: storing 0 in location 1296
9999 mem: storing 1171 in location 1368
 105 run: jump-unless deleted-cell, 
9999 mem: location 1368 is 1171
9998 run: jump-unless fell through
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1291 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1291 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1152
9999 mem: storing 1152 in location 1343
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1291 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1291 is 1000
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1310
 105 run: jump-unless *undo, 
9999 mem: location 1310 is 1009
9999 mem: location 1009 is 1398
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1310 is 1009
9999 mem: location 1009 is 1398
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1398 in location 1409
 106 run: result <- get *in, value:offset
9999 mem: location 1409 is 1398
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1398 is 1117
9999 mem: location 1399 is 0
9999 mem: location 1409 is 1398
9998 run: address to copy is 1398
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1398 is 1117
9999 mem: storing 1117 in location 1410
 106 run: reply result:_elem
9999 mem: location 1410 is 1117
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1117
9999 mem: storing 1117 in location 1309
 105 run: deletion:address:shared:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1309 is 1117
9999 mem: location 1117 is 2
9999 mem: location 1118 is 1
9999 mem: location 1119 is 0
9999 mem: location 1120 is 1152
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1152
9999 mem: location 1124 is 1164
9999 mem: location 1125 is 1152
9999 mem: location 1126 is 1171
9999 mem: location 1127 is 2
9999 mem: location 1309 is 1117
9999 mem: storing 1118 in location 1311
 105 run: jump-unless deletion, 
9999 mem: location 1311 is 1118
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *deletion, tag:offset
9999 mem: location 1311 is 1118
9999 mem: location 1118 is 1
9999 mem: location 1119 is 0
9999 mem: location 1120 is 1152
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1152
9999 mem: location 1124 is 1164
9999 mem: location 1125 is 1152
9999 mem: location 1126 is 1171
9999 mem: location 1127 is 2
9999 mem: location 1311 is 1118
9998 run: address to copy is 1127
9998 run: its type is number
9999 mem: location 1127 is 2
9999 mem: storing 2 in location 1333
 105 run: coalesce?:boolean <- equal previous-coalesce-tag, 2/coalesce-delete
9999 mem: location 1333 is 2
9999 mem: storing 1 in location 1334
 105 run: jump-unless coalesce?, 
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: delete-until:address:address:shared:duplex-list:character <- get-address *deletion, delete-until:offset
9999 mem: location 1311 is 1118
9999 mem: location 1118 is 1
9999 mem: location 1119 is 0
9999 mem: location 1120 is 1152
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1152
9999 mem: location 1124 is 1164
9999 mem: location 1125 is 1152
9999 mem: location 1126 is 1171
9999 mem: location 1127 is 2
9999 mem: location 1311 is 1118
9998 run: address to copy is 1126
9999 mem: storing 1126 in location 1369
 105 run: *delete-until <- next_2 *before-cursor
9999 mem: location 1301 is 1003
9999 mem: location 1003 is 1152
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1409
 106 run: jump-if in, 1:offset
9999 mem: location 1409 is 1152
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1409 is 1152
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1152 is 167
9999 mem: location 1153 is 1174
9999 mem: location 1154 is 0
9999 mem: location 1409 is 1152
9999 type: type deduced to be character$
9998 run: address to copy is 1153
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1153 is 1174
9999 mem: storing 1174 in location 1410
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1410 is 1174
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1174
9999 mem: location 1369 is 1126
9999 mem: storing 1174 in location 1126
 105 run: deleted-so-far:address:address:shared:duplex-list:character <- get-address *deletion, deleted-text:offset
9999 mem: location 1311 is 1118
9999 mem: location 1118 is 1
9999 mem: location 1119 is 0
9999 mem: location 1120 is 1152
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1152
9999 mem: location 1124 is 1164
9999 mem: location 1125 is 1152
9999 mem: location 1126 is 1174
9999 mem: location 1127 is 2
9999 mem: location 1311 is 1118
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1370
 105 run: *deleted-so-far <- append_5 *deleted-so-far, deleted-cell
9999 mem: location 1370 is 1124
9999 mem: location 1124 is 1164
9999 mem: location 1368 is 1171
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1394
 106 run: new:address:shared:duplex-list:_elem/contained-in:in <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1395
 106 run: last:address:shared:duplex-list:_elem <- last_2 in
9999 mem: location 1394 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 4
9999 mem: new alloc: 1411
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1413
 107 run: result <- copy in
9999 mem: location 1413 is 1164
9999 mem: storing 1164 in location 1414
 107 run: next:address:shared:duplex-list:_elem <- next_2 result
9999 mem: location 1414 is 1164
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1409
 108 run: jump-if in, 1:offset
9999 mem: location 1409 is 1164
9998 run: jumping to instruction 4
 108 run: result <- get *in, next:offset
9999 mem: location 1409 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 97
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1409 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1165 is 0
9999 mem: storing 0 in location 1410
 108 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1410 is 0
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 1415
 107 run: jump-unless next, 
9999 mem: location 1415 is 0
9998 run: jumping to instruction 8
 107 run: reply result:address:shared:duplex-list:_elem
9999 mem: location 1414 is 1164
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1164
9999 mem: storing 1164 in location 1396
 106 run: dest:address:address:shared:duplex-list:_elem <- get-address *last, next:offset
9999 mem: location 1396 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 97
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1396 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1397
 106 run: *dest <- copy new
9999 mem: location 1395 is 1171
9999 mem: location 1397 is 1165
9999 mem: storing 1171 in location 1165
 106 run: jump-if new, 1:offset
9999 mem: location 1395 is 1171
9998 run: jumping to instruction 8
 106 run: dest <- get-address *new, prev:offset
9999 mem: location 1395 is 1171
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1171 is 98
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1395 is 1171
9999 type: type deduced to be character$
9998 run: address to copy is 1173
9999 mem: storing 1173 in location 1397
 106 run: *dest <- copy last
9999 mem: location 1396 is 1164
9999 mem: location 1397 is 1173
9999 mem: storing 1164 in location 1173
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1394 is 1164
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1164
9999 mem: location 1370 is 1124
9999 mem: storing 1164 in location 1124
 105 run: after-row:address:number <- get-address *deletion, after-row:offset
9999 mem: location 1311 is 1118
9999 mem: location 1118 is 1
9999 mem: location 1119 is 0
9999 mem: location 1120 is 1152
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1152
9999 mem: location 1124 is 1164
9999 mem: location 1125 is 1152
9999 mem: location 1126 is 1174
9999 mem: location 1127 is 2
9999 mem: location 1311 is 1118
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1335
 105 run: *after-row <- copy *cursor-row
9999 mem: location 1302 is 1006
9999 mem: location 1006 is 1
9999 mem: location 1335 is 1121
9999 mem: storing 1 in location 1121
 105 run: after-column:address:number <- get-address *deletion, after-column:offset
9999 mem: location 1311 is 1118
9999 mem: location 1118 is 1
9999 mem: location 1119 is 0
9999 mem: location 1120 is 1152
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1152
9999 mem: location 1124 is 1164
9999 mem: location 1125 is 1152
9999 mem: location 1126 is 1174
9999 mem: location 1127 is 2
9999 mem: location 1311 is 1118
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1336
 105 run: *after-column <- copy *cursor-column
9999 mem: location 1303 is 1007
9999 mem: location 1007 is 0
9999 mem: location 1336 is 1122
9999 mem: storing 0 in location 1122
 105 run: after-top:address:address:shared:duplex-list:character <- get-address *deletion, after-top-of-screen:offset
9999 mem: location 1311 is 1118
9999 mem: location 1118 is 1
9999 mem: location 1119 is 0
9999 mem: location 1120 is 1152
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1152
9999 mem: location 1124 is 1164
9999 mem: location 1125 is 1152
9999 mem: location 1126 is 1174
9999 mem: location 1127 is 2
9999 mem: location 1311 is 1118
9998 run: address to copy is 1123
9999 mem: storing 1123 in location 1337
 105 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1291 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1291 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1152
9999 mem: location 1337 is 1123
9999 mem: storing 1152 in location 1123
 105 run: jump +done-adding-delete-operation:label
9998 run: jumping to instruction 793
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1290 is 1011
9999 mem: location 1291 is 1000
9999 mem: location 1296 is 0
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: storing 1011 in location 1275
9999 mem: storing 1000 in location 1277
9999 mem: storing 0 in location 1287
 104 run: jump-unless go-render?, 
9999 mem: location 1287 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1277 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1277 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1278
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1277 is 1000
9999 mem: location 1000 is 1152
9999 mem: location 1001 is 1152
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1152
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1398
9999 mem: location 1010 is 0
9999 mem: location 1277 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1279
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1275 is 1011
9999 mem: location 1278 is 1
9999 mem: location 1279 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1207
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1208
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1209
 105 run: jump-unless screen, 
9999 mem: location 1207 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1207 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1207 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1210
 105 run: *row <- copy new-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1013
9999 mem: storing 1 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1207 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1207 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1211
 105 run: *column <- copy new-column
9999 mem: location 1209 is 0
9999 mem: location 1211 is 1014
9999 mem: storing 0 in location 1014
 105 run: reply screen:address:shared:screen
9999 mem: location 1207 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1275
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1276 is 1405
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1405 in location 1240
 105 run: jump-unless console, 
9999 mem: location 1240 is 1405
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1240 is 1405
9999 mem: location 1405 is 1
9999 mem: location 1406 is 1400
9999 mem: location 1240 is 1405
9998 run: address to copy is 1405
9999 mem: storing 1405 in location 1241
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1240 is 1405
9999 mem: location 1405 is 1
9999 mem: location 1406 is 1400
9999 mem: location 1240 is 1405
9998 run: address to copy is 1406
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1406 is 1400
9999 mem: storing 1400 in location 1242
 105 run: max:number <- length *buf
9999 mem: location 1242 is 1400
9999 mem: storing 1 in location 1243
9990 schedule: read-event/editor-event-loop/run1002/scenario-editor-handles-delete-key
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1241 is 1405
9999 mem: location 1405 is 1
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-unless done?, 
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: storing 1407 in location 1245
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1245 is 1407
9999 mem: location 1407 is 0
9999 mem: location 1408 is 0
9999 mem: location 1409 is 0
9999 mem: location 1410 is 0
9999 mem: location 1240 is 1405
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1405
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 1405 in location 1276
9999 mem: storing 1 in location 1284
9999 mem: storing 1 in location 1285
 104 run: jump-unless found?, 
9999 mem: location 1284 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1285 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1275 is 1011
9999 mem: location 1276 is 1405
9999 mem: location 1277 is 1000
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .c         .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: check-trace-count-for-label 2, [print-character]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
