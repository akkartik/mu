 102 run: assume-console [
    press delete
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"delete": <>}
9992 load: after rewriting: press delete
 102 run: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
  ]
9991 parse: --- defining run1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"console": <"address" : <"console" : <>>>}
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 parse: recipe run1002 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1002
9991 transform: --- transform braces for recipe run1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- deduce types for recipe run1002
9992 transform: screen => <address : <screen : <>>>
9992 transform: console => <address : <console : <>>>
9991 transform: --- resolve ambiguous calls for recipe run1002
9992 transform: instruction editor-event-loop
9992 transform: checking variant 0: 100
9991 transform: --- collect surrounding spaces for recipe run1002
9991 transform: --- transform names for recipe run1002
9991 transform: --- compute instruction operations for recipe run1002
9991 transform: --- perform checks for recipe run1002
9991 transform: --- convert 'new' to 'allocate' for recipe run1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1359
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1278
 104 run: console:address:console <- next-ingredient 
9999 mem: storing 1359 in location 1279
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1280
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1280 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1280 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1281
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1280 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1280 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1282
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1278 is 1009
9999 mem: location 1281 is 1
9999 mem: location 1282 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1204
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1205
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1206
 105 run: jump-unless sc, 
9999 mem: location 1204 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1204 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1204 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1207
 105 run: *row <- copy new-row
9999 mem: location 1205 is 1
9999 mem: location 1207 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1204 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1204 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1208
 105 run: *column <- copy new-column
9999 mem: location 1206 is 0
9999 mem: location 1208 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1204 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1278
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1279 is 1359
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1359 in location 1243
 105 run: jump-unless x, 
9999 mem: location 1243 is 1359
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1243 is 1359
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1354
9999 mem: location 1243 is 1359
9998 run: address to copy is 1359
9999 mem: storing 1359 in location 1244
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1243 is 1359
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1354
9999 mem: location 1243 is 1359
9998 run: address to copy is 1360
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1360 is 1354
9999 mem: storing 1354 in location 1245
 105 run: max:number <- length *buf
9999 mem: location 1245 is 1354
9999 mem: storing 1 in location 1246
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1244 is 1359
9999 mem: location 1359 is 0
9999 mem: location 1246 is 1
9999 mem: storing 0 in location 1247
 105 run: jump-unless done?, 
9999 mem: location 1247 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1245 is 1354
9999 mem: location 1244 is 1359
9999 mem: location 1359 is 0
9998 run: address to copy is 1355
9998 run: its type is event
9999 mem: location 1355 is 1
9999 mem: location 1356 is 65522
9999 mem: location 1357 is 0
9999 mem: location 1358 is 0
9999 mem: storing 1 in location 1249
9999 mem: storing 65522 in location 1250
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 105 run: *idx <- add *idx, 1
9999 mem: location 1244 is 1359
9999 mem: location 1359 is 0
9999 mem: location 1244 is 1359
9999 mem: storing 1 in location 1359
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1249 is 1
9999 mem: location 1250 is 65522
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1243 is 1359
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65522, 0, 0]
9998 run: result 1 is 1359
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1283
9999 mem: storing 65522 in location 1284
9999 mem: storing 0 in location 1285
9999 mem: storing 0 in location 1286
9999 mem: storing 1359 in location 1279
9999 mem: storing 1 in location 1287
9999 mem: storing 0 in location 1288
 104 run: jump-unless found?, 
9999 mem: location 1287 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1288 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1283 is 1
9999 mem: location 1284 is 65522
9999 mem: location 1285 is 0
9999 mem: location 1286 is 0
9999 mem: storing 0 in location 1289
 104 run: jump-unless t, 
9999 mem: location 1289 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1278 is 1009
9999 mem: location 1280 is 1000
9999 mem: location 1283 is 1
9999 mem: location 1284 is 65522
9999 mem: location 1285 is 0
9999 mem: location 1286 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 46
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1293
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1294
 105 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1295
9999 mem: storing 65522 in location 1296
9999 mem: storing 0 in location 1297
9999 mem: storing 0 in location 1298
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1299
 105 run: jump-if editor, 1:offset
9999 mem: location 1294 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1293 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1361
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1363
 106 run: jump-unless sc, 
9999 mem: location 1363 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1363 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1363 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1364
 106 run: reply width
9999 mem: location 1364 is 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1300
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1293 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1363
 106 run: jump-unless sc, 
9999 mem: location 1363 is 1009
9998 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1363 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1363 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1364
 106 run: reply height
9999 mem: location 1364 is 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1301
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1294 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1294 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1302
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1294 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1294 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1303
 105 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1294 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1294 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1304
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1294 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1294 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1305
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1294 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1294 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1306
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1305 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1307
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1306 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1308
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1295 is 1
9999 mem: location 1296 is 65522
9999 mem: location 1297 is 0
9999 mem: location 1298 is 0
9999 mem: storing 0 in location 1309
 105 run: jump-unless c, 
9999 mem: location 1309 is 0
9998 run: jumping to instruction 120
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1295 is 1
9999 mem: location 1296 is 65522
9999 mem: location 1297 is 0
9999 mem: location 1298 is 0
9999 mem: storing 1296 in location 1326
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1326 is 1296
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1326 is 1296
9999 mem: location 1296 is 65522
9999 mem: storing 0 in location 1310
 105 run: jump-unless page-up?, 
9999 mem: location 1310 is 0
9998 run: jumping to instruction 136
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1326 is 1296
9999 mem: location 1296 is 65522
9999 mem: storing 0 in location 1315
 105 run: jump-unless page-down?, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 149
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1326 is 1296
9999 mem: location 1296 is 65522
9999 mem: storing 0 in location 1319
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1319 is 0
9998 run: jumping to instruction 159
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1326 is 1296
9999 mem: location 1296 is 65522
9999 mem: storing 0 in location 1320
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1320 is 0
9998 run: jumping to instruction 169
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1326 is 1296
9999 mem: location 1296 is 65522
9999 mem: storing 0 in location 1327
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1327 is 0
9998 run: jumping to instruction 178
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1326 is 1296
9999 mem: location 1296 is 65522
9999 mem: storing 0 in location 1328
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1328 is 0
9998 run: jumping to instruction 187
 105 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1326 is 1296
9999 mem: location 1296 is 65522
9999 mem: storing 0 in location 1329
 105 run: jump-unless move-to-previous-character?, 
9999 mem: location 1329 is 0
9998 run: jumping to instruction 202
 105 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1326 is 1296
9999 mem: location 1296 is 65522
9999 mem: storing 0 in location 1331
 105 run: jump-unless move-to-next-character?, 
9999 mem: location 1331 is 0
9998 run: jumping to instruction 215
 105 run: delete-next-character?:boolean <- equal *k, 65522/delete
9999 mem: location 1326 is 1296
9999 mem: location 1296 is 65522
9999 mem: storing 1 in location 1333
 105 run: jump-unless delete-next-character?, 
9999 mem: location 1333 is 1
9998 run: jump-unless fell through
 105 run: editor, screen, go-render?:boolean, deleted-cell:address:duplex-list:character <- delete-at-cursor editor, screen
9999 mem: location 1294 is 1000
9999 mem: location 1293 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 15
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1340
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1341
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1340 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1340 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1342
 106 run: deleted-cell:address:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1342 is 1003
9999 mem: location 1003 is 1150
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1150 in location 1363
 107 run: jump-if in, 1:offset
9999 mem: location 1363 is 1150
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1363 is 1150
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 167
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1363 is 1150
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1151 is 1169
9999 mem: storing 1169 in location 1364
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1364 is 1169
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1169
9999 mem: storing 1169 in location 1343
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1344
 106 run: jump-if deleted-cell, 1:offset
9999 mem: location 1343 is 1169
9998 run: jumping to instruction 8
 106 run: currc:character <- get *deleted-cell, value:offset
9999 mem: location 1343 is 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1169 is 98
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1150
9999 mem: location 1343 is 1169
9998 run: address to copy is 1169
9998 run: its type is character
9999 mem: location 1169 is 98
9999 mem: storing 98 in location 1345
 106 run: remove_2 deleted-cell
9999 mem: location 1343 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1169 in location 1237
 107 run: jump-if in, 1:offset
9999 mem: location 1237 is 1169
9998 run: jumping to instruction 4
 107 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1237 is 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1169 is 98
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1150
9999 mem: location 1237 is 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1170
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1170 is 1172
9999 mem: storing 1172 in location 1238
 107 run: prev-node:address:duplex-list:_elem <- get *in, prev:offset
9999 mem: location 1237 is 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1169 is 98
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1150
9999 mem: location 1237 is 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1171 is 1150
9999 mem: storing 1150 in location 1239
 107 run: x:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1237 is 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1169 is 98
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1150
9999 mem: location 1237 is 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1240
 107 run: *x <- copy 0
9999 mem: location 1240 is 1170
9999 mem: storing 0 in location 1170
 107 run: x <- get-address *in, prev:offset
9999 mem: location 1237 is 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1169 is 98
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1150
9999 mem: location 1237 is 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9999 mem: storing 1171 in location 1240
 107 run: *x <- copy 0
9999 mem: location 1240 is 1171
9999 mem: storing 0 in location 1171
 107 run: jump-unless next-node, 
9999 mem: location 1238 is 1172
9998 run: jump-unless fell through
 107 run: x <- get-address *next-node, prev:offset
9999 mem: location 1238 is 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1172 is 99
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1169
9999 mem: location 1238 is 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9999 mem: storing 1174 in location 1240
 107 run: *x <- copy prev-node
9999 mem: location 1239 is 1150
9999 mem: location 1240 is 1174
9999 mem: storing 1150 in location 1174
 107 run: jump-unless prev-node, 
9999 mem: location 1239 is 1150
9998 run: jump-unless fell through
 107 run: x <- get-address *prev-node, next:offset
9999 mem: location 1239 is 1150
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 167
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1239 is 1150
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1240
 107 run: *x <- copy next-node
9999 mem: location 1238 is 1172
9999 mem: location 1240 is 1151
9999 mem: storing 1172 in location 1151
 107 run: reply prev-node
9999 mem: location 1239 is 1150
9999 trace: reply: decrementing callstack depth from 6
 106 run: deleted-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1345 is 98
9999 mem: storing 0 in location 1346
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1344
 106 run: jump-unless deleted-newline?, 1:offset
9999 mem: location 1346 is 0
9998 run: jumping to instruction 14
 106 run: curr:address:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1342 is 1003
9999 mem: location 1003 is 1150
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1150 in location 1363
 107 run: jump-if in, 1:offset
9999 mem: location 1363 is 1150
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1363 is 1150
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 167
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 0
9999 mem: location 1363 is 1150
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1151 is 1172
9999 mem: storing 1172 in location 1364
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1364 is 1172
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1172
9999 mem: storing 1172 in location 1347
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1340 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1340 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1348
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1340 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1340 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1349
 106 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1341 is 1009
9999 mem: location 1348 is 1006
9999 mem: location 1006 is 1
9999 mem: location 1349 is 1007
9999 mem: location 1007 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1204
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1205
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1206
 107 run: jump-unless sc, 
9999 mem: location 1204 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1204 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1204 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1207
 107 run: *row <- copy new-row
9999 mem: location 1205 is 1
9999 mem: location 1207 is 1011
9999 mem: storing 1 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1204 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1204 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1208
 107 run: *column <- copy new-column
9999 mem: location 1206 is 0
9999 mem: location 1208 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1204 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1341
 106 run: curr-column:number <- copy *cursor-column
9999 mem: location 1349 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1350
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1341 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1363
 107 run: jump-unless sc, 
9999 mem: location 1363 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1363 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1363 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1364
 107 run: reply width
9999 mem: location 1364 is 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1351
 106 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1350 is 0
9999 mem: location 1351 is 10
9999 mem: storing 0 in location 1352
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1344
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1352 is 0
9998 run: jumping to instruction 25
 106 run: jump-unless curr, 
9999 mem: location 1347 is 1172
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1347 is 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1172 is 99
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1150
9999 mem: location 1347 is 1172
9998 run: address to copy is 1172
9998 run: its type is character
9999 mem: location 1172 is 99
9999 mem: storing 99 in location 1345
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1345 is 99
9999 mem: storing 0 in location 1353
 106 run: jump-if at-newline?, 
9999 mem: location 1353 is 0
9998 run: jump-if fell through
 106 run: screen <- print-character screen, currc
9999 mem: location 1341 is 1009
9999 mem: location 1345 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 107 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1212
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
 107 run: jump-if color-found?, 
9999 mem: location 1214 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1213
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if bg-color-found?, 
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1215
 107 run: trace 90, [print-character], c
9999 mem: location 1212 is 99
  90 print-character: 99 
 107 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1219
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 107 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1222
 107 run: jump-unless newline?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: index <- add index, *column
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1225
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
 107 run: len:number <- length *buf
9999 mem: location 1226 is 1014
9999 mem: storing 50 in location 1227
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1228
 107 run: jump-unless backspace?, 
9999 mem: location 1228 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1226 is 1014
9999 mem: location 1225 is 10
9999 mem: storing 1035 in location 1230
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1230 is 1035
9999 mem: location 1035 is 98
9999 mem: location 1036 is 7
9999 mem: location 1230 is 1035
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1231
 107 run: *cursor-contents <- copy c
9999 mem: location 1212 is 99
9999 mem: location 1231 is 1035
9999 mem: storing 99 in location 1035
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1230 is 1035
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1230 is 1035
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1232
 107 run: *cursor-color <- copy color
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1036
9999 mem: storing 7 in location 1036
 107 run: right:number <- subtract width, 1
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if at-right?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1341
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1350 is 0
9999 mem: storing 1 in location 1350
 106 run: curr <- next_2 curr
9999 mem: location 1347 is 1172
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1172 in location 1363
 107 run: jump-if in, 1:offset
9999 mem: location 1363 is 1172
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1363 is 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1172 is 99
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1150
9999 mem: location 1363 is 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1173
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1173 is 0
9999 mem: storing 0 in location 1364
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1364 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1347
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1350 is 1
9999 mem: location 1351 is 10
9999 mem: storing 0 in location 1352
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1344
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1352 is 0
9998 run: jumping to instruction 25
 106 run: jump-unless curr, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 33
 106 run: screen <- print-character screen, 32/space
9999 mem: location 1341 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1212
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
 107 run: jump-if color-found?, 
9999 mem: location 1214 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1213
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if bg-color-found?, 
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1215
 107 run: trace 90, [print-character], c
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1219
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless newline?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: index <- add index, *column
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1225
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
 107 run: len:number <- length *buf
9999 mem: location 1226 is 1014
9999 mem: storing 50 in location 1227
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless backspace?, 
9999 mem: location 1228 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1226 is 1014
9999 mem: location 1225 is 11
9999 mem: storing 1037 in location 1230
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1230 is 1037
9999 mem: location 1037 is 99
9999 mem: location 1038 is 7
9999 mem: location 1230 is 1037
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1231
 107 run: *cursor-contents <- copy c
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1037
9999 mem: storing 32 in location 1037
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1230 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1230 is 1037
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1232
 107 run: *cursor-color <- copy color
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1038
9999 mem: storing 7 in location 1038
 107 run: right:number <- subtract width, 1
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if at-right?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1341
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1344
 106 run: reply editor:address:editor-data, screen:address:screen, go-render?:boolean, deleted-cell:address:duplex-list:character
9999 mem: location 1340 is 1000
9999 mem: location 1341 is 1009
9999 mem: location 1344 is 0
9999 mem: location 1343 is 1169
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 1009
9998 run: result 2 is 0
9998 run: result 3 is 1169
9999 mem: storing 1000 in location 1294
9999 mem: storing 1009 in location 1293
9999 mem: storing 0 in location 1299
9999 mem: storing 1169 in location 1334
 105 run: reply screen:address:screen, editor:address:editor-data, go-render?:boolean
9999 mem: location 1293 is 1009
9999 mem: location 1294 is 1000
9999 mem: location 1299 is 0
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: storing 1009 in location 1278
9999 mem: storing 1000 in location 1280
9999 mem: storing 0 in location 1290
 104 run: jump-unless go-render?, 
9999 mem: location 1290 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1280 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1280 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1281
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1280 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1280 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1282
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1278 is 1009
9999 mem: location 1281 is 1
9999 mem: location 1282 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1204
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1205
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1206
 105 run: jump-unless sc, 
9999 mem: location 1204 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1204 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1204 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1207
 105 run: *row <- copy new-row
9999 mem: location 1205 is 1
9999 mem: location 1207 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1204 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1204 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1208
 105 run: *column <- copy new-column
9999 mem: location 1206 is 0
9999 mem: location 1208 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1204 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1278
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1279 is 1359
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1359 in location 1243
 105 run: jump-unless x, 
9999 mem: location 1243 is 1359
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1243 is 1359
9999 mem: location 1359 is 1
9999 mem: location 1360 is 1354
9999 mem: location 1243 is 1359
9998 run: address to copy is 1359
9999 mem: storing 1359 in location 1244
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1243 is 1359
9999 mem: location 1359 is 1
9999 mem: location 1360 is 1354
9999 mem: location 1243 is 1359
9998 run: address to copy is 1360
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1360 is 1354
9999 mem: storing 1354 in location 1245
 105 run: max:number <- length *buf
9999 mem: location 1245 is 1354
9999 mem: storing 1 in location 1246
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1244 is 1359
9999 mem: location 1359 is 1
9999 mem: location 1246 is 1
9999 mem: storing 1 in location 1247
 105 run: jump-unless done?, 
9999 mem: location 1247 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1361 in location 1248
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1248 is 1361
9999 mem: location 1361 is 0
9999 mem: location 1362 is 0
9999 mem: location 1363 is 0
9999 mem: location 1364 is 0
9999 mem: location 1243 is 1359
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1359
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1283
9999 mem: storing 0 in location 1284
9999 mem: storing 0 in location 1285
9999 mem: storing 0 in location 1286
9999 mem: storing 1359 in location 1279
9999 mem: storing 1 in location 1287
9999 mem: storing 1 in location 1288
 104 run: jump-unless found?, 
9999 mem: location 1287 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1288 is 1
9998 run: jumping to instruction 28
 104 run: reply 
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .c         .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: check-trace-count-for-label 2, [print-character]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
