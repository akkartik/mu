 102 run: assume-console [
    press delete
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"delete": <>}
9992 load: after rewriting: press delete
9999 mem: storing 'press' event starting at 1428
9999 mem: storing console in 1432
9999 mem: storing console data in 1434
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1002 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1002
9991 transform: --- deduce types for recipe run1002
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1002
9991 transform: --- transform names for recipe run1002
9991 transform: --- resolve ambiguous calls for recipe run1002
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1002
9991 transform: --- transform braces for recipe run1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1002
9991 transform: --- type-check 'call' instructions inside recipe run1002
9991 transform: --- type-check calls inside recipe run1002
9991 transform: --- convert 'new' to 'allocate' for recipe run1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1432
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1297
9999 mem: incrementing refcount of 1012: 77 -> 78
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1432 in location 1298
9999 mem: incrementing refcount of 1432: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1299
9999 mem: incrementing refcount of 1000: 10 -> 11
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1300
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1301
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1012
9999 mem: location 1300 is 1
9999 mem: location 1301 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1222
9999 mem: incrementing refcount of 1012: 78 -> 79
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1224
 105 run: jump-unless screen, 
9999 mem: location 1222 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1225
 105 run: *row <- copy new-row
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1226
 105 run: *column <- copy new-column
9999 mem: location 1224 is 0
9999 mem: location 1226 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1222 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 79 -> 78
9999 mem: storing 1012 in location 1297
9999 mem: incrementing refcount of 1012: 78 -> 79
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1432
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1432 in location 1257
9999 mem: incrementing refcount of 1432: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1257 is 1432
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1257 is 1432
9999 mem: skipping refcount at 1432
9999 mem: location 1433 is 0
9999 mem: location 1434 is 1426
9999 mem: location 1257 is 1432
9999 mem: skipping refcount at 1432
9998 run: address to copy is 1433
9999 mem: storing 1433 in location 1258
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1257 is 1432
9999 mem: skipping refcount at 1432
9999 mem: location 1433 is 0
9999 mem: location 1434 is 1426
9999 mem: location 1257 is 1432
9999 mem: skipping refcount at 1432
9998 run: address to copy is 1434
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1434 is 1426
9999 mem: storing 1426 in location 1259
9999 mem: incrementing refcount of 1426: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1259 is 1426
9999 mem: skipping refcount at 1426
9999 mem: storing 1 in location 1260
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1258 is 1433
9999 mem: location 1433 is 0
9999 mem: location 1260 is 1
9999 mem: storing 0 in location 1261
 105 run: jump-unless done?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1259 is 1426
9999 mem: skipping refcount at 1426
9998 run: base address is 1427
9999 mem: location 1258 is 1433
9999 mem: location 1433 is 0
9998 run: address to copy is 1428
9998 run: its type is event
9999 mem: location 1428 is 1
9999 mem: location 1429 is 65522
9999 mem: location 1430 is 0
9999 mem: location 1431 is 0
9999 mem: storing 1 in location 1263
9999 mem: storing 65522 in location 1264
9999 mem: storing 0 in location 1265
9999 mem: storing 0 in location 1266
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1258 is 1433
9999 mem: location 1433 is 0
9999 mem: location 1258 is 1433
9999 mem: storing 1 in location 1433
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1263 is 1
9999 mem: location 1264 is 65522
9999 mem: location 1265 is 0
9999 mem: location 1266 is 0
9999 mem: location 1257 is 1432
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65522, 0, 0]
9998 run: result 1 is 1432
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1302
9999 mem: storing 65522 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: decrementing refcount of 1432: 2 -> 1
9999 mem: storing 1432 in location 1298
9999 mem: incrementing refcount of 1432: 1 -> 2
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 104 run: jump-unless found?, 
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 1
9999 mem: location 1303 is 65522
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1308
 104 run: jump-unless t, 
9999 mem: location 1308 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1297 is 1012
9999 mem: location 1299 is 1000
9999 mem: location 1302 is 1
9999 mem: location 1303 is 65522
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1313
9999 mem: incrementing refcount of 1012: 79 -> 80
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1314
9999 mem: incrementing refcount of 1000: 11 -> 12
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1315
9999 mem: storing 65522 in location 1316
9999 mem: storing 0 in location 1317
9999 mem: storing 0 in location 1318
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1319
 105 run: jump-if editor, 1:offset
9999 mem: location 1314 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1313 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1435
9999 mem: storing 3 in location 1436
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1438
9999 mem: incrementing refcount of 1012: 80 -> 81
 106 run: jump-unless screen, 
9999 mem: location 1438 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1438 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1438 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1439
 106 run: reply width:number
9999 mem: location 1439 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1320
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1313 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1438
9999 mem: incrementing refcount of 1012: 81 -> 82
 106 run: jump-unless screen, 
9999 mem: location 1438 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1438 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1438 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1439
 106 run: reply height:number
9999 mem: location 1439 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1321
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1322
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1323
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1324
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1325
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1326
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1325 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1327
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1326 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1328
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1315 is 1
9999 mem: location 1316 is 65522
9999 mem: location 1317 is 0
9999 mem: location 1318 is 0
9999 mem: storing 0 in location 1329
 105 run: jump-unless c, 
9999 mem: location 1329 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1315 is 1
9999 mem: location 1316 is 65522
9999 mem: location 1317 is 0
9999 mem: location 1318 is 0
9999 mem: storing 1316 in location 1383
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1383 is 1316
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1383 is 1316
9999 mem: location 1316 is 65522
9999 mem: storing 0 in location 1346
 105 run: jump-unless page-up?, 
9999 mem: location 1346 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1383 is 1316
9999 mem: location 1316 is 65522
9999 mem: storing 0 in location 1362
 105 run: jump-unless page-down?, 
9999 mem: location 1362 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1383 is 1316
9999 mem: location 1316 is 65522
9999 mem: storing 0 in location 1369
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1383 is 1316
9999 mem: location 1316 is 65522
9999 mem: storing 0 in location 1370
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1370 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1383 is 1316
9999 mem: location 1316 is 65522
9999 mem: storing 0 in location 1384
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1384 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1383 is 1316
9999 mem: location 1316 is 65522
9999 mem: storing 0 in location 1385
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 673
 105 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1383 is 1316
9999 mem: location 1316 is 65522
9999 mem: storing 0 in location 1386
 105 run: jump-unless move-to-previous-character?, 
9999 mem: location 1386 is 0
9998 run: jumping to instruction 716
 105 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1383 is 1316
9999 mem: location 1316 is 65522
9999 mem: storing 0 in location 1388
 105 run: jump-unless move-to-next-character?, 
9999 mem: location 1388 is 0
9998 run: jumping to instruction 757
 105 run: delete-next-character?:boolean <- equal *k, 65522/delete
9999 mem: location 1383 is 1316
9999 mem: location 1316 is 65522
9999 mem: storing 1 in location 1390
 105 run: jump-unless delete-next-character?, 
9999 mem: location 1390 is 1
9998 run: jump-unless fell through
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1159
9999 mem: storing 1159 in location 1364
9999 mem: incrementing refcount of 1159: 19 -> 20
 105 run: editor, screen, go-render?:boolean, deleted-cell:address:shared:duplex-list:character <- delete-at-cursor editor, screen
9999 mem: location 1314 is 1000
9999 mem: location 1313 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1400
9999 mem: incrementing refcount of 1000: 12 -> 13
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1401
9999 mem: incrementing refcount of 1012: 82 -> 83
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1400 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1400 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1402
 106 run: data:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1400 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1400 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1159
9999 mem: storing 1159 in location 1403
9999 mem: incrementing refcount of 1159: 20 -> 21
 106 run: deleted-cell:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1402 is 1004
9999 mem: location 1004 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1438
9999 mem: incrementing refcount of 1159: 21 -> 22
 107 run: jump-if in, 1:offset
9999 mem: location 1438 is 1159
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1438 is 1159
9999 mem: skipping refcount at 1159
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1182
9999 mem: location 1162 is 0
9999 mem: location 1438 is 1159
9999 mem: skipping refcount at 1159
9999 type: type deduced to be character$
9998 run: address to copy is 1161
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1161 is 1182
9999 mem: storing 1182 in location 1439
9999 mem: incrementing refcount of 1182: 19 -> 20
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1439 is 1182
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1182
9999 mem: storing 1182 in location 1404
9999 mem: incrementing refcount of 1182: 20 -> 21
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1405
 106 run: jump-if deleted-cell, 1:offset
9999 mem: location 1404 is 1182
9998 run: jumping to instruction 9
 106 run: currc:character <- get *deleted-cell, value:offset
9999 mem: location 1404 is 1182
9999 mem: skipping refcount at 1182
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 98
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1159
9999 mem: location 1404 is 1182
9999 mem: skipping refcount at 1182
9998 run: address to copy is 1183
9998 run: its type is character
9999 mem: location 1183 is 98
9999 mem: storing 98 in location 1406
 106 run: data <- remove_2 deleted-cell, data
9999 mem: location 1404 is 1182
9999 mem: location 1403 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:address:shared:duplex-list:_elem/contained-in:in <- next-ingredient-without-typechecking 
9999 mem: storing 1182 in location 1222
9999 mem: incrementing refcount of 1182: 21 -> 22
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1223
9999 mem: incrementing refcount of 1159: 22 -> 23
 107 run: jump-if x, 1:offset
9999 mem: location 1222 is 1182
9998 run: jumping to instruction 5
 107 run: next-node:address:shared:duplex-list:_elem <- get *x, next:offset
9999 mem: location 1222 is 1182
9999 mem: skipping refcount at 1182
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 98
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1159
9999 mem: location 1222 is 1182
9999 mem: skipping refcount at 1182
9999 type: type deduced to be character$
9998 run: address to copy is 1184
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1224
9999 mem: incrementing refcount of 1186: 14 -> 15
 107 run: prev-node:address:shared:duplex-list:_elem <- get *x, prev:offset
9999 mem: location 1222 is 1182
9999 mem: skipping refcount at 1182
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 98
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1159
9999 mem: location 1222 is 1182
9999 mem: skipping refcount at 1182
9999 type: type deduced to be character$
9998 run: address to copy is 1185
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1185 is 1159
9999 mem: storing 1159 in location 1225
9999 mem: incrementing refcount of 1159: 23 -> 24
 107 run: tmp:address:address:shared:duplex-list:_elem <- get-address *x, next:offset
9999 mem: location 1222 is 1182
9999 mem: skipping refcount at 1182
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 98
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1159
9999 mem: location 1222 is 1182
9999 mem: skipping refcount at 1182
9999 type: type deduced to be character$
9998 run: address to copy is 1184
9999 mem: storing 1184 in location 1226
 107 run: *tmp <- copy 0
9999 mem: location 1226 is 1184
9999 mem: decrementing refcount of 1186: 15 -> 14
9999 mem: storing 0 in location 1184
 107 run: tmp <- get-address *x, prev:offset
9999 mem: location 1222 is 1182
9999 mem: skipping refcount at 1182
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 98
9999 mem: location 1184 is 0
9999 mem: location 1185 is 1159
9999 mem: location 1222 is 1182
9999 mem: skipping refcount at 1182
9999 type: type deduced to be character$
9998 run: address to copy is 1185
9999 mem: storing 1185 in location 1226
 107 run: *tmp <- copy 0
9999 mem: location 1226 is 1185
9999 mem: decrementing refcount of 1159: 24 -> 23
9999 mem: storing 0 in location 1185
 107 run: jump-unless next-node, 
9999 mem: location 1224 is 1186
9998 run: jump-unless fell through
 107 run: tmp <- get-address *next-node, prev:offset
9999 mem: location 1224 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 99
9999 mem: location 1188 is 0
9999 mem: location 1189 is 1182
9999 mem: location 1224 is 1186
9999 mem: skipping refcount at 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1189
9999 mem: storing 1189 in location 1226
 107 run: *tmp <- copy prev-node
9999 mem: location 1225 is 1159
9999 mem: location 1226 is 1189
9999 mem: decrementing refcount of 1182: 22 -> 21
9999 mem: storing 1159 in location 1189
9999 mem: incrementing refcount of 1159: 23 -> 24
 107 run: jump-unless prev-node, 
9999 mem: location 1225 is 1159
9998 run: jump-unless fell through
 107 run: tmp <- get-address *prev-node, next:offset
9999 mem: location 1225 is 1159
9999 mem: skipping refcount at 1159
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1182
9999 mem: location 1162 is 0
9999 mem: location 1225 is 1159
9999 mem: skipping refcount at 1159
9999 type: type deduced to be character$
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1226
 107 run: *tmp <- copy next-node
9999 mem: location 1224 is 1186
9999 mem: location 1226 is 1161
9999 mem: decrementing refcount of 1182: 21 -> 20
9999 mem: storing 1186 in location 1161
9999 mem: incrementing refcount of 1186: 14 -> 15
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1223 is 1159
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1159
9999 mem: decrementing refcount of 1159: 24 -> 23
9999 mem: storing 1159 in location 1403
9999 mem: incrementing refcount of 1159: 23 -> 24
 106 run: deleted-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1406 is 98
9999 mem: storing 0 in location 1407
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1405
 106 run: jump-unless deleted-newline?, 1:offset
9999 mem: location 1407 is 0
9998 run: jumping to instruction 15
 106 run: curr:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1402 is 1004
9999 mem: location 1004 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1438
9999 mem: incrementing refcount of 1159: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1438 is 1159
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1438 is 1159
9999 mem: skipping refcount at 1159
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1186
9999 mem: location 1162 is 0
9999 mem: location 1438 is 1159
9999 mem: skipping refcount at 1159
9999 type: type deduced to be character$
9998 run: address to copy is 1161
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1161 is 1186
9999 mem: storing 1186 in location 1439
9999 mem: incrementing refcount of 1186: 15 -> 16
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1439 is 1186
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1186
9999 mem: storing 1186 in location 1408
9999 mem: incrementing refcount of 1186: 16 -> 17
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1400 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1400 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1409
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1400 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1400 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1410
 106 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1401 is 1012
9999 mem: location 1409 is 1007
9999 mem: location 1007 is 1
9999 mem: location 1410 is 1008
9999 mem: location 1008 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1222
9999 mem: incrementing refcount of 1012: 83 -> 84
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1224
 107 run: jump-unless screen, 
9999 mem: location 1222 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1225
 107 run: *row <- copy new-row
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1226
 107 run: *column <- copy new-column
9999 mem: location 1224 is 0
9999 mem: location 1226 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1222 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 84 -> 83
9999 mem: storing 1012 in location 1401
9999 mem: incrementing refcount of 1012: 83 -> 84
 106 run: curr-column:number <- copy *cursor-column
9999 mem: location 1410 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1411
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1401 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1438
9999 mem: incrementing refcount of 1012: 84 -> 85
 107 run: jump-unless screen, 
9999 mem: location 1438 is 1012
9998 run: jump-unless fell through
 107 run: width <- get *screen, num-columns:offset
9999 mem: location 1438 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1438 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1439
 107 run: reply width:number
9999 mem: location 1439 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1412
 106 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1411 is 0
9999 mem: location 1412 is 10
9999 mem: storing 0 in location 1413
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1405
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1413 is 0
9998 run: jumping to instruction 26
 106 run: jump-unless curr, 
9999 mem: location 1408 is 1186
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1408 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 99
9999 mem: location 1188 is 0
9999 mem: location 1189 is 1159
9999 mem: location 1408 is 1186
9999 mem: skipping refcount at 1186
9998 run: address to copy is 1187
9998 run: its type is character
9999 mem: location 1187 is 99
9999 mem: storing 99 in location 1406
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1406 is 99
9999 mem: storing 0 in location 1414
 106 run: jump-if at-newline?, 
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, currc
9999 mem: location 1401 is 1012
9999 mem: location 1406 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1230
9999 mem: incrementing refcount of 1012: 85 -> 86
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1231
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1232
9999 mem: storing 0 in location 1233
 107 run: jump-if color-found?, 
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1232
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
 107 run: jump-if bg-color-found?, 
9999 mem: location 1235 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1234
 107 run: trace 90, [print-character], c
9999 mem: location 1231 is 99
  90 print-character: 99 
 107 run: jump-unless screen, 
9999 mem: location 1230 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1236
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1237
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1238
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1238 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1239
 107 run: jump-if legal?, 1:offset
9999 mem: location 1239 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1238 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1237 is 5
9999 mem: storing 1 in location 1239
 107 run: jump-if legal?, 1:offset
9999 mem: location 1239 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1240
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1240 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1239
 107 run: jump-if legal?, 1:offset
9999 mem: location 1239 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1240 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1239
 107 run: jump-if legal?, 1:offset
9999 mem: location 1239 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1231 is 99
9999 mem: storing 0 in location 1241
 107 run: jump-unless newline?, 
9999 mem: location 1241 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1238 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 10
9999 mem: storing 10 in location 1244
 107 run: index <- add index, *column
9999 mem: location 1244 is 10
9999 mem: location 1240 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1244
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1245
9999 mem: incrementing refcount of 1018: 48 -> 49
 107 run: len:number <- length *buf
9999 mem: location 1245 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1246
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1231 is 99
9999 mem: storing 0 in location 1247
 107 run: jump-unless backspace?, 
9999 mem: location 1247 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1245 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1244 is 10
9999 mem: storing 1040 in location 1249
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1249 is 1040
9999 mem: location 1040 is 98
9999 mem: location 1041 is 7
9999 mem: location 1249 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1250
 107 run: *cursor-contents <- copy c
9999 mem: location 1231 is 99
9999 mem: location 1250 is 1040
9999 mem: storing 99 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1249 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1249 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1251
 107 run: *cursor-color <- copy color
9999 mem: location 1232 is 7
9999 mem: location 1251 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1236 is 10
9999 mem: storing 9 in location 1252
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1240 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1252 is 9
9999 mem: storing 0 in location 1253
 107 run: jump-if at-right?, 
9999 mem: location 1253 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1240 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1240 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1230 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 86 -> 85
9999 mem: storing 1012 in location 1401
9999 mem: incrementing refcount of 1012: 85 -> 86
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1411 is 0
9999 mem: storing 1 in location 1411
 106 run: curr <- next_2 curr
9999 mem: location 1408 is 1186
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1438
9999 mem: incrementing refcount of 1186: 17 -> 18
 107 run: jump-if in, 1:offset
9999 mem: location 1438 is 1186
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1438 is 1186
9999 mem: skipping refcount at 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 99
9999 mem: location 1188 is 0
9999 mem: location 1189 is 1159
9999 mem: location 1438 is 1186
9999 mem: skipping refcount at 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1439
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1439 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1186: 18 -> 17
9999 mem: storing 0 in location 1408
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1411 is 1
9999 mem: location 1412 is 10
9999 mem: storing 0 in location 1413
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1405
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1413 is 0
9998 run: jumping to instruction 26
 106 run: jump-unless curr, 
9999 mem: location 1408 is 0
9998 run: jumping to instruction 34
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1415
 106 run: screen <- print screen, space
9999 mem: location 1401 is 1012
9999 mem: location 1415 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1230
9999 mem: incrementing refcount of 1012: 86 -> 87
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1231
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1232
9999 mem: storing 0 in location 1233
 107 run: jump-if color-found?, 
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1232
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
 107 run: jump-if bg-color-found?, 
9999 mem: location 1235 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1234
 107 run: trace 90, [print-character], c
9999 mem: location 1231 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1230 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1236
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1237
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1238
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1238 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1239
 107 run: jump-if legal?, 1:offset
9999 mem: location 1239 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1238 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1237 is 5
9999 mem: storing 1 in location 1239
 107 run: jump-if legal?, 1:offset
9999 mem: location 1239 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1240
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1240 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1239
 107 run: jump-if legal?, 1:offset
9999 mem: location 1239 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1240 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1239
 107 run: jump-if legal?, 1:offset
9999 mem: location 1239 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1231 is 32
9999 mem: storing 0 in location 1241
 107 run: jump-unless newline?, 
9999 mem: location 1241 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1238 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 10
9999 mem: storing 10 in location 1244
 107 run: index <- add index, *column
9999 mem: location 1244 is 10
9999 mem: location 1240 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1244
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1230 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1245
9999 mem: incrementing refcount of 1018: 49 -> 50
 107 run: len:number <- length *buf
9999 mem: location 1245 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1246
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1231 is 32
9999 mem: storing 0 in location 1247
 107 run: jump-unless backspace?, 
9999 mem: location 1247 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1245 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1244 is 11
9999 mem: storing 1042 in location 1249
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1249 is 1042
9999 mem: location 1042 is 99
9999 mem: location 1043 is 7
9999 mem: location 1249 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1250
 107 run: *cursor-contents <- copy c
9999 mem: location 1231 is 32
9999 mem: location 1250 is 1042
9999 mem: storing 32 in location 1042
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1249 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1249 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1251
 107 run: *cursor-color <- copy color
9999 mem: location 1232 is 7
9999 mem: location 1251 is 1043
9999 mem: storing 7 in location 1043
 107 run: right:number <- subtract width, 1
9999 mem: location 1236 is 10
9999 mem: storing 9 in location 1252
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1240 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1252 is 9
9999 mem: storing 0 in location 1253
 107 run: jump-if at-right?, 
9999 mem: location 1253 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1240 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1240 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1230 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 87 -> 86
9999 mem: storing 1012 in location 1401
9999 mem: incrementing refcount of 1012: 86 -> 87
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1405
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean, deleted-cell:address:shared:duplex-list:character
9999 mem: location 1400 is 1000
9999 mem: location 1401 is 1012
9999 mem: location 1405 is 0
9999 mem: location 1404 is 1182
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 1012
9998 run: result 2 is 0
9998 run: result 3 is 1182
9999 mem: decrementing refcount of 1000: 13 -> 12
9999 mem: storing 1000 in location 1314
9999 mem: incrementing refcount of 1000: 12 -> 13
9999 mem: decrementing refcount of 1012: 87 -> 86
9999 mem: storing 1012 in location 1313
9999 mem: incrementing refcount of 1012: 86 -> 87
9999 mem: storing 0 in location 1319
9999 mem: storing 1182 in location 1391
9999 mem: incrementing refcount of 1182: 20 -> 21
 105 run: jump-unless deleted-cell, 
9999 mem: location 1391 is 1182
9998 run: jump-unless fell through
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1159
9999 mem: storing 1159 in location 1366
9999 mem: incrementing refcount of 1159: 25 -> 26
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1333
 105 run: jump-unless *undo, 
9999 mem: location 1333 is 1010
9999 mem: location 1010 is 1423
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1333 is 1010
9999 mem: location 1010 is 1423
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1423 in location 1438
9999 mem: incrementing refcount of 1423: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1438 is 1423
9999 mem: skipping refcount at 1423
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1424 is 1120
9999 mem: location 1425 is 0
9999 mem: location 1438 is 1423
9999 mem: skipping refcount at 1423
9998 run: address to copy is 1424
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1424 is 1120
9999 mem: storing 1120 in location 1439
9999 mem: incrementing refcount of 1120: 4 -> 5
 106 run: reply result:_elem
9999 mem: location 1439 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1332
9999 mem: incrementing refcount of 1120: 5 -> 6
 105 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1332 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1159
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1159
9999 mem: location 1128 is 1173
9999 mem: location 1129 is 1159
9999 mem: location 1130 is 1182
9999 mem: location 1131 is 2
9999 mem: location 1332 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1122 in location 1334
 105 run: jump-unless deletion, 
9999 mem: location 1334 is 1122
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *deletion, tag:offset
9999 mem: location 1334 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1159
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1159
9999 mem: location 1128 is 1173
9999 mem: location 1129 is 1159
9999 mem: location 1130 is 1182
9999 mem: location 1131 is 2
9999 mem: location 1334 is 1122
9998 run: address to copy is 1131
9998 run: its type is number
9999 mem: location 1131 is 2
9999 mem: storing 2 in location 1356
 105 run: coalesce?:boolean <- equal previous-coalesce-tag, 2/coalesce-delete
9999 mem: location 1356 is 2
9999 mem: storing 1 in location 1357
 105 run: jump-unless coalesce?, 
9999 mem: location 1357 is 1
9998 run: jump-unless fell through
 105 run: delete-until:address:address:shared:duplex-list:character <- get-address *deletion, delete-until:offset
9999 mem: location 1334 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1159
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1159
9999 mem: location 1128 is 1173
9999 mem: location 1129 is 1159
9999 mem: location 1130 is 1182
9999 mem: location 1131 is 2
9999 mem: location 1334 is 1122
9998 run: address to copy is 1130
9999 mem: storing 1130 in location 1392
 105 run: *delete-until <- next_2 *before-cursor
9999 mem: location 1324 is 1004
9999 mem: location 1004 is 1159
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1438
9999 mem: incrementing refcount of 1159: 26 -> 27
 106 run: jump-if in, 1:offset
9999 mem: location 1438 is 1159
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1438 is 1159
9999 mem: skipping refcount at 1159
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1186
9999 mem: location 1162 is 0
9999 mem: location 1438 is 1159
9999 mem: skipping refcount at 1159
9999 type: type deduced to be character$
9998 run: address to copy is 1161
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1161 is 1186
9999 mem: storing 1186 in location 1439
9999 mem: incrementing refcount of 1186: 17 -> 18
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1439 is 1186
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1186
9999 mem: location 1392 is 1130
9999 mem: decrementing refcount of 1182: 21 -> 20
9999 mem: storing 1186 in location 1130
9999 mem: incrementing refcount of 1186: 18 -> 19
 105 run: deleted-so-far:address:address:shared:duplex-list:character <- get-address *deletion, deleted-text:offset
9999 mem: location 1334 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1159
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1159
9999 mem: location 1128 is 1173
9999 mem: location 1129 is 1159
9999 mem: location 1130 is 1186
9999 mem: location 1131 is 2
9999 mem: location 1334 is 1122
9998 run: address to copy is 1128
9999 mem: storing 1128 in location 1393
 105 run: *deleted-so-far <- append_5 *deleted-so-far, deleted-cell
9999 mem: location 1393 is 1128
9999 mem: location 1128 is 1173
9999 mem: location 1391 is 1182
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1173 in location 1419
9999 mem: incrementing refcount of 1173: 16 -> 17
 106 run: new:address:shared:duplex-list:_elem/contained-in:in <- next-ingredient-without-typechecking 
9999 mem: storing 1182 in location 1420
9999 mem: incrementing refcount of 1182: 20 -> 21
 106 run: last:address:shared:duplex-list:_elem <- last_2 in
9999 mem: location 1419 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1440
9999 mem: storing 4 in location 1441
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1173 in location 1443
9999 mem: incrementing refcount of 1173: 17 -> 18
 107 run: result <- copy in
9999 mem: location 1443 is 1173
9999 mem: storing 1173 in location 1444
9999 mem: incrementing refcount of 1173: 18 -> 19
 107 run: next:address:shared:duplex-list:_elem <- next_2 result
9999 mem: location 1444 is 1173
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1173 in location 1438
9999 mem: incrementing refcount of 1173: 19 -> 20
 108 run: jump-if in, 1:offset
9999 mem: location 1438 is 1173
9998 run: jumping to instruction 4
 108 run: result <- get *in, next:offset
9999 mem: location 1438 is 1173
9999 mem: skipping refcount at 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1174 is 97
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1438 is 1173
9999 mem: skipping refcount at 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1175
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1175 is 0
9999 mem: storing 0 in location 1439
 108 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1439 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 1445
 107 run: jump-unless next, 
9999 mem: location 1445 is 0
9998 run: jumping to instruction 8
 107 run: reply result:address:shared:duplex-list:_elem
9999 mem: location 1444 is 1173
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1173
9999 mem: storing 1173 in location 1421
9999 mem: incrementing refcount of 1173: 20 -> 21
 106 run: dest:address:address:shared:duplex-list:_elem <- get-address *last, next:offset
9999 mem: location 1421 is 1173
9999 mem: skipping refcount at 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1174 is 97
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1421 is 1173
9999 mem: skipping refcount at 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1175
9999 mem: storing 1175 in location 1422
 106 run: *dest <- copy new
9999 mem: location 1420 is 1182
9999 mem: location 1422 is 1175
9999 mem: storing 1182 in location 1175
9999 mem: incrementing refcount of 1182: 21 -> 22
 106 run: jump-if new, 1:offset
9999 mem: location 1420 is 1182
9998 run: jumping to instruction 8
 106 run: dest <- get-address *new, prev:offset
9999 mem: location 1420 is 1182
9999 mem: skipping refcount at 1182
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 98
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1420 is 1182
9999 mem: skipping refcount at 1182
9999 type: type deduced to be character$
9998 run: address to copy is 1185
9999 mem: storing 1185 in location 1422
 106 run: *dest <- copy last
9999 mem: location 1421 is 1173
9999 mem: location 1422 is 1185
9999 mem: storing 1173 in location 1185
9999 mem: incrementing refcount of 1173: 21 -> 22
 106 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1419 is 1173
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1173
9999 mem: location 1393 is 1128
9999 mem: decrementing refcount of 1173: 22 -> 21
9999 mem: storing 1173 in location 1128
9999 mem: incrementing refcount of 1173: 21 -> 22
 105 run: after-row:address:number <- get-address *deletion, after-row:offset
9999 mem: location 1334 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1159
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1159
9999 mem: location 1128 is 1173
9999 mem: location 1129 is 1159
9999 mem: location 1130 is 1186
9999 mem: location 1131 is 2
9999 mem: location 1334 is 1122
9998 run: address to copy is 1125
9999 mem: storing 1125 in location 1358
 105 run: *after-row <- copy *cursor-row
9999 mem: location 1325 is 1007
9999 mem: location 1007 is 1
9999 mem: location 1358 is 1125
9999 mem: storing 1 in location 1125
 105 run: after-column:address:number <- get-address *deletion, after-column:offset
9999 mem: location 1334 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1159
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1159
9999 mem: location 1128 is 1173
9999 mem: location 1129 is 1159
9999 mem: location 1130 is 1186
9999 mem: location 1131 is 2
9999 mem: location 1334 is 1122
9998 run: address to copy is 1126
9999 mem: storing 1126 in location 1359
 105 run: *after-column <- copy *cursor-column
9999 mem: location 1326 is 1008
9999 mem: location 1008 is 0
9999 mem: location 1359 is 1126
9999 mem: storing 0 in location 1126
 105 run: after-top:address:address:shared:duplex-list:character <- get-address *deletion, after-top-of-screen:offset
9999 mem: location 1334 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1159
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1159
9999 mem: location 1128 is 1173
9999 mem: location 1129 is 1159
9999 mem: location 1130 is 1186
9999 mem: location 1131 is 2
9999 mem: location 1334 is 1122
9998 run: address to copy is 1127
9999 mem: storing 1127 in location 1360
 105 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1314 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1159
9999 mem: location 1360 is 1127
9999 mem: decrementing refcount of 1159: 27 -> 26
9999 mem: storing 1159 in location 1127
9999 mem: incrementing refcount of 1159: 26 -> 27
 105 run: jump +done-adding-delete-operation:label
9998 run: jumping to instruction 793
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1313 is 1012
9999 mem: location 1314 is 1000
9999 mem: location 1319 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 87 -> 86
9999 mem: storing 1012 in location 1297
9999 mem: incrementing refcount of 1012: 86 -> 87
9999 mem: decrementing refcount of 1000: 13 -> 12
9999 mem: storing 1000 in location 1299
9999 mem: incrementing refcount of 1000: 12 -> 13
9999 mem: storing 0 in location 1309
 104 run: jump-unless go-render?, 
9999 mem: location 1309 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1300
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1423
9999 mem: location 1011 is 0
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1301
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1012
9999 mem: location 1300 is 1
9999 mem: location 1301 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1222
9999 mem: incrementing refcount of 1012: 87 -> 88
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1224
 105 run: jump-unless screen, 
9999 mem: location 1222 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1225
 105 run: *row <- copy new-row
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1226
 105 run: *column <- copy new-column
9999 mem: location 1224 is 0
9999 mem: location 1226 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1222 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 88 -> 87
9999 mem: storing 1012 in location 1297
9999 mem: incrementing refcount of 1012: 87 -> 88
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1432
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1432 in location 1257
9999 mem: incrementing refcount of 1432: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1257 is 1432
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1257 is 1432
9999 mem: skipping refcount at 1432
9999 mem: location 1433 is 1
9999 mem: location 1434 is 1426
9999 mem: location 1257 is 1432
9999 mem: skipping refcount at 1432
9998 run: address to copy is 1433
9999 mem: storing 1433 in location 1258
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1257 is 1432
9999 mem: skipping refcount at 1432
9999 mem: location 1433 is 1
9999 mem: location 1434 is 1426
9999 mem: location 1257 is 1432
9999 mem: skipping refcount at 1432
9998 run: address to copy is 1434
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1434 is 1426
9999 mem: storing 1426 in location 1259
9999 mem: incrementing refcount of 1426: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1259 is 1426
9999 mem: skipping refcount at 1426
9999 mem: storing 1 in location 1260
9990 schedule: read-event/editor-event-loop/run1002/scenario-editor-handles-delete-key
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1258 is 1433
9999 mem: location 1433 is 1
9999 mem: location 1260 is 1
9999 mem: storing 1 in location 1261
 105 run: jump-unless done?, 
9999 mem: location 1261 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1435 in location 1262
9999 mem: incrementing refcount of 1435: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1262 is 1435
9999 mem: skipping refcount at 1435
9999 mem: location 1436 is 0
9999 mem: location 1437 is 0
9999 mem: location 1438 is 0
9999 mem: location 1439 is 0
9999 mem: location 1257 is 1432
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1432
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: decrementing refcount of 1432: 3 -> 2
9999 mem: storing 1432 in location 1298
9999 mem: incrementing refcount of 1432: 2 -> 3
9999 mem: storing 1 in location 1306
9999 mem: storing 1 in location 1307
 104 run: jump-unless found?, 
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1307 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1297 is 1012
9999 mem: location 1298 is 1432
9999 mem: location 1299 is 1000
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .c         .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: check-trace-count-for-label 2, [print-character]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
