 100 run: assume-console [
    press delete
  ]
parse: instruction: press
parse:   ingredient: {name: "delete", properties: ["delete": ]}
 100 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1002
after-brace: editor-event-loop ...
 100 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1401
9999 mem: location 2 is 1115
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1280
 101 run: console:address <- next-ingredient 
9999 mem: storing 1401 in location 1281
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1282
 101 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1282 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1394
9999 mem: location 1125 is 0
9999 mem: location 1282 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1283
 101 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1282 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1394
9999 mem: location 1125 is 0
9999 mem: location 1282 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1284
 101 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1280 is 1009
9999 mem: location 1283 is 1
9999 mem: location 1284 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1195
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1196
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1197
 102 run: break-unless sc, 
9999 mem: location 1195 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1198
 102 run: *row <- copy new-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1011
9999 mem: storing 1 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1199
 102 run: *column <- copy new-column
9999 mem: location 1197 is 0
9999 mem: location 1199 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1195 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1280
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1281 is 1401
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1401 in location 1245
 102 run: break-unless x, 
9999 mem: location 1245 is 1401
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1245 is 1401
9999 mem: location 1401 is 0
9999 mem: location 1402 is 1396
9999 mem: location 1245 is 1401
9999 run: address to copy is 1401
9999 mem: storing 1401 in location 1246
 102 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1245 is 1401
9999 mem: location 1401 is 0
9999 mem: location 1402 is 1396
9999 mem: location 1245 is 1401
9999 run: address to copy is 1402
9999 run: its type is address
9999 mem: location 1402 is 1396
9999 mem: storing 1396 in location 1247
 102 run: max:number <- length *buf
9999 mem: location 1247 is 1396
9999 mem: storing 1 in location 1248
 102 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1246 is 1401
9999 mem: location 1401 is 0
9999 mem: location 1248 is 1
9999 mem: storing 0 in location 1249
 102 run: break-unless done?, 
9999 mem: location 1249 is 0
9999 run: jumping to instruction 12
 102 run: result:event <- index *buf, *idx
9999 mem: location 1247 is 1396
9999 mem: location 1246 is 1401
9999 mem: location 1401 is 0
9999 run: address to copy is 1397
9999 run: its type is event
9999 mem: location 1397 is 1
9999 mem: location 1398 is 65522
9999 mem: location 1399 is 0
9999 mem: location 1400 is 0
9999 mem: storing 1 in location 1251
9999 mem: storing 65522 in location 1252
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 102 run: *idx <- add *idx, 1
9999 mem: location 1246 is 1401
9999 mem: location 1401 is 0
9999 mem: location 1246 is 1401
9999 mem: storing 1 in location 1401
 102 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1251 is 1
9999 mem: location 1252 is 65522
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: location 1245 is 1401
9999 run: result 0 is [1, 65522, 0, 0]
9999 run: result 1 is 1401
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1285
9999 mem: storing 65522 in location 1286
9999 mem: storing 0 in location 1287
9999 mem: storing 0 in location 1288
9999 mem: storing 1401 in location 1281
9999 mem: storing 1 in location 1289
9999 mem: storing 0 in location 1290
 101 run: loop-unless found?, 
9999 mem: location 1289 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?, 
9999 mem: location 1290 is 0
9999 run: jump-if fell through
 101 run: trace 10, [app], [next-event]
  10 app: next-event 
 101 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1285 is 1
9999 mem: location 1286 is 65522
9999 mem: location 1287 is 0
9999 mem: location 1288 is 0
9999 mem: storing 0 in location 1291
 101 run: break-unless t, 
9999 mem: location 1291 is 0
9999 run: jumping to instruction 18
 101 run: break-if t, 
9999 mem: location 1291 is 0
9999 run: jump-if fell through
 101 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1280 is 1009
9999 mem: location 1282 is 1115
9999 mem: location 1285 is 1
9999 mem: location 1286 is 65522
9999 mem: location 1287 is 0
9999 mem: location 1288 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1295
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1296
 102 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1297
9999 mem: storing 65522 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
 102 run: jump-if editor, 1:offset
9999 mem: location 1296 is 1115
9999 run: jumping to instruction 6
 102 run: screen-width:number <- screen-width screen
9999 mem: location 1295 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1403
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1405
 103 run: break-unless sc, 
9999 mem: location 1405 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1405 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1405 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1406
 103 run: reply width
9999 mem: location 1406 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1301
 102 run: screen-height:number <- screen-height screen
9999 mem: location 1295 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1405
 103 run: break-unless sc, 
9999 mem: location 1405 is 1009
9999 run: jump-unless fell through
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1405 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1405 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1406
 103 run: reply height
9999 mem: location 1406 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1302
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1296 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1394
9999 mem: location 1125 is 0
9999 mem: location 1296 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1303
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1296 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1394
9999 mem: location 1125 is 0
9999 mem: location 1296 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1304
 102 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1296 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1394
9999 mem: location 1125 is 0
9999 mem: location 1296 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1305
 102 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1296 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1394
9999 mem: location 1125 is 0
9999 mem: location 1296 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1306
 102 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1296 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1394
9999 mem: location 1125 is 0
9999 mem: location 1296 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1307
 102 run: save-row:number <- copy *cursor-row
9999 mem: location 1306 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1308
 102 run: save-column:number <- copy *cursor-column
9999 mem: location 1307 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1309
 102 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1297 is 1
9999 mem: location 1298 is 65522
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 mem: storing 0 in location 1310
 102 run: break-unless c, 
9999 mem: location 1310 is 0
9999 run: jumping to instruction 432
 102 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1297 is 1
9999 mem: location 1298 is 65522
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 mem: storing 1298 in location 1365
 102 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1365 is 1298
 102 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1365 is 1298
9999 mem: location 1298 is 65522
9999 mem: storing 0 in location 1327
 102 run: break-unless page-up?, 
9999 mem: location 1327 is 0
9999 run: jumping to instruction 477
 102 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1365 is 1298
9999 mem: location 1298 is 65522
9999 mem: storing 0 in location 1343
 102 run: break-unless page-down?, 
9999 mem: location 1343 is 0
9999 run: jumping to instruction 519
 102 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1365 is 1298
9999 mem: location 1298 is 65522
9999 mem: storing 0 in location 1350
 102 run: break-unless move-to-end-of-line?, 
9999 mem: location 1350 is 0
9999 run: jumping to instruction 556
 102 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1365 is 1298
9999 mem: location 1298 is 65522
9999 mem: storing 0 in location 1351
 102 run: break-unless move-to-start-of-line?, 
9999 mem: location 1351 is 0
9999 run: jumping to instruction 593
 102 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1365 is 1298
9999 mem: location 1298 is 65522
9999 mem: storing 0 in location 1366
 102 run: break-unless move-to-next-line?, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 630
 102 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1365 is 1298
9999 mem: location 1298 is 65522
9999 mem: storing 0 in location 1367
 102 run: break-unless move-to-previous-line?, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 667
 102 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1365 is 1298
9999 mem: location 1298 is 65522
9999 mem: storing 0 in location 1368
 102 run: break-unless move-to-previous-character?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 709
 102 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1365 is 1298
9999 mem: location 1298 is 65522
9999 mem: storing 0 in location 1370
 102 run: break-unless move-to-next-character?, 
9999 mem: location 1370 is 0
9999 run: jumping to instruction 750
 102 run: delete-next-character?:boolean <- equal *k, 65522/delete
9999 mem: location 1365 is 1298
9999 mem: location 1298 is 65522
9999 mem: storing 1 in location 1372
 102 run: break-unless delete-next-character?, 
9999 mem: location 1372 is 1
9999 run: jump-unless fell through
 102 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1296 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1394
9999 mem: location 1125 is 0
9999 mem: location 1296 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1150
9999 mem: storing 1150 in location 1345
 102 run: editor, screen, go-render?:boolean, deleted-cell:address:duplex-list <- delete-at-cursor editor, screen
9999 mem: location 1296 is 1115
9999 mem: location 1295 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1381
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1382
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1381 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1394
9999 mem: location 1125 is 0
9999 mem: location 1381 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1383
 103 run: candidate:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1383 is 1118
9999 mem: location 1118 is 1150
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1150 in location 1405
 104 run: jump-if in, 1:offset
9999 mem: location 1405 is 1150
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1405 is 1150
9999 mem: location 1150 is 167
9999 mem: location 1151 is 1160
9999 mem: location 1152 is 0
9999 mem: location 1405 is 1150
9999 run: address to copy is 1151
9999 run: its type is address
9999 mem: location 1151 is 1160
9999 mem: storing 1160 in location 1406
 104 run: reply result
9999 mem: location 1406 is 1160
9999 run: result 0 is 1160
9999 mem: storing 1160 in location 1384
 103 run: jump-if candidate, 1:offset
9999 mem: location 1384 is 1160
9999 run: jumping to instruction 7
 103 run: currc:character <- get *candidate, value:offset
9999 mem: location 1384 is 1160
9999 mem: location 1160 is 98
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1150
9999 mem: location 1384 is 1160
9999 run: address to copy is 1160
9999 run: its type is character
9999 mem: location 1160 is 98
9999 mem: storing 98 in location 1385
 103 run: remove-duplex candidate
9999 mem: location 1384 is 1160
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1160 in location 1239
 104 run: jump-if in, 1:offset
9999 mem: location 1239 is 1160
9999 run: jumping to instruction 4
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1239 is 1160
9999 mem: location 1160 is 98
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1150
9999 mem: location 1239 is 1160
9999 run: address to copy is 1161
9999 run: its type is address
9999 mem: location 1161 is 1163
9999 mem: storing 1163 in location 1240
 104 run: prev-node:address:duplex-list <- get *in, prev:offset
9999 mem: location 1239 is 1160
9999 mem: location 1160 is 98
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1150
9999 mem: location 1239 is 1160
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1150
9999 mem: storing 1150 in location 1241
 104 run: x:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1239 is 1160
9999 mem: location 1160 is 98
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1150
9999 mem: location 1239 is 1160
9999 run: address to copy is 1161
9999 mem: storing 1161 in location 1242
 104 run: *x <- copy 0
9999 mem: location 1242 is 1161
9999 mem: storing 0 in location 1161
 104 run: x <- get-address *in, prev:offset
9999 mem: location 1239 is 1160
9999 mem: location 1160 is 98
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1150
9999 mem: location 1239 is 1160
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 1242
 104 run: *x <- copy 0
9999 mem: location 1242 is 1162
9999 mem: storing 0 in location 1162
 104 run: break-unless next-node, 
9999 mem: location 1240 is 1163
9999 run: jump-unless fell through
 104 run: x <- get-address *next-node, prev:offset
9999 mem: location 1240 is 1163
9999 mem: location 1163 is 99
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1160
9999 mem: location 1240 is 1163
9999 run: address to copy is 1165
9999 mem: storing 1165 in location 1242
 104 run: *x <- copy prev-node
9999 mem: location 1241 is 1150
9999 mem: location 1242 is 1165
9999 mem: storing 1150 in location 1165
 104 run: break-unless prev-node, 
9999 mem: location 1241 is 1150
9999 run: jump-unless fell through
 104 run: x <- get-address *prev-node, next:offset
9999 mem: location 1241 is 1150
9999 mem: location 1150 is 167
9999 mem: location 1151 is 1160
9999 mem: location 1152 is 0
9999 mem: location 1241 is 1150
9999 run: address to copy is 1151
9999 mem: storing 1151 in location 1242
 104 run: *x <- copy next-node
9999 mem: location 1240 is 1163
9999 mem: location 1242 is 1151
9999 mem: storing 1163 in location 1151
 104 run: reply prev-node
9999 mem: location 1241 is 1150
 103 run: deleted-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1385 is 98
9999 mem: storing 0 in location 1386
 103 run: jump-unless deleted-newline?, 1:offset
9999 mem: location 1386 is 0
9999 run: jumping to instruction 12
 103 run: curr:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1383 is 1118
9999 mem: location 1118 is 1150
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1150 in location 1405
 104 run: jump-if in, 1:offset
9999 mem: location 1405 is 1150
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1405 is 1150
9999 mem: location 1150 is 167
9999 mem: location 1151 is 1163
9999 mem: location 1152 is 0
9999 mem: location 1405 is 1150
9999 run: address to copy is 1151
9999 run: its type is address
9999 mem: location 1151 is 1163
9999 mem: storing 1163 in location 1406
 104 run: reply result
9999 mem: location 1406 is 1163
9999 run: result 0 is 1163
9999 mem: storing 1163 in location 1387
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1381 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1394
9999 mem: location 1125 is 0
9999 mem: location 1381 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1388
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1381 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1394
9999 mem: location 1125 is 0
9999 mem: location 1381 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1389
 103 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1382 is 1009
9999 mem: location 1388 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1389 is 1122
9999 mem: location 1122 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1195
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1196
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1197
 104 run: break-unless sc, 
9999 mem: location 1195 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1198
 104 run: *row <- copy new-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1199
 104 run: *column <- copy new-column
9999 mem: location 1197 is 0
9999 mem: location 1199 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1195 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1382
 103 run: curr-column:number <- copy *cursor-column
9999 mem: location 1389 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1390
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1382 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1405
 104 run: break-unless sc, 
9999 mem: location 1405 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1405 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1405 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1406
 104 run: reply width
9999 mem: location 1406 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1391
 103 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1390 is 0
9999 mem: location 1391 is 10
9999 mem: storing 0 in location 1392
 103 run: jump-unless at-right?, 1:offset
9999 mem: location 1392 is 0
9999 run: jumping to instruction 22
 103 run: break-unless curr, 
9999 mem: location 1387 is 1163
9999 run: jump-unless fell through
 103 run: currc:character <- get *curr, value:offset
9999 mem: location 1387 is 1163
9999 mem: location 1163 is 99
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1150
9999 mem: location 1387 is 1163
9999 run: address to copy is 1163
9999 run: its type is character
9999 mem: location 1163 is 99
9999 mem: storing 99 in location 1385
 103 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1385 is 99
9999 mem: storing 0 in location 1393
 103 run: break-if at-newline?, 
9999 mem: location 1393 is 0
9999 run: jump-if fell through
 103 run: screen <- print-character screen, currc
9999 mem: location 1382 is 1009
9999 mem: location 1385 is 99
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1213
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1214
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 104 run: break-if color-found?, 
9999 mem: location 1216 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1215
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1217
9999 mem: storing 0 in location 1218
 104 run: break-if bg-color-found?, 
9999 mem: location 1218 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1217
 104 run: trace 90, [print-character], c
9999 mem: location 1214 is 99
  90 print-character: 99 
 104 run: break-unless sc, 
9999 mem: location 1213 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1219
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1220
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1221
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1222
 104 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1222
 104 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1223
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1222
 104 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1219 is 10
9999 mem: storing 1 in location 1222
 104 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1214 is 99
9999 mem: storing 0 in location 1224
 104 run: break-unless newline?, 
9999 mem: location 1224 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1219 is 10
9999 mem: storing 10 in location 1227
 104 run: index <- add index, *column
9999 mem: location 1227 is 10
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1227
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1228
 104 run: len:number <- length *buf
9999 mem: location 1228 is 1014
9999 mem: storing 50 in location 1229
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1214 is 99
9999 mem: storing 0 in location 1230
 104 run: break-unless backspace?, 
9999 mem: location 1230 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1228 is 1014
9999 mem: location 1227 is 10
9999 mem: storing 1035 in location 1232
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1232 is 1035
9999 mem: location 1035 is 98
9999 mem: location 1036 is 7
9999 mem: location 1232 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1233
 104 run: *cursor-contents <- copy c
9999 mem: location 1214 is 99
9999 mem: location 1233 is 1035
9999 mem: storing 99 in location 1035
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1232 is 1035
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1232 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1234
 104 run: *cursor-color <- copy color
9999 mem: location 1215 is 7
9999 mem: location 1234 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width, 1
9999 mem: location 1219 is 10
9999 mem: storing 9 in location 1235
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1236
 104 run: break-if at-right?, 
9999 mem: location 1236 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1223 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1213 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1382
 103 run: curr-column <- add curr-column, 1
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 103 run: curr <- next-duplex curr
9999 mem: location 1387 is 1163
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1405
 104 run: jump-if in, 1:offset
9999 mem: location 1405 is 1163
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1405 is 1163
9999 mem: location 1163 is 99
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1150
9999 mem: location 1405 is 1163
9999 run: address to copy is 1164
9999 run: its type is address
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1406
 104 run: reply result
9999 mem: location 1406 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1387
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1390 is 1
9999 mem: location 1391 is 10
9999 mem: storing 0 in location 1392
 103 run: jump-unless at-right?, 1:offset
9999 mem: location 1392 is 0
9999 run: jumping to instruction 22
 103 run: break-unless curr, 
9999 mem: location 1387 is 0
9999 run: jumping to instruction 30
 103 run: screen <- print-character screen, 32/space
9999 mem: location 1382 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1213
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1214
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 104 run: break-if color-found?, 
9999 mem: location 1216 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1215
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1217
9999 mem: storing 0 in location 1218
 104 run: break-if bg-color-found?, 
9999 mem: location 1218 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1217
 104 run: trace 90, [print-character], c
9999 mem: location 1214 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1213 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1219
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1220
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1221
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1222
 104 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1222
 104 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1223
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1222
 104 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1219 is 10
9999 mem: storing 1 in location 1222
 104 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1214 is 32
9999 mem: storing 0 in location 1224
 104 run: break-unless newline?, 
9999 mem: location 1224 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1219 is 10
9999 mem: storing 10 in location 1227
 104 run: index <- add index, *column
9999 mem: location 1227 is 10
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1227
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1228
 104 run: len:number <- length *buf
9999 mem: location 1228 is 1014
9999 mem: storing 50 in location 1229
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1214 is 32
9999 mem: storing 0 in location 1230
 104 run: break-unless backspace?, 
9999 mem: location 1230 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1228 is 1014
9999 mem: location 1227 is 11
9999 mem: storing 1037 in location 1232
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1232 is 1037
9999 mem: location 1037 is 99
9999 mem: location 1038 is 7
9999 mem: location 1232 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1233
 104 run: *cursor-contents <- copy c
9999 mem: location 1214 is 32
9999 mem: location 1233 is 1037
9999 mem: storing 32 in location 1037
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1232 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1232 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1234
 104 run: *cursor-color <- copy color
9999 mem: location 1215 is 7
9999 mem: location 1234 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width, 1
9999 mem: location 1219 is 10
9999 mem: storing 9 in location 1235
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1236
 104 run: break-if at-right?, 
9999 mem: location 1236 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1223 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1213 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1382
 103 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:1, 0/no-more-render, candidate/deleted-cell
9999 mem: location 1381 is 1115
9999 mem: location 1382 is 1009
9999 mem: location 1384 is 1160
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 run: result 3 is 1160
9999 mem: storing 1115 in location 1296
9999 mem: storing 1009 in location 1295
9999 mem: storing 0 in location 1353
9999 mem: storing 1160 in location 1373
 102 run: break-unless deleted-cell, 
9999 mem: location 1373 is 1160
9999 run: jump-unless fell through
 102 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1296 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1394
9999 mem: location 1125 is 0
9999 mem: location 1296 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1150
9999 mem: storing 1150 in location 1347
 102 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1296 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1394
9999 mem: location 1125 is 0
9999 mem: location 1296 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1314
 102 run: break-unless *undo, 
9999 mem: location 1314 is 1124
9999 mem: location 1124 is 1394
9999 run: jump-unless fell through
 102 run: op:address:operation <- first *undo
9999 mem: location 1314 is 1124
9999 mem: location 1124 is 1394
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:list <- next-ingredient 
9999 mem: storing 1394 in location 1405
 103 run: result:location <- get *in, value:offset
9999 mem: location 1405 is 1394
9999 mem: location 1394 is 1200
9999 mem: location 1395 is 0
9999 mem: location 1405 is 1394
9999 run: address to copy is 1394
9999 run: its type is number
9999 mem: location 1394 is 1200
9999 mem: storing 1200 in location 1406
 103 run: reply result
9999 mem: location 1406 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1313
 102 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1313 is 1200
9999 mem: location 1200 is 2
9999 mem: location 1201 is 1
9999 mem: location 1202 is 0
9999 mem: location 1203 is 1150
9999 mem: location 1204 is 1
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1150
9999 mem: location 1207 is 1153
9999 mem: location 1208 is 1150
9999 mem: location 1209 is 1160
9999 mem: location 1210 is 2
9999 mem: location 1313 is 1200
9999 mem: storing 1201 in location 1315
 102 run: break-unless deletion, 
9999 mem: location 1315 is 1201
9999 run: jump-unless fell through
 102 run: previous-coalesce-tag:number <- get *deletion, tag:offset
9999 mem: location 1315 is 1201
9999 mem: location 1201 is 1
9999 mem: location 1202 is 0
9999 mem: location 1203 is 1150
9999 mem: location 1204 is 1
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1150
9999 mem: location 1207 is 1153
9999 mem: location 1208 is 1150
9999 mem: location 1209 is 1160
9999 mem: location 1210 is 2
9999 mem: location 1315 is 1201
9999 run: address to copy is 1210
9999 run: its type is number
9999 mem: location 1210 is 2
9999 mem: storing 2 in location 1337
 102 run: coalesce?:boolean <- equal previous-coalesce-tag, 2/coalesce-delete
9999 mem: location 1337 is 2
9999 mem: storing 1 in location 1338
 102 run: break-unless coalesce?, 
9999 mem: location 1338 is 1
9999 run: jump-unless fell through
 102 run: delete-until:address:address:duplex-list <- get-address *deletion, delete-until:offset
9999 mem: location 1315 is 1201
9999 mem: location 1201 is 1
9999 mem: location 1202 is 0
9999 mem: location 1203 is 1150
9999 mem: location 1204 is 1
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1150
9999 mem: location 1207 is 1153
9999 mem: location 1208 is 1150
9999 mem: location 1209 is 1160
9999 mem: location 1210 is 2
9999 mem: location 1315 is 1201
9999 run: address to copy is 1209
9999 mem: storing 1209 in location 1374
 102 run: *delete-until <- next-duplex *before-cursor
9999 mem: location 1305 is 1118
9999 mem: location 1118 is 1150
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1150 in location 1405
 103 run: jump-if in, 1:offset
9999 mem: location 1405 is 1150
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1405 is 1150
9999 mem: location 1150 is 167
9999 mem: location 1151 is 1163
9999 mem: location 1152 is 0
9999 mem: location 1405 is 1150
9999 run: address to copy is 1151
9999 run: its type is address
9999 mem: location 1151 is 1163
9999 mem: storing 1163 in location 1406
 103 run: reply result
9999 mem: location 1406 is 1163
9999 run: result 0 is 1163
9999 mem: location 1374 is 1209
9999 mem: storing 1163 in location 1209
 102 run: deleted-so-far:address:address:duplex-list <- get-address *deletion, deleted-text:offset
9999 mem: location 1315 is 1201
9999 mem: location 1201 is 1
9999 mem: location 1202 is 0
9999 mem: location 1203 is 1150
9999 mem: location 1204 is 1
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1150
9999 mem: location 1207 is 1153
9999 mem: location 1208 is 1150
9999 mem: location 1209 is 1163
9999 mem: location 1210 is 2
9999 mem: location 1315 is 1201
9999 run: address to copy is 1207
9999 mem: storing 1207 in location 1375
 102 run: *deleted-so-far <- append-duplex *deleted-so-far, deleted-cell
9999 mem: location 1375 is 1207
9999 mem: location 1207 is 1153
9999 mem: location 1373 is 1160
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1153 in location 1239
 103 run: new:address:duplex-list <- next-ingredient 
9999 mem: storing 1160 in location 1240
 103 run: last:address:duplex-list <- last-duplex in
9999 mem: location 1239 is 1153
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
9999 mem: new alloc: 1407
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1153 in location 1409
 104 run: result:address:duplex-list <- copy in
9999 mem: location 1409 is 1153
9999 mem: storing 1153 in location 1410
 104 run: next:address:duplex-list <- next-duplex result
9999 mem: location 1410 is 1153
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1153 in location 1405
 105 run: jump-if in, 1:offset
9999 mem: location 1405 is 1153
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1405 is 1153
9999 mem: location 1153 is 97
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1405 is 1153
9999 run: address to copy is 1154
9999 run: its type is address
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1406
 105 run: reply result
9999 mem: location 1406 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1411
 104 run: break-unless next, 
9999 mem: location 1411 is 0
9999 run: jumping to instruction 8
 104 run: reply result
9999 mem: location 1410 is 1153
9999 run: result 0 is 1153
9999 mem: storing 1153 in location 1241
 103 run: dest:address:address:duplex-list <- get-address *last, next:offset
9999 mem: location 1241 is 1153
9999 mem: location 1153 is 97
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1241 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 1242
 103 run: *dest <- copy new
9999 mem: location 1240 is 1160
9999 mem: location 1242 is 1154
9999 mem: storing 1160 in location 1154
 103 run: jump-if new, 1:offset
9999 mem: location 1240 is 1160
9999 run: jumping to instruction 8
 103 run: dest <- get-address *new, prev:offset
9999 mem: location 1240 is 1160
9999 mem: location 1160 is 98
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1240 is 1160
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 1242
 103 run: *dest <- copy last
9999 mem: location 1241 is 1153
9999 mem: location 1242 is 1162
9999 mem: storing 1153 in location 1162
 103 run: reply in/same-as-ingredient:0
9999 mem: location 1239 is 1153
9999 run: result 0 is 1153
9999 mem: location 1375 is 1207
9999 mem: storing 1153 in location 1207
 102 run: after-row:address:number <- get-address *deletion, after-row:offset
9999 mem: location 1315 is 1201
9999 mem: location 1201 is 1
9999 mem: location 1202 is 0
9999 mem: location 1203 is 1150
9999 mem: location 1204 is 1
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1150
9999 mem: location 1207 is 1153
9999 mem: location 1208 is 1150
9999 mem: location 1209 is 1163
9999 mem: location 1210 is 2
9999 mem: location 1315 is 1201
9999 run: address to copy is 1204
9999 mem: storing 1204 in location 1339
 102 run: *after-row <- copy *cursor-row
9999 mem: location 1306 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1339 is 1204
9999 mem: storing 1 in location 1204
 102 run: after-column:address:number <- get-address *deletion, after-column:offset
9999 mem: location 1315 is 1201
9999 mem: location 1201 is 1
9999 mem: location 1202 is 0
9999 mem: location 1203 is 1150
9999 mem: location 1204 is 1
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1150
9999 mem: location 1207 is 1153
9999 mem: location 1208 is 1150
9999 mem: location 1209 is 1163
9999 mem: location 1210 is 2
9999 mem: location 1315 is 1201
9999 run: address to copy is 1205
9999 mem: storing 1205 in location 1340
 102 run: *after-column <- copy *cursor-column
9999 mem: location 1307 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1340 is 1205
9999 mem: storing 0 in location 1205
 102 run: after-top:address:address:duplex-list:character <- get-address *deletion, after-top-of-screen:offset
9999 mem: location 1315 is 1201
9999 mem: location 1201 is 1
9999 mem: location 1202 is 0
9999 mem: location 1203 is 1150
9999 mem: location 1204 is 1
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1150
9999 mem: location 1207 is 1153
9999 mem: location 1208 is 1150
9999 mem: location 1209 is 1163
9999 mem: location 1210 is 2
9999 mem: location 1315 is 1201
9999 run: address to copy is 1206
9999 mem: storing 1206 in location 1341
 102 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1296 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1394
9999 mem: location 1125 is 0
9999 mem: location 1296 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1150
9999 mem: location 1341 is 1206
9999 mem: storing 1150 in location 1206
 102 run: break +done-adding-delete-operation:label
9999 run: jumping to instruction 786
 102 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1295 is 1009
9999 mem: location 1296 is 1115
9999 mem: location 1353 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1280
9999 mem: storing 1115 in location 1282
9999 mem: storing 0 in location 1292
 101 run: break-unless go-render?, 
9999 mem: location 1292 is 0
9999 run: jumping to instruction 25
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1282 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1394
9999 mem: location 1125 is 0
9999 mem: location 1282 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1283
 101 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1282 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1394
9999 mem: location 1125 is 0
9999 mem: location 1282 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1284
 101 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1280 is 1009
9999 mem: location 1283 is 1
9999 mem: location 1284 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1195
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1196
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1197
 102 run: break-unless sc, 
9999 mem: location 1195 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1198
 102 run: *row <- copy new-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1011
9999 mem: storing 1 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1199
 102 run: *column <- copy new-column
9999 mem: location 1197 is 0
9999 mem: location 1199 is 1012
9999 mem: storing 0 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1195 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1280
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1281 is 1401
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1401 in location 1245
 102 run: break-unless x, 
9999 mem: location 1245 is 1401
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1245 is 1401
9999 mem: location 1401 is 1
9999 mem: location 1402 is 1396
9999 mem: location 1245 is 1401
9999 run: address to copy is 1401
9999 mem: storing 1401 in location 1246
 102 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1245 is 1401
9999 mem: location 1401 is 1
9999 mem: location 1402 is 1396
9999 mem: location 1245 is 1401
9999 run: address to copy is 1402
9999 run: its type is address
9999 mem: location 1402 is 1396
9999 mem: storing 1396 in location 1247
 102 run: max:number <- length *buf
9999 mem: location 1247 is 1396
9999 mem: storing 1 in location 1248
 102 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1246 is 1401
9999 mem: location 1401 is 1
9999 mem: location 1248 is 1
9999 mem: storing 1 in location 1249
 102 run: break-unless done?, 
9999 mem: location 1249 is 1
9999 run: jump-unless fell through
 102 run: dummy:address:event <- new event:type
9999 mem: storing 1403 in location 1250
 102 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1250 is 1403
9999 mem: location 1403 is 0
9999 mem: location 1404 is 0
9999 mem: location 1405 is 0
9999 mem: location 1406 is 0
9999 mem: location 1245 is 1401
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1401
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1285
9999 mem: storing 0 in location 1286
9999 mem: storing 0 in location 1287
9999 mem: storing 0 in location 1288
9999 mem: storing 1401 in location 1281
9999 mem: storing 1 in location 1289
9999 mem: storing 1 in location 1290
 101 run: loop-unless found?, 
9999 mem: location 1289 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?, 
9999 mem: location 1290 is 1
9999 run: jumping to instruction 28
  99 run: screen-should-contain [
    .          .
    .c         .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
  99 run: check-trace-count-for-label 2, [print-character]
