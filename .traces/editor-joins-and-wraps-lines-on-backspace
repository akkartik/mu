 102 run: assume-console [
    left-click 2, 0
    press backspace
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": "literal"}
9993 parse:   ingredient: {"0": "literal"}
9992 load: after rewriting: left-click 2, 0
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"backspace": <>}
9992 load: after rewriting: press backspace
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1001
9991 transform: --- type-check 'call' instructions inside recipe run1001
9991 transform: --- type-check calls inside recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1011
9999 mem: location 901 is 1323
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1325
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1327
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1323 in location 1328
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1329
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1329 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1164
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1329 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1330
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1329 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1164
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1329 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1331
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1327 is 1011
9999 mem: location 1330 is 1
9999 mem: location 1331 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1255
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1256
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1257
 105 run: jump-unless screen, 
9999 mem: location 1255 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1255 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1255 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1258
 105 run: *row <- copy new-row
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1013
9999 mem: storing 1 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1255 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1255 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1259
 105 run: *column <- copy new-column
9999 mem: location 1257 is 0
9999 mem: location 1259 is 1014
9999 mem: storing 0 in location 1014
 105 run: reply screen:address:shared:screen
9999 mem: location 1255 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1327
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1328 is 1323
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1323 in location 1288
 105 run: jump-unless console, 
9999 mem: location 1288 is 1323
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1288 is 1323
9999 mem: location 1323 is 0
9999 mem: location 1324 is 1314
9999 mem: location 1288 is 1323
9998 run: address to copy is 1323
9999 mem: storing 1323 in location 1289
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1288 is 1323
9999 mem: location 1323 is 0
9999 mem: location 1324 is 1314
9999 mem: location 1288 is 1323
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1324 is 1314
9999 mem: storing 1314 in location 1290
 105 run: max:number <- length *buf
9999 mem: location 1290 is 1314
9999 mem: storing 2 in location 1291
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1289 is 1323
9999 mem: location 1323 is 0
9999 mem: location 1291 is 2
9999 mem: storing 0 in location 1292
 105 run: jump-unless done?, 
9999 mem: location 1292 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1290 is 1314
9999 mem: location 1289 is 1323
9999 mem: location 1323 is 0
9998 run: address to copy is 1315
9998 run: its type is event
9999 mem: location 1315 is 2
9999 mem: location 1316 is 65513
9999 mem: location 1317 is 2
9999 mem: location 1318 is 0
9999 mem: storing 2 in location 1294
9999 mem: storing 65513 in location 1295
9999 mem: storing 2 in location 1296
9999 mem: storing 0 in location 1297
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1289 is 1323
9999 mem: location 1323 is 0
9999 mem: location 1289 is 1323
9999 mem: storing 1 in location 1323
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1294 is 2
9999 mem: location 1295 is 65513
9999 mem: location 1296 is 2
9999 mem: location 1297 is 0
9999 mem: location 1288 is 1323
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 0]
9998 run: result 1 is 1323
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1332
9999 mem: storing 65513 in location 1333
9999 mem: storing 2 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 1323 in location 1328
9999 mem: storing 1 in location 1336
9999 mem: storing 0 in location 1337
 104 run: jump-unless found?, 
9999 mem: location 1336 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1337 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1332 is 2
9999 mem: location 1333 is 65513
9999 mem: location 1334 is 2
9999 mem: location 1335 is 0
9999 mem: storing 1333 in location 1338
 104 run: jump-unless t, 
9999 mem: location 1338 is 1333
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1327 is 1011
9999 mem: location 1329 is 1000
9999 mem: location 1338 is 1333
9999 mem: location 1333 is 65513
9999 mem: location 1334 is 2
9999 mem: location 1335 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1227
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1228
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1229
9999 mem: storing 2 in location 1230
9999 mem: storing 0 in location 1231
 105 run: jump-if editor, 1:offset
9999 mem: location 1228 is 1000
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1229 is 65513
9999 mem: location 1230 is 2
9999 mem: location 1231 is 0
9998 run: address to copy is 1230
9998 run: its type is number
9999 mem: location 1230 is 2
9999 mem: storing 2 in location 1232
 105 run: jump-if click-row, 1:offset
9999 mem: location 1232 is 2
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1229 is 65513
9999 mem: location 1230 is 2
9999 mem: location 1231 is 0
9998 run: address to copy is 1231
9998 run: its type is number
9999 mem: location 1231 is 0
9999 mem: storing 0 in location 1233
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1228 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1164
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1228 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1234
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1233 is 0
9999 mem: location 1234 is 0
9999 mem: storing 0 in location 1235
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1235 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1228 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1164
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1228 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1236
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1233 is 0
9999 mem: location 1236 is 9
9999 mem: storing 0 in location 1237
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1237 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1228 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1164
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1228 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1238
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1228 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1164
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1228 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1239
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1228 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1164
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1228 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1164
9999 mem: storing 1164 in location 1240
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1227 is 1011
9999 mem: location 1228 is 1000
9999 mem: location 1232 is 2
9999 mem: location 1233 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1340
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1342
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1343
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1344
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1345
 106 run: jump-if editor, 1:offset
9999 mem: location 1343 is 1000
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1343 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1164
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1343 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1346
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1343 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1164
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1343 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1347
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1342 is 1011
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1181
 107 run: jump-unless screen, 
9999 mem: location 1181 is 1011
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1181 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1182
 107 run: reply height:number
9999 mem: location 1182 is 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1348
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1343 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1164
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1343 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1164
9999 mem: storing 1164 in location 1349
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1349 is 1164
9999 mem: storing 1164 in location 1350
 106 run: curr <- next_2 curr
9999 mem: location 1349 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1164
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 167
9999 mem: location 1165 is 1176
9999 mem: location 1166 is 0
9999 mem: location 1181 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1165 is 1176
9999 mem: storing 1176 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1176
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1349
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1351
 106 run: column:number <- copy left
9999 mem: location 1346 is 0
9999 mem: storing 0 in location 1352
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1343 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1164
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1343 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1353
 106 run: *cursor-row <- copy target-row
9999 mem: location 1344 is 2
9999 mem: location 1353 is 1006
9999 mem: storing 2 in location 1006
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1343 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1164
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1343 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1354
 106 run: *cursor-column <- copy target-column
9999 mem: location 1345 is 0
9999 mem: location 1354 is 1007
9999 mem: storing 0 in location 1007
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1343 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1164
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1343 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1355
 106 run: jump-unless curr, 
9999 mem: location 1349 is 1176
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1351 is 1
9999 mem: location 1348 is 5
9999 mem: storing 0 in location 1356
 106 run: jump-if off-screen?, 
9999 mem: location 1356 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 1
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1357
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1357 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1349 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 97
9999 mem: location 1177 is 1183
9999 mem: location 1178 is 1164
9999 mem: location 1349 is 1176
9998 run: address to copy is 1176
9998 run: its type is character
9999 mem: location 1176 is 97
9999 mem: storing 97 in location 1359
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1359 is 97
9999 mem: storing 0 in location 1360
 106 run: jump-unless newline?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1352 is 0
9999 mem: location 1347 is 9
9999 mem: storing 0 in location 1362
 106 run: jump-unless at-right?, 
9999 mem: location 1362 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1349 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 97
9999 mem: location 1177 is 1183
9999 mem: location 1178 is 1164
9999 mem: location 1181 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1177 is 1183
9999 mem: storing 1183 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1183
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: storing 1183 in location 1349
 106 run: prev <- next_2 prev
9999 mem: location 1350 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1164
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 167
9999 mem: location 1165 is 1176
9999 mem: location 1166 is 0
9999 mem: location 1181 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1165 is 1176
9999 mem: storing 1176 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1176
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1350
 106 run: column <- add column, 1
9999 mem: location 1352 is 0
9999 mem: storing 1 in location 1352
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1349 is 1183
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1351 is 1
9999 mem: location 1348 is 5
9999 mem: storing 0 in location 1356
 106 run: jump-if off-screen?, 
9999 mem: location 1356 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 1
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1357
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1357 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1349 is 1183
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 98
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1176
9999 mem: location 1349 is 1183
9998 run: address to copy is 1183
9998 run: its type is character
9999 mem: location 1183 is 98
9999 mem: storing 98 in location 1359
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1359 is 98
9999 mem: storing 0 in location 1360
 106 run: jump-unless newline?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1352 is 1
9999 mem: location 1347 is 9
9999 mem: storing 0 in location 1362
 106 run: jump-unless at-right?, 
9999 mem: location 1362 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1349 is 1183
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1183
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1183
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 98
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1176
9999 mem: location 1181 is 1183
9999 type: type deduced to be character$
9998 run: address to copy is 1184
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1186
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1186
9999 mem: storing 1186 in location 1349
 106 run: prev <- next_2 prev
9999 mem: location 1350 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 97
9999 mem: location 1177 is 1183
9999 mem: location 1178 is 1164
9999 mem: location 1181 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1177 is 1183
9999 mem: storing 1183 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1183
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: storing 1183 in location 1350
 106 run: column <- add column, 1
9999 mem: location 1352 is 1
9999 mem: storing 2 in location 1352
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1349 is 1186
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1351 is 1
9999 mem: location 1348 is 5
9999 mem: storing 0 in location 1356
 106 run: jump-if off-screen?, 
9999 mem: location 1356 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 1
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1357
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1357 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1349 is 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1186 is 99
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1349 is 1186
9998 run: address to copy is 1186
9998 run: its type is character
9999 mem: location 1186 is 99
9999 mem: storing 99 in location 1359
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1359 is 99
9999 mem: storing 0 in location 1360
 106 run: jump-unless newline?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1352 is 2
9999 mem: location 1347 is 9
9999 mem: storing 0 in location 1362
 106 run: jump-unless at-right?, 
9999 mem: location 1362 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1349 is 1186
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1186
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1186 is 99
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1181 is 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1187
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1189
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: storing 1189 in location 1349
 106 run: prev <- next_2 prev
9999 mem: location 1350 is 1183
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1183
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1183
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 98
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1176
9999 mem: location 1181 is 1183
9999 type: type deduced to be character$
9998 run: address to copy is 1184
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1186
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1186
9999 mem: storing 1186 in location 1350
 106 run: column <- add column, 1
9999 mem: location 1352 is 2
9999 mem: storing 3 in location 1352
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1349 is 1189
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1351 is 1
9999 mem: location 1348 is 5
9999 mem: storing 0 in location 1356
 106 run: jump-if off-screen?, 
9999 mem: location 1356 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 1
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1357
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1357 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1349 is 1189
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 32
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1349 is 1189
9998 run: address to copy is 1189
9998 run: its type is character
9999 mem: location 1189 is 32
9999 mem: storing 32 in location 1359
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1359 is 32
9999 mem: storing 0 in location 1360
 106 run: jump-unless newline?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1352 is 3
9999 mem: location 1347 is 9
9999 mem: storing 0 in location 1362
 106 run: jump-unless at-right?, 
9999 mem: location 1362 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1349 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1189
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1189
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 32
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1181 is 1189
9999 type: type deduced to be character$
9998 run: address to copy is 1190
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1192
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: storing 1192 in location 1349
 106 run: prev <- next_2 prev
9999 mem: location 1350 is 1186
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1186
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1186 is 99
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1181 is 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1187
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1189
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: storing 1189 in location 1350
 106 run: column <- add column, 1
9999 mem: location 1352 is 3
9999 mem: storing 4 in location 1352
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1349 is 1192
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1351 is 1
9999 mem: location 1348 is 5
9999 mem: storing 0 in location 1356
 106 run: jump-if off-screen?, 
9999 mem: location 1356 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 1
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1357
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1357 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1349 is 1192
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1192 is 100
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1349 is 1192
9998 run: address to copy is 1192
9998 run: its type is character
9999 mem: location 1192 is 100
9999 mem: storing 100 in location 1359
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1359 is 100
9999 mem: storing 0 in location 1360
 106 run: jump-unless newline?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1352 is 4
9999 mem: location 1347 is 9
9999 mem: storing 0 in location 1362
 106 run: jump-unless at-right?, 
9999 mem: location 1362 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1349 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1192
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1192
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1192 is 100
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1181 is 1192
9999 type: type deduced to be character$
9998 run: address to copy is 1193
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1195
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1349
 106 run: prev <- next_2 prev
9999 mem: location 1350 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1189
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1189
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 32
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1181 is 1189
9999 type: type deduced to be character$
9998 run: address to copy is 1190
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1192
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: storing 1192 in location 1350
 106 run: column <- add column, 1
9999 mem: location 1352 is 4
9999 mem: storing 5 in location 1352
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1349 is 1195
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1351 is 1
9999 mem: location 1348 is 5
9999 mem: storing 0 in location 1356
 106 run: jump-if off-screen?, 
9999 mem: location 1356 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 1
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1357
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1357 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1349 is 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 101
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1192
9999 mem: location 1349 is 1195
9998 run: address to copy is 1195
9998 run: its type is character
9999 mem: location 1195 is 101
9999 mem: storing 101 in location 1359
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1359 is 101
9999 mem: storing 0 in location 1360
 106 run: jump-unless newline?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1352 is 5
9999 mem: location 1347 is 9
9999 mem: storing 0 in location 1362
 106 run: jump-unless at-right?, 
9999 mem: location 1362 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1349 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1195
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 101
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1192
9999 mem: location 1181 is 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1198
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1349
 106 run: prev <- next_2 prev
9999 mem: location 1350 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1192
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1192
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1192 is 100
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1181 is 1192
9999 type: type deduced to be character$
9998 run: address to copy is 1193
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1195
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1350
 106 run: column <- add column, 1
9999 mem: location 1352 is 5
9999 mem: storing 6 in location 1352
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1349 is 1198
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1351 is 1
9999 mem: location 1348 is 5
9999 mem: storing 0 in location 1356
 106 run: jump-if off-screen?, 
9999 mem: location 1356 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 1
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1357
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1357 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1349 is 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 102
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1195
9999 mem: location 1349 is 1198
9998 run: address to copy is 1198
9998 run: its type is character
9999 mem: location 1198 is 102
9999 mem: storing 102 in location 1359
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1359 is 102
9999 mem: storing 0 in location 1360
 106 run: jump-unless newline?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1352 is 6
9999 mem: location 1347 is 9
9999 mem: storing 0 in location 1362
 106 run: jump-unless at-right?, 
9999 mem: location 1362 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1349 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1198
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 102
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1195
9999 mem: location 1181 is 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1199
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1201
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: storing 1201 in location 1349
 106 run: prev <- next_2 prev
9999 mem: location 1350 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1195
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 101
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1192
9999 mem: location 1181 is 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1198
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1350
 106 run: column <- add column, 1
9999 mem: location 1352 is 6
9999 mem: storing 7 in location 1352
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1349 is 1201
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1351 is 1
9999 mem: location 1348 is 5
9999 mem: storing 0 in location 1356
 106 run: jump-if off-screen?, 
9999 mem: location 1356 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 1
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1357
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1357 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1349 is 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 10
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1198
9999 mem: location 1349 is 1201
9998 run: address to copy is 1201
9998 run: its type is character
9999 mem: location 1201 is 10
9999 mem: storing 10 in location 1359
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1359 is 10
9999 mem: storing 1 in location 1360
 106 run: jump-unless newline?, 
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 1
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1357
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1357 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1351 is 1
9999 mem: storing 2 in location 1351
 106 run: column <- copy left
9999 mem: location 1346 is 0
9999 mem: storing 0 in location 1352
 106 run: curr <- next_2 curr
9999 mem: location 1349 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1201
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 10
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1198
9999 mem: location 1181 is 1201
9999 type: type deduced to be character$
9998 run: address to copy is 1202
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1204
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: storing 1204 in location 1349
 106 run: prev <- next_2 prev
9999 mem: location 1350 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1198
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 102
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1195
9999 mem: location 1181 is 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1199
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1201
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: storing 1201 in location 1350
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1349 is 1204
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1351 is 2
9999 mem: location 1348 is 5
9999 mem: storing 0 in location 1356
 106 run: jump-if off-screen?, 
9999 mem: location 1356 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 2
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1357
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1357 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1352 is 0
9999 mem: location 1354 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1358
 106 run: jump-unless at-cursor?, 
9999 mem: location 1358 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1350 is 1201
9999 mem: location 1355 is 1003
9999 mem: storing 1201 in location 1003
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1349 is 1204
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 103
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1201
9999 mem: location 1349 is 1204
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 103
9999 mem: storing 103 in location 1359
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1359 is 103
9999 mem: storing 0 in location 1360
 106 run: jump-unless newline?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1352 is 0
9999 mem: location 1347 is 9
9999 mem: storing 0 in location 1362
 106 run: jump-unless at-right?, 
9999 mem: location 1362 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1349 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1204
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1204
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 103
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1201
9999 mem: location 1181 is 1204
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1207
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1349
 106 run: prev <- next_2 prev
9999 mem: location 1350 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1201
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 10
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1198
9999 mem: location 1181 is 1201
9999 type: type deduced to be character$
9998 run: address to copy is 1202
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1204
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: storing 1204 in location 1350
 106 run: column <- add column, 1
9999 mem: location 1352 is 0
9999 mem: storing 1 in location 1352
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1349 is 1207
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1351 is 2
9999 mem: location 1348 is 5
9999 mem: storing 0 in location 1356
 106 run: jump-if off-screen?, 
9999 mem: location 1356 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 2
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1357
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1357 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1352 is 1
9999 mem: location 1354 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1358
 106 run: jump-unless at-cursor?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1349 is 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 104
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1204
9999 mem: location 1349 is 1207
9998 run: address to copy is 1207
9998 run: its type is character
9999 mem: location 1207 is 104
9999 mem: storing 104 in location 1359
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1359 is 104
9999 mem: storing 0 in location 1360
 106 run: jump-unless newline?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1352 is 1
9999 mem: location 1347 is 9
9999 mem: storing 0 in location 1362
 106 run: jump-unless at-right?, 
9999 mem: location 1362 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1349 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 104
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1204
9999 mem: location 1181 is 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1208
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1210
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1210
9999 mem: storing 1210 in location 1349
 106 run: prev <- next_2 prev
9999 mem: location 1350 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1204
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1204
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 103
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1201
9999 mem: location 1181 is 1204
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1207
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1350
 106 run: column <- add column, 1
9999 mem: location 1352 is 1
9999 mem: storing 2 in location 1352
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1349 is 1210
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1351 is 2
9999 mem: location 1348 is 5
9999 mem: storing 0 in location 1356
 106 run: jump-if off-screen?, 
9999 mem: location 1356 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 2
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1357
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1357 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1352 is 2
9999 mem: location 1354 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1358
 106 run: jump-unless at-cursor?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1349 is 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1210 is 105
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1207
9999 mem: location 1349 is 1210
9998 run: address to copy is 1210
9998 run: its type is character
9999 mem: location 1210 is 105
9999 mem: storing 105 in location 1359
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1359 is 105
9999 mem: storing 0 in location 1360
 106 run: jump-unless newline?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1352 is 2
9999 mem: location 1347 is 9
9999 mem: storing 0 in location 1362
 106 run: jump-unless at-right?, 
9999 mem: location 1362 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1349 is 1210
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1210
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1210 is 105
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1207
9999 mem: location 1181 is 1210
9999 type: type deduced to be character$
9998 run: address to copy is 1211
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1213
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: storing 1213 in location 1349
 106 run: prev <- next_2 prev
9999 mem: location 1350 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 104
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1204
9999 mem: location 1181 is 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1208
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1210
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1210
9999 mem: storing 1210 in location 1350
 106 run: column <- add column, 1
9999 mem: location 1352 is 2
9999 mem: storing 3 in location 1352
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1349 is 1213
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1351 is 2
9999 mem: location 1348 is 5
9999 mem: storing 0 in location 1356
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-joins-and-wraps-lines-on-backspace
 106 run: jump-if off-screen?, 
9999 mem: location 1356 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 2
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1357
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1357 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1352 is 3
9999 mem: location 1354 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1358
 106 run: jump-unless at-cursor?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1349 is 1213
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1213 is 32
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1210
9999 mem: location 1349 is 1213
9998 run: address to copy is 1213
9998 run: its type is character
9999 mem: location 1213 is 32
9999 mem: storing 32 in location 1359
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1359 is 32
9999 mem: storing 0 in location 1360
 106 run: jump-unless newline?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1352 is 3
9999 mem: location 1347 is 9
9999 mem: storing 0 in location 1362
 106 run: jump-unless at-right?, 
9999 mem: location 1362 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1349 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1213
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1213
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1213 is 32
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1210
9999 mem: location 1181 is 1213
9999 type: type deduced to be character$
9998 run: address to copy is 1214
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1216
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: storing 1216 in location 1349
 106 run: prev <- next_2 prev
9999 mem: location 1350 is 1210
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1210
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1210 is 105
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1207
9999 mem: location 1181 is 1210
9999 type: type deduced to be character$
9998 run: address to copy is 1211
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1213
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: storing 1213 in location 1350
 106 run: column <- add column, 1
9999 mem: location 1352 is 3
9999 mem: storing 4 in location 1352
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1349 is 1216
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1351 is 2
9999 mem: location 1348 is 5
9999 mem: storing 0 in location 1356
 106 run: jump-if off-screen?, 
9999 mem: location 1356 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 2
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1357
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1357 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1352 is 4
9999 mem: location 1354 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1358
 106 run: jump-unless at-cursor?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1349 is 1216
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 106
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1213
9999 mem: location 1349 is 1216
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 106
9999 mem: storing 106 in location 1359
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1359 is 106
9999 mem: storing 0 in location 1360
 106 run: jump-unless newline?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1352 is 4
9999 mem: location 1347 is 9
9999 mem: storing 0 in location 1362
 106 run: jump-unless at-right?, 
9999 mem: location 1362 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1349 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1216
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1216
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 106
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1213
9999 mem: location 1181 is 1216
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1219
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: storing 1219 in location 1349
 106 run: prev <- next_2 prev
9999 mem: location 1350 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1213
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1213
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1213 is 32
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1210
9999 mem: location 1181 is 1213
9999 type: type deduced to be character$
9998 run: address to copy is 1214
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1216
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: storing 1216 in location 1350
 106 run: column <- add column, 1
9999 mem: location 1352 is 4
9999 mem: storing 5 in location 1352
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1349 is 1219
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1351 is 2
9999 mem: location 1348 is 5
9999 mem: storing 0 in location 1356
 106 run: jump-if off-screen?, 
9999 mem: location 1356 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 2
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1357
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1357 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1352 is 5
9999 mem: location 1354 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1358
 106 run: jump-unless at-cursor?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1349 is 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1219 is 107
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1216
9999 mem: location 1349 is 1219
9998 run: address to copy is 1219
9998 run: its type is character
9999 mem: location 1219 is 107
9999 mem: storing 107 in location 1359
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1359 is 107
9999 mem: storing 0 in location 1360
 106 run: jump-unless newline?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1352 is 5
9999 mem: location 1347 is 9
9999 mem: storing 0 in location 1362
 106 run: jump-unless at-right?, 
9999 mem: location 1362 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1349 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1219 is 107
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1216
9999 mem: location 1181 is 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1220
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1220 is 1222
9999 mem: storing 1222 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1222
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1222
9999 mem: storing 1222 in location 1349
 106 run: prev <- next_2 prev
9999 mem: location 1350 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1216
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1216
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 106
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1213
9999 mem: location 1181 is 1216
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1219
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: storing 1219 in location 1350
 106 run: column <- add column, 1
9999 mem: location 1352 is 5
9999 mem: storing 6 in location 1352
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1349 is 1222
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1351 is 2
9999 mem: location 1348 is 5
9999 mem: storing 0 in location 1356
 106 run: jump-if off-screen?, 
9999 mem: location 1356 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 2
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1357
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1357 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1352 is 6
9999 mem: location 1354 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1358
 106 run: jump-unless at-cursor?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1349 is 1222
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1222 is 108
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1219
9999 mem: location 1349 is 1222
9998 run: address to copy is 1222
9998 run: its type is character
9999 mem: location 1222 is 108
9999 mem: storing 108 in location 1359
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1359 is 108
9999 mem: storing 0 in location 1360
 106 run: jump-unless newline?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1352 is 6
9999 mem: location 1347 is 9
9999 mem: storing 0 in location 1362
 106 run: jump-unless at-right?, 
9999 mem: location 1362 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1349 is 1222
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1222
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1222
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1222 is 108
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1219
9999 mem: location 1181 is 1222
9999 type: type deduced to be character$
9998 run: address to copy is 1223
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1223 is 0
9999 mem: storing 0 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1349
 106 run: prev <- next_2 prev
9999 mem: location 1350 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1219 is 107
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1216
9999 mem: location 1181 is 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1220
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1220 is 1222
9999 mem: storing 1222 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1222
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1222
9999 mem: storing 1222 in location 1350
 106 run: column <- add column, 1
9999 mem: location 1352 is 6
9999 mem: storing 7 in location 1352
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1349 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1351 is 2
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1357
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1352 is 7
9999 mem: location 1354 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1363
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1357 is 1
9999 mem: location 1363 is 0
9999 mem: storing 0 in location 1364
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1351 is 2
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1365
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1364 is 0
9999 mem: location 1365 is 0
9999 mem: storing 0 in location 1366
 106 run: jump-unless before-cursor?, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 72
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1343 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1228
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1241
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1228 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1228 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 2
9999 mem: storing 2 in location 1242
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1228 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1228 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1243
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1228 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1228 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1164
9999 mem: storing 1164 in location 1244
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1241 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: storing 1117 in location 1246
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1238 is 1
9999 mem: location 1239 is 0
9999 mem: location 1240 is 1164
9999 mem: location 1242 is 2
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1241 is 0
9999 mem: location 1246 is 1117
9999 mem: location 1246 is 1117
9999 mem: storing 1 in location 1117
9999 mem: storing 1 in location 1118
9999 mem: storing 0 in location 1119
9999 mem: storing 1164 in location 1120
9999 mem: storing 2 in location 1121
9999 mem: storing 0 in location 1122
9999 mem: storing 1164 in location 1123
9999 mem: storing 0 in location 1124
 105 run: editor <- add-operation editor, op
9999 mem: location 1228 is 1000
9999 mem: location 1246 is 1117
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: new alloc: 1367
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1369
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1117 in location 1370
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1369 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1369 is 1000
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1371
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1370 is 1117
9999 mem: location 1371 is 1009
9999 mem: location 1009 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1117 in location 1255
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1256
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: new alloc: 1373
9999 mem: storing 1373 in location 1257
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1257 is 1373
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1373 is 0
9999 mem: location 1374 is 0
9999 mem: location 1257 is 1373
9998 run: address to copy is 1373
9999 mem: storing 1373 in location 1258
 107 run: *val <- copy x
9999 mem: location 1255 is 1117
9999 mem: location 1258 is 1373
9999 mem: storing 1117 in location 1373
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1257 is 1373
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1373 is 1117
9999 mem: location 1374 is 0
9999 mem: location 1257 is 1373
9999 type: type deduced to be address$
9998 run: address to copy is 1374
9999 mem: storing 1374 in location 1259
 107 run: *next <- copy in
9999 mem: location 1256 is 0
9999 mem: location 1259 is 1374
9999 mem: storing 0 in location 1374
 107 run: reply result
9999 mem: location 1257 is 1373
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1373
9999 mem: location 1371 is 1009
9999 mem: storing 1373 in location 1009
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1369 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1369 is 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1372
 106 run: *redo <- copy 0
9999 mem: location 1372 is 1010
9999 mem: storing 0 in location 1010
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1369 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1228
 105 run: reply 1/true
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1329 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1329 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 2
9999 mem: storing 2 in location 1330
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1329 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1329 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1331
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1327 is 1011
9999 mem: location 1330 is 2
9999 mem: location 1331 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1255
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1256
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1257
 105 run: jump-unless screen, 
9999 mem: location 1255 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1255 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1255 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1258
 105 run: *row <- copy new-row
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1013
9999 mem: storing 2 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1255 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1255 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1259
 105 run: *column <- copy new-column
9999 mem: location 1257 is 0
9999 mem: location 1259 is 1014
9999 mem: storing 0 in location 1014
 105 run: reply screen:address:shared:screen
9999 mem: location 1255 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1327
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1328 is 1323
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1323 in location 1288
 105 run: jump-unless console, 
9999 mem: location 1288 is 1323
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1288 is 1323
9999 mem: location 1323 is 1
9999 mem: location 1324 is 1314
9999 mem: location 1288 is 1323
9998 run: address to copy is 1323
9999 mem: storing 1323 in location 1289
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1288 is 1323
9999 mem: location 1323 is 1
9999 mem: location 1324 is 1314
9999 mem: location 1288 is 1323
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1324 is 1314
9999 mem: storing 1314 in location 1290
 105 run: max:number <- length *buf
9999 mem: location 1290 is 1314
9999 mem: storing 2 in location 1291
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1289 is 1323
9999 mem: location 1323 is 1
9999 mem: location 1291 is 2
9999 mem: storing 0 in location 1292
 105 run: jump-unless done?, 
9999 mem: location 1292 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1290 is 1314
9999 mem: location 1289 is 1323
9999 mem: location 1323 is 1
9998 run: address to copy is 1319
9998 run: its type is event
9999 mem: location 1319 is 0
9999 mem: location 1320 is 8
9999 mem: location 1321 is 0
9999 mem: location 1322 is 0
9999 mem: storing 0 in location 1294
9999 mem: storing 8 in location 1295
9999 mem: storing 0 in location 1296
9999 mem: storing 0 in location 1297
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1289 is 1323
9999 mem: location 1323 is 1
9999 mem: location 1289 is 1323
9999 mem: storing 2 in location 1323
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1294 is 0
9999 mem: location 1295 is 8
9999 mem: location 1296 is 0
9999 mem: location 1297 is 0
9999 mem: location 1288 is 1323
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 8, 0, 0]
9998 run: result 1 is 1323
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1332
9999 mem: storing 8 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 1323 in location 1328
9999 mem: storing 1 in location 1336
9999 mem: storing 0 in location 1337
 104 run: jump-unless found?, 
9999 mem: location 1336 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1337 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1332 is 0
9999 mem: location 1333 is 8
9999 mem: location 1334 is 0
9999 mem: location 1335 is 0
9999 mem: storing 0 in location 1338
 104 run: jump-unless t, 
9999 mem: location 1338 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1327 is 1011
9999 mem: location 1329 is 1000
9999 mem: location 1332 is 0
9999 mem: location 1333 is 8
9999 mem: location 1334 is 0
9999 mem: location 1335 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: new alloc: 1375
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1377
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1378
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1379
9999 mem: storing 8 in location 1380
9999 mem: storing 0 in location 1381
9999 mem: storing 0 in location 1382
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1383
 105 run: jump-if editor, 1:offset
9999 mem: location 1378 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1377 is 1011
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1181
 106 run: jump-unless screen, 
9999 mem: location 1181 is 1011
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1181 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1182
 106 run: reply width:number
9999 mem: location 1182 is 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1384
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1377 is 1011
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1181
 106 run: jump-unless screen, 
9999 mem: location 1181 is 1011
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1181 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1182
 106 run: reply height:number
9999 mem: location 1182 is 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1385
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1378 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1378 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1386
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1378 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1378 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1387
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1378 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1378 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1388
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1378 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1378 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1389
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1378 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1378 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1390
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1389 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 2 in location 1391
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1390 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1392
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1379 is 0
9999 mem: location 1380 is 8
9999 mem: location 1381 is 0
9999 mem: location 1382 is 0
9999 mem: storing 1380 in location 1393
 105 run: jump-unless c, 
9999 mem: location 1393 is 1380
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1393 is 1380
9999 mem: location 1380 is 8
9999 mem: storing 0 in location 1394
 105 run: jump-unless redo?, 
9999 mem: location 1394 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1393 is 1380
9999 mem: location 1380 is 8
9999 mem: storing 0 in location 1405
 105 run: jump-unless undo?, 
9999 mem: location 1405 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1393 is 1380
9999 mem: location 1380 is 8
9999 mem: storing 0 in location 1410
 105 run: jump-unless page-up?, 
9999 mem: location 1410 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1393 is 1380
9999 mem: location 1380 is 8
9999 mem: storing 0 in location 1426
 105 run: jump-unless page-down?, 
9999 mem: location 1426 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1393 is 1380
9999 mem: location 1380 is 8
9999 mem: storing 0 in location 1427
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1427 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1393 is 1380
9999 mem: location 1380 is 8
9999 mem: storing 0 in location 1432
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1432 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1393 is 1380
9999 mem: location 1380 is 8
9999 mem: storing 0 in location 1433
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1433 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1393 is 1380
9999 mem: location 1380 is 8
9999 mem: storing 0 in location 1434
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1434 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1393 is 1380
9999 mem: location 1380 is 8
9999 mem: storing 1 in location 1435
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1435 is 1
9998 run: jump-unless fell through
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1378 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1378 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1164
9999 mem: storing 1164 in location 1428
 105 run: editor, screen, go-render?:boolean, backspaced-cell:address:shared:duplex-list:character <- delete-before-cursor editor, screen
9999 mem: location 1378 is 1000
9999 mem: location 1377 is 1011
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 22
9999 mem: new alloc: 1461
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1463
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1464
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1463 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1463 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1465
 106 run: data:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1463 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1463 is 1000
9998 run: address to copy is 1000
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1000 is 1164
9999 mem: storing 1164 in location 1466
 106 run: prev:address:shared:duplex-list:character <- prev_2 *before-cursor
9999 mem: location 1465 is 1003
9999 mem: location 1003 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1201
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1181 is 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 10
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1198
9999 mem: location 1181 is 1201
9999 type: type deduced to be character$
9998 run: address to copy is 1203
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1203 is 1198
9999 mem: storing 1198 in location 1182
 107 run: reply result
9999 mem: location 1182 is 1198
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1467
 106 run: go-render?, backspaced-cell <- copy 0/no-more-render, 0/nothing-deleted
9999 mem: storing 0 in location 1468
9999 mem: storing 0 in location 1469
 106 run: jump-if prev, 1:offset
9999 mem: location 1467 is 1198
9998 run: jumping to instruction 9
 106 run: trace 10, [app], [delete-before-cursor]
  10 app: delete-before-cursor 
 106 run: original-row:number <- get *editor, cursor-row:offset
9999 mem: location 1463 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1463 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 2
9999 mem: storing 2 in location 1470
 106 run: editor, scroll?:boolean <- move-cursor-coordinates-left editor
9999 mem: location 1463 is 1000
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: new alloc: 1484
 107 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1486
 107 run: before-cursor:address:shared:duplex-list:character <- get *editor, before-cursor:offset
9999 mem: location 1486 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1486 is 1000
9998 run: address to copy is 1003
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1003 is 1201
9999 mem: storing 1201 in location 1487
 107 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1486 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1486 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1488
 107 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1486 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1486 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1489
 107 run: left:number <- get *editor, left:offset
9999 mem: location 1486 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1486 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1490
 107 run: at-left-margin?:boolean <- equal *cursor-column, left
9999 mem: location 1489 is 1007
9999 mem: location 1007 is 0
9999 mem: location 1490 is 0
9999 mem: storing 1 in location 1491
 107 run: jump-if at-left-margin?, 
9999 mem: location 1491 is 1
9998 run: jumping to instruction 13
 107 run: top-of-screen?:boolean <- equal *cursor-row, 1
9999 mem: location 1488 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1493
 107 run: go-render?:boolean <- copy 0/false
9999 mem: storing 0 in location 1492
 107 run: jump-if top-of-screen?, 
9999 mem: location 1493 is 0
9998 run: jump-if fell through
 107 run: *cursor-row <- subtract *cursor-row, 1
9999 mem: location 1488 is 1006
9999 mem: location 1006 is 2
9999 mem: location 1488 is 1006
9999 mem: storing 1 in location 1006
 107 run: jump-unless top-of-screen?, 
9999 mem: location 1493 is 0
9998 run: jumping to instruction 32
 107 run: previous-character:character <- get *before-cursor, value:offset
9999 mem: location 1487 is 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 10
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1198
9999 mem: location 1487 is 1201
9998 run: address to copy is 1201
9998 run: its type is character
9999 mem: location 1201 is 10
9999 mem: storing 10 in location 1497
 107 run: previous-character-is-newline?:boolean <- equal previous-character, 10/newline
9999 mem: location 1497 is 10
9999 mem: storing 1 in location 1498
 107 run: jump-unless previous-character-is-newline?, 
9999 mem: location 1498 is 1
9998 run: jump-unless fell through
 107 run: trace 10, [app], [switching to previous line]
  10 app: switching to previous line 
 107 run: d:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1486 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1201
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1486 is 1000
9998 run: address to copy is 1000
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1000 is 1164
9999 mem: storing 1164 in location 1499
 107 run: end-of-line:number <- previous-line-length before-cursor, d
9999 mem: location 1487 is 1201
9999 mem: location 1499 is 1164
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 108 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1158
 108 run: start:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1159
 108 run: result:number <- copy 0
9999 mem: storing 0 in location 1160
 108 run: jump-if curr, 1:offset
9999 mem: location 1158 is 1201
9998 run: jumping to instruction 6
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1158 is 1201
9999 mem: location 1159 is 1164
9999 mem: storing 0 in location 1161
 108 run: jump-unless at-start?, 1:offset
9999 mem: location 1161 is 0
9998 run: jumping to instruction 9
 108 run: curr <- prev_2 curr
9999 mem: location 1158 is 1201
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1181
 109 run: jump-if in, 1:offset
9999 mem: location 1181 is 1201
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1181 is 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 10
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1198
9999 mem: location 1181 is 1201
9999 type: type deduced to be character$
9998 run: address to copy is 1203
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1203 is 1198
9999 mem: storing 1198 in location 1182
 109 run: reply result
9999 mem: location 1182 is 1198
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1158
 108 run: jump-unless curr, 
9999 mem: location 1158 is 1198
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1158 is 1198
9999 mem: location 1159 is 1164
9999 mem: storing 0 in location 1161
 108 run: jump-if at-start?, 
9999 mem: location 1161 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1158 is 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 102
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1195
9999 mem: location 1158 is 1198
9998 run: address to copy is 1198
9998 run: its type is character
9999 mem: location 1198 is 102
9999 mem: storing 102 in location 1162
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 102
9999 mem: storing 0 in location 1163
 108 run: jump-if at-newline?, 
9999 mem: location 1163 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1160 is 0
9999 mem: storing 1 in location 1160
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1158 is 1198
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1181
 109 run: jump-if in, 1:offset
9999 mem: location 1181 is 1198
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1181 is 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 102
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1195
9999 mem: location 1181 is 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1200
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1200 is 1195
9999 mem: storing 1195 in location 1182
 109 run: reply result
9999 mem: location 1182 is 1195
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1158
 108 run: jump-unless curr, 
9999 mem: location 1158 is 1195
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1158 is 1195
9999 mem: location 1159 is 1164
9999 mem: storing 0 in location 1161
 108 run: jump-if at-start?, 
9999 mem: location 1161 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1158 is 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 101
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1192
9999 mem: location 1158 is 1195
9998 run: address to copy is 1195
9998 run: its type is character
9999 mem: location 1195 is 101
9999 mem: storing 101 in location 1162
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 101
9999 mem: storing 0 in location 1163
 108 run: jump-if at-newline?, 
9999 mem: location 1163 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1160 is 1
9999 mem: storing 2 in location 1160
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1158 is 1195
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1181
 109 run: jump-if in, 1:offset
9999 mem: location 1181 is 1195
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1181 is 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 101
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1192
9999 mem: location 1181 is 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1197 is 1192
9999 mem: storing 1192 in location 1182
 109 run: reply result
9999 mem: location 1182 is 1192
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1192
9999 mem: storing 1192 in location 1158
 108 run: jump-unless curr, 
9999 mem: location 1158 is 1192
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1158 is 1192
9999 mem: location 1159 is 1164
9999 mem: storing 0 in location 1161
 108 run: jump-if at-start?, 
9999 mem: location 1161 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1158 is 1192
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1192 is 100
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1158 is 1192
9998 run: address to copy is 1192
9998 run: its type is character
9999 mem: location 1192 is 100
9999 mem: storing 100 in location 1162
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 100
9999 mem: storing 0 in location 1163
 108 run: jump-if at-newline?, 
9999 mem: location 1163 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1160 is 2
9999 mem: storing 3 in location 1160
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1158 is 1192
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1181
 109 run: jump-if in, 1:offset
9999 mem: location 1181 is 1192
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1181 is 1192
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1192 is 100
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1181 is 1192
9999 type: type deduced to be character$
9998 run: address to copy is 1194
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1194 is 1189
9999 mem: storing 1189 in location 1182
 109 run: reply result
9999 mem: location 1182 is 1189
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1189
9999 mem: storing 1189 in location 1158
 108 run: jump-unless curr, 
9999 mem: location 1158 is 1189
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1158 is 1189
9999 mem: location 1159 is 1164
9999 mem: storing 0 in location 1161
 108 run: jump-if at-start?, 
9999 mem: location 1161 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1158 is 1189
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 32
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1158 is 1189
9998 run: address to copy is 1189
9998 run: its type is character
9999 mem: location 1189 is 32
9999 mem: storing 32 in location 1162
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1163
 108 run: jump-if at-newline?, 
9999 mem: location 1163 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1160 is 3
9999 mem: storing 4 in location 1160
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1158 is 1189
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1181
 109 run: jump-if in, 1:offset
9999 mem: location 1181 is 1189
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1181 is 1189
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 32
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1181 is 1189
9999 type: type deduced to be character$
9998 run: address to copy is 1191
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1191 is 1186
9999 mem: storing 1186 in location 1182
 109 run: reply result
9999 mem: location 1182 is 1186
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1186
9999 mem: storing 1186 in location 1158
 108 run: jump-unless curr, 
9999 mem: location 1158 is 1186
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1158 is 1186
9999 mem: location 1159 is 1164
9999 mem: storing 0 in location 1161
 108 run: jump-if at-start?, 
9999 mem: location 1161 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1158 is 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1186 is 99
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1158 is 1186
9998 run: address to copy is 1186
9998 run: its type is character
9999 mem: location 1186 is 99
9999 mem: storing 99 in location 1162
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 99
9999 mem: storing 0 in location 1163
 108 run: jump-if at-newline?, 
9999 mem: location 1163 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1160 is 4
9999 mem: storing 5 in location 1160
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1158 is 1186
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1181
 109 run: jump-if in, 1:offset
9999 mem: location 1181 is 1186
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1181 is 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1186 is 99
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1181 is 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1188 is 1183
9999 mem: storing 1183 in location 1182
 109 run: reply result
9999 mem: location 1182 is 1183
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1183
9999 mem: storing 1183 in location 1158
 108 run: jump-unless curr, 
9999 mem: location 1158 is 1183
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1158 is 1183
9999 mem: location 1159 is 1164
9999 mem: storing 0 in location 1161
 108 run: jump-if at-start?, 
9999 mem: location 1161 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1158 is 1183
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 98
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1176
9999 mem: location 1158 is 1183
9998 run: address to copy is 1183
9998 run: its type is character
9999 mem: location 1183 is 98
9999 mem: storing 98 in location 1162
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 98
9999 mem: storing 0 in location 1163
 108 run: jump-if at-newline?, 
9999 mem: location 1163 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1160 is 5
9999 mem: storing 6 in location 1160
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1158 is 1183
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1181
 109 run: jump-if in, 1:offset
9999 mem: location 1181 is 1183
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1181 is 1183
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 98
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1176
9999 mem: location 1181 is 1183
9999 type: type deduced to be character$
9998 run: address to copy is 1185
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1185 is 1176
9999 mem: storing 1176 in location 1182
 109 run: reply result
9999 mem: location 1182 is 1176
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1158
 108 run: jump-unless curr, 
9999 mem: location 1158 is 1176
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 1164
9999 mem: storing 0 in location 1161
 108 run: jump-if at-start?, 
9999 mem: location 1161 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1158 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 97
9999 mem: location 1177 is 1183
9999 mem: location 1178 is 1164
9999 mem: location 1158 is 1176
9998 run: address to copy is 1176
9998 run: its type is character
9999 mem: location 1176 is 97
9999 mem: storing 97 in location 1162
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 97
9999 mem: storing 0 in location 1163
 108 run: jump-if at-newline?, 
9999 mem: location 1163 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1160 is 6
9999 mem: storing 7 in location 1160
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1158 is 1176
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1181
 109 run: jump-if in, 1:offset
9999 mem: location 1181 is 1176
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1181 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 97
9999 mem: location 1177 is 1183
9999 mem: location 1178 is 1164
9999 mem: location 1181 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1178 is 1164
9999 mem: storing 1164 in location 1182
 109 run: reply result
9999 mem: location 1182 is 1164
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1164
9999 mem: storing 1164 in location 1158
 108 run: jump-unless curr, 
9999 mem: location 1158 is 1164
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1158 is 1164
9999 mem: location 1159 is 1164
9999 mem: storing 1 in location 1161
 108 run: jump-if at-start?, 
9999 mem: location 1161 is 1
9998 run: jumping to instruction 19
 108 run: reply result:number
9999 mem: location 1160 is 7
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 7
9999 mem: storing 7 in location 1500
 107 run: *cursor-column <- add left, end-of-line
9999 mem: location 1490 is 0
9999 mem: location 1500 is 7
9999 mem: location 1489 is 1007
9999 mem: storing 7 in location 1007
 107 run: reply editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1486 is 1000
9999 mem: location 1492 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1000
9998 run: result 1 is 0
9999 mem: storing 1000 in location 1463
9999 mem: storing 0 in location 1471
 106 run: backspaced-cell:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1465 is 1003
9999 mem: location 1003 is 1201
9999 mem: storing 1201 in location 1469
 106 run: data <- remove_2 *before-cursor, data
9999 mem: location 1465 is 1003
9999 mem: location 1003 is 1201
9999 mem: location 1466 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:address:shared:duplex-list:_elem/contained-in:in <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1255
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1256
 107 run: jump-if x, 1:offset
9999 mem: location 1255 is 1201
9998 run: jumping to instruction 5
 107 run: next-node:address:shared:duplex-list:_elem <- get *x, next:offset
9999 mem: location 1255 is 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 10
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1198
9999 mem: location 1255 is 1201
9999 type: type deduced to be character$
9998 run: address to copy is 1202
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1257
 107 run: prev-node:address:shared:duplex-list:_elem <- get *x, prev:offset
9999 mem: location 1255 is 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 10
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1198
9999 mem: location 1255 is 1201
9999 type: type deduced to be character$
9998 run: address to copy is 1203
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1203 is 1198
9999 mem: storing 1198 in location 1258
 107 run: tmp:address:address:shared:duplex-list:_elem <- get-address *x, next:offset
9999 mem: location 1255 is 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 10
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1198
9999 mem: location 1255 is 1201
9999 type: type deduced to be character$
9998 run: address to copy is 1202
9999 mem: storing 1202 in location 1259
 107 run: *tmp <- copy 0
9999 mem: location 1259 is 1202
9999 mem: storing 0 in location 1202
 107 run: tmp <- get-address *x, prev:offset
9999 mem: location 1255 is 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 10
9999 mem: location 1202 is 0
9999 mem: location 1203 is 1198
9999 mem: location 1255 is 1201
9999 type: type deduced to be character$
9998 run: address to copy is 1203
9999 mem: storing 1203 in location 1259
 107 run: *tmp <- copy 0
9999 mem: location 1259 is 1203
9999 mem: storing 0 in location 1203
 107 run: jump-unless next-node, 
9999 mem: location 1257 is 1204
9998 run: jump-unless fell through
 107 run: tmp <- get-address *next-node, prev:offset
9999 mem: location 1257 is 1204
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 103
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1201
9999 mem: location 1257 is 1204
9999 type: type deduced to be character$
9998 run: address to copy is 1206
9999 mem: storing 1206 in location 1259
 107 run: *tmp <- copy prev-node
9999 mem: location 1258 is 1198
9999 mem: location 1259 is 1206
9999 mem: storing 1198 in location 1206
 107 run: jump-unless prev-node, 
9999 mem: location 1258 is 1198
9998 run: jump-unless fell through
 107 run: tmp <- get-address *prev-node, next:offset
9999 mem: location 1258 is 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 102
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1195
9999 mem: location 1258 is 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1199
9999 mem: storing 1199 in location 1259
 107 run: *tmp <- copy next-node
9999 mem: location 1257 is 1204
9999 mem: location 1259 is 1199
9999 mem: storing 1204 in location 1199
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1256 is 1164
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1164
9999 mem: storing 1164 in location 1466
 106 run: *before-cursor <- copy prev
9999 mem: location 1467 is 1198
9999 mem: location 1465 is 1003
9999 mem: storing 1198 in location 1003
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1468
 106 run: jump-unless scroll?, 1:offset
9999 mem: location 1471 is 0
9998 run: jumping to instruction 18
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1464 is 1011
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1181
 107 run: jump-unless screen, 
9999 mem: location 1181 is 1011
9998 run: jump-unless fell through
 107 run: width <- get *screen, num-columns:offset
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1181 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1182
 107 run: reply width:number
9999 mem: location 1182 is 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1472
 106 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1463 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1463 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1473
 106 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1463 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1463 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 7
9999 mem: storing 7 in location 1474
 106 run: same-row?:boolean <- equal cursor-row, original-row
9999 mem: location 1473 is 1
9999 mem: location 1470 is 2
9999 mem: storing 0 in location 1475
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1468
 106 run: jump-if same-row?, 1:offset
9999 mem: location 1475 is 0
9998 run: jump-if fell through
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean, backspaced-cell:address:shared:duplex-list:character
9999 mem: location 1463 is 1000
9999 mem: location 1464 is 1011
9999 mem: location 1468 is 1
9999 mem: location 1469 is 1201
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 1011
9998 run: result 2 is 1
9998 run: result 3 is 1201
9999 mem: storing 1000 in location 1378
9999 mem: storing 1011 in location 1377
9999 mem: storing 1 in location 1383
9999 mem: storing 1201 in location 1436
 105 run: jump-unless backspaced-cell, 
9999 mem: location 1436 is 1201
9998 run: jump-unless fell through
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1378 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1378 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1164
9999 mem: storing 1164 in location 1430
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1378 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1378 is 1000
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1397
 105 run: jump-unless *undo, 
9999 mem: location 1397 is 1009
9999 mem: location 1009 is 1373
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1397 is 1009
9999 mem: location 1009 is 1373
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1373 in location 1181
 106 run: result <- get *in, value:offset
9999 mem: location 1181 is 1373
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1373 is 1117
9999 mem: location 1374 is 0
9999 mem: location 1181 is 1373
9998 run: address to copy is 1373
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1373 is 1117
9999 mem: storing 1117 in location 1182
 106 run: reply result:_elem
9999 mem: location 1182 is 1117
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1117
9999 mem: storing 1117 in location 1396
 105 run: deletion:address:shared:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1396 is 1117
9999 mem: location 1117 is 1
9999 mem: location 1118 is 1
9999 mem: location 1119 is 0
9999 mem: location 1120 is 1164
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1164
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1126 is 0
9999 mem: location 1127 is 0
9999 mem: location 1396 is 1117
9999 mem: storing 0 in location 1398
 105 run: jump-unless deletion, 
9999 mem: location 1398 is 0
9998 run: jumping to instruction 337
 105 run: op:address:shared:operation <- new operation:type
9999 mem: new alloc: 1502
9999 mem: storing 1502 in location 1396
 105 run: deleted-until:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1388 is 1003
9999 mem: location 1003 is 1198
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1181
 106 run: jump-if in, 1:offset
9999 mem: location 1181 is 1198
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1181 is 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 102
9999 mem: location 1199 is 1204
9999 mem: location 1200 is 1195
9999 mem: location 1181 is 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1199
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1199 is 1204
9999 mem: storing 1204 in location 1182
9990 schedule: next_2/handle-keyboard-event/editor-event-loop/run1001/scenario-editor-joins-and-wraps-lines-on-backspace
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1204
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1204
9999 mem: storing 1204 in location 1431
 105 run: *op <- merge 2/delete-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, backspaced-cell/deleted, *before-cursor/delete-from, deleted-until, 1/coalesce-backspace
9999 mem: location 1391 is 2
9999 mem: location 1392 is 0
9999 mem: location 1428 is 1164
9999 mem: location 1389 is 1006
9999 mem: location 1006 is 1
9999 mem: location 1390 is 1007
9999 mem: location 1007 is 7
9999 mem: location 1430 is 1164
9999 mem: location 1436 is 1201
9999 mem: location 1388 is 1003
9999 mem: location 1003 is 1198
9999 mem: location 1431 is 1204
9999 mem: location 1396 is 1502
9999 mem: location 1396 is 1502
9999 mem: storing 2 in location 1502
9999 mem: storing 2 in location 1503
9999 mem: storing 0 in location 1504
9999 mem: storing 1164 in location 1505
9999 mem: storing 1 in location 1506
9999 mem: storing 7 in location 1507
9999 mem: storing 1164 in location 1508
9999 mem: storing 1201 in location 1509
9999 mem: storing 1198 in location 1510
9999 mem: storing 1204 in location 1511
9999 mem: storing 1 in location 1512
 105 run: editor <- add-operation editor, op
9999 mem: location 1378 is 1000
9999 mem: location 1396 is 1502
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1369
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1502 in location 1370
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1369 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1373
9999 mem: location 1010 is 0
9999 mem: location 1369 is 1000
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1371
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1370 is 1502
9999 mem: location 1371 is 1009
9999 mem: location 1009 is 1373
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1502 in location 1255
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1373 in location 1256
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: new alloc: 1513
9999 mem: storing 1513 in location 1257
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1257 is 1513
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1513 is 0
9999 mem: location 1514 is 0
9999 mem: location 1257 is 1513
9998 run: address to copy is 1513
9999 mem: storing 1513 in location 1258
 107 run: *val <- copy x
9999 mem: location 1255 is 1502
9999 mem: location 1258 is 1513
9999 mem: storing 1502 in location 1513
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1257 is 1513
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1513 is 1502
9999 mem: location 1514 is 0
9999 mem: location 1257 is 1513
9999 type: type deduced to be address$
9998 run: address to copy is 1514
9999 mem: storing 1514 in location 1259
 107 run: *next <- copy in
9999 mem: location 1256 is 1373
9999 mem: location 1259 is 1514
9999 mem: storing 1373 in location 1514
 107 run: reply result
9999 mem: location 1257 is 1513
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1513
9999 mem: location 1371 is 1009
9999 mem: storing 1513 in location 1009
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1369 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1513
9999 mem: location 1010 is 0
9999 mem: location 1369 is 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1372
 106 run: *redo <- copy 0
9999 mem: location 1372 is 1010
9999 mem: storing 0 in location 1010
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1369 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1378
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1377 is 1011
9999 mem: location 1378 is 1000
9999 mem: location 1383 is 1
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9998 run: result 1 is 1000
9998 run: result 2 is 1
9999 mem: storing 1011 in location 1327
9999 mem: storing 1000 in location 1329
9999 mem: storing 1 in location 1339
 104 run: jump-unless go-render?, 
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1327 is 1011
9999 mem: location 1329 is 1000
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1158
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1159
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1159 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1513
9999 mem: location 1010 is 0
9999 mem: location 1159 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1160
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1159 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1513
9999 mem: location 1010 is 0
9999 mem: location 1159 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1161
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1158 is 1011
9999 mem: location 1159 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1227
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1228
 106 run: jump-if editor, 1:offset
9999 mem: location 1228 is 1000
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1228 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1513
9999 mem: location 1010 is 0
9999 mem: location 1228 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1229
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1227 is 1011
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1181
 107 run: jump-unless screen, 
9999 mem: location 1181 is 1011
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1181 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1182
 107 run: reply height:number
9999 mem: location 1182 is 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1230
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1228 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1513
9999 mem: location 1010 is 0
9999 mem: location 1228 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1231
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1228 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1513
9999 mem: location 1010 is 0
9999 mem: location 1228 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1164
9999 mem: storing 1164 in location 1232
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1232 is 1164
9999 mem: storing 1164 in location 1233
 106 run: curr <- next_2 curr
9999 mem: location 1232 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1164
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 167
9999 mem: location 1165 is 1176
9999 mem: location 1166 is 0
9999 mem: location 1181 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1165 is 1176
9999 mem: storing 1176 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1176
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1232
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1234
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1235
 106 run: column:number <- copy left
9999 mem: location 1229 is 0
9999 mem: storing 0 in location 1236
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1228 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1513
9999 mem: location 1010 is 0
9999 mem: location 1228 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1237
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1228 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1513
9999 mem: location 1010 is 0
9999 mem: location 1228 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1238
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1228 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1513
9999 mem: location 1010 is 0
9999 mem: location 1228 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1239
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1227 is 1011
9999 mem: location 1235 is 1
9999 mem: location 1236 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1255
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1256
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1257
 107 run: jump-unless screen, 
9999 mem: location 1255 is 1011
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1255 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1255 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1258
 107 run: *row <- copy new-row
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1013
9999 mem: storing 1 in location 1013
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1255 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1255 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1259
 107 run: *column <- copy new-column
9999 mem: location 1257 is 0
9999 mem: location 1259 is 1014
9999 mem: storing 0 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1255 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1227
 106 run: jump-unless curr, 
9999 mem: location 1232 is 1176
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1235 is 1
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1240
 106 run: jump-if off-screen?, 
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1235 is 1
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1241
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1241 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1236 is 0
9999 mem: location 1238 is 1007
9999 mem: location 1007 is 7
9999 mem: storing 0 in location 1242
 106 run: jump-unless at-cursor?, 
9999 mem: location 1242 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1232 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 97
9999 mem: location 1177 is 1183
9999 mem: location 1178 is 1164
9999 mem: location 1232 is 1176
9998 run: address to copy is 1176
9998 run: its type is character
9999 mem: location 1176 is 97
9999 mem: storing 97 in location 1243
 106 run: color <- get-color color, c
9999 mem: location 1234 is 7
9999 mem: location 1243 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1515
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1518
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1518 is 97
9999 mem: storing 0 in location 1520
 107 run: jump-unless starting-comment?, 
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1518 is 97
9999 mem: storing 0 in location 1523
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless color-is-red?, 
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1517 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1234
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1243 is 97
9999 mem: storing 0 in location 1244
 106 run: jump-unless newline?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1236 is 0
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1246
 106 run: jump-unless at-right?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1227 is 1011
9999 mem: location 1243 is 97
9999 mem: location 1234 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 97
  90 print-character: 97 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 97
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1268 is 10
9999 mem: storing 10 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 10
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 10 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 97
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 10
9999 mem: storing 1037 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1037
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1281 is 1037
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 97
9999 mem: location 1282 is 1037
9999 mem: storing 97 in location 1037
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1037
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1281 is 1037
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1038
9999 mem: storing 7 in location 1038
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1272 is 1014
9999 mem: storing 1 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1232 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 97
9999 mem: location 1177 is 1183
9999 mem: location 1178 is 1164
9999 mem: location 1181 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1177 is 1183
9999 mem: storing 1183 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1183
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: storing 1183 in location 1232
 106 run: prev <- next_2 prev
9999 mem: location 1233 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1164
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 167
9999 mem: location 1165 is 1176
9999 mem: location 1166 is 0
9999 mem: location 1181 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1165 is 1176
9999 mem: storing 1176 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1176
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1233
 106 run: column <- add column, 1
9999 mem: location 1236 is 0
9999 mem: storing 1 in location 1236
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1232 is 1183
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1235 is 1
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1240
 106 run: jump-if off-screen?, 
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1235 is 1
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1241
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1241 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1236 is 1
9999 mem: location 1238 is 1007
9999 mem: location 1007 is 7
9999 mem: storing 0 in location 1242
 106 run: jump-unless at-cursor?, 
9999 mem: location 1242 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1232 is 1183
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 98
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1176
9999 mem: location 1232 is 1183
9998 run: address to copy is 1183
9998 run: its type is character
9999 mem: location 1183 is 98
9999 mem: storing 98 in location 1243
 106 run: color <- get-color color, c
9999 mem: location 1234 is 7
9999 mem: location 1243 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1518
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1518 is 98
9999 mem: storing 0 in location 1520
 107 run: jump-unless starting-comment?, 
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1518 is 98
9999 mem: storing 0 in location 1523
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless color-is-red?, 
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1517 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1234
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1243 is 98
9999 mem: storing 0 in location 1244
 106 run: jump-unless newline?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1236 is 1
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1246
 106 run: jump-unless at-right?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1227 is 1011
9999 mem: location 1243 is 98
9999 mem: location 1234 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 98
  90 print-character: 98 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 98
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1268 is 10
9999 mem: storing 10 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 10
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 11 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 98
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 11
9999 mem: storing 1039 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1039
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1281 is 1039
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 98
9999 mem: location 1282 is 1039
9999 mem: storing 98 in location 1039
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1039
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1281 is 1039
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1040
9999 mem: storing 7 in location 1040
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1272 is 1014
9999 mem: storing 2 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1232 is 1183
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1183
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1183
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 98
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1176
9999 mem: location 1181 is 1183
9999 type: type deduced to be character$
9998 run: address to copy is 1184
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1186
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1186
9999 mem: storing 1186 in location 1232
 106 run: prev <- next_2 prev
9999 mem: location 1233 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 97
9999 mem: location 1177 is 1183
9999 mem: location 1178 is 1164
9999 mem: location 1181 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1177 is 1183
9999 mem: storing 1183 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1183
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: storing 1183 in location 1233
 106 run: column <- add column, 1
9999 mem: location 1236 is 1
9999 mem: storing 2 in location 1236
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1232 is 1186
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1235 is 1
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1240
 106 run: jump-if off-screen?, 
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1235 is 1
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1241
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1241 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1236 is 2
9999 mem: location 1238 is 1007
9999 mem: location 1007 is 7
9999 mem: storing 0 in location 1242
 106 run: jump-unless at-cursor?, 
9999 mem: location 1242 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1232 is 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1186 is 99
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1232 is 1186
9998 run: address to copy is 1186
9998 run: its type is character
9999 mem: location 1186 is 99
9999 mem: storing 99 in location 1243
 106 run: color <- get-color color, c
9999 mem: location 1234 is 7
9999 mem: location 1243 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1518
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1518 is 99
9999 mem: storing 0 in location 1520
 107 run: jump-unless starting-comment?, 
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1518 is 99
9999 mem: storing 0 in location 1523
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless color-is-red?, 
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1517 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1234
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1243 is 99
9999 mem: storing 0 in location 1244
 106 run: jump-unless newline?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1236 is 2
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1246
 106 run: jump-unless at-right?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1227 is 1011
9999 mem: location 1243 is 99
9999 mem: location 1234 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 99
  90 print-character: 99 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 99
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1268 is 10
9999 mem: storing 10 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 10
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 12 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 99
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 12
9999 mem: storing 1041 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1041
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1281 is 1041
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 99
9999 mem: location 1282 is 1041
9999 mem: storing 99 in location 1041
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1041
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1281 is 1041
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1042
9999 mem: storing 7 in location 1042
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1272 is 1014
9999 mem: storing 3 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1232 is 1186
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1186
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1186 is 99
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1181 is 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1187
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1189
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: storing 1189 in location 1232
 106 run: prev <- next_2 prev
9999 mem: location 1233 is 1183
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1183
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1183
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 98
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1176
9999 mem: location 1181 is 1183
9999 type: type deduced to be character$
9998 run: address to copy is 1184
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1186
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1186
9999 mem: storing 1186 in location 1233
 106 run: column <- add column, 1
9999 mem: location 1236 is 2
9999 mem: storing 3 in location 1236
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1232 is 1189
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1235 is 1
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1240
 106 run: jump-if off-screen?, 
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1235 is 1
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1241
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1241 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1236 is 3
9999 mem: location 1238 is 1007
9999 mem: location 1007 is 7
9999 mem: storing 0 in location 1242
 106 run: jump-unless at-cursor?, 
9999 mem: location 1242 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1232 is 1189
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 32
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1232 is 1189
9998 run: address to copy is 1189
9998 run: its type is character
9999 mem: location 1189 is 32
9999 mem: storing 32 in location 1243
 106 run: color <- get-color color, c
9999 mem: location 1234 is 7
9999 mem: location 1243 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1518
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1518 is 32
9999 mem: storing 0 in location 1520
 107 run: jump-unless starting-comment?, 
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1518 is 32
9999 mem: storing 0 in location 1523
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless color-is-red?, 
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1517 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1234
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1243 is 32
9999 mem: storing 0 in location 1244
 106 run: jump-unless newline?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1236 is 3
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1246
 106 run: jump-unless at-right?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1227 is 1011
9999 mem: location 1243 is 32
9999 mem: location 1234 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1268 is 10
9999 mem: storing 10 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 10
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 13 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 13
9999 mem: storing 1043 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1281 is 1043
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1043
9999 mem: storing 32 in location 1043
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1281 is 1043
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1044
9999 mem: storing 7 in location 1044
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
9990 schedule: print/render/editor-render/editor-event-loop/run1001/scenario-editor-joins-and-wraps-lines-on-backspace
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1272 is 1014
9999 mem: storing 4 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1232 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1189
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1189
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 32
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1181 is 1189
9999 type: type deduced to be character$
9998 run: address to copy is 1190
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1192
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: storing 1192 in location 1232
 106 run: prev <- next_2 prev
9999 mem: location 1233 is 1186
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1186
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1186 is 99
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1181 is 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1187
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1189
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: storing 1189 in location 1233
 106 run: column <- add column, 1
9999 mem: location 1236 is 3
9999 mem: storing 4 in location 1236
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1232 is 1192
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1235 is 1
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1240
 106 run: jump-if off-screen?, 
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1235 is 1
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1241
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1241 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1236 is 4
9999 mem: location 1238 is 1007
9999 mem: location 1007 is 7
9999 mem: storing 0 in location 1242
 106 run: jump-unless at-cursor?, 
9999 mem: location 1242 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1232 is 1192
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1192 is 100
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1232 is 1192
9998 run: address to copy is 1192
9998 run: its type is character
9999 mem: location 1192 is 100
9999 mem: storing 100 in location 1243
 106 run: color <- get-color color, c
9999 mem: location 1234 is 7
9999 mem: location 1243 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1518
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1518 is 100
9999 mem: storing 0 in location 1520
 107 run: jump-unless starting-comment?, 
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1518 is 100
9999 mem: storing 0 in location 1523
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless color-is-red?, 
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1517 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1234
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1243 is 100
9999 mem: storing 0 in location 1244
 106 run: jump-unless newline?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1236 is 4
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1246
 106 run: jump-unless at-right?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1227 is 1011
9999 mem: location 1243 is 100
9999 mem: location 1234 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 100
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1268 is 10
9999 mem: storing 10 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 10
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 14 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 100
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 14
9999 mem: storing 1045 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1045
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1281 is 1045
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 100
9999 mem: location 1282 is 1045
9999 mem: storing 100 in location 1045
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1045
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1281 is 1045
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1046
9999 mem: storing 7 in location 1046
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1272 is 1014
9999 mem: storing 5 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1232 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1192
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1192
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1192 is 100
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1181 is 1192
9999 type: type deduced to be character$
9998 run: address to copy is 1193
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1195
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1232
 106 run: prev <- next_2 prev
9999 mem: location 1233 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1189
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1189
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 32
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1181 is 1189
9999 type: type deduced to be character$
9998 run: address to copy is 1190
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1192
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: storing 1192 in location 1233
 106 run: column <- add column, 1
9999 mem: location 1236 is 4
9999 mem: storing 5 in location 1236
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1232 is 1195
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1235 is 1
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1240
 106 run: jump-if off-screen?, 
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1235 is 1
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1241
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1241 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1236 is 5
9999 mem: location 1238 is 1007
9999 mem: location 1007 is 7
9999 mem: storing 0 in location 1242
 106 run: jump-unless at-cursor?, 
9999 mem: location 1242 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1232 is 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 101
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1192
9999 mem: location 1232 is 1195
9998 run: address to copy is 1195
9998 run: its type is character
9999 mem: location 1195 is 101
9999 mem: storing 101 in location 1243
 106 run: color <- get-color color, c
9999 mem: location 1234 is 7
9999 mem: location 1243 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1518
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1518 is 101
9999 mem: storing 0 in location 1520
 107 run: jump-unless starting-comment?, 
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1518 is 101
9999 mem: storing 0 in location 1523
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless color-is-red?, 
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1517 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1234
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1243 is 101
9999 mem: storing 0 in location 1244
 106 run: jump-unless newline?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1236 is 5
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1246
 106 run: jump-unless at-right?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1227 is 1011
9999 mem: location 1243 is 101
9999 mem: location 1234 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 101
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1268 is 10
9999 mem: storing 10 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 10
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: storing 15 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 101
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 15
9999 mem: storing 1047 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1047
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1281 is 1047
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 101
9999 mem: location 1282 is 1047
9999 mem: storing 101 in location 1047
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1047
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1281 is 1047
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1048
9999 mem: storing 7 in location 1048
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: location 1272 is 1014
9999 mem: storing 6 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1232 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1195
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 101
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1192
9999 mem: location 1181 is 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1198
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1232
 106 run: prev <- next_2 prev
9999 mem: location 1233 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1192
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1192
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1192 is 100
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1181 is 1192
9999 type: type deduced to be character$
9998 run: address to copy is 1193
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1195
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1233
 106 run: column <- add column, 1
9999 mem: location 1236 is 5
9999 mem: storing 6 in location 1236
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1232 is 1198
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1235 is 1
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1240
 106 run: jump-if off-screen?, 
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1235 is 1
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1241
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1241 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1236 is 6
9999 mem: location 1238 is 1007
9999 mem: location 1007 is 7
9999 mem: storing 0 in location 1242
 106 run: jump-unless at-cursor?, 
9999 mem: location 1242 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1232 is 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 102
9999 mem: location 1199 is 1204
9999 mem: location 1200 is 1195
9999 mem: location 1232 is 1198
9998 run: address to copy is 1198
9998 run: its type is character
9999 mem: location 1198 is 102
9999 mem: storing 102 in location 1243
 106 run: color <- get-color color, c
9999 mem: location 1234 is 7
9999 mem: location 1243 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1518
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1518 is 102
9999 mem: storing 0 in location 1520
 107 run: jump-unless starting-comment?, 
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1518 is 102
9999 mem: storing 0 in location 1523
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless color-is-red?, 
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1517 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1234
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1243 is 102
9999 mem: storing 0 in location 1244
 106 run: jump-unless newline?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1236 is 6
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1246
 106 run: jump-unless at-right?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1227 is 1011
9999 mem: location 1243 is 102
9999 mem: location 1234 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 102
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1268 is 10
9999 mem: storing 10 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 10
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: storing 16 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 102
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 16
9999 mem: storing 1049 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1049
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1281 is 1049
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 102
9999 mem: location 1282 is 1049
9999 mem: storing 102 in location 1049
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1049
9999 mem: location 1049 is 102
9999 mem: location 1050 is 7
9999 mem: location 1281 is 1049
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1050
9999 mem: storing 7 in location 1050
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: location 1272 is 1014
9999 mem: storing 7 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1232 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1198
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 102
9999 mem: location 1199 is 1204
9999 mem: location 1200 is 1195
9999 mem: location 1181 is 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1199
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1199 is 1204
9999 mem: storing 1204 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1204
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: storing 1204 in location 1232
 106 run: prev <- next_2 prev
9999 mem: location 1233 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1195
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1195
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 101
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1192
9999 mem: location 1181 is 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1198
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1233
 106 run: column <- add column, 1
9999 mem: location 1236 is 6
9999 mem: storing 7 in location 1236
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1232 is 1204
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1235 is 1
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1240
 106 run: jump-if off-screen?, 
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1235 is 1
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1241
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1241 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1236 is 7
9999 mem: location 1238 is 1007
9999 mem: location 1007 is 7
9999 mem: storing 1 in location 1242
 106 run: jump-unless at-cursor?, 
9999 mem: location 1242 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1233 is 1198
9999 mem: location 1239 is 1003
9999 mem: storing 1198 in location 1003
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1232 is 1204
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 103
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1198
9999 mem: location 1232 is 1204
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 103
9999 mem: storing 103 in location 1243
 106 run: color <- get-color color, c
9999 mem: location 1234 is 7
9999 mem: location 1243 is 103
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1518
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1518 is 103
9999 mem: storing 0 in location 1520
 107 run: jump-unless starting-comment?, 
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1518 is 103
9999 mem: storing 0 in location 1523
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless color-is-red?, 
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1517 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1234
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1243 is 103
9999 mem: storing 0 in location 1244
 106 run: jump-unless newline?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1236 is 7
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1246
 106 run: jump-unless at-right?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1227 is 1011
9999 mem: location 1243 is 103
9999 mem: location 1234 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 103
  90 print-character: 103 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 103
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1268 is 10
9999 mem: storing 10 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 10
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: storing 17 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 103
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 17
9999 mem: storing 1051 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1281 is 1051
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 103
9999 mem: location 1282 is 1051
9999 mem: storing 103 in location 1051
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1051
9999 mem: location 1051 is 103
9999 mem: location 1052 is 7
9999 mem: location 1281 is 1051
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1052
9999 mem: storing 7 in location 1052
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: location 1272 is 1014
9999 mem: storing 8 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1232 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1204
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1204
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 103
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1198
9999 mem: location 1181 is 1204
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1207
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1232
 106 run: prev <- next_2 prev
9999 mem: location 1233 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1198
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 102
9999 mem: location 1199 is 1204
9999 mem: location 1200 is 1195
9999 mem: location 1181 is 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1199
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1199 is 1204
9999 mem: storing 1204 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1204
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: storing 1204 in location 1233
 106 run: column <- add column, 1
9999 mem: location 1236 is 7
9999 mem: storing 8 in location 1236
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1232 is 1207
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1235 is 1
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1240
 106 run: jump-if off-screen?, 
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1235 is 1
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1241
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1241 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1236 is 8
9999 mem: location 1238 is 1007
9999 mem: location 1007 is 7
9999 mem: storing 0 in location 1242
 106 run: jump-unless at-cursor?, 
9999 mem: location 1242 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1232 is 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 104
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1204
9999 mem: location 1232 is 1207
9998 run: address to copy is 1207
9998 run: its type is character
9999 mem: location 1207 is 104
9999 mem: storing 104 in location 1243
 106 run: color <- get-color color, c
9999 mem: location 1234 is 7
9999 mem: location 1243 is 104
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1518
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1518 is 104
9999 mem: storing 0 in location 1520
 107 run: jump-unless starting-comment?, 
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1518 is 104
9999 mem: storing 0 in location 1523
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless color-is-red?, 
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1517 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1234
9990 schedule: render/editor-render/editor-event-loop/run1001/scenario-editor-joins-and-wraps-lines-on-backspace
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1243 is 104
9999 mem: storing 0 in location 1244
 106 run: jump-unless newline?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1236 is 8
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1246
 106 run: jump-unless at-right?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1227 is 1011
9999 mem: location 1243 is 104
9999 mem: location 1234 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 104
  90 print-character: 104 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 104
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1268 is 10
9999 mem: storing 10 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 10
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: storing 18 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 104
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 18
9999 mem: storing 1053 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1281 is 1053
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 104
9999 mem: location 1282 is 1053
9999 mem: storing 104 in location 1053
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1053
9999 mem: location 1053 is 104
9999 mem: location 1054 is 7
9999 mem: location 1281 is 1053
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1054
9999 mem: storing 7 in location 1054
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: location 1272 is 1014
9999 mem: storing 9 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1232 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 104
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1204
9999 mem: location 1181 is 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1208
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1210
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1210
9999 mem: storing 1210 in location 1232
 106 run: prev <- next_2 prev
9999 mem: location 1233 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1204
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1204
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 103
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1198
9999 mem: location 1181 is 1204
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1207
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1233
 106 run: column <- add column, 1
9999 mem: location 1236 is 8
9999 mem: storing 9 in location 1236
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1232 is 1210
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1235 is 1
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1240
 106 run: jump-if off-screen?, 
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1235 is 1
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1241
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1241 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1236 is 9
9999 mem: location 1238 is 1007
9999 mem: location 1007 is 7
9999 mem: storing 0 in location 1242
 106 run: jump-unless at-cursor?, 
9999 mem: location 1242 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1232 is 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1210 is 105
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1207
9999 mem: location 1232 is 1210
9998 run: address to copy is 1210
9998 run: its type is character
9999 mem: location 1210 is 105
9999 mem: storing 105 in location 1243
 106 run: color <- get-color color, c
9999 mem: location 1234 is 7
9999 mem: location 1243 is 105
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1518
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1518 is 105
9999 mem: storing 0 in location 1520
 107 run: jump-unless starting-comment?, 
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1518 is 105
9999 mem: storing 0 in location 1523
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless color-is-red?, 
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1517 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1234
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1243 is 105
9999 mem: storing 0 in location 1244
 106 run: jump-unless newline?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1236 is 9
9999 mem: location 1231 is 9
9999 mem: storing 1 in location 1246
 106 run: jump-unless at-right?, 
9999 mem: location 1246 is 1
9998 run: jump-unless fell through
 106 run: wrap-icon:character <- copy 8617/loop-back-to-left
9999 mem: storing 8617 in location 1247
 106 run: print screen, wrap-icon, 245/grey
9999 mem: location 1227 is 1011
9999 mem: location 1247 is 8617
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 8617
  90 print-character: 8617 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 9
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 9
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 8617
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1268 is 10
9999 mem: storing 10 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 10
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 9
9999 mem: storing 19 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 8617
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 19
9999 mem: storing 1055 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1055
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1281 is 1055
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 8617
9999 mem: location 1282 is 1055
9999 mem: storing 8617 in location 1055
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1055
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 7
9999 mem: location 1281 is 1055
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 245
9999 mem: location 1283 is 1056
9999 mem: storing 245 in location 1056
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 9
9999 mem: location 1284 is 9
9999 mem: storing 1 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- copy left
9999 mem: location 1229 is 0
9999 mem: storing 0 in location 1236
 106 run: row <- add row, 1
9999 mem: location 1235 is 1
9999 mem: storing 2 in location 1235
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1227 is 1011
9999 mem: location 1235 is 2
9999 mem: location 1236 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1255
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1256
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1257
 107 run: jump-unless screen, 
9999 mem: location 1255 is 1011
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1255 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1255 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1258
 107 run: *row <- copy new-row
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1013
9999 mem: storing 2 in location 1013
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1255 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1255 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1259
 107 run: *column <- copy new-column
9999 mem: location 1257 is 0
9999 mem: location 1259 is 1014
9999 mem: storing 0 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1255 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1227
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1232 is 1210
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1235 is 2
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1240
 106 run: jump-if off-screen?, 
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1235 is 2
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1241
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1241 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1232 is 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1210 is 105
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1207
9999 mem: location 1232 is 1210
9998 run: address to copy is 1210
9998 run: its type is character
9999 mem: location 1210 is 105
9999 mem: storing 105 in location 1243
 106 run: color <- get-color color, c
9999 mem: location 1234 is 7
9999 mem: location 1243 is 105
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1518
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1518 is 105
9999 mem: storing 0 in location 1520
 107 run: jump-unless starting-comment?, 
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1518 is 105
9999 mem: storing 0 in location 1523
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless color-is-red?, 
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1517 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1234
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1243 is 105
9999 mem: storing 0 in location 1244
 106 run: jump-unless newline?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1236 is 0
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1246
 106 run: jump-unless at-right?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1227 is 1011
9999 mem: location 1243 is 105
9999 mem: location 1234 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 105
  90 print-character: 105 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 105
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1268 is 10
9999 mem: storing 20 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 20
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 20 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 105
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 20
9999 mem: storing 1057 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1057
9999 mem: location 1057 is 103
9999 mem: location 1058 is 7
9999 mem: location 1281 is 1057
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 105
9999 mem: location 1282 is 1057
9999 mem: storing 105 in location 1057
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1057
9999 mem: location 1057 is 105
9999 mem: location 1058 is 7
9999 mem: location 1281 is 1057
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1058
9999 mem: storing 7 in location 1058
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1272 is 1014
9999 mem: storing 1 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1232 is 1210
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1210
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1210 is 105
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1207
9999 mem: location 1181 is 1210
9999 type: type deduced to be character$
9998 run: address to copy is 1211
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1213
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: storing 1213 in location 1232
 106 run: prev <- next_2 prev
9999 mem: location 1233 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 104
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1204
9999 mem: location 1181 is 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1208
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1210
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1210
9999 mem: storing 1210 in location 1233
 106 run: column <- add column, 1
9999 mem: location 1236 is 0
9999 mem: storing 1 in location 1236
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1232 is 1213
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1235 is 2
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1240
 106 run: jump-if off-screen?, 
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1235 is 2
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1241
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1241 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1232 is 1213
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1213 is 32
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1210
9999 mem: location 1232 is 1213
9998 run: address to copy is 1213
9998 run: its type is character
9999 mem: location 1213 is 32
9999 mem: storing 32 in location 1243
 106 run: color <- get-color color, c
9999 mem: location 1234 is 7
9999 mem: location 1243 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1518
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1518 is 32
9999 mem: storing 0 in location 1520
 107 run: jump-unless starting-comment?, 
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1518 is 32
9999 mem: storing 0 in location 1523
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless color-is-red?, 
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1517 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1234
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1243 is 32
9999 mem: storing 0 in location 1244
 106 run: jump-unless newline?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1236 is 1
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1246
 106 run: jump-unless at-right?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1227 is 1011
9999 mem: location 1243 is 32
9999 mem: location 1234 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1268 is 10
9999 mem: storing 20 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 20
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 21 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 21
9999 mem: storing 1059 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1059
9999 mem: location 1059 is 104
9999 mem: location 1060 is 7
9999 mem: location 1281 is 1059
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1059
9999 mem: storing 32 in location 1059
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1281 is 1059
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1060
9999 mem: storing 7 in location 1060
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1272 is 1014
9999 mem: storing 2 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1232 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1213
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1213
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1213 is 32
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1210
9999 mem: location 1181 is 1213
9999 type: type deduced to be character$
9998 run: address to copy is 1214
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1216
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: storing 1216 in location 1232
 106 run: prev <- next_2 prev
9999 mem: location 1233 is 1210
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1210
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1210 is 105
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1207
9999 mem: location 1181 is 1210
9999 type: type deduced to be character$
9998 run: address to copy is 1211
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1213
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: storing 1213 in location 1233
 106 run: column <- add column, 1
9999 mem: location 1236 is 1
9999 mem: storing 2 in location 1236
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1232 is 1216
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1235 is 2
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1240
 106 run: jump-if off-screen?, 
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1235 is 2
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1241
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1241 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1232 is 1216
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 106
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1213
9999 mem: location 1232 is 1216
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 106
9999 mem: storing 106 in location 1243
 106 run: color <- get-color color, c
9999 mem: location 1234 is 7
9999 mem: location 1243 is 106
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 106 in location 1518
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1518 is 106
9999 mem: storing 0 in location 1520
 107 run: jump-unless starting-comment?, 
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1518 is 106
9999 mem: storing 0 in location 1523
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless color-is-red?, 
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1517 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1234
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1243 is 106
9999 mem: storing 0 in location 1244
 106 run: jump-unless newline?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1236 is 2
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1246
 106 run: jump-unless at-right?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1227 is 1011
9999 mem: location 1243 is 106
9999 mem: location 1234 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 106 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 106
  90 print-character: 106 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 106
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1268 is 10
9999 mem: storing 20 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 20
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 22 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 106
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 22
9999 mem: storing 1061 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1061
9999 mem: location 1061 is 105
9999 mem: location 1062 is 7
9999 mem: location 1281 is 1061
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 106
9999 mem: location 1282 is 1061
9999 mem: storing 106 in location 1061
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1061
9999 mem: location 1061 is 106
9999 mem: location 1062 is 7
9999 mem: location 1281 is 1061
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1062
9999 mem: storing 7 in location 1062
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1272 is 1014
9999 mem: storing 3 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1232 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1181
9990 schedule: next_2/render/editor-render/editor-event-loop/run1001/scenario-editor-joins-and-wraps-lines-on-backspace
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1216
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1216
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 106
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1213
9999 mem: location 1181 is 1216
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1219
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: storing 1219 in location 1232
 106 run: prev <- next_2 prev
9999 mem: location 1233 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1213
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1213
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1213 is 32
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1210
9999 mem: location 1181 is 1213
9999 type: type deduced to be character$
9998 run: address to copy is 1214
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1216
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: storing 1216 in location 1233
 106 run: column <- add column, 1
9999 mem: location 1236 is 2
9999 mem: storing 3 in location 1236
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1232 is 1219
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1235 is 2
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1240
 106 run: jump-if off-screen?, 
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1235 is 2
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1241
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1241 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1232 is 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1219 is 107
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1216
9999 mem: location 1232 is 1219
9998 run: address to copy is 1219
9998 run: its type is character
9999 mem: location 1219 is 107
9999 mem: storing 107 in location 1243
 106 run: color <- get-color color, c
9999 mem: location 1234 is 7
9999 mem: location 1243 is 107
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 107 in location 1518
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1518 is 107
9999 mem: storing 0 in location 1520
 107 run: jump-unless starting-comment?, 
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1518 is 107
9999 mem: storing 0 in location 1523
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless color-is-red?, 
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1517 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1234
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1243 is 107
9999 mem: storing 0 in location 1244
 106 run: jump-unless newline?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1236 is 3
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1246
 106 run: jump-unless at-right?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1227 is 1011
9999 mem: location 1243 is 107
9999 mem: location 1234 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 107 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 107
  90 print-character: 107 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 107
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1268 is 10
9999 mem: storing 20 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 20
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 23 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 107
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 23
9999 mem: storing 1063 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1281 is 1063
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 107
9999 mem: location 1282 is 1063
9999 mem: storing 107 in location 1063
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1063
9999 mem: location 1063 is 107
9999 mem: location 1064 is 7
9999 mem: location 1281 is 1063
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1064
9999 mem: storing 7 in location 1064
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1272 is 1014
9999 mem: storing 4 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1232 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1219 is 107
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1216
9999 mem: location 1181 is 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1220
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1220 is 1222
9999 mem: storing 1222 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1222
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1222
9999 mem: storing 1222 in location 1232
 106 run: prev <- next_2 prev
9999 mem: location 1233 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1216
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1216
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 106
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1213
9999 mem: location 1181 is 1216
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1219
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: storing 1219 in location 1233
 106 run: column <- add column, 1
9999 mem: location 1236 is 3
9999 mem: storing 4 in location 1236
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1232 is 1222
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1235 is 2
9999 mem: location 1230 is 5
9999 mem: storing 0 in location 1240
 106 run: jump-if off-screen?, 
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1235 is 2
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1241
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1241 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1232 is 1222
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1222 is 108
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1219
9999 mem: location 1232 is 1222
9998 run: address to copy is 1222
9998 run: its type is character
9999 mem: location 1222 is 108
9999 mem: storing 108 in location 1243
 106 run: color <- get-color color, c
9999 mem: location 1234 is 7
9999 mem: location 1243 is 108
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 108 in location 1518
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1518 is 108
9999 mem: storing 0 in location 1520
 107 run: jump-unless starting-comment?, 
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1518 is 108
9999 mem: storing 0 in location 1523
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless color-is-red?, 
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1517 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1234
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1243 is 108
9999 mem: storing 0 in location 1244
 106 run: jump-unless newline?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1236 is 4
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1246
 106 run: jump-unless at-right?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1227 is 1011
9999 mem: location 1243 is 108
9999 mem: location 1234 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 108 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 108
  90 print-character: 108 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 108
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1268 is 10
9999 mem: storing 20 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 20
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 24 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 108
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 24
9999 mem: storing 1065 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1065
9999 mem: location 1065 is 106
9999 mem: location 1066 is 7
9999 mem: location 1281 is 1065
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 108
9999 mem: location 1282 is 1065
9999 mem: storing 108 in location 1065
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1065
9999 mem: location 1065 is 108
9999 mem: location 1066 is 7
9999 mem: location 1281 is 1065
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1066
9999 mem: storing 7 in location 1066
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1272 is 1014
9999 mem: storing 5 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1232 is 1222
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1222
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1222
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1222 is 108
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1219
9999 mem: location 1181 is 1222
9999 type: type deduced to be character$
9998 run: address to copy is 1223
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1223 is 0
9999 mem: storing 0 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1232
 106 run: prev <- next_2 prev
9999 mem: location 1233 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1181
 107 run: jump-if in, 1:offset
9999 mem: location 1181 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1181 is 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1219 is 107
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1216
9999 mem: location 1181 is 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1220
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1220 is 1222
9999 mem: storing 1222 in location 1182
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1182 is 1222
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1222
9999 mem: storing 1222 in location 1233
 106 run: column <- add column, 1
9999 mem: location 1236 is 4
9999 mem: storing 5 in location 1236
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1232 is 0
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1228 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1513
9999 mem: location 1010 is 0
9999 mem: location 1228 is 1000
9998 run: address to copy is 1002
9999 mem: storing 1002 in location 1248
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1232 is 0
9999 mem: location 1248 is 1002
9999 mem: storing 0 in location 1002
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1235 is 2
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1241
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1236 is 5
9999 mem: location 1238 is 1007
9999 mem: location 1007 is 7
9999 mem: storing 1 in location 1249
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1241 is 0
9999 mem: location 1249 is 1
9999 mem: storing 0 in location 1250
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1235 is 2
9999 mem: location 1237 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1251
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: storing 0 in location 1252
 106 run: jump-unless before-cursor?, 
9999 mem: location 1252 is 0
9998 run: jumping to instruction 81
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1235 is 2
9999 mem: location 1236 is 5
9999 mem: location 1227 is 1011
9999 mem: location 1228 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 2
9998 run: result 1 is 5
9999 mem: storing 2 in location 1162
9999 mem: storing 5 in location 1163
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1158 is 1011
9999 mem: location 1163 is 5
9999 mem: location 1161 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1255
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1256
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1257
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1258
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 5
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1259
 106 run: jump-if done?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1255 is 1011
9999 mem: location 1258 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1264
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1268 is 10
9999 mem: storing 20 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 20
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: storing 25 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 25
9999 mem: storing 1067 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1067
9999 mem: location 1067 is 107
9999 mem: location 1068 is 7
9999 mem: location 1281 is 1067
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1067
9999 mem: storing 32 in location 1067
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1067
9999 mem: location 1067 is 32
9999 mem: location 1068 is 7
9999 mem: location 1281 is 1067
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1068
9999 mem: storing 7 in location 1068
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: location 1272 is 1014
9999 mem: storing 6 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1255
 106 run: column <- add column, 1
9999 mem: location 1256 is 5
9999 mem: storing 6 in location 1256
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 6
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1259
 106 run: jump-if done?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1255 is 1011
9999 mem: location 1258 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1264
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1268 is 10
9999 mem: storing 20 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 20
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: storing 26 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 26
9999 mem: storing 1069 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1069
9999 mem: location 1069 is 108
9999 mem: location 1070 is 7
9999 mem: location 1281 is 1069
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1069
9999 mem: storing 32 in location 1069
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1069
9999 mem: location 1069 is 32
9999 mem: location 1070 is 7
9999 mem: location 1281 is 1069
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1070
9999 mem: storing 7 in location 1070
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: location 1272 is 1014
9999 mem: storing 7 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1255
 106 run: column <- add column, 1
9999 mem: location 1256 is 6
9999 mem: storing 7 in location 1256
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 7
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1259
 106 run: jump-if done?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1255 is 1011
9999 mem: location 1258 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1264
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1268 is 10
9999 mem: storing 20 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 20
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: storing 27 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 27
9999 mem: storing 1071 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1071
9999 mem: location 1071 is 32
9999 mem: location 1072 is 7
9999 mem: location 1281 is 1071
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1071
9999 mem: storing 32 in location 1071
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1071
9999 mem: location 1071 is 32
9999 mem: location 1072 is 7
9999 mem: location 1281 is 1071
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1072
9999 mem: storing 7 in location 1072
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: location 1272 is 1014
9999 mem: storing 8 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1255
 106 run: column <- add column, 1
9999 mem: location 1256 is 7
9999 mem: storing 8 in location 1256
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 8
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1259
 106 run: jump-if done?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1255 is 1011
9999 mem: location 1258 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1264
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1268 is 10
9999 mem: storing 20 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 20
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: storing 28 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 28
9999 mem: storing 1073 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1073
9999 mem: location 1073 is 32
9999 mem: location 1074 is 7
9999 mem: location 1281 is 1073
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1073
9999 mem: storing 32 in location 1073
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1073
9999 mem: location 1073 is 32
9999 mem: location 1074 is 7
9999 mem: location 1281 is 1073
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1074
9999 mem: storing 7 in location 1074
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: location 1272 is 1014
9999 mem: storing 9 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1255
 106 run: column <- add column, 1
9999 mem: location 1256 is 8
9999 mem: storing 9 in location 1256
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 9
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1259
 106 run: jump-if done?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1255 is 1011
9999 mem: location 1258 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1264
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run1001/scenario-editor-joins-and-wraps-lines-on-backspace
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 9
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 9
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1268 is 10
9999 mem: storing 20 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 20
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 9
9999 mem: storing 29 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 29
9999 mem: storing 1075 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1075
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1281 is 1075
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1075
9999 mem: storing 32 in location 1075
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1075
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1281 is 1075
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1076
9999 mem: storing 7 in location 1076
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 9
9999 mem: location 1284 is 9
9999 mem: storing 1 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1255
 106 run: column <- add column, 1
9999 mem: location 1256 is 9
9999 mem: storing 10 in location 1256
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 10
9999 mem: location 1257 is 9
9999 mem: storing 1 in location 1259
 106 run: jump-if done?, 
9999 mem: location 1259 is 1
9998 run: jumping to instruction 11
 106 run: reply screen:address:shared:screen
9999 mem: location 1255 is 1011
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1162 is 2
9999 mem: storing 3 in location 1162
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1158 is 1011
9999 mem: location 1162 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1288
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1289
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1290
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1291
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if style-found?, 
9999 mem: location 1293 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 106 run: jump-if color-found?, 
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1294
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1296
9999 mem: storing 0 in location 1297
 106 run: jump-if bg-color-found?, 
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1296
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1288 is 1011
9999 mem: location 1289 is 3
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1255
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1256
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1257
 107 run: jump-unless screen, 
9999 mem: location 1255 is 1011
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1255 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 2
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1255 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1258
 107 run: *row <- copy new-row
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1013
9999 mem: storing 3 in location 1013
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1255 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1255 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1259
 107 run: *column <- copy new-column
9999 mem: location 1257 is 0
9999 mem: location 1259 is 1014
9999 mem: storing 0 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1255 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1288
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1290 is 0
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1298
 106 run: jump-unless continue?, 
9999 mem: location 1298 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1288 is 1011
9999 mem: location 1292 is 9480
9999 mem: location 1294 is 245
9999 mem: location 1296 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1268 is 10
9999 mem: storing 30 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 30
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 30 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 30
9999 mem: storing 1077 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1077
9999 mem: location 1077 is 9480
9999 mem: location 1078 is 245
9999 mem: location 1281 is 1077
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 9480
9999 mem: location 1282 is 1077
9999 mem: storing 9480 in location 1077
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1077
9999 mem: location 1077 is 9480
9999 mem: location 1078 is 245
9999 mem: location 1281 is 1077
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 245
9999 mem: location 1283 is 1078
9999 mem: storing 245 in location 1078
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1272 is 1014
9999 mem: storing 1 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1290 is 0
9999 mem: storing 1 in location 1290
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1290 is 1
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1298
 106 run: jump-unless continue?, 
9999 mem: location 1298 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1288 is 1011
9999 mem: location 1292 is 9480
9999 mem: location 1294 is 245
9999 mem: location 1296 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1268 is 10
9999 mem: storing 30 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 30
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 31 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 31
9999 mem: storing 1079 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1079
9999 mem: location 1079 is 9480
9999 mem: location 1080 is 245
9999 mem: location 1281 is 1079
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 9480
9999 mem: location 1282 is 1079
9999 mem: storing 9480 in location 1079
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1079
9999 mem: location 1079 is 9480
9999 mem: location 1080 is 245
9999 mem: location 1281 is 1079
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 245
9999 mem: location 1283 is 1080
9999 mem: storing 245 in location 1080
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1272 is 1014
9999 mem: storing 2 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1290 is 1
9999 mem: storing 2 in location 1290
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1290 is 2
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1298
 106 run: jump-unless continue?, 
9999 mem: location 1298 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1288 is 1011
9999 mem: location 1292 is 9480
9999 mem: location 1294 is 245
9999 mem: location 1296 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1268 is 10
9999 mem: storing 30 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 30
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 32 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 32
9999 mem: storing 1081 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1081
9999 mem: location 1081 is 9480
9999 mem: location 1082 is 245
9999 mem: location 1281 is 1081
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 9480
9999 mem: location 1282 is 1081
9999 mem: storing 9480 in location 1081
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1081
9999 mem: location 1081 is 9480
9999 mem: location 1082 is 245
9999 mem: location 1281 is 1081
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 245
9999 mem: location 1283 is 1082
9999 mem: storing 245 in location 1082
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1272 is 1014
9999 mem: storing 3 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1290 is 2
9999 mem: storing 3 in location 1290
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1290 is 3
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1298
 106 run: jump-unless continue?, 
9999 mem: location 1298 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1288 is 1011
9999 mem: location 1292 is 9480
9999 mem: location 1294 is 245
9999 mem: location 1296 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1268 is 10
9999 mem: storing 30 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 30
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 33 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 33
9999 mem: storing 1083 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1083
9999 mem: location 1083 is 9480
9999 mem: location 1084 is 245
9999 mem: location 1281 is 1083
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 9480
9999 mem: location 1282 is 1083
9999 mem: storing 9480 in location 1083
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1083
9999 mem: location 1083 is 9480
9999 mem: location 1084 is 245
9999 mem: location 1281 is 1083
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 245
9999 mem: location 1283 is 1084
9999 mem: storing 245 in location 1084
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1272 is 1014
9999 mem: storing 4 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1290 is 3
9999 mem: storing 4 in location 1290
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1290 is 4
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1298
 106 run: jump-unless continue?, 
9999 mem: location 1298 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1288 is 1011
9999 mem: location 1292 is 9480
9999 mem: location 1294 is 245
9999 mem: location 1296 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1268 is 10
9999 mem: storing 30 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 30
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 34 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 34
9999 mem: storing 1085 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1085
9999 mem: location 1085 is 9480
9999 mem: location 1086 is 245
9999 mem: location 1281 is 1085
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 9480
9999 mem: location 1282 is 1085
9999 mem: storing 9480 in location 1085
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1085
9999 mem: location 1085 is 9480
9999 mem: location 1086 is 245
9999 mem: location 1281 is 1085
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 245
9999 mem: location 1283 is 1086
9999 mem: storing 245 in location 1086
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1272 is 1014
9999 mem: storing 5 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1290 is 4
9999 mem: storing 5 in location 1290
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1290 is 5
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1298
 106 run: jump-unless continue?, 
9999 mem: location 1298 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1288 is 1011
9999 mem: location 1292 is 9480
9999 mem: location 1294 is 245
9999 mem: location 1296 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1268 is 10
9999 mem: storing 30 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 30
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: storing 35 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 35
9999 mem: storing 1087 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1087
9999 mem: location 1087 is 9480
9999 mem: location 1088 is 245
9999 mem: location 1281 is 1087
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 9480
9999 mem: location 1282 is 1087
9999 mem: storing 9480 in location 1087
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1087
9999 mem: location 1087 is 9480
9999 mem: location 1088 is 245
9999 mem: location 1281 is 1087
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 245
9999 mem: location 1283 is 1088
9999 mem: storing 245 in location 1088
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: location 1272 is 1014
9999 mem: storing 6 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1290 is 5
9999 mem: storing 6 in location 1290
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1290 is 6
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1298
 106 run: jump-unless continue?, 
9999 mem: location 1298 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1288 is 1011
9999 mem: location 1292 is 9480
9999 mem: location 1294 is 245
9999 mem: location 1296 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1268 is 10
9999 mem: storing 30 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 30
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: storing 36 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 36
9999 mem: storing 1089 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1089
9999 mem: location 1089 is 9480
9999 mem: location 1090 is 245
9999 mem: location 1281 is 1089
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 9480
9999 mem: location 1282 is 1089
9999 mem: storing 9480 in location 1089
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1089
9999 mem: location 1089 is 9480
9999 mem: location 1090 is 245
9999 mem: location 1281 is 1089
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 245
9999 mem: location 1283 is 1090
9999 mem: storing 245 in location 1090
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: location 1272 is 1014
9999 mem: storing 7 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1290 is 6
9999 mem: storing 7 in location 1290
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1290 is 7
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1298
 106 run: jump-unless continue?, 
9999 mem: location 1298 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1288 is 1011
9999 mem: location 1292 is 9480
9999 mem: location 1294 is 245
9999 mem: location 1296 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1268 is 10
9999 mem: storing 30 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 30
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: storing 37 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 37
9999 mem: storing 1091 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1091
9999 mem: location 1091 is 9480
9999 mem: location 1092 is 245
9999 mem: location 1281 is 1091
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1282
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run1001/scenario-editor-joins-and-wraps-lines-on-backspace
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 9480
9999 mem: location 1282 is 1091
9999 mem: storing 9480 in location 1091
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1091
9999 mem: location 1091 is 9480
9999 mem: location 1092 is 245
9999 mem: location 1281 is 1091
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 245
9999 mem: location 1283 is 1092
9999 mem: storing 245 in location 1092
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: location 1272 is 1014
9999 mem: storing 8 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1290 is 7
9999 mem: storing 8 in location 1290
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1290 is 8
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1298
 106 run: jump-unless continue?, 
9999 mem: location 1298 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1288 is 1011
9999 mem: location 1292 is 9480
9999 mem: location 1294 is 245
9999 mem: location 1296 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1268 is 10
9999 mem: storing 30 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 30
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: storing 38 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 38
9999 mem: storing 1093 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1093
9999 mem: location 1093 is 9480
9999 mem: location 1094 is 245
9999 mem: location 1281 is 1093
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 9480
9999 mem: location 1282 is 1093
9999 mem: storing 9480 in location 1093
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1093
9999 mem: location 1093 is 9480
9999 mem: location 1094 is 245
9999 mem: location 1281 is 1093
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 245
9999 mem: location 1283 is 1094
9999 mem: storing 245 in location 1094
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: location 1272 is 1014
9999 mem: storing 9 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1290 is 8
9999 mem: storing 9 in location 1290
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1290 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1298
 106 run: jump-unless continue?, 
9999 mem: location 1298 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1288 is 1011
9999 mem: location 1292 is 9480
9999 mem: location 1294 is 245
9999 mem: location 1296 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1263
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if color-found?, 
9999 mem: location 1265 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1263 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 9
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 9
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 107 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1273
 107 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1268 is 10
9999 mem: storing 30 in location 1276
 107 run: index <- add index, *column
9999 mem: location 1276 is 30
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 9
9999 mem: storing 39 in location 1276
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 107 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 9480
9999 mem: storing 0 in location 1279
 107 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 39
9999 mem: storing 1095 in location 1281
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1095
9999 mem: location 1095 is 9480
9999 mem: location 1096 is 245
9999 mem: location 1281 is 1095
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1282
 107 run: *cursor-contents <- copy c
9999 mem: location 1263 is 9480
9999 mem: location 1282 is 1095
9999 mem: storing 9480 in location 1095
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1095
9999 mem: location 1095 is 9480
9999 mem: location 1096 is 245
9999 mem: location 1281 is 1095
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1283
 107 run: *cursor-color <- copy color
9999 mem: location 1264 is 245
9999 mem: location 1283 is 1096
9999 mem: storing 245 in location 1096
 107 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 9
9999 mem: location 1284 is 9
9999 mem: storing 1 in location 1285
 107 run: jump-if at-right?, 
9999 mem: location 1285 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1290 is 9
9999 mem: storing 10 in location 1290
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1290 is 10
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1298
 106 run: jump-unless continue?, 
9999 mem: location 1298 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:shared:screen
9999 mem: location 1288 is 1011
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1162 is 3
9999 mem: storing 4 in location 1162
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1158 is 1011
9999 mem: location 1162 is 4
9999 mem: location 1160 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1255
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1256
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1257
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1259
 106 run: jump-if screen, 
9999 mem: location 1255 is 1011
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1255 is 1011
9999 mem: location 1256 is 4
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1301
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1302
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1303
 107 run: jump-unless screen, 
9999 mem: location 1301 is 1011
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1301 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 3
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1301 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1304
 107 run: *row <- copy new-row
9999 mem: location 1302 is 4
9999 mem: location 1304 is 1013
9999 mem: storing 4 in location 1013
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1301 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1301 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1305
 107 run: *column <- copy new-column
9999 mem: location 1303 is 0
9999 mem: location 1305 is 1014
9999 mem: storing 0 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1301 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1255
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1255 is 1011
9999 mem: location 1257 is 0
9999 mem: location 1259 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1301
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1302
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1303
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1304
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1302 is 0
9999 mem: location 1303 is 9
9999 mem: storing 0 in location 1305
 107 run: jump-if done?, 
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1301 is 1011
9999 mem: location 1304 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 108 run: jump-if color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1264
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 108 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 108 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 108 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1268 is 10
9999 mem: storing 40 in location 1276
 108 run: index <- add index, *column
9999 mem: location 1276 is 40
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 40 in location 1276
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 108 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 108 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 40
9999 mem: storing 1097 in location 1281
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1281 is 1097
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1282
 108 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1097
9999 mem: storing 32 in location 1097
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1281 is 1097
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1283
 108 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1098
9999 mem: storing 7 in location 1098
 108 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 108 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1272 is 1014
9999 mem: storing 1 in location 1014
 108 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1301
 107 run: column <- add column, 1
9999 mem: location 1302 is 0
9999 mem: storing 1 in location 1302
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1302 is 1
9999 mem: location 1303 is 9
9999 mem: storing 0 in location 1305
 107 run: jump-if done?, 
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1301 is 1011
9999 mem: location 1304 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 108 run: jump-if color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1264
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 108 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 108 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 108 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1268 is 10
9999 mem: storing 40 in location 1276
 108 run: index <- add index, *column
9999 mem: location 1276 is 40
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 41 in location 1276
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 108 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 108 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 41
9999 mem: storing 1099 in location 1281
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1281 is 1099
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1282
 108 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1099
9999 mem: storing 32 in location 1099
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1281 is 1099
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1283
 108 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1100
9999 mem: storing 7 in location 1100
 108 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 108 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1272 is 1014
9999 mem: storing 2 in location 1014
 108 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1301
 107 run: column <- add column, 1
9999 mem: location 1302 is 1
9999 mem: storing 2 in location 1302
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1302 is 2
9999 mem: location 1303 is 9
9999 mem: storing 0 in location 1305
 107 run: jump-if done?, 
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1301 is 1011
9999 mem: location 1304 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 108 run: jump-if color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1264
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 108 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 108 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 108 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1268 is 10
9999 mem: storing 40 in location 1276
 108 run: index <- add index, *column
9999 mem: location 1276 is 40
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 42 in location 1276
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 108 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 108 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 42
9999 mem: storing 1101 in location 1281
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1281 is 1101
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1282
 108 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1101
9999 mem: storing 32 in location 1101
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1281 is 1101
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1283
 108 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1102
9999 mem: storing 7 in location 1102
 108 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 108 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1272 is 1014
9999 mem: storing 3 in location 1014
 108 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1301
 107 run: column <- add column, 1
9999 mem: location 1302 is 2
9999 mem: storing 3 in location 1302
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1302 is 3
9999 mem: location 1303 is 9
9999 mem: storing 0 in location 1305
 107 run: jump-if done?, 
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1301 is 1011
9999 mem: location 1304 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 108 run: jump-if color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1264
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 108 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 108 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 108 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1268 is 10
9999 mem: storing 40 in location 1276
 108 run: index <- add index, *column
9999 mem: location 1276 is 40
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 43 in location 1276
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 108 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 108 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 43
9999 mem: storing 1103 in location 1281
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1281 is 1103
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1282
 108 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1103
9999 mem: storing 32 in location 1103
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1281 is 1103
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1283
 108 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1104
9999 mem: storing 7 in location 1104
 108 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 108 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1272 is 1014
9999 mem: storing 4 in location 1014
 108 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1301
 107 run: column <- add column, 1
9999 mem: location 1302 is 3
9999 mem: storing 4 in location 1302
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1302 is 4
9999 mem: location 1303 is 9
9999 mem: storing 0 in location 1305
 107 run: jump-if done?, 
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1301 is 1011
9999 mem: location 1304 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 108 run: jump-if color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1264
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 108 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 108 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 108 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1268 is 10
9999 mem: storing 40 in location 1276
 108 run: index <- add index, *column
9999 mem: location 1276 is 40
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 44 in location 1276
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 108 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 108 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 44
9999 mem: storing 1105 in location 1281
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1281 is 1105
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1282
 108 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1105
9999 mem: storing 32 in location 1105
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1281 is 1105
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1283
 108 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1106
9999 mem: storing 7 in location 1106
 108 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 108 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1272 is 1014
9999 mem: storing 5 in location 1014
 108 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1301
 107 run: column <- add column, 1
9999 mem: location 1302 is 4
9999 mem: storing 5 in location 1302
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1302 is 5
9999 mem: location 1303 is 9
9999 mem: storing 0 in location 1305
 107 run: jump-if done?, 
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1301 is 1011
9999 mem: location 1304 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 108 run: jump-if color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1264
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 108 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 108 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 108 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1268 is 10
9999 mem: storing 40 in location 1276
 108 run: index <- add index, *column
9999 mem: location 1276 is 40
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: storing 45 in location 1276
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 108 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 108 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 45
9999 mem: storing 1107 in location 1281
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1281 is 1107
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1282
 108 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1107
9999 mem: storing 32 in location 1107
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1281 is 1107
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1283
 108 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1108
9999 mem: storing 7 in location 1108
 108 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 108 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 5
9999 mem: location 1272 is 1014
9999 mem: storing 6 in location 1014
 108 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1301
 107 run: column <- add column, 1
9999 mem: location 1302 is 5
9999 mem: storing 6 in location 1302
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1302 is 6
9999 mem: location 1303 is 9
9999 mem: storing 0 in location 1305
 107 run: jump-if done?, 
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1301 is 1011
9999 mem: location 1304 is 32
9999 trace: incrementing callstack depth to 7
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1001/scenario-editor-joins-and-wraps-lines-on-backspace
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 108 run: jump-if color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1264
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 108 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 108 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 108 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1268 is 10
9999 mem: storing 40 in location 1276
 108 run: index <- add index, *column
9999 mem: location 1276 is 40
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: storing 46 in location 1276
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 6
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 108 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 108 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 46
9999 mem: storing 1109 in location 1281
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1281 is 1109
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1282
 108 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1109
9999 mem: storing 32 in location 1109
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1281 is 1109
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1283
 108 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1110
9999 mem: storing 7 in location 1110
 108 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 108 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 6
9999 mem: location 1272 is 1014
9999 mem: storing 7 in location 1014
 108 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1301
 107 run: column <- add column, 1
9999 mem: location 1302 is 6
9999 mem: storing 7 in location 1302
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1302 is 7
9999 mem: location 1303 is 9
9999 mem: storing 0 in location 1305
 107 run: jump-if done?, 
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1301 is 1011
9999 mem: location 1304 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 108 run: jump-if color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1264
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 108 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 108 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 108 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1268 is 10
9999 mem: storing 40 in location 1276
 108 run: index <- add index, *column
9999 mem: location 1276 is 40
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: storing 47 in location 1276
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 7
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 108 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 108 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 47
9999 mem: storing 1111 in location 1281
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1111
9999 mem: location 1111 is 32
9999 mem: location 1112 is 7
9999 mem: location 1281 is 1111
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1282
 108 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1111
9999 mem: storing 32 in location 1111
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1111
9999 mem: location 1111 is 32
9999 mem: location 1112 is 7
9999 mem: location 1281 is 1111
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1283
 108 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1112
9999 mem: storing 7 in location 1112
 108 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 108 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 7
9999 mem: location 1272 is 1014
9999 mem: storing 8 in location 1014
 108 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1301
 107 run: column <- add column, 1
9999 mem: location 1302 is 7
9999 mem: storing 8 in location 1302
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1302 is 8
9999 mem: location 1303 is 9
9999 mem: storing 0 in location 1305
 107 run: jump-if done?, 
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1301 is 1011
9999 mem: location 1304 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 108 run: jump-if color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1264
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 108 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 108 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 108 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1268 is 10
9999 mem: storing 40 in location 1276
 108 run: index <- add index, *column
9999 mem: location 1276 is 40
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: storing 48 in location 1276
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 8
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 108 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 108 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 48
9999 mem: storing 1113 in location 1281
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1113
9999 mem: location 1113 is 32
9999 mem: location 1114 is 7
9999 mem: location 1281 is 1113
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1282
 108 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1113
9999 mem: storing 32 in location 1113
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1113
9999 mem: location 1113 is 32
9999 mem: location 1114 is 7
9999 mem: location 1281 is 1113
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1283
 108 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1114
9999 mem: storing 7 in location 1114
 108 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: location 1284 is 9
9999 mem: storing 0 in location 1285
 108 run: jump-if at-right?, 
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 8
9999 mem: location 1272 is 1014
9999 mem: storing 9 in location 1014
 108 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1301
 107 run: column <- add column, 1
9999 mem: location 1302 is 8
9999 mem: storing 9 in location 1302
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1302 is 9
9999 mem: location 1303 is 9
9999 mem: storing 0 in location 1305
 107 run: jump-if done?, 
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1301 is 1011
9999 mem: location 1304 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1262
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1263
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 108 run: jump-if color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1264
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 108 run: jump-if bg-color-found?, 
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1266
 108 run: trace 90, [print-character], c
9999 mem: location 1263 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1262 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1268
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1269
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1270
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1269 is 5
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1272
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 9
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 9
9999 mem: location 1268 is 10
9999 mem: storing 1 in location 1271
 108 run: jump-if legal?, 1:offset
9999 mem: location 1271 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1273
 108 run: jump-unless newline?, 
9999 mem: location 1273 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1270 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1268 is 10
9999 mem: storing 40 in location 1276
 108 run: index <- add index, *column
9999 mem: location 1276 is 40
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 9
9999 mem: storing 49 in location 1276
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1262 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1262 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1277
 108 run: len:number <- length *buf
9999 mem: location 1277 is 1016
9999 mem: storing 50 in location 1278
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1263 is 32
9999 mem: storing 0 in location 1279
 108 run: jump-unless backspace?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1277 is 1016
9999 mem: location 1276 is 49
9999 mem: storing 1115 in location 1281
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1281 is 1115
9999 mem: location 1115 is 32
9999 mem: location 1116 is 7
9999 mem: location 1281 is 1115
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1282
 108 run: *cursor-contents <- copy c
9999 mem: location 1263 is 32
9999 mem: location 1282 is 1115
9999 mem: storing 32 in location 1115
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1281 is 1115
9999 mem: location 1115 is 32
9999 mem: location 1116 is 7
9999 mem: location 1281 is 1115
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1283
 108 run: *cursor-color <- copy color
9999 mem: location 1264 is 7
9999 mem: location 1283 is 1116
9999 mem: storing 7 in location 1116
 108 run: right:number <- subtract width, 1
9999 mem: location 1268 is 10
9999 mem: storing 9 in location 1284
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1272 is 1014
9999 mem: location 1014 is 9
9999 mem: location 1284 is 9
9999 mem: storing 1 in location 1285
 108 run: jump-if at-right?, 
9999 mem: location 1285 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1301
 107 run: column <- add column, 1
9999 mem: location 1302 is 9
9999 mem: storing 10 in location 1302
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1302 is 10
9999 mem: location 1303 is 9
9999 mem: storing 1 in location 1305
 107 run: jump-if done?, 
9999 mem: location 1305 is 1
9998 run: jumping to instruction 11
 107 run: reply screen:address:shared:screen
9999 mem: location 1301 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1255 is 1011
9999 mem: location 1256 is 4
9999 mem: location 1258 is 0
9999 mem: location 1259 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1308
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1309
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1310
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1311
 107 run: row <- add row, 1
9999 mem: location 1309 is 4
9999 mem: storing 5 in location 1309
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1308 is 1011
9999 mem: location 1309 is 5
9999 mem: location 1310 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1301
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1302
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1303
 108 run: jump-unless screen, 
9999 mem: location 1301 is 1011
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1301 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 4
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1301 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1304
 108 run: *row <- copy new-row
9999 mem: location 1302 is 5
9999 mem: location 1304 is 1013
9999 mem: storing 5 in location 1013
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1301 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 5
9999 mem: location 1014 is 9
9999 mem: location 1015 is 1016
9999 mem: location 1301 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1305
 108 run: *column <- copy new-column
9999 mem: location 1303 is 0
9999 mem: location 1305 is 1014
9999 mem: storing 0 in location 1014
 108 run: reply screen:address:shared:screen
9999 mem: location 1301 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1308
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1308 is 1011
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1181
 108 run: jump-unless screen, 
9999 mem: location 1181 is 1011
9998 run: jump-unless fell through
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1181 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1182
 108 run: reply height:number
9999 mem: location 1182 is 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1312
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1309 is 5
9999 mem: location 1312 is 5
9999 mem: storing 1 in location 1313
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1313 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:shared:screen
9999 mem: location 1308 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1255 is 1011
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1158 is 1011
9999 mem: location 1159 is 1000
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1327
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1329 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1513
9999 mem: location 1010 is 0
9999 mem: location 1329 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1330
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1329 is 1000
9999 mem: location 1000 is 1164
9999 mem: location 1001 is 1164
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1198
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1513
9999 mem: location 1010 is 0
9999 mem: location 1329 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 7
9999 mem: storing 7 in location 1331
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1327 is 1011
9999 mem: location 1330 is 1
9999 mem: location 1331 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1255
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1256
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1257
 105 run: jump-unless screen, 
9999 mem: location 1255 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1255 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1255 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1258
 105 run: *row <- copy new-row
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1013
9999 mem: storing 1 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1255 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1255 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1259
 105 run: *column <- copy new-column
9999 mem: location 1257 is 7
9999 mem: location 1259 is 1014
9999 mem: storing 7 in location 1014
 105 run: reply screen:address:shared:screen
9999 mem: location 1255 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1327
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1328 is 1323
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1323 in location 1288
 105 run: jump-unless console, 
9999 mem: location 1288 is 1323
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1288 is 1323
9999 mem: location 1323 is 2
9999 mem: location 1324 is 1314
9999 mem: location 1288 is 1323
9998 run: address to copy is 1323
9999 mem: storing 1323 in location 1289
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1288 is 1323
9999 mem: location 1323 is 2
9999 mem: location 1324 is 1314
9999 mem: location 1288 is 1323
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1324 is 1314
9999 mem: storing 1314 in location 1290
 105 run: max:number <- length *buf
9999 mem: location 1290 is 1314
9999 mem: storing 2 in location 1291
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1289 is 1323
9999 mem: location 1323 is 2
9999 mem: location 1291 is 2
9999 mem: storing 1 in location 1292
 105 run: jump-unless done?, 
9999 mem: location 1292 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: storing 1179 in location 1293
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1293 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1288 is 1323
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1323
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 1323 in location 1328
9999 mem: storing 1 in location 1336
9999 mem: storing 1 in location 1337
 104 run: jump-unless found?, 
9999 mem: location 1336 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1337 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1327 is 1011
9999 mem: location 1328 is 1323
9999 mem: location 1329 is 1000
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .abc defgh↩.
    .i jkl     .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
