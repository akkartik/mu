parse: instruction: assume-screen
parse:   ingredient: {name: "10", properties: ["10": "literal", "width": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "height": ]}
parse: instruction: new
parse:   ingredient: {name: "abcde", properties: [_: "literal-string"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
parse:   product: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    type [\n]\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .          .\n    .abcd↩     .\n    .e         .\n    .          .\n    .          .\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .          .\n    .          .\n    .abcd↩     .\n    .e         .\n    .          .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-clears-previous-line-completely-after-inserting-newline
after-brace: new-fake-screen ...
after-brace: new ...
after-brace: new-editor ...
after-brace: assume-console ...
after-brace: screen-should-contain ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-clears-previous-line-completely-after-inserting-newline
 101 run: screen:address <- new-fake-screen 10:literal/width, 5:literal/height
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1009
9999 mem: storing 1009 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1010
9999 mem: storing 1010 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1010
9999 mem: storing 10 in location 1010
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1009
9999 mem: storing 1009 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1009
9999 mem: storing 5 in location 1009
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1011
9999 mem: storing 0 in location 1011
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1012
9999 mem: storing 0 in location 1012
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1010
9999 mem: location 1010 is 10
9999 mem: location 1004 is 1009
9999 mem: location 1009 is 5
9999 mem: storing 50 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1013
9999 mem: storing 1013 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 50
9999 mem: array size is 50
9999 mem: new alloc: 1014
9999 mem: location 1008 is 1013
9999 mem: storing 1014 in location 1013
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1009
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1115
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1117
 103 run: break-unless x:address:screen, 
9999 mem: location 1117 is 1009
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1118
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1118 is 1014
9999 mem: storing 50 in location 1119
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1120
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 0
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 0
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 0
9999 mem: storing 1015 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1122 is 1015
9999 run: address to copy is 1015
9999 mem: storing 1015 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1015
9999 mem: storing 0 in location 1015
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1122 is 1015
9999 run: address to copy is 1016
9999 mem: storing 1016 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1016
9999 mem: storing 7 in location 1016
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 0
9999 mem: storing 1 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 1
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 1
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 1
9999 mem: storing 1017 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1122 is 1017
9999 run: address to copy is 1017
9999 mem: storing 1017 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1017
9999 mem: storing 0 in location 1017
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1122 is 1017
9999 run: address to copy is 1018
9999 mem: storing 1018 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1018
9999 mem: storing 7 in location 1018
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 1
9999 mem: storing 2 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 2
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 2
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 2
9999 mem: storing 1019 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1122 is 1019
9999 run: address to copy is 1019
9999 mem: storing 1019 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1019
9999 mem: storing 0 in location 1019
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1122 is 1019
9999 run: address to copy is 1020
9999 mem: storing 1020 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1020
9999 mem: storing 7 in location 1020
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 2
9999 mem: storing 3 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 3
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 3
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 3
9999 mem: storing 1021 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1122 is 1021
9999 run: address to copy is 1021
9999 mem: storing 1021 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1021
9999 mem: storing 0 in location 1021
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1122 is 1021
9999 run: address to copy is 1022
9999 mem: storing 1022 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1022
9999 mem: storing 7 in location 1022
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 3
9999 mem: storing 4 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 4
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 4
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 4
9999 mem: storing 1023 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1122 is 1023
9999 run: address to copy is 1023
9999 mem: storing 1023 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1023
9999 mem: storing 0 in location 1023
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1122 is 1023
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1024
9999 mem: storing 7 in location 1024
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 4
9999 mem: storing 5 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 5
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 5
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 5
9999 mem: storing 1025 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1122 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1025
9999 mem: storing 0 in location 1025
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1122 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1026
9999 mem: storing 7 in location 1026
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 5
9999 mem: storing 6 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 6
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 6
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 6
9999 mem: storing 1027 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1122 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1027
9999 mem: storing 0 in location 1027
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1122 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1028
9999 mem: storing 7 in location 1028
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 6
9999 mem: storing 7 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 7
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 7
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 7
9999 mem: storing 1029 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1122 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1029
9999 mem: storing 0 in location 1029
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1122 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1030
9999 mem: storing 7 in location 1030
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 7
9999 mem: storing 8 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 8
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 8
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 8
9999 mem: storing 1031 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1122 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1031
9999 mem: storing 0 in location 1031
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1122 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1032
9999 mem: storing 7 in location 1032
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 8
9999 mem: storing 9 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 9
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 9
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 9
9999 mem: storing 1033 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1122 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1033
9999 mem: storing 0 in location 1033
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1122 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1034
9999 mem: storing 7 in location 1034
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 9
9999 mem: storing 10 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 10
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 10
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 10
9999 mem: storing 1035 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1122 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1035
9999 mem: storing 0 in location 1035
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1122 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1036
9999 mem: storing 7 in location 1036
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 10
9999 mem: storing 11 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 11
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 11
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 11
9999 mem: storing 1037 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1122 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1122 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 11
9999 mem: storing 12 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 12
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 12
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 12
9999 mem: storing 1039 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1122 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1122 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 12
9999 mem: storing 13 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 13
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 13
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 13
9999 mem: storing 1041 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1122 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1122 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 13
9999 mem: storing 14 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 14
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 14
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 14
9999 mem: storing 1043 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1122 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1122 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 14
9999 mem: storing 15 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 15
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 15
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 15
9999 mem: storing 1045 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1122 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1122 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 15
9999 mem: storing 16 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 16
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 16
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 16
9999 mem: storing 1047 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1122 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1122 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 16
9999 mem: storing 17 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 17
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 17
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 17
9999 mem: storing 1049 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1122 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1122 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 17
9999 mem: storing 18 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 18
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 18
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 18
9999 mem: storing 1051 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1122 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1122 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 18
9999 mem: storing 19 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 19
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 19
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 19
9999 mem: storing 1053 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1122 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1122 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 19
9999 mem: storing 20 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 20
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 20
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 20
9999 mem: storing 1055 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1122 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1122 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 20
9999 mem: storing 21 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 21
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 21
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 21
9999 mem: storing 1057 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1122 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1122 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 21
9999 mem: storing 22 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 22
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 22
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 22
9999 mem: storing 1059 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1122 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1122 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 22
9999 mem: storing 23 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 23
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 23
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 23
9999 mem: storing 1061 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1122 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1122 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 23
9999 mem: storing 24 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 24
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 24
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 24
9999 mem: storing 1063 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1122 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1122 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 24
9999 mem: storing 25 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 25
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 25
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 25
9999 mem: storing 1065 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1122 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1122 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 25
9999 mem: storing 26 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 26
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 26
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 26
9999 mem: storing 1067 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1122 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1067
9999 mem: storing 0 in location 1067
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1122 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1068
9999 mem: storing 7 in location 1068
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 26
9999 mem: storing 27 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 27
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 27
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 27
9999 mem: storing 1069 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1122 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1069
9999 mem: storing 0 in location 1069
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1122 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1070
9999 mem: storing 7 in location 1070
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 27
9999 mem: storing 28 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 28
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 28
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 28
9999 mem: storing 1071 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1122 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1071
9999 mem: storing 0 in location 1071
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1122 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1072
9999 mem: storing 7 in location 1072
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 28
9999 mem: storing 29 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 29
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 29
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 29
9999 mem: storing 1073 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1122 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1073
9999 mem: storing 0 in location 1073
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1122 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1074
9999 mem: storing 7 in location 1074
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 29
9999 mem: storing 30 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 30
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 30
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 30
9999 mem: storing 1075 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1122 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1075
9999 mem: storing 0 in location 1075
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1122 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1076
9999 mem: storing 7 in location 1076
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 30
9999 mem: storing 31 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 31
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 31
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 31
9999 mem: storing 1077 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1122 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1077
9999 mem: storing 0 in location 1077
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1122 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1078
9999 mem: storing 7 in location 1078
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 31
9999 mem: storing 32 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 32
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 32
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 32
9999 mem: storing 1079 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1122 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1079
9999 mem: storing 0 in location 1079
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1122 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1080
9999 mem: storing 7 in location 1080
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 32
9999 mem: storing 33 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 33
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 33
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 33
9999 mem: storing 1081 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1122 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1081
9999 mem: storing 0 in location 1081
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1122 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1082
9999 mem: storing 7 in location 1082
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 33
9999 mem: storing 34 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 34
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 34
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 34
9999 mem: storing 1083 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1122 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1083
9999 mem: storing 0 in location 1083
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1122 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1084
9999 mem: storing 7 in location 1084
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 34
9999 mem: storing 35 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 35
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 35
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 35
9999 mem: storing 1085 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1122 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1085
9999 mem: storing 0 in location 1085
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1122 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1086
9999 mem: storing 7 in location 1086
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 35
9999 mem: storing 36 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 36
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 36
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 36
9999 mem: storing 1087 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1122 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1087
9999 mem: storing 0 in location 1087
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1122 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1088
9999 mem: storing 7 in location 1088
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 36
9999 mem: storing 37 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 37
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 37
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 37
9999 mem: storing 1089 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1122 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1089
9999 mem: storing 0 in location 1089
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1122 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1090
9999 mem: storing 7 in location 1090
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 37
9999 mem: storing 38 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 38
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 38
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 38
9999 mem: storing 1091 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1122 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1091
9999 mem: storing 0 in location 1091
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1122 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1092
9999 mem: storing 7 in location 1092
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 38
9999 mem: storing 39 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 39
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 39
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 39
9999 mem: storing 1093 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1122 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1093
9999 mem: storing 0 in location 1093
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1122 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1094
9999 mem: storing 7 in location 1094
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 39
9999 mem: storing 40 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 40
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 40
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 40
9999 mem: storing 1095 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1122 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1095
9999 mem: storing 0 in location 1095
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1122 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1096
9999 mem: storing 7 in location 1096
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 40
9999 mem: storing 41 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 41
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 41
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 41
9999 mem: storing 1097 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1122 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1097
9999 mem: storing 0 in location 1097
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1122 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1098
9999 mem: storing 7 in location 1098
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 41
9999 mem: storing 42 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 42
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 42
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 42
9999 mem: storing 1099 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1122 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1099
9999 mem: storing 0 in location 1099
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1122 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1100
9999 mem: storing 7 in location 1100
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 42
9999 mem: storing 43 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 43
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 43
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 43
9999 mem: storing 1101 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1122 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1101
9999 mem: storing 0 in location 1101
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1122 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1102
9999 mem: storing 7 in location 1102
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 43
9999 mem: storing 44 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 44
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 44
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 44
9999 mem: storing 1103 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1122 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1103
9999 mem: storing 0 in location 1103
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1122 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1104
9999 mem: storing 7 in location 1104
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 44
9999 mem: storing 45 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 45
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 45
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 45
9999 mem: storing 1105 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1122 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1105
9999 mem: storing 0 in location 1105
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1122 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1106
9999 mem: storing 7 in location 1106
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 45
9999 mem: storing 46 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 46
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 46
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 46
9999 mem: storing 1107 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1122 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1107
9999 mem: storing 0 in location 1107
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1122 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1108
9999 mem: storing 7 in location 1108
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 46
9999 mem: storing 47 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 47
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 47
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 47
9999 mem: storing 1109 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1122 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1109
9999 mem: storing 0 in location 1109
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1122 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1110
9999 mem: storing 7 in location 1110
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 47
9999 mem: storing 48 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 48
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 48
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 48
9999 mem: storing 1111 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1122 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1111
9999 mem: storing 0 in location 1111
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1122 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1112
9999 mem: storing 7 in location 1112
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 48
9999 mem: storing 49 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 49
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 49
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 49
9999 mem: storing 1113 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1122 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1113
9999 mem: storing 0 in location 1113
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1122 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1114
9999 mem: storing 7 in location 1114
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 49
9999 mem: storing 50 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 50
9999 mem: location 1119 is 50
9999 mem: storing 1 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1125
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1125 is 1011
9999 mem: storing 0 in location 1011
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1125
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1125 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1117 is 1009
 102 run: reply result:address:screen
9999 mem: location 1002 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 900
 101 run: 1:address:array:character <- new [abcde]
9999 mem: storing 1126 in location 1
 101 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1126
9999 mem: location 900 is 1009
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1132
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1126 in location 1134
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1135
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1136
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1137
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1137 is 5
9999 mem: storing 4 in location 1137
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1147
9999 mem: storing 1147 in location 1138
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1138 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1138 is 1147
9999 run: address to copy is 1149
9999 mem: storing 1149 in location 1139
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1136 is 0
9999 mem: location 1139 is 1149
9999 mem: storing 0 in location 1149
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1138 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1138 is 1147
9999 run: address to copy is 1150
9999 mem: storing 1150 in location 1139
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1137 is 4
9999 mem: location 1139 is 1150
9999 mem: storing 4 in location 1150
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1138 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1138 is 1147
9999 run: address to copy is 1151
9999 mem: storing 1151 in location 1139
 102 run: x:address:number/deref <- copy 1:literal/top
9999 mem: location 1139 is 1151
9999 mem: storing 1 in location 1151
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1138 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1138 is 1147
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 1139
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1136 is 0
9999 mem: location 1139 is 1152
9999 mem: storing 0 in location 1152
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1138 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1138 is 1147
9999 run: address to copy is 1147
9999 mem: storing 1147 in location 1140
schedule: new-editor/editor-clears-previous-line-completely-after-inserting-newline
 102 run: init:address:address:duplex-list/deref <- push-duplex 167:literal/§, 0:literal/tail
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1153
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1155
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1156
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1161
9999 mem: storing 1161 in location 1157
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1157 is 1161
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1157 is 1161
9999 run: address to copy is 1161
9999 mem: storing 1161 in location 1158
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1155 is 167
9999 mem: location 1158 is 1161
9999 mem: storing 167 in location 1161
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1157 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1157 is 1161
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 1159
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1156 is 0
9999 mem: location 1159 is 1162
9999 mem: storing 0 in location 1162
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1156 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1157 is 1161
9999 run: result 0 is 1161
9999 mem: location 1140 is 1147
9999 mem: storing 1161 in location 1147
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1138 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1138 is 1147
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 1141
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1140 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1141 is 1148
9999 mem: storing 1161 in location 1148
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1134 is 1126
9999 run: jumping to instruction 21
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1134 is 1126
9999 mem: location 1126 is 5
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1134 is 1126
9999 mem: storing 5 in location 1142
 102 run: jump-if len:number, 1:offset
9999 mem: location 1142 is 5
9999 run: jumping to instruction 24
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1143
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1140 is 1147
9999 mem: location 1147 is 1161
9999 mem: storing 1161 in location 1144
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1143 is 0
9999 mem: location 1142 is 5
9999 mem: storing 0 in location 1145
 102 run: break-if done?:boolean, 
9999 mem: location 1145 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1134 is 1126
9999 mem: location 1126 is 5
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1143 is 0
9999 mem: location 1134 is 1126
9999 mem: location 1143 is 0
9999 run: address to copy is 1127
9999 run: its type is character
9999 mem: location 1127 is 97
9999 mem: storing 97 in location 1146
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1146 is 97
9999 mem: location 1144 is 1161
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1164
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1166
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1167
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1172
9999 mem: storing 1172 in location 1168
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1168 is 1172
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1168 is 1172
9999 run: address to copy is 1172
9999 mem: storing 1172 in location 1169
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1166 is 97
9999 mem: location 1169 is 1172
9999 mem: storing 97 in location 1172
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1167 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1167 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 0
9999 mem: storing 0 in location 1170
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1167 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1167 is 1161
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 1171
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1168 is 1172
9999 mem: location 1171 is 1162
9999 mem: storing 1172 in location 1162
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1168 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1168 is 1172
9999 run: address to copy is 1174
9999 mem: storing 1174 in location 1171
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1167 is 1161
9999 mem: location 1171 is 1174
9999 mem: storing 1161 in location 1174
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1168 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1161
9999 mem: location 1168 is 1172
9999 run: address to copy is 1173
9999 mem: storing 1173 in location 1171
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1173
9999 mem: storing 0 in location 1173
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1170 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1168 is 1172
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1144 is 1161
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1175
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1177
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1177 is 1161
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1177 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1172
9999 mem: location 1163 is 0
9999 mem: location 1177 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1172
9999 mem: storing 1172 in location 1178
 103 run: reply result:address:duplex-list
9999 mem: location 1178 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1144
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1143 is 0
9999 mem: storing 1 in location 1143
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1143 is 1
9999 mem: location 1142 is 5
9999 mem: storing 0 in location 1145
 102 run: break-if done?:boolean, 
9999 mem: location 1145 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1134 is 1126
9999 mem: location 1126 is 5
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1143 is 1
9999 mem: location 1134 is 1126
9999 mem: location 1143 is 1
9999 run: address to copy is 1128
9999 run: its type is character
9999 mem: location 1128 is 98
9999 mem: storing 98 in location 1146
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1146 is 98
9999 mem: location 1144 is 1172
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1179
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1181
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1182
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1187
9999 mem: storing 1187 in location 1183
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1183 is 1187
9999 mem: location 1187 is 0
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1183 is 1187
9999 run: address to copy is 1187
9999 mem: storing 1187 in location 1184
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1181 is 98
9999 mem: location 1184 is 1187
9999 mem: storing 98 in location 1187
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1182 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1161
9999 mem: location 1182 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 0
9999 mem: storing 0 in location 1185
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1182 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1161
9999 mem: location 1182 is 1172
9999 run: address to copy is 1173
9999 mem: storing 1173 in location 1186
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1183 is 1187
9999 mem: location 1186 is 1173
9999 mem: storing 1187 in location 1173
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1183 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1183 is 1187
9999 run: address to copy is 1189
9999 mem: storing 1189 in location 1186
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1182 is 1172
9999 mem: location 1186 is 1189
9999 mem: storing 1172 in location 1189
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1183 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 0
9999 mem: location 1189 is 1172
9999 mem: location 1183 is 1187
9999 run: address to copy is 1188
9999 mem: storing 1188 in location 1186
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1188
9999 mem: storing 0 in location 1188
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1185 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1183 is 1187
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1144 is 1172
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1190
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1192
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1192 is 1172
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1192 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 1192 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1187
9999 mem: storing 1187 in location 1193
 103 run: reply result:address:duplex-list
9999 mem: location 1193 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 1144
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1143 is 1
9999 mem: storing 2 in location 1143
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1143 is 2
9999 mem: location 1142 is 5
9999 mem: storing 0 in location 1145
 102 run: break-if done?:boolean, 
9999 mem: location 1145 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1134 is 1126
9999 mem: location 1126 is 5
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1143 is 2
9999 mem: location 1134 is 1126
9999 mem: location 1143 is 2
9999 run: address to copy is 1129
9999 run: its type is character
9999 mem: location 1129 is 99
9999 mem: storing 99 in location 1146
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1146 is 99
9999 mem: location 1144 is 1187
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1194
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1196
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 1197
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1202
9999 mem: storing 1202 in location 1198
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1198 is 1202
9999 mem: location 1202 is 0
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1198 is 1202
9999 run: address to copy is 1202
9999 mem: storing 1202 in location 1199
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1196 is 99
9999 mem: location 1199 is 1202
9999 mem: storing 99 in location 1202
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1197 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 0
9999 mem: location 1189 is 1172
9999 mem: location 1197 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1200
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1197 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 0
9999 mem: location 1189 is 1172
9999 mem: location 1197 is 1187
9999 run: address to copy is 1188
9999 mem: storing 1188 in location 1201
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1198 is 1202
9999 mem: location 1201 is 1188
9999 mem: storing 1202 in location 1188
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1198 is 1202
9999 mem: location 1202 is 99
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1198 is 1202
9999 run: address to copy is 1204
9999 mem: storing 1204 in location 1201
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1197 is 1187
9999 mem: location 1201 is 1204
9999 mem: storing 1187 in location 1204
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1198 is 1202
9999 mem: location 1202 is 99
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1187
9999 mem: location 1198 is 1202
9999 run: address to copy is 1203
9999 mem: storing 1203 in location 1201
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1203
9999 mem: storing 0 in location 1203
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1200 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1198 is 1202
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1144 is 1187
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1205
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 1207
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1207 is 1187
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1207 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 1207 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1202
9999 mem: storing 1202 in location 1208
 103 run: reply result:address:duplex-list
9999 mem: location 1208 is 1202
9999 run: result 0 is 1202
9999 mem: storing 1202 in location 1144
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1143 is 2
9999 mem: storing 3 in location 1143
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1143 is 3
9999 mem: location 1142 is 5
9999 mem: storing 0 in location 1145
 102 run: break-if done?:boolean, 
9999 mem: location 1145 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1134 is 1126
9999 mem: location 1126 is 5
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1143 is 3
9999 mem: location 1134 is 1126
9999 mem: location 1143 is 3
9999 run: address to copy is 1130
9999 run: its type is character
9999 mem: location 1130 is 100
9999 mem: storing 100 in location 1146
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1146 is 100
9999 mem: location 1144 is 1202
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1209
 103 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1211
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1202 in location 1212
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1217
9999 mem: storing 1217 in location 1213
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1213 is 1217
9999 mem: location 1217 is 0
9999 mem: location 1218 is 0
9999 mem: location 1219 is 0
9999 mem: location 1213 is 1217
9999 run: address to copy is 1217
9999 mem: storing 1217 in location 1214
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1211 is 100
9999 mem: location 1214 is 1217
9999 mem: storing 100 in location 1217
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1212 is 1202
9999 mem: location 1202 is 99
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1187
9999 mem: location 1212 is 1202
9999 run: address to copy is 1203
9999 run: its type is address
9999 mem: location 1203 is 0
9999 mem: storing 0 in location 1215
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1212 is 1202
9999 mem: location 1202 is 99
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1187
9999 mem: location 1212 is 1202
9999 run: address to copy is 1203
9999 mem: storing 1203 in location 1216
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1213 is 1217
9999 mem: location 1216 is 1203
9999 mem: storing 1217 in location 1203
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1213 is 1217
9999 mem: location 1217 is 100
9999 mem: location 1218 is 0
9999 mem: location 1219 is 0
9999 mem: location 1213 is 1217
9999 run: address to copy is 1219
9999 mem: storing 1219 in location 1216
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1212 is 1202
9999 mem: location 1216 is 1219
9999 mem: storing 1202 in location 1219
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1213 is 1217
9999 mem: location 1217 is 100
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1202
9999 mem: location 1213 is 1217
9999 run: address to copy is 1218
9999 mem: storing 1218 in location 1216
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1218
9999 mem: storing 0 in location 1218
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1215 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1213 is 1217
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1144 is 1202
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1220
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1202 in location 1222
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1222 is 1202
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1222 is 1202
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 1222 is 1202
9999 run: address to copy is 1203
9999 run: its type is address
9999 mem: location 1203 is 1217
9999 mem: storing 1217 in location 1223
 103 run: reply result:address:duplex-list
9999 mem: location 1223 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 1144
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1143 is 3
9999 mem: storing 4 in location 1143
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1143 is 4
9999 mem: location 1142 is 5
9999 mem: storing 0 in location 1145
 102 run: break-if done?:boolean, 
9999 mem: location 1145 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1134 is 1126
9999 mem: location 1126 is 5
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 99
9999 mem: location 1130 is 100
9999 mem: location 1131 is 101
9999 mem: location 1143 is 4
9999 mem: location 1134 is 1126
9999 mem: location 1143 is 4
9999 run: address to copy is 1131
9999 run: its type is character
9999 mem: location 1131 is 101
9999 mem: storing 101 in location 1146
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1146 is 101
9999 mem: location 1144 is 1217
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1224
 103 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1226
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 1227
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1232
9999 mem: storing 1232 in location 1228
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1228 is 1232
9999 mem: location 1232 is 0
9999 mem: location 1233 is 0
9999 mem: location 1234 is 0
9999 mem: location 1228 is 1232
9999 run: address to copy is 1232
9999 mem: storing 1232 in location 1229
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1226 is 101
9999 mem: location 1229 is 1232
9999 mem: storing 101 in location 1232
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1227 is 1217
9999 mem: location 1217 is 100
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1202
9999 mem: location 1227 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 0
9999 mem: storing 0 in location 1230
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1227 is 1217
9999 mem: location 1217 is 100
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1202
9999 mem: location 1227 is 1217
9999 run: address to copy is 1218
9999 mem: storing 1218 in location 1231
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1228 is 1232
9999 mem: location 1231 is 1218
9999 mem: storing 1232 in location 1218
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1228 is 1232
9999 mem: location 1232 is 101
9999 mem: location 1233 is 0
9999 mem: location 1234 is 0
9999 mem: location 1228 is 1232
9999 run: address to copy is 1234
9999 mem: storing 1234 in location 1231
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1227 is 1217
9999 mem: location 1231 is 1234
9999 mem: storing 1217 in location 1234
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1228 is 1232
9999 mem: location 1232 is 101
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1217
9999 mem: location 1228 is 1232
9999 run: address to copy is 1233
9999 mem: storing 1233 in location 1231
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1230 is 0
9999 mem: location 1231 is 1233
9999 mem: storing 0 in location 1233
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1228 is 1232
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1144 is 1217
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1235
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 1237
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1237 is 1217
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1237 is 1217
9999 mem: location 1217 is 100
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 1237 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1232
9999 mem: storing 1232 in location 1238
 103 run: reply result:address:duplex-list
9999 mem: location 1238 is 1232
9999 run: result 0 is 1232
9999 mem: storing 1232 in location 1144
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1143 is 4
9999 mem: storing 5 in location 1143
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1143 is 5
9999 mem: location 1142 is 5
9999 mem: storing 1 in location 1145
 102 run: break-if done?:boolean, 
9999 mem: location 1145 is 1
9999 run: jumping to instruction 34
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1138 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1138 is 1147
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 1141
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1140 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1141 is 1148
9999 mem: storing 1161 in location 1148
 102 run: _, screen:address <- render screen:address, result:address:editor-data
9999 mem: location 1135 is 1009
9999 mem: location 1138 is 1147
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1239
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1241
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1147 in location 1242
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1242 is 1147
9999 run: jumping to instruction 5
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1242 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1242 is 1147
9999 run: address to copy is 1149
9999 run: its type is number
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1243
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1241 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1266
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1268
 104 run: break-unless x:address:screen, 
9999 mem: location 1268 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1268 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1269
 104 run: reply height:number
9999 mem: location 1269 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1244
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1242 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1242 is 1147
9999 run: address to copy is 1150
9999 run: its type is number
9999 mem: location 1150 is 4
9999 mem: storing 4 in location 1245
 103 run: hide-screen screen:address
9999 mem: location 1241 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 1270
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1272
 104 run: break-unless x:address:screen, 
9999 mem: location 1272 is 1009
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1272 is 1009
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1242 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1242 is 1147
9999 run: address to copy is 1147
9999 run: its type is address
9999 mem: location 1147 is 1161
9999 mem: storing 1161 in location 1246
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1246 is 1161
9999 mem: storing 1161 in location 1247
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1246 is 1161
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1273
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1275
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1275 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1275 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1172
9999 mem: location 1163 is 0
9999 mem: location 1275 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1172
9999 mem: storing 1172 in location 1276
 104 run: reply result:address:duplex-list
9999 mem: location 1276 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1246
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1248
 103 run: column:number <- copy left:number
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1249
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1242 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1242 is 1147
9999 run: address to copy is 1151
9999 mem: storing 1151 in location 1250
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1242 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1242 is 1147
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 1251
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1242 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1242 is 1147
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 1252
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1241 is 1009
9999 mem: location 1248 is 1
9999 mem: location 1249 is 0
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1277
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1279
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1280
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1281
 104 run: break-unless x:address:screen, 
9999 mem: location 1279 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1279 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1279 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1282
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1280 is 1
9999 mem: location 1282 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1279 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1279 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1283
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1281 is 0
9999 mem: location 1283 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1279 is 1009
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1246 is 1172
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1248 is 1
9999 mem: location 1244 is 5
9999 mem: storing 0 in location 1253
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1248 is 1
9999 mem: location 1250 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1254
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1254 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 1 in location 1255
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1255 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1246 is 1172
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1284
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1286
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1286 is 1172
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1286 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 1286 is 1172
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1161
9999 mem: storing 1161 in location 1287
 104 run: reply result:address:duplex-list
9999 mem: location 1287 is 1161
9999 run: result 0 is 1161
9999 mem: location 1252 is 1148
9999 mem: storing 1161 in location 1148
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1246 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 1246 is 1172
9999 run: address to copy is 1172
9999 run: its type is number
9999 mem: location 1172 is 97
9999 mem: storing 97 in location 1256
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1256 is 97
9999 mem: storing 0 in location 1257
 103 run: break-unless newline?:boolean, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1249 is 0
9999 mem: location 1245 is 4
9999 mem: storing 0 in location 1259
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1241 is 1009
9999 mem: location 1256 is 97
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1288
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1290
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1291
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 104 run: break-if color-found?:boolean, 
9999 mem: location 1293 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1292
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1295 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1294
 104 run: break-unless x:address:screen, 
9999 mem: location 1290 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1296
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1297
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1298
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1299
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1300
 104 run: break-unless newline?:boolean, 
9999 mem: location 1300 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1296 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1298 is 10
9999 mem: storing 10 in location 1303
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1303 is 10
9999 mem: location 1297 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1303
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1304
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1305
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1305 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1304 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1303 is 10
9999 mem: location 1304 is 1014
9999 mem: location 1303 is 10
9999 mem: storing 1035 in location 1307
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1307 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1307 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1308
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1307 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1307 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1309
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1291 is 97
9999 mem: location 1308 is 1035
9999 mem: storing 97 in location 1035
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1298 is 10
9999 mem: storing 9 in location 1310
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1297 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 104 run: break-if at-right?:boolean, 
9999 mem: location 1311 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1297 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1297 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1290 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1246 is 1172
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1312
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1314
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1314 is 1172
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1314 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 1314 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1187
9999 mem: storing 1187 in location 1315
 104 run: reply result:address:duplex-list
9999 mem: location 1315 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 1246
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1247 is 1161
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1316
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1318
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1318 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1318 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1172
9999 mem: location 1163 is 0
9999 mem: location 1318 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1172
9999 mem: storing 1172 in location 1319
 104 run: reply result:address:duplex-list
9999 mem: location 1319 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1247
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1249 is 0
9999 mem: storing 1 in location 1249
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1246 is 1187
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1248 is 1
9999 mem: location 1244 is 5
9999 mem: storing 0 in location 1253
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1248 is 1
9999 mem: location 1250 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1254
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1254 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1249 is 1
9999 mem: location 1251 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1255
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1255 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1246 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 1246 is 1187
9999 run: address to copy is 1187
9999 run: its type is number
9999 mem: location 1187 is 98
9999 mem: storing 98 in location 1256
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1256 is 98
9999 mem: storing 0 in location 1257
 103 run: break-unless newline?:boolean, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1249 is 1
9999 mem: location 1245 is 4
9999 mem: storing 0 in location 1259
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1241 is 1009
9999 mem: location 1256 is 98
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1320
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1322
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1323
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
 104 run: break-if color-found?:boolean, 
9999 mem: location 1325 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1324
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1326
9999 mem: storing 0 in location 1327
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1327 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1326
 104 run: break-unless x:address:screen, 
9999 mem: location 1322 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1322 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1322 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1328
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1322 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1322 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1329
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1322 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1322 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1330
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1322 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1322 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1331
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1323 is 98
9999 mem: storing 0 in location 1332
 104 run: break-unless newline?:boolean, 
9999 mem: location 1332 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1328 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1330 is 10
9999 mem: storing 10 in location 1335
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1335 is 10
9999 mem: location 1329 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1335
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1322 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1322 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1336
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1323 is 98
9999 mem: storing 0 in location 1337
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1337 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1336 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1335 is 11
9999 mem: location 1336 is 1014
9999 mem: location 1335 is 11
9999 mem: storing 1037 in location 1339
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1339 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1339 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1340
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1339 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1339 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1341
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1323 is 98
9999 mem: location 1340 is 1037
9999 mem: storing 98 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1324 is 7
9999 mem: location 1341 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1330 is 10
9999 mem: storing 9 in location 1342
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1329 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1343
 104 run: break-if at-right?:boolean, 
9999 mem: location 1343 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1329 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1329 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1322 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1246 is 1187
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1344
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 1346
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1346 is 1187
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1346 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 1346 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1202
9999 mem: storing 1202 in location 1347
 104 run: reply result:address:duplex-list
9999 mem: location 1347 is 1202
9999 run: result 0 is 1202
9999 mem: storing 1202 in location 1246
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1247 is 1172
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1348
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1350
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1350 is 1172
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1350 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 1350 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1187
9999 mem: storing 1187 in location 1351
 104 run: reply result:address:duplex-list
9999 mem: location 1351 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 1247
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1249 is 1
9999 mem: storing 2 in location 1249
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1246 is 1202
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1248 is 1
9999 mem: location 1244 is 5
9999 mem: storing 0 in location 1253
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1248 is 1
9999 mem: location 1250 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1254
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1254 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1249 is 2
9999 mem: location 1251 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1255
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1255 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1246 is 1202
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 1246 is 1202
9999 run: address to copy is 1202
9999 run: its type is number
9999 mem: location 1202 is 99
9999 mem: storing 99 in location 1256
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1256 is 99
9999 mem: storing 0 in location 1257
 103 run: break-unless newline?:boolean, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1249 is 2
9999 mem: location 1245 is 4
9999 mem: storing 0 in location 1259
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1241 is 1009
9999 mem: location 1256 is 99
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1352
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1354
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1355
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
 104 run: break-if color-found?:boolean, 
9999 mem: location 1357 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1356
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1358
9999 mem: storing 0 in location 1359
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1359 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1358
 104 run: break-unless x:address:screen, 
9999 mem: location 1354 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1354 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1354 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1360
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1354 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1354 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1361
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1354 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1354 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1362
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1354 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1354 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1363
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1355 is 99
9999 mem: storing 0 in location 1364
 104 run: break-unless newline?:boolean, 
9999 mem: location 1364 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1360 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1362 is 10
9999 mem: storing 10 in location 1367
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1367 is 10
9999 mem: location 1361 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1367
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1354 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1354 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1368
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1355 is 99
9999 mem: storing 0 in location 1369
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1369 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1368 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1367 is 12
9999 mem: location 1368 is 1014
9999 mem: location 1367 is 12
9999 mem: storing 1039 in location 1371
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1371 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1371 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1372
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1371 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1371 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1373
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1355 is 99
9999 mem: location 1372 is 1039
9999 mem: storing 99 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1356 is 7
9999 mem: location 1373 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1362 is 10
9999 mem: storing 9 in location 1374
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1361 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1374 is 9
9999 mem: storing 0 in location 1375
 104 run: break-if at-right?:boolean, 
9999 mem: location 1375 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1361 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1361 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1354 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1246 is 1202
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1376
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1202 in location 1378
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1378 is 1202
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1378 is 1202
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 1378 is 1202
9999 run: address to copy is 1203
9999 run: its type is address
9999 mem: location 1203 is 1217
9999 mem: storing 1217 in location 1379
 104 run: reply result:address:duplex-list
9999 mem: location 1379 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 1246
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1247 is 1187
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1380
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 1382
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1382 is 1187
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1382 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 1382 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1202
9999 mem: storing 1202 in location 1383
 104 run: reply result:address:duplex-list
9999 mem: location 1383 is 1202
9999 run: result 0 is 1202
9999 mem: storing 1202 in location 1247
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1249 is 2
9999 mem: storing 3 in location 1249
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1246 is 1217
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1248 is 1
9999 mem: location 1244 is 5
9999 mem: storing 0 in location 1253
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1248 is 1
9999 mem: location 1250 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1254
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1254 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1249 is 3
9999 mem: location 1251 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1255
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1255 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1246 is 1217
9999 mem: location 1217 is 100
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 1246 is 1217
9999 run: address to copy is 1217
9999 run: its type is number
9999 mem: location 1217 is 100
9999 mem: storing 100 in location 1256
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1256 is 100
9999 mem: storing 0 in location 1257
 103 run: break-unless newline?:boolean, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1249 is 3
9999 mem: location 1245 is 4
9999 mem: storing 0 in location 1259
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1241 is 1009
9999 mem: location 1256 is 100
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1384
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1386
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1387
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
 104 run: break-if color-found?:boolean, 
9999 mem: location 1389 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1388
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1390
9999 mem: storing 0 in location 1391
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1391 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1390
 104 run: break-unless x:address:screen, 
9999 mem: location 1386 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1386 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1386 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1392
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1386 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1386 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1393
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1386 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1386 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1394
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1386 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1386 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1395
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1387 is 100
9999 mem: storing 0 in location 1396
 104 run: break-unless newline?:boolean, 
9999 mem: location 1396 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1392 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1394 is 10
9999 mem: storing 10 in location 1399
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1399 is 10
9999 mem: location 1393 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1399
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1386 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1386 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1400
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1387 is 100
9999 mem: storing 0 in location 1401
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1401 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1400 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1399 is 13
9999 mem: location 1400 is 1014
9999 mem: location 1399 is 13
9999 mem: storing 1041 in location 1403
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1403 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1403 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1404
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1403 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1403 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1405
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1387 is 100
9999 mem: location 1404 is 1041
9999 mem: storing 100 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1388 is 7
9999 mem: location 1405 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1394 is 10
9999 mem: storing 9 in location 1406
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1393 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1407
 104 run: break-if at-right?:boolean, 
9999 mem: location 1407 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1393 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1393 is 1012
9999 mem: storing 4 in location 1012
schedule: print-character/render/new-editor/editor-clears-previous-line-completely-after-inserting-newline
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1386 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1246 is 1217
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1408
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 1410
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1410 is 1217
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1410 is 1217
9999 mem: location 1217 is 100
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 1410 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1232
9999 mem: storing 1232 in location 1411
 104 run: reply result:address:duplex-list
9999 mem: location 1411 is 1232
9999 run: result 0 is 1232
9999 mem: storing 1232 in location 1246
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1247 is 1202
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1412
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1202 in location 1414
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1414 is 1202
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1414 is 1202
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 1414 is 1202
9999 run: address to copy is 1203
9999 run: its type is address
9999 mem: location 1203 is 1217
9999 mem: storing 1217 in location 1415
 104 run: reply result:address:duplex-list
9999 mem: location 1415 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 1247
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1249 is 3
9999 mem: storing 4 in location 1249
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1246 is 1232
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1248 is 1
9999 mem: location 1244 is 5
9999 mem: storing 0 in location 1253
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1248 is 1
9999 mem: location 1250 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1254
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1254 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1249 is 4
9999 mem: location 1251 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1255
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1255 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1246 is 1232
9999 mem: location 1232 is 101
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1217
9999 mem: location 1246 is 1232
9999 run: address to copy is 1232
9999 run: its type is number
9999 mem: location 1232 is 101
9999 mem: storing 101 in location 1256
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1256 is 101
9999 mem: storing 0 in location 1257
 103 run: break-unless newline?:boolean, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1249 is 4
9999 mem: location 1245 is 4
9999 mem: storing 1 in location 1259
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1259 is 1
9999 run: jump-unless fell through
 103 run: print-character screen:address, 8617:literal/loop-back-to-left, 245:literal/grey
9999 mem: location 1241 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1416
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1418
 104 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1419
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1420
9999 mem: storing 1 in location 1421
 104 run: break-if color-found?:boolean, 
9999 mem: location 1421 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1422
9999 mem: storing 0 in location 1423
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1423 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1422
 104 run: break-unless x:address:screen, 
9999 mem: location 1418 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1418 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1418 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1424
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1418 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1418 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1425
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1418 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1418 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1426
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1418 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1418 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1427
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1419 is 8617
9999 mem: storing 0 in location 1428
 104 run: break-unless newline?:boolean, 
9999 mem: location 1428 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1424 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1426 is 10
9999 mem: storing 10 in location 1431
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1431 is 10
9999 mem: location 1425 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1431
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1418 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1418 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1432
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1419 is 8617
9999 mem: storing 0 in location 1433
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1433 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1432 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1431 is 14
9999 mem: location 1432 is 1014
9999 mem: location 1431 is 14
9999 mem: storing 1043 in location 1435
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1435 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1435 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1436
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1435 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1435 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1437
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1419 is 8617
9999 mem: location 1436 is 1043
9999 mem: storing 8617 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1420 is 245
9999 mem: location 1437 is 1044
9999 mem: storing 245 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1426 is 10
9999 mem: storing 9 in location 1438
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1425 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1438 is 9
9999 mem: storing 0 in location 1439
 104 run: break-if at-right?:boolean, 
9999 mem: location 1439 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1425 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1425 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1418 is 1009
 103 run: column:number <- copy left:number
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1249
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1248 is 1
9999 mem: storing 2 in location 1248
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1241 is 1009
9999 mem: location 1248 is 2
9999 mem: location 1249 is 0
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1440
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1442
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1443
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1444
 104 run: break-unless x:address:screen, 
9999 mem: location 1442 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1442 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1442 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1445
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1443 is 2
9999 mem: location 1445 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1442 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1442 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1446
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1444 is 0
9999 mem: location 1446 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1442 is 1009
 103 run: loop +next-character:label
9999 run: jumping to instruction 20
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1246 is 1232
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1248 is 2
9999 mem: location 1244 is 5
9999 mem: storing 0 in location 1253
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1248 is 2
9999 mem: location 1250 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 0 in location 1254
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1254 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1246 is 1232
9999 mem: location 1232 is 101
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1217
9999 mem: location 1246 is 1232
9999 run: address to copy is 1232
9999 run: its type is number
9999 mem: location 1232 is 101
9999 mem: storing 101 in location 1256
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1256 is 101
9999 mem: storing 0 in location 1257
 103 run: break-unless newline?:boolean, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1249 is 0
9999 mem: location 1245 is 4
9999 mem: storing 0 in location 1259
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1241 is 1009
9999 mem: location 1256 is 101
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1447
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1449
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1450
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1451
9999 mem: storing 0 in location 1452
 104 run: break-if color-found?:boolean, 
9999 mem: location 1452 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1451
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1453
9999 mem: storing 0 in location 1454
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1454 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1453
 104 run: break-unless x:address:screen, 
9999 mem: location 1449 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1449 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1449 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1455
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1449 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1449 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1456
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1449 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1449 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1457
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1449 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1449 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1458
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1450 is 101
9999 mem: storing 0 in location 1459
 104 run: break-unless newline?:boolean, 
9999 mem: location 1459 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1455 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1457 is 10
9999 mem: storing 20 in location 1462
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1462 is 20
9999 mem: location 1456 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1462
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1449 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1449 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1463
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1450 is 101
9999 mem: storing 0 in location 1464
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1464 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1463 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1462 is 20
9999 mem: location 1463 is 1014
9999 mem: location 1462 is 20
9999 mem: storing 1055 in location 1466
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1466 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1466 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1467
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1466 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1466 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1468
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1450 is 101
9999 mem: location 1467 is 1055
9999 mem: storing 101 in location 1055
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1451 is 7
9999 mem: location 1468 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1457 is 10
9999 mem: storing 9 in location 1469
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1456 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1469 is 9
9999 mem: storing 0 in location 1470
 104 run: break-if at-right?:boolean, 
9999 mem: location 1470 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1456 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1456 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1449 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1246 is 1232
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1471
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1232 in location 1473
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1473 is 1232
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1473 is 1232
9999 mem: location 1232 is 101
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1217
9999 mem: location 1473 is 1232
9999 run: address to copy is 1233
9999 run: its type is address
9999 mem: location 1233 is 0
9999 mem: storing 0 in location 1474
 104 run: reply result:address:duplex-list
9999 mem: location 1474 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1246
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1247 is 1217
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1475
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 1477
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1477 is 1217
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1477 is 1217
9999 mem: location 1217 is 100
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 1477 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1232
9999 mem: storing 1232 in location 1478
 104 run: reply result:address:duplex-list
9999 mem: location 1478 is 1232
9999 run: result 0 is 1232
9999 mem: storing 1232 in location 1247
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1249 is 0
9999 mem: storing 1 in location 1249
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1246 is 0
9999 run: jumping to instruction 64
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1248 is 2
9999 mem: location 1250 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 0 in location 1254
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1249 is 1
9999 mem: location 1251 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1260
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1254 is 0
9999 mem: location 1260 is 0
9999 mem: storing 0 in location 1261
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1248 is 2
9999 mem: location 1250 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 0 in location 1262
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1263
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 83
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1241 is 1009
9999 mem: location 1249 is 1
9999 mem: location 1245 is 4
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1479
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1481
 104 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1482
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1483
 104 run: column:number <- copy left:number
9999 mem: location 1482 is 1
9999 mem: storing 1 in location 1484
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1484 is 1
9999 mem: location 1483 is 4
9999 mem: storing 0 in location 1485
 104 run: break-if done?:boolean, 
9999 mem: location 1485 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1481 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1486
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1488
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1489
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1490
9999 mem: storing 0 in location 1491
 105 run: break-if color-found?:boolean, 
9999 mem: location 1491 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1490
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1492
9999 mem: storing 0 in location 1493
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1493 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1492
 105 run: break-unless x:address:screen, 
9999 mem: location 1488 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1488 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1488 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1494
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1488 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1488 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1495
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1488 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1488 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1496
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1488 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1488 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1497
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1489 is 32
9999 mem: storing 0 in location 1498
 105 run: break-unless newline?:boolean, 
9999 mem: location 1498 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1494 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1496 is 10
9999 mem: storing 20 in location 1501
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1501 is 20
9999 mem: location 1495 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1501
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1488 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1488 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1502
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1489 is 32
9999 mem: storing 0 in location 1503
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1503 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1502 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1501 is 21
9999 mem: location 1502 is 1014
9999 mem: location 1501 is 21
9999 mem: storing 1057 in location 1505
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1505 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1505 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1506
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1505 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1505 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1507
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1489 is 32
9999 mem: location 1506 is 1057
9999 mem: storing 32 in location 1057
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1490 is 7
9999 mem: location 1507 is 1058
9999 mem: storing 7 in location 1058
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1496 is 10
9999 mem: storing 9 in location 1508
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1495 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1508 is 9
9999 mem: storing 0 in location 1509
 105 run: break-if at-right?:boolean, 
9999 mem: location 1509 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1495 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1495 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1488 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1484 is 1
9999 mem: storing 2 in location 1484
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1484 is 2
9999 mem: location 1483 is 4
9999 mem: storing 0 in location 1485
 104 run: break-if done?:boolean, 
9999 mem: location 1485 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1481 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1510
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1512
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1513
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1514
9999 mem: storing 0 in location 1515
 105 run: break-if color-found?:boolean, 
9999 mem: location 1515 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1514
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1516
9999 mem: storing 0 in location 1517
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1517 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1516
 105 run: break-unless x:address:screen, 
9999 mem: location 1512 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1512 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1512 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1518
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1512 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1512 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1519
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1512 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1512 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1520
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1512 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1512 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1521
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1513 is 32
9999 mem: storing 0 in location 1522
 105 run: break-unless newline?:boolean, 
9999 mem: location 1522 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1518 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1520 is 10
9999 mem: storing 20 in location 1525
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1525 is 20
9999 mem: location 1519 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1525
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1512 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1512 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1526
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1513 is 32
9999 mem: storing 0 in location 1527
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1527 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1526 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1525 is 22
9999 mem: location 1526 is 1014
9999 mem: location 1525 is 22
9999 mem: storing 1059 in location 1529
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1529 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1529 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1530
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1529 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1529 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1531
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1513 is 32
9999 mem: location 1530 is 1059
9999 mem: storing 32 in location 1059
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1514 is 7
9999 mem: location 1531 is 1060
9999 mem: storing 7 in location 1060
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1520 is 10
9999 mem: storing 9 in location 1532
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1519 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1532 is 9
9999 mem: storing 0 in location 1533
 105 run: break-if at-right?:boolean, 
9999 mem: location 1533 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1519 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1519 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1512 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1484 is 2
9999 mem: storing 3 in location 1484
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1484 is 3
9999 mem: location 1483 is 4
9999 mem: storing 0 in location 1485
 104 run: break-if done?:boolean, 
9999 mem: location 1485 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1481 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1534
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1536
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1537
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1538
9999 mem: storing 0 in location 1539
 105 run: break-if color-found?:boolean, 
9999 mem: location 1539 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1538
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1540
9999 mem: storing 0 in location 1541
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1541 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1540
 105 run: break-unless x:address:screen, 
9999 mem: location 1536 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1536 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1536 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1542
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1536 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1536 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1543
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1536 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1536 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1544
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1536 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1536 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1545
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1537 is 32
9999 mem: storing 0 in location 1546
 105 run: break-unless newline?:boolean, 
9999 mem: location 1546 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1542 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1544 is 10
9999 mem: storing 20 in location 1549
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1549 is 20
9999 mem: location 1543 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1549
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1536 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1536 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1550
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1537 is 32
9999 mem: storing 0 in location 1551
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1551 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1550 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1549 is 23
9999 mem: location 1550 is 1014
9999 mem: location 1549 is 23
9999 mem: storing 1061 in location 1553
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1553 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1553 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1554
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1553 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1553 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1555
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1537 is 32
9999 mem: location 1554 is 1061
9999 mem: storing 32 in location 1061
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1538 is 7
9999 mem: location 1555 is 1062
9999 mem: storing 7 in location 1062
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1544 is 10
9999 mem: storing 9 in location 1556
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1543 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1556 is 9
9999 mem: storing 0 in location 1557
 105 run: break-if at-right?:boolean, 
9999 mem: location 1557 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1543 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1543 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1536 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1484 is 3
9999 mem: storing 4 in location 1484
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1484 is 4
9999 mem: location 1483 is 4
9999 mem: storing 0 in location 1485
 104 run: break-if done?:boolean, 
9999 mem: location 1485 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1481 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1558
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1560
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1561
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1562
9999 mem: storing 0 in location 1563
 105 run: break-if color-found?:boolean, 
9999 mem: location 1563 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1562
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1564
9999 mem: storing 0 in location 1565
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1565 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1564
 105 run: break-unless x:address:screen, 
9999 mem: location 1560 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1560 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1560 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1566
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1560 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1560 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1567
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1560 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1560 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1568
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1560 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1560 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1569
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1561 is 32
9999 mem: storing 0 in location 1570
 105 run: break-unless newline?:boolean, 
9999 mem: location 1570 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1566 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1568 is 10
9999 mem: storing 20 in location 1573
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1573 is 20
9999 mem: location 1567 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1573
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1560 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1560 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1574
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1561 is 32
9999 mem: storing 0 in location 1575
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1575 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1574 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1573 is 24
9999 mem: location 1574 is 1014
9999 mem: location 1573 is 24
9999 mem: storing 1063 in location 1577
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1577 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1577 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1578
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1577 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1577 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1579
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1561 is 32
9999 mem: location 1578 is 1063
9999 mem: storing 32 in location 1063
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1562 is 7
9999 mem: location 1579 is 1064
9999 mem: storing 7 in location 1064
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1568 is 10
9999 mem: storing 9 in location 1580
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1567 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1580 is 9
9999 mem: storing 0 in location 1581
 105 run: break-if at-right?:boolean, 
9999 mem: location 1581 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1567 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1567 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1560 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1484 is 4
9999 mem: storing 5 in location 1484
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1484 is 5
9999 mem: location 1483 is 4
9999 mem: storing 1 in location 1485
 104 run: break-if done?:boolean, 
9999 mem: location 1485 is 1
9999 run: jumping to instruction 11
 103 run: reply row:number, screen:address/same-as-ingredient:0
9999 mem: location 1248 is 2
9999 mem: location 1241 is 1009
9999 run: result 0 is 2
9999 run: result 1 is 1009
9999 mem: storing 1009 in location 1135
 102 run: reply result:address:editor-data
9999 mem: location 1138 is 1147
9999 run: result 0 is 1147
9999 mem: storing 1147 in location 2
 101 run: assume-console [
    type [
]
  ]
parse: instruction: type
parse:   ingredient: {name: "\n", properties: [_: "literal-string"]}
 101 run: screen-should-contain [
    .          .
    .abcd↩     .
    .e         .
    .          .
    .          .
  ]
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: editor-event-loop ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1587
9999 mem: location 2 is 1147
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1589
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1591
 102 run: console:address <- next-ingredient 
9999 mem: storing 1587 in location 1592
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1147 in location 1593
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 1592 is 1587
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1604
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1587 in location 1606
 103 run: break-unless x:address:console, 
9999 mem: location 1606 is 1587
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 1606 is 1587
9999 mem: location 1587 is 0
9999 mem: location 1588 is 1582
9999 mem: location 1606 is 1587
9999 run: address to copy is 1587
9999 mem: storing 1587 in location 1607
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 1606 is 1587
9999 mem: location 1587 is 0
9999 mem: location 1588 is 1582
9999 mem: location 1606 is 1587
9999 run: address to copy is 1588
9999 run: its type is address
9999 mem: location 1588 is 1582
9999 mem: storing 1582 in location 1608
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 1608 is 1582
9999 mem: location 1582 is 1
9999 mem: location 1583 is 0
9999 mem: location 1584 is 10
9999 mem: location 1585 is 0
9999 mem: location 1586 is 0
9999 mem: location 1608 is 1582
9999 mem: storing 1 in location 1609
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 1607 is 1587
9999 mem: location 1587 is 0
9999 mem: location 1609 is 1
9999 mem: storing 0 in location 1610
 103 run: break-unless done?:boolean, 
9999 mem: location 1610 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 1608 is 1582
9999 mem: location 1582 is 1
9999 mem: location 1583 is 0
9999 mem: location 1584 is 10
9999 mem: location 1585 is 0
9999 mem: location 1586 is 0
9999 mem: location 1607 is 1587
9999 mem: location 1587 is 0
9999 mem: location 1608 is 1582
9999 mem: location 1607 is 1587
9999 mem: location 1587 is 0
9999 run: address to copy is 1583
9999 run: its type is event
9999 mem: location 1583 is 0
9999 mem: location 1584 is 10
9999 mem: location 1585 is 0
9999 mem: location 1586 is 0
9999 mem: storing 0 in location 1612
9999 mem: storing 10 in location 1613
9999 mem: storing 0 in location 1614
9999 mem: storing 0 in location 1615
 103 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 1607 is 1587
9999 mem: location 1587 is 0
9999 mem: location 1607 is 1587
9999 mem: storing 1 in location 1587
 103 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 1612 is 0
9999 mem: location 1613 is 10
9999 mem: location 1614 is 0
9999 mem: location 1615 is 0
9999 mem: location 1606 is 1587
9999 run: result 0 is [0, 10, 0, 0]
9999 run: result 1 is 1587
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1594
9999 mem: storing 10 in location 1595
9999 mem: storing 0 in location 1596
9999 mem: storing 0 in location 1597
9999 mem: storing 1587 in location 1592
9999 mem: storing 1 in location 1598
9999 mem: storing 0 in location 1599
 102 run: loop-unless found?:boolean, 
9999 mem: location 1598 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 1599 is 0
9999 run: jump-if fell through
 102 run: trace [app], [next-event]
   1 app: next-event
 102 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 1594 is 0
9999 mem: location 1595 is 10
9999 mem: location 1596 is 0
9999 mem: location 1597 is 0
9999 mem: storing 0 in location 1600
 102 run: break-unless t:address:touch-event, 
9999 mem: location 1600 is 0
9999 run: jumping to instruction 15
 102 run: handle-event screen:address, console:address, editor:address:editor-data, e:event
9999 mem: location 1591 is 1009
9999 mem: location 1592 is 1587
9999 mem: location 1593 is 1147
9999 mem: location 1594 is 0
9999 mem: location 1595 is 10
9999 mem: location 1596 is 0
9999 mem: location 1597 is 0
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 38
9999 mem: new alloc: 1617
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1619
 103 run: console:address <- next-ingredient 
9999 mem: storing 1587 in location 1620
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1147 in location 1621
 103 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1622
9999 mem: storing 10 in location 1623
9999 mem: storing 0 in location 1624
9999 mem: storing 0 in location 1625
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1621 is 1147
9999 run: jumping to instruction 7
 103 run: c:address:character <- maybe-convert e:event, text:variant
9999 mem: location 1622 is 0
9999 mem: location 1623 is 10
9999 mem: location 1624 is 0
9999 mem: location 1625 is 0
9999 mem: storing 1623 in location 1626
 103 run: break-unless c:address:character, 
9999 mem: location 1626 is 1623
9999 run: jump-unless fell through
 103 run: backspace?:boolean <- equal c:address:character/deref, 8:literal/backspace
9999 mem: location 1626 is 1623
9999 mem: location 1623 is 10
9999 mem: storing 0 in location 1627
 103 run: break-unless backspace?:boolean, 
9999 mem: location 1627 is 0
9999 run: jumping to instruction 15
 103 run: insert-at-cursor editor:address:editor-data, c:address:character/deref, screen:address
9999 mem: location 1621 is 1147
9999 mem: location 1626 is 1623
9999 mem: location 1623 is 10
9999 mem: location 1619 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 15
9999 mem: new alloc: 1656
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1147 in location 1658
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1659
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1660
 104 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1658 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1658 is 1147
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 1661
 104 run: d:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1658 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1658 is 1147
9999 run: address to copy is 1147
9999 run: its type is address
9999 mem: location 1147 is 1161
9999 mem: storing 1161 in location 1662
 104 run: insert-duplex c:character, before-cursor:address:address:duplex-list/deref
9999 mem: location 1659 is 10
9999 mem: location 1661 is 1148
9999 mem: location 1148 is 1161
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1672
 105 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1674
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1675
 105 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1680
9999 mem: storing 1680 in location 1676
 105 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1676 is 1680
9999 mem: location 1680 is 0
9999 mem: location 1681 is 0
9999 mem: location 1682 is 0
9999 mem: location 1676 is 1680
9999 run: address to copy is 1680
9999 mem: storing 1680 in location 1677
 105 run: val:address:location/deref <- copy x:location
9999 mem: location 1674 is 10
9999 mem: location 1677 is 1680
9999 mem: storing 10 in location 1680
 105 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1675 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1172
9999 mem: location 1163 is 0
9999 mem: location 1675 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1172
9999 mem: storing 1172 in location 1678
 105 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1675 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1172
9999 mem: location 1163 is 0
9999 mem: location 1675 is 1161
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 1679
 105 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1676 is 1680
9999 mem: location 1679 is 1162
9999 mem: storing 1680 in location 1162
 105 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1676 is 1680
9999 mem: location 1680 is 10
9999 mem: location 1681 is 0
9999 mem: location 1682 is 0
9999 mem: location 1676 is 1680
9999 run: address to copy is 1682
9999 mem: storing 1682 in location 1679
 105 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1675 is 1161
9999 mem: location 1679 is 1682
9999 mem: storing 1161 in location 1682
 105 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1676 is 1680
9999 mem: location 1680 is 10
9999 mem: location 1681 is 0
9999 mem: location 1682 is 1161
9999 mem: location 1676 is 1680
9999 run: address to copy is 1681
9999 mem: storing 1681 in location 1679
 105 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1678 is 1172
9999 mem: location 1679 is 1681
9999 mem: storing 1172 in location 1681
 105 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1678 is 1172
9999 run: jumping to instruction 15
 105 run: y:address:address:duplex-list <- get-address next-node:address:duplex-list/deref, prev:offset
9999 mem: location 1678 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 1678 is 1172
9999 run: address to copy is 1174
9999 mem: storing 1174 in location 1679
 105 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1676 is 1680
9999 mem: location 1679 is 1174
9999 mem: storing 1680 in location 1174
 105 run: reply new-node:address:duplex-list
9999 mem: location 1676 is 1680
 104 run: before-cursor:address:address:duplex-list/deref <- next-duplex before-cursor:address:address:duplex-list/deref
9999 mem: location 1661 is 1148
9999 mem: location 1148 is 1161
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1683
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1685
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1685 is 1161
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1685 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1680
9999 mem: location 1163 is 0
9999 mem: location 1685 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1680
9999 mem: storing 1680 in location 1686
 105 run: reply result:address:duplex-list
9999 mem: location 1686 is 1680
9999 run: result 0 is 1680
9999 mem: location 1661 is 1148
9999 mem: storing 1680 in location 1148
 104 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1658 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1680
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1658 is 1147
9999 run: address to copy is 1151
9999 mem: storing 1151 in location 1663
 104 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1658 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1680
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1658 is 1147
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 1664
 104 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1658 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1680
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1658 is 1147
9999 run: address to copy is 1149
9999 run: its type is number
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1665
 104 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1658 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1680
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1658 is 1147
9999 run: address to copy is 1150
9999 run: its type is number
9999 mem: location 1150 is 4
9999 mem: storing 4 in location 1666
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1659 is 10
9999 mem: storing 1 in location 1667
 104 run: break-unless newline?:boolean, 
9999 mem: location 1667 is 1
9999 run: jump-unless fell through
 104 run: cursor-row:address:number/deref <- add cursor-row:address:number/deref, 1:literal
9999 mem: location 1663 is 1151
9999 mem: location 1151 is 1
9999 mem: location 1663 is 1151
9999 mem: storing 2 in location 1151
 104 run: cursor-column:address:number/deref <- copy left:number
9999 mem: location 1665 is 0
9999 mem: location 1664 is 1152
9999 mem: storing 0 in location 1152
 104 run: reply 
 103 run: reply 
 102 run: row:number, screen:address <- render screen:address, editor:address:editor-data
9999 mem: location 1591 is 1009
9999 mem: location 1593 is 1147
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1687
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1689
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1147 in location 1690
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1690 is 1147
9999 run: jumping to instruction 5
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1690 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1680
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1690 is 1147
9999 run: address to copy is 1149
9999 run: its type is number
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1691
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1689 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1714
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1716
 104 run: break-unless x:address:screen, 
9999 mem: location 1716 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1716 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1716 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1717
 104 run: reply height:number
9999 mem: location 1717 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1692
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1690 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1680
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1690 is 1147
9999 run: address to copy is 1150
9999 run: its type is number
9999 mem: location 1150 is 4
9999 mem: storing 4 in location 1693
 103 run: hide-screen screen:address
9999 mem: location 1689 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 1718
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1720
 104 run: break-unless x:address:screen, 
9999 mem: location 1720 is 1009
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1720 is 1009
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1690 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1680
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1690 is 1147
9999 run: address to copy is 1147
9999 run: its type is address
9999 mem: location 1147 is 1161
9999 mem: storing 1161 in location 1694
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1694 is 1161
9999 mem: storing 1161 in location 1695
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1694 is 1161
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1721
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1723
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1723 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1723 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1680
9999 mem: location 1163 is 0
9999 mem: location 1723 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1680
9999 mem: storing 1680 in location 1724
 104 run: reply result:address:duplex-list
9999 mem: location 1724 is 1680
9999 run: result 0 is 1680
9999 mem: storing 1680 in location 1694
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1696
 103 run: column:number <- copy left:number
9999 mem: location 1691 is 0
9999 mem: storing 0 in location 1697
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1690 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1680
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1690 is 1147
9999 run: address to copy is 1151
9999 mem: storing 1151 in location 1698
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1690 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1680
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1690 is 1147
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 1699
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1690 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1680
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1690 is 1147
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 1700
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1689 is 1009
9999 mem: location 1696 is 1
9999 mem: location 1697 is 0
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1725
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1727
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1728
schedule: move-cursor/render/editor-event-loop/run1001/editor-clears-previous-line-completely-after-inserting-newline
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1729
 104 run: break-unless x:address:screen, 
9999 mem: location 1727 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1727 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1727 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1730
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1728 is 1
9999 mem: location 1730 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1727 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1727 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1731
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1729 is 0
9999 mem: location 1731 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1727 is 1009
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1694 is 1680
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1696 is 1
9999 mem: location 1692 is 5
9999 mem: storing 0 in location 1701
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1701 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1696 is 1
9999 mem: location 1698 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 1702
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1702 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1694 is 1680
9999 mem: location 1680 is 10
9999 mem: location 1681 is 1172
9999 mem: location 1682 is 1161
9999 mem: location 1694 is 1680
9999 run: address to copy is 1680
9999 run: its type is number
9999 mem: location 1680 is 10
9999 mem: storing 10 in location 1704
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1704 is 10
9999 mem: storing 1 in location 1705
 103 run: break-unless newline?:boolean, 
9999 mem: location 1705 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1696 is 1
9999 mem: location 1698 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 1702
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1702 is 0
9999 run: jumping to instruction 41
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1689 is 1009
9999 mem: location 1697 is 0
9999 mem: location 1693 is 4
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1732
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1734
 104 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1735
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1736
 104 run: column:number <- copy left:number
9999 mem: location 1735 is 0
9999 mem: storing 0 in location 1737
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1737 is 0
9999 mem: location 1736 is 4
9999 mem: storing 0 in location 1738
 104 run: break-if done?:boolean, 
9999 mem: location 1738 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1734 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1739
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1741
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1742
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1743
9999 mem: storing 0 in location 1744
 105 run: break-if color-found?:boolean, 
9999 mem: location 1744 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1743
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1745
9999 mem: storing 0 in location 1746
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1746 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1745
 105 run: break-unless x:address:screen, 
9999 mem: location 1741 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1741 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1741 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1747
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1741 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1741 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1748
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1741 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1741 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1749
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1741 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1741 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1750
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1742 is 32
9999 mem: storing 0 in location 1751
 105 run: break-unless newline?:boolean, 
9999 mem: location 1751 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1747 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1749 is 10
9999 mem: storing 10 in location 1754
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1754 is 10
9999 mem: location 1748 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1754
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1741 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1741 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1755
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1742 is 32
9999 mem: storing 0 in location 1756
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1756 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1755 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1754 is 10
9999 mem: location 1755 is 1014
9999 mem: location 1754 is 10
9999 mem: storing 1035 in location 1758
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1758 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1758 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1759
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1758 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1758 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1760
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1742 is 32
9999 mem: location 1759 is 1035
9999 mem: storing 32 in location 1035
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1743 is 7
9999 mem: location 1760 is 1036
9999 mem: storing 7 in location 1036
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1749 is 10
9999 mem: storing 9 in location 1761
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1748 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1761 is 9
9999 mem: storing 0 in location 1762
 105 run: break-if at-right?:boolean, 
9999 mem: location 1762 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1748 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1748 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1741 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1737 is 0
9999 mem: storing 1 in location 1737
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1737 is 1
9999 mem: location 1736 is 4
9999 mem: storing 0 in location 1738
 104 run: break-if done?:boolean, 
9999 mem: location 1738 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1734 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1763
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1765
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1766
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1767
9999 mem: storing 0 in location 1768
 105 run: break-if color-found?:boolean, 
9999 mem: location 1768 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1767
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1769
9999 mem: storing 0 in location 1770
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1770 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1769
 105 run: break-unless x:address:screen, 
9999 mem: location 1765 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1765 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1765 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1771
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1765 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1765 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1772
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1765 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1765 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1773
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1765 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1765 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1774
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1766 is 32
9999 mem: storing 0 in location 1775
 105 run: break-unless newline?:boolean, 
9999 mem: location 1775 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1771 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1773 is 10
9999 mem: storing 10 in location 1778
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1778 is 10
9999 mem: location 1772 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1778
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1765 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1765 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1779
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1766 is 32
9999 mem: storing 0 in location 1780
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1780 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1779 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1778 is 11
9999 mem: location 1779 is 1014
9999 mem: location 1778 is 11
9999 mem: storing 1037 in location 1782
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1782 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1782 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1783
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1782 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1782 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1784
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1766 is 32
9999 mem: location 1783 is 1037
9999 mem: storing 32 in location 1037
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1767 is 7
9999 mem: location 1784 is 1038
9999 mem: storing 7 in location 1038
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1773 is 10
9999 mem: storing 9 in location 1785
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1772 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1785 is 9
9999 mem: storing 0 in location 1786
 105 run: break-if at-right?:boolean, 
9999 mem: location 1786 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1772 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1772 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1765 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1737 is 1
9999 mem: storing 2 in location 1737
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1737 is 2
9999 mem: location 1736 is 4
9999 mem: storing 0 in location 1738
 104 run: break-if done?:boolean, 
9999 mem: location 1738 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1734 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1787
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1789
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1790
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1791
9999 mem: storing 0 in location 1792
 105 run: break-if color-found?:boolean, 
9999 mem: location 1792 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1791
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1793
9999 mem: storing 0 in location 1794
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1794 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1793
 105 run: break-unless x:address:screen, 
9999 mem: location 1789 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1789 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1789 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1795
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1789 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1789 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1796
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1789 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1789 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1797
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1789 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1789 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1798
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1790 is 32
9999 mem: storing 0 in location 1799
 105 run: break-unless newline?:boolean, 
9999 mem: location 1799 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1795 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1797 is 10
9999 mem: storing 10 in location 1802
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1802 is 10
9999 mem: location 1796 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1802
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1789 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1789 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1803
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1790 is 32
9999 mem: storing 0 in location 1804
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1804 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1803 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1802 is 12
9999 mem: location 1803 is 1014
9999 mem: location 1802 is 12
9999 mem: storing 1039 in location 1806
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1806 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1806 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1807
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1806 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1806 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1808
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1790 is 32
9999 mem: location 1807 is 1039
9999 mem: storing 32 in location 1039
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1791 is 7
9999 mem: location 1808 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1797 is 10
9999 mem: storing 9 in location 1809
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1796 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1809 is 9
9999 mem: storing 0 in location 1810
 105 run: break-if at-right?:boolean, 
9999 mem: location 1810 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1796 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1796 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1789 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1737 is 2
9999 mem: storing 3 in location 1737
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1737 is 3
9999 mem: location 1736 is 4
9999 mem: storing 0 in location 1738
 104 run: break-if done?:boolean, 
9999 mem: location 1738 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1734 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1811
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1813
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1814
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1815
9999 mem: storing 0 in location 1816
 105 run: break-if color-found?:boolean, 
9999 mem: location 1816 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1815
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1817
9999 mem: storing 0 in location 1818
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1818 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1817
 105 run: break-unless x:address:screen, 
9999 mem: location 1813 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1813 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1813 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1819
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1813 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1813 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1820
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1813 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1813 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1821
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1813 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1813 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1822
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1814 is 32
9999 mem: storing 0 in location 1823
 105 run: break-unless newline?:boolean, 
9999 mem: location 1823 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1819 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1821 is 10
9999 mem: storing 10 in location 1826
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1826 is 10
9999 mem: location 1820 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1826
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1813 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1813 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1827
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1814 is 32
9999 mem: storing 0 in location 1828
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1828 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1827 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1826 is 13
9999 mem: location 1827 is 1014
9999 mem: location 1826 is 13
9999 mem: storing 1041 in location 1830
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1830 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1830 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1831
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1830 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1830 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1832
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1814 is 32
9999 mem: location 1831 is 1041
9999 mem: storing 32 in location 1041
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1815 is 7
9999 mem: location 1832 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1821 is 10
9999 mem: storing 9 in location 1833
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1820 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1833 is 9
9999 mem: storing 0 in location 1834
 105 run: break-if at-right?:boolean, 
9999 mem: location 1834 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1820 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1820 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1813 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1737 is 3
9999 mem: storing 4 in location 1737
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1737 is 4
9999 mem: location 1736 is 4
9999 mem: storing 0 in location 1738
 104 run: break-if done?:boolean, 
9999 mem: location 1738 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1734 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1835
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1837
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1838
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1839
9999 mem: storing 0 in location 1840
 105 run: break-if color-found?:boolean, 
9999 mem: location 1840 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1839
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1841
9999 mem: storing 0 in location 1842
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1842 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1841
 105 run: break-unless x:address:screen, 
9999 mem: location 1837 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1837 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1837 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1843
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1837 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1837 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1844
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1837 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1837 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1845
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1837 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1837 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1846
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1838 is 32
9999 mem: storing 0 in location 1847
 105 run: break-unless newline?:boolean, 
9999 mem: location 1847 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1843 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1845 is 10
9999 mem: storing 10 in location 1850
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1850 is 10
9999 mem: location 1844 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1850
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1837 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1837 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1851
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1838 is 32
9999 mem: storing 0 in location 1852
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1852 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1851 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1850 is 14
9999 mem: location 1851 is 1014
9999 mem: location 1850 is 14
9999 mem: storing 1043 in location 1854
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1854 is 1043
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1854 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1855
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1854 is 1043
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1854 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1856
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1838 is 32
9999 mem: location 1855 is 1043
9999 mem: storing 32 in location 1043
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1839 is 7
9999 mem: location 1856 is 1044
9999 mem: storing 7 in location 1044
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1845 is 10
9999 mem: storing 9 in location 1857
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1844 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1857 is 9
9999 mem: storing 0 in location 1858
 105 run: break-if at-right?:boolean, 
9999 mem: location 1858 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1844 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1844 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1837 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1737 is 4
9999 mem: storing 5 in location 1737
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1737 is 5
9999 mem: location 1736 is 4
9999 mem: storing 1 in location 1738
 104 run: break-if done?:boolean, 
9999 mem: location 1738 is 1
9999 run: jumping to instruction 11
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1696 is 1
9999 mem: storing 2 in location 1696
 103 run: column:number <- copy left:number
9999 mem: location 1691 is 0
9999 mem: storing 0 in location 1697
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1689 is 1009
9999 mem: location 1696 is 2
9999 mem: location 1697 is 0
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1859
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1861
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1862
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1863
 104 run: break-unless x:address:screen, 
9999 mem: location 1861 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1861 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1861 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1864
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1862 is 2
9999 mem: location 1864 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1861 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1861 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1865
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1863 is 0
9999 mem: location 1865 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1861 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1694 is 1680
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1866
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1680 in location 1868
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1868 is 1680
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1868 is 1680
9999 mem: location 1680 is 10
9999 mem: location 1681 is 1172
9999 mem: location 1682 is 1161
9999 mem: location 1868 is 1680
9999 run: address to copy is 1681
9999 run: its type is address
9999 mem: location 1681 is 1172
9999 mem: storing 1172 in location 1869
 104 run: reply result:address:duplex-list
9999 mem: location 1869 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1694
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1695 is 1161
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1870
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1872
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1872 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1872 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1680
9999 mem: location 1163 is 0
9999 mem: location 1872 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1680
9999 mem: storing 1680 in location 1873
 104 run: reply result:address:duplex-list
9999 mem: location 1873 is 1680
9999 run: result 0 is 1680
9999 mem: storing 1680 in location 1695
 103 run: loop +next-character:label
9999 run: jumping to instruction 20
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1694 is 1172
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1696 is 2
9999 mem: location 1692 is 5
9999 mem: storing 0 in location 1701
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1701 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1696 is 2
9999 mem: location 1698 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 1 in location 1702
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1702 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1697 is 0
9999 mem: location 1699 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 1 in location 1703
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1703 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1694 is 1172
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1874
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1876
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1876 is 1172
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1876 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1680
9999 mem: location 1876 is 1172
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1680
9999 mem: storing 1680 in location 1877
 104 run: reply result:address:duplex-list
9999 mem: location 1877 is 1680
9999 run: result 0 is 1680
9999 mem: location 1700 is 1148
9999 mem: storing 1680 in location 1148
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1694 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1680
9999 mem: location 1694 is 1172
9999 run: address to copy is 1172
9999 run: its type is number
9999 mem: location 1172 is 97
9999 mem: storing 97 in location 1704
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1704 is 97
9999 mem: storing 0 in location 1705
 103 run: break-unless newline?:boolean, 
9999 mem: location 1705 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1697 is 0
9999 mem: location 1693 is 4
9999 mem: storing 0 in location 1707
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1707 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1689 is 1009
9999 mem: location 1704 is 97
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1878
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1880
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1881
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1882
9999 mem: storing 0 in location 1883
 104 run: break-if color-found?:boolean, 
9999 mem: location 1883 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1882
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1884
9999 mem: storing 0 in location 1885
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1885 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1884
 104 run: break-unless x:address:screen, 
9999 mem: location 1880 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1880 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1880 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1886
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1880 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1880 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1887
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1880 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1880 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1888
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1880 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1880 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1889
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1881 is 97
9999 mem: storing 0 in location 1890
 104 run: break-unless newline?:boolean, 
9999 mem: location 1890 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1886 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1888 is 10
9999 mem: storing 20 in location 1893
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1893 is 20
9999 mem: location 1887 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1893
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1880 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1880 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1894
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1881 is 97
9999 mem: storing 0 in location 1895
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1895 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1894 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1893 is 20
9999 mem: location 1894 is 1014
9999 mem: location 1893 is 20
9999 mem: storing 1055 in location 1897
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1897 is 1055
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1897 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1898
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1897 is 1055
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1897 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1899
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1881 is 97
9999 mem: location 1898 is 1055
9999 mem: storing 97 in location 1055
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1882 is 7
9999 mem: location 1899 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1888 is 10
9999 mem: storing 9 in location 1900
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1887 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1900 is 9
9999 mem: storing 0 in location 1901
 104 run: break-if at-right?:boolean, 
9999 mem: location 1901 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1887 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1887 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1880 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1694 is 1172
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1902
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1904
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1904 is 1172
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1904 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1680
9999 mem: location 1904 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1187
9999 mem: storing 1187 in location 1905
 104 run: reply result:address:duplex-list
9999 mem: location 1905 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 1694
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1695 is 1680
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1906
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1680 in location 1908
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1908 is 1680
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1908 is 1680
9999 mem: location 1680 is 10
9999 mem: location 1681 is 1172
9999 mem: location 1682 is 1161
9999 mem: location 1908 is 1680
9999 run: address to copy is 1681
9999 run: its type is address
9999 mem: location 1681 is 1172
9999 mem: storing 1172 in location 1909
 104 run: reply result:address:duplex-list
9999 mem: location 1909 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1695
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1697 is 0
9999 mem: storing 1 in location 1697
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1694 is 1187
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1696 is 2
9999 mem: location 1692 is 5
9999 mem: storing 0 in location 1701
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1701 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1696 is 2
9999 mem: location 1698 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 1 in location 1702
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1702 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1697 is 1
9999 mem: location 1699 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1703
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1703 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1694 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 1694 is 1187
9999 run: address to copy is 1187
9999 run: its type is number
9999 mem: location 1187 is 98
9999 mem: storing 98 in location 1704
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1704 is 98
9999 mem: storing 0 in location 1705
 103 run: break-unless newline?:boolean, 
9999 mem: location 1705 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1697 is 1
9999 mem: location 1693 is 4
9999 mem: storing 0 in location 1707
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1707 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1689 is 1009
9999 mem: location 1704 is 98
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1910
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1912
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1913
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1914
9999 mem: storing 0 in location 1915
 104 run: break-if color-found?:boolean, 
9999 mem: location 1915 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1914
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1916
9999 mem: storing 0 in location 1917
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1917 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1916
 104 run: break-unless x:address:screen, 
9999 mem: location 1912 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1912 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1912 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1918
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1912 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1912 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1919
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1912 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1912 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1920
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1912 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1912 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1921
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1913 is 98
9999 mem: storing 0 in location 1922
 104 run: break-unless newline?:boolean, 
9999 mem: location 1922 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1918 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1920 is 10
9999 mem: storing 20 in location 1925
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1925 is 20
9999 mem: location 1919 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1925
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1912 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1912 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1926
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1913 is 98
9999 mem: storing 0 in location 1927
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1927 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1926 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 97
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1925 is 21
9999 mem: location 1926 is 1014
9999 mem: location 1925 is 21
9999 mem: storing 1057 in location 1929
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1929 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1929 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1930
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1929 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1929 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1931
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1913 is 98
9999 mem: location 1930 is 1057
9999 mem: storing 98 in location 1057
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1914 is 7
9999 mem: location 1931 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1920 is 10
9999 mem: storing 9 in location 1932
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1919 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1932 is 9
9999 mem: storing 0 in location 1933
 104 run: break-if at-right?:boolean, 
9999 mem: location 1933 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1919 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1919 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1912 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1694 is 1187
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1934
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 1936
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1936 is 1187
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1936 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 1936 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1202
9999 mem: storing 1202 in location 1937
 104 run: reply result:address:duplex-list
9999 mem: location 1937 is 1202
9999 run: result 0 is 1202
9999 mem: storing 1202 in location 1694
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1695 is 1172
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1938
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1940
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1940 is 1172
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1940 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1680
9999 mem: location 1940 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1187
9999 mem: storing 1187 in location 1941
 104 run: reply result:address:duplex-list
9999 mem: location 1941 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 1695
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1697 is 1
9999 mem: storing 2 in location 1697
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1694 is 1202
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1696 is 2
9999 mem: location 1692 is 5
9999 mem: storing 0 in location 1701
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1701 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1696 is 2
9999 mem: location 1698 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 1 in location 1702
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1702 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1697 is 2
9999 mem: location 1699 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1703
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1703 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1694 is 1202
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 1694 is 1202
9999 run: address to copy is 1202
9999 run: its type is number
9999 mem: location 1202 is 99
9999 mem: storing 99 in location 1704
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1704 is 99
9999 mem: storing 0 in location 1705
 103 run: break-unless newline?:boolean, 
9999 mem: location 1705 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1697 is 2
9999 mem: location 1693 is 4
9999 mem: storing 0 in location 1707
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1707 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1689 is 1009
9999 mem: location 1704 is 99
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1942
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1944
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1945
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1946
9999 mem: storing 0 in location 1947
 104 run: break-if color-found?:boolean, 
9999 mem: location 1947 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1946
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1948
9999 mem: storing 0 in location 1949
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1949 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1948
 104 run: break-unless x:address:screen, 
9999 mem: location 1944 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1944 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1944 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1950
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1944 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1944 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1951
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1944 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1944 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1952
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1944 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1944 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1953
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1945 is 99
9999 mem: storing 0 in location 1954
 104 run: break-unless newline?:boolean, 
9999 mem: location 1954 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1950 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1952 is 10
9999 mem: storing 20 in location 1957
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1957 is 20
9999 mem: location 1951 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1957
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1944 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1944 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1958
schedule: print-character/render/editor-event-loop/run1001/editor-clears-previous-line-completely-after-inserting-newline
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1945 is 99
9999 mem: storing 0 in location 1959
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1959 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1958 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 97
9999 mem: location 1056 is 7
9999 mem: location 1057 is 98
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1957 is 22
9999 mem: location 1958 is 1014
9999 mem: location 1957 is 22
9999 mem: storing 1059 in location 1961
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1961 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1961 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1962
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1961 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1961 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1963
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1945 is 99
9999 mem: location 1962 is 1059
9999 mem: storing 99 in location 1059
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1946 is 7
9999 mem: location 1963 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1952 is 10
9999 mem: storing 9 in location 1964
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1951 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1964 is 9
9999 mem: storing 0 in location 1965
 104 run: break-if at-right?:boolean, 
9999 mem: location 1965 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1951 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1951 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1944 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1694 is 1202
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1966
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1202 in location 1968
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1968 is 1202
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1968 is 1202
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 1968 is 1202
9999 run: address to copy is 1203
9999 run: its type is address
9999 mem: location 1203 is 1217
9999 mem: storing 1217 in location 1969
 104 run: reply result:address:duplex-list
9999 mem: location 1969 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 1694
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1695 is 1187
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1970
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 1972
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1972 is 1187
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1972 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 1972 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1202
9999 mem: storing 1202 in location 1973
 104 run: reply result:address:duplex-list
9999 mem: location 1973 is 1202
9999 run: result 0 is 1202
9999 mem: storing 1202 in location 1695
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1697 is 2
9999 mem: storing 3 in location 1697
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1694 is 1217
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1696 is 2
9999 mem: location 1692 is 5
9999 mem: storing 0 in location 1701
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1701 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1696 is 2
9999 mem: location 1698 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 1 in location 1702
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1702 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1697 is 3
9999 mem: location 1699 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1703
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1703 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1694 is 1217
9999 mem: location 1217 is 100
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 1694 is 1217
9999 run: address to copy is 1217
9999 run: its type is number
9999 mem: location 1217 is 100
9999 mem: storing 100 in location 1704
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1704 is 100
9999 mem: storing 0 in location 1705
 103 run: break-unless newline?:boolean, 
9999 mem: location 1705 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1697 is 3
9999 mem: location 1693 is 4
9999 mem: storing 0 in location 1707
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1707 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1689 is 1009
9999 mem: location 1704 is 100
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1974
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1976
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1977
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1978
9999 mem: storing 0 in location 1979
 104 run: break-if color-found?:boolean, 
9999 mem: location 1979 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1978
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1980
9999 mem: storing 0 in location 1981
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1981 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1980
 104 run: break-unless x:address:screen, 
9999 mem: location 1976 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1976 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1976 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1982
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1976 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1976 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1983
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1976 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1976 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1984
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1976 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1976 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1985
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1977 is 100
9999 mem: storing 0 in location 1986
 104 run: break-unless newline?:boolean, 
9999 mem: location 1986 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1982 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1984 is 10
9999 mem: storing 20 in location 1989
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1989 is 20
9999 mem: location 1983 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1989
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1976 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1976 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1990
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1977 is 100
9999 mem: storing 0 in location 1991
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1991 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1990 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 97
9999 mem: location 1056 is 7
9999 mem: location 1057 is 98
9999 mem: location 1058 is 7
9999 mem: location 1059 is 99
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1989 is 23
9999 mem: location 1990 is 1014
9999 mem: location 1989 is 23
9999 mem: storing 1061 in location 1993
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1993 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1993 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1994
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1993 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1993 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1995
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1977 is 100
9999 mem: location 1994 is 1061
9999 mem: storing 100 in location 1061
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1978 is 7
9999 mem: location 1995 is 1062
9999 mem: storing 7 in location 1062
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1984 is 10
9999 mem: storing 9 in location 1996
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1983 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1996 is 9
9999 mem: storing 0 in location 1997
 104 run: break-if at-right?:boolean, 
9999 mem: location 1997 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1983 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1983 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1976 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1694 is 1217
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1998
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 2000
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2000 is 1217
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2000 is 1217
9999 mem: location 1217 is 100
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 2000 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1232
9999 mem: storing 1232 in location 2001
 104 run: reply result:address:duplex-list
9999 mem: location 2001 is 1232
9999 run: result 0 is 1232
9999 mem: storing 1232 in location 1694
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1695 is 1202
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2002
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1202 in location 2004
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2004 is 1202
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2004 is 1202
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 2004 is 1202
9999 run: address to copy is 1203
9999 run: its type is address
9999 mem: location 1203 is 1217
9999 mem: storing 1217 in location 2005
 104 run: reply result:address:duplex-list
9999 mem: location 2005 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 1695
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1697 is 3
9999 mem: storing 4 in location 1697
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1694 is 1232
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1696 is 2
9999 mem: location 1692 is 5
9999 mem: storing 0 in location 1701
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1701 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1696 is 2
9999 mem: location 1698 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 1 in location 1702
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1702 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1697 is 4
9999 mem: location 1699 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1703
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1703 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1694 is 1232
9999 mem: location 1232 is 101
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1217
9999 mem: location 1694 is 1232
9999 run: address to copy is 1232
9999 run: its type is number
9999 mem: location 1232 is 101
9999 mem: storing 101 in location 1704
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1704 is 101
9999 mem: storing 0 in location 1705
 103 run: break-unless newline?:boolean, 
9999 mem: location 1705 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1697 is 4
9999 mem: location 1693 is 4
9999 mem: storing 1 in location 1707
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1707 is 1
9999 run: jump-unless fell through
 103 run: print-character screen:address, 8617:literal/loop-back-to-left, 245:literal/grey
9999 mem: location 1689 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2006
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2008
 104 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 2009
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2010
9999 mem: storing 1 in location 2011
 104 run: break-if color-found?:boolean, 
9999 mem: location 2011 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2012
9999 mem: storing 0 in location 2013
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2013 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2012
 104 run: break-unless x:address:screen, 
9999 mem: location 2008 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2008 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2008 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2014
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2008 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2008 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2015
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2008 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2008 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2016
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2008 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2008 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2017
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2009 is 8617
9999 mem: storing 0 in location 2018
 104 run: break-unless newline?:boolean, 
9999 mem: location 2018 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2014 is 1011
9999 mem: location 1011 is 2
9999 mem: location 2016 is 10
9999 mem: storing 20 in location 2021
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2021 is 20
9999 mem: location 2015 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 2021
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2008 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2008 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2022
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2009 is 8617
9999 mem: storing 0 in location 2023
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2023 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2022 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 97
9999 mem: location 1056 is 7
9999 mem: location 1057 is 98
9999 mem: location 1058 is 7
9999 mem: location 1059 is 99
9999 mem: location 1060 is 7
9999 mem: location 1061 is 100
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2021 is 24
9999 mem: location 2022 is 1014
9999 mem: location 2021 is 24
9999 mem: storing 1063 in location 2025
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2025 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 2025 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 2026
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2025 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 2025 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 2027
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2009 is 8617
9999 mem: location 2026 is 1063
9999 mem: storing 8617 in location 1063
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2010 is 245
9999 mem: location 2027 is 1064
9999 mem: storing 245 in location 1064
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2016 is 10
9999 mem: storing 9 in location 2028
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2015 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2028 is 9
9999 mem: storing 0 in location 2029
 104 run: break-if at-right?:boolean, 
9999 mem: location 2029 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2015 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2015 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2008 is 1009
 103 run: column:number <- copy left:number
9999 mem: location 1691 is 0
9999 mem: storing 0 in location 1697
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1696 is 2
9999 mem: storing 3 in location 1696
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1689 is 1009
9999 mem: location 1696 is 3
9999 mem: location 1697 is 0
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2030
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2032
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 2033
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2034
 104 run: break-unless x:address:screen, 
9999 mem: location 2032 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2032 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2032 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2035
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2033 is 3
9999 mem: location 2035 is 1011
9999 mem: storing 3 in location 1011
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2032 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2032 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2036
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2034 is 0
9999 mem: location 2036 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2032 is 1009
 103 run: loop +next-character:label
9999 run: jumping to instruction 20
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1694 is 1232
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1696 is 3
9999 mem: location 1692 is 5
9999 mem: storing 0 in location 1701
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1701 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1696 is 3
9999 mem: location 1698 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 1702
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1702 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1694 is 1232
9999 mem: location 1232 is 101
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1217
9999 mem: location 1694 is 1232
9999 run: address to copy is 1232
9999 run: its type is number
9999 mem: location 1232 is 101
9999 mem: storing 101 in location 1704
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1704 is 101
9999 mem: storing 0 in location 1705
 103 run: break-unless newline?:boolean, 
9999 mem: location 1705 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1697 is 0
9999 mem: location 1693 is 4
9999 mem: storing 0 in location 1707
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1707 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1689 is 1009
9999 mem: location 1704 is 101
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2037
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2039
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2040
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2041
9999 mem: storing 0 in location 2042
 104 run: break-if color-found?:boolean, 
9999 mem: location 2042 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2041
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2043
9999 mem: storing 0 in location 2044
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2044 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2043
 104 run: break-unless x:address:screen, 
9999 mem: location 2039 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2039 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2039 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2045
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2039 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2039 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2046
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2039 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2039 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2047
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2039 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2039 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2048
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2040 is 101
9999 mem: storing 0 in location 2049
 104 run: break-unless newline?:boolean, 
9999 mem: location 2049 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2045 is 1011
9999 mem: location 1011 is 3
9999 mem: location 2047 is 10
9999 mem: storing 30 in location 2052
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2052 is 30
9999 mem: location 2046 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 2052
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2039 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2039 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2053
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2040 is 101
9999 mem: storing 0 in location 2054
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2054 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2053 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 97
9999 mem: location 1056 is 7
9999 mem: location 1057 is 98
9999 mem: location 1058 is 7
9999 mem: location 1059 is 99
9999 mem: location 1060 is 7
9999 mem: location 1061 is 100
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2052 is 30
9999 mem: location 2053 is 1014
9999 mem: location 2052 is 30
9999 mem: storing 1075 in location 2056
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2056 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 2056 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 2057
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2056 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 2056 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 2058
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2040 is 101
9999 mem: location 2057 is 1075
9999 mem: storing 101 in location 1075
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2041 is 7
9999 mem: location 2058 is 1076
9999 mem: storing 7 in location 1076
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2047 is 10
9999 mem: storing 9 in location 2059
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2046 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2059 is 9
9999 mem: storing 0 in location 2060
 104 run: break-if at-right?:boolean, 
9999 mem: location 2060 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2046 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2046 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2039 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1694 is 1232
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2061
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1232 in location 2063
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2063 is 1232
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2063 is 1232
9999 mem: location 1232 is 101
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1217
9999 mem: location 2063 is 1232
9999 run: address to copy is 1233
9999 run: its type is address
9999 mem: location 1233 is 0
9999 mem: storing 0 in location 2064
 104 run: reply result:address:duplex-list
9999 mem: location 2064 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1694
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1695 is 1217
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2065
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 2067
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2067 is 1217
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2067 is 1217
9999 mem: location 1217 is 100
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 2067 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1232
9999 mem: storing 1232 in location 2068
 104 run: reply result:address:duplex-list
9999 mem: location 2068 is 1232
9999 run: result 0 is 1232
9999 mem: storing 1232 in location 1695
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1697 is 0
9999 mem: storing 1 in location 1697
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1694 is 0
9999 run: jumping to instruction 64
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1696 is 3
9999 mem: location 1698 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 1702
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1697 is 1
9999 mem: location 1699 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1708
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1702 is 0
9999 mem: location 1708 is 0
9999 mem: storing 0 in location 1709
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1696 is 3
9999 mem: location 1698 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 1710
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1709 is 0
9999 mem: location 1710 is 0
9999 mem: storing 0 in location 1711
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1711 is 0
9999 run: jumping to instruction 83
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1689 is 1009
9999 mem: location 1697 is 1
9999 mem: location 1693 is 4
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2069
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2071
 104 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 2072
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2073
 104 run: column:number <- copy left:number
9999 mem: location 2072 is 1
9999 mem: storing 1 in location 2074
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2074 is 1
9999 mem: location 2073 is 4
9999 mem: storing 0 in location 2075
 104 run: break-if done?:boolean, 
9999 mem: location 2075 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2071 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2076
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2078
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2079
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2080
9999 mem: storing 0 in location 2081
 105 run: break-if color-found?:boolean, 
9999 mem: location 2081 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2080
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2082
9999 mem: storing 0 in location 2083
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2083 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2082
 105 run: break-unless x:address:screen, 
9999 mem: location 2078 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2078 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2078 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2084
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2078 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2078 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2085
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2078 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2078 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2086
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2078 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2078 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2087
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2079 is 32
9999 mem: storing 0 in location 2088
 105 run: break-unless newline?:boolean, 
9999 mem: location 2088 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2084 is 1011
9999 mem: location 1011 is 3
9999 mem: location 2086 is 10
9999 mem: storing 30 in location 2091
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2091 is 30
9999 mem: location 2085 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 2091
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2078 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2078 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2092
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2079 is 32
9999 mem: storing 0 in location 2093
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2093 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2092 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 97
9999 mem: location 1056 is 7
9999 mem: location 1057 is 98
9999 mem: location 1058 is 7
9999 mem: location 1059 is 99
9999 mem: location 1060 is 7
9999 mem: location 1061 is 100
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 101
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2091 is 31
9999 mem: location 2092 is 1014
9999 mem: location 2091 is 31
9999 mem: storing 1077 in location 2095
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2095 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 2095 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 2096
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2095 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 2095 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 2097
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2079 is 32
9999 mem: location 2096 is 1077
9999 mem: storing 32 in location 1077
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2080 is 7
9999 mem: location 2097 is 1078
9999 mem: storing 7 in location 1078
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2086 is 10
9999 mem: storing 9 in location 2098
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2085 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2098 is 9
9999 mem: storing 0 in location 2099
 105 run: break-if at-right?:boolean, 
9999 mem: location 2099 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2085 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2085 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2078 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2074 is 1
9999 mem: storing 2 in location 2074
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2074 is 2
9999 mem: location 2073 is 4
9999 mem: storing 0 in location 2075
 104 run: break-if done?:boolean, 
9999 mem: location 2075 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2071 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2100
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2102
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2103
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2104
9999 mem: storing 0 in location 2105
 105 run: break-if color-found?:boolean, 
9999 mem: location 2105 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2104
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2106
9999 mem: storing 0 in location 2107
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2107 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2106
 105 run: break-unless x:address:screen, 
9999 mem: location 2102 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2102 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2102 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2108
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2102 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2102 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2109
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2102 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2102 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2110
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2102 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2102 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2111
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2103 is 32
9999 mem: storing 0 in location 2112
 105 run: break-unless newline?:boolean, 
9999 mem: location 2112 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2108 is 1011
9999 mem: location 1011 is 3
9999 mem: location 2110 is 10
9999 mem: storing 30 in location 2115
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2115 is 30
9999 mem: location 2109 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 2115
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2102 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2102 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2116
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2103 is 32
9999 mem: storing 0 in location 2117
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2117 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2116 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 97
9999 mem: location 1056 is 7
9999 mem: location 1057 is 98
9999 mem: location 1058 is 7
9999 mem: location 1059 is 99
9999 mem: location 1060 is 7
9999 mem: location 1061 is 100
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 101
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2115 is 32
9999 mem: location 2116 is 1014
9999 mem: location 2115 is 32
9999 mem: storing 1079 in location 2119
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2119 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 2119 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 2120
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2119 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 2119 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 2121
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2103 is 32
9999 mem: location 2120 is 1079
9999 mem: storing 32 in location 1079
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2104 is 7
9999 mem: location 2121 is 1080
9999 mem: storing 7 in location 1080
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2110 is 10
9999 mem: storing 9 in location 2122
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2109 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2122 is 9
9999 mem: storing 0 in location 2123
 105 run: break-if at-right?:boolean, 
9999 mem: location 2123 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2109 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2109 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2102 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2074 is 2
9999 mem: storing 3 in location 2074
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2074 is 3
9999 mem: location 2073 is 4
9999 mem: storing 0 in location 2075
 104 run: break-if done?:boolean, 
9999 mem: location 2075 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2071 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2124
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2126
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2127
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2128
9999 mem: storing 0 in location 2129
 105 run: break-if color-found?:boolean, 
9999 mem: location 2129 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2128
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2130
9999 mem: storing 0 in location 2131
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2131 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2130
 105 run: break-unless x:address:screen, 
9999 mem: location 2126 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2126 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2126 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2132
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2126 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2126 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2133
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2126 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2126 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2134
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2126 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2126 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2135
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2127 is 32
9999 mem: storing 0 in location 2136
 105 run: break-unless newline?:boolean, 
9999 mem: location 2136 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2132 is 1011
9999 mem: location 1011 is 3
9999 mem: location 2134 is 10
9999 mem: storing 30 in location 2139
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2139 is 30
9999 mem: location 2133 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 2139
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2126 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2126 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2140
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2127 is 32
9999 mem: storing 0 in location 2141
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2141 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2140 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 97
9999 mem: location 1056 is 7
9999 mem: location 1057 is 98
9999 mem: location 1058 is 7
9999 mem: location 1059 is 99
9999 mem: location 1060 is 7
9999 mem: location 1061 is 100
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 101
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2139 is 33
9999 mem: location 2140 is 1014
9999 mem: location 2139 is 33
9999 mem: storing 1081 in location 2143
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2143 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 2143 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 2144
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2143 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 2143 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 2145
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2127 is 32
9999 mem: location 2144 is 1081
9999 mem: storing 32 in location 1081
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2128 is 7
9999 mem: location 2145 is 1082
9999 mem: storing 7 in location 1082
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2134 is 10
9999 mem: storing 9 in location 2146
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2133 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2146 is 9
9999 mem: storing 0 in location 2147
 105 run: break-if at-right?:boolean, 
9999 mem: location 2147 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2133 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2133 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2126 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2074 is 3
9999 mem: storing 4 in location 2074
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2074 is 4
9999 mem: location 2073 is 4
9999 mem: storing 0 in location 2075
 104 run: break-if done?:boolean, 
9999 mem: location 2075 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2071 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2148
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2150
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2151
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2152
9999 mem: storing 0 in location 2153
 105 run: break-if color-found?:boolean, 
9999 mem: location 2153 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2152
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2154
9999 mem: storing 0 in location 2155
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2155 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2154
 105 run: break-unless x:address:screen, 
9999 mem: location 2150 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2150 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2150 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2156
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2150 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2150 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2157
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2150 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2150 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2158
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2150 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2150 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2159
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2151 is 32
9999 mem: storing 0 in location 2160
 105 run: break-unless newline?:boolean, 
9999 mem: location 2160 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2156 is 1011
9999 mem: location 1011 is 3
9999 mem: location 2158 is 10
9999 mem: storing 30 in location 2163
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2163 is 30
9999 mem: location 2157 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 2163
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2150 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2150 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2164
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2151 is 32
9999 mem: storing 0 in location 2165
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2165 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2164 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 97
9999 mem: location 1056 is 7
9999 mem: location 1057 is 98
9999 mem: location 1058 is 7
9999 mem: location 1059 is 99
9999 mem: location 1060 is 7
9999 mem: location 1061 is 100
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 101
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2163 is 34
9999 mem: location 2164 is 1014
9999 mem: location 2163 is 34
9999 mem: storing 1083 in location 2167
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2167 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 2167 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 2168
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2167 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 2167 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 2169
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2151 is 32
9999 mem: location 2168 is 1083
9999 mem: storing 32 in location 1083
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2152 is 7
9999 mem: location 2169 is 1084
9999 mem: storing 7 in location 1084
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2158 is 10
9999 mem: storing 9 in location 2170
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2157 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2170 is 9
9999 mem: storing 0 in location 2171
 105 run: break-if at-right?:boolean, 
9999 mem: location 2171 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2157 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2157 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2150 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2074 is 4
9999 mem: storing 5 in location 2074
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2074 is 5
9999 mem: location 2073 is 4
9999 mem: storing 1 in location 2075
 104 run: break-if done?:boolean, 
9999 mem: location 2075 is 1
9999 run: jumping to instruction 11
 103 run: reply row:number, screen:address/same-as-ingredient:0
9999 mem: location 1696 is 3
9999 mem: location 1689 is 1009
9999 run: result 0 is 3
9999 run: result 1 is 1009
9999 mem: storing 3 in location 1601
9999 mem: storing 1009 in location 1591
 102 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1593 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1680
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1593 is 1147
9999 run: address to copy is 1149
9999 run: its type is number
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1602
 102 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1593 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1680
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1593 is 1147
9999 run: address to copy is 1150
9999 run: its type is number
9999 mem: location 1150 is 4
9999 mem: storing 4 in location 1603
 102 run: row:number <- add row:number, 1:literal
9999 mem: location 1601 is 3
9999 mem: storing 4 in location 1601
 102 run: move-cursor screen:address, row:number, left:number
9999 mem: location 1591 is 1009
9999 mem: location 1601 is 4
9999 mem: location 1602 is 0
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2172
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2174
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 2175
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2176
 103 run: break-unless x:address:screen, 
9999 mem: location 2174 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2174 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2174 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2177
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2175 is 4
9999 mem: location 2177 is 1011
9999 mem: storing 4 in location 1011
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2174 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2174 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2178
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2176 is 0
9999 mem: location 2178 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2174 is 1009
 102 run: clear-line-delimited screen:address, left:number, right:number
9999 mem: location 1591 is 1009
9999 mem: location 1602 is 0
9999 mem: location 1603 is 4
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2179
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2181
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 2182
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2183
 103 run: column:number <- copy left:number
9999 mem: location 2182 is 0
9999 mem: storing 0 in location 2184
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2184 is 0
9999 mem: location 2183 is 4
9999 mem: storing 0 in location 2185
 103 run: break-if done?:boolean, 
9999 mem: location 2185 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2181 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2186
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2188
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2189
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2190
9999 mem: storing 0 in location 2191
 104 run: break-if color-found?:boolean, 
9999 mem: location 2191 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2190
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2192
9999 mem: storing 0 in location 2193
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2193 is 0
9999 run: jump-if fell through
schedule: print-character/clear-line-delimited/editor-event-loop/run1001/editor-clears-previous-line-completely-after-inserting-newline
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2192
 104 run: break-unless x:address:screen, 
9999 mem: location 2188 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2188 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2188 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2194
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2188 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2188 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2195
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2188 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2188 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2196
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2188 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2188 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2197
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2189 is 32
9999 mem: storing 0 in location 2198
 104 run: break-unless newline?:boolean, 
9999 mem: location 2198 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2194 is 1011
9999 mem: location 1011 is 4
9999 mem: location 2196 is 10
9999 mem: storing 40 in location 2201
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2201 is 40
9999 mem: location 2195 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 2201
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2188 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2188 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2202
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2189 is 32
9999 mem: storing 0 in location 2203
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2203 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2202 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 97
9999 mem: location 1056 is 7
9999 mem: location 1057 is 98
9999 mem: location 1058 is 7
9999 mem: location 1059 is 99
9999 mem: location 1060 is 7
9999 mem: location 1061 is 100
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 101
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2201 is 40
9999 mem: location 2202 is 1014
9999 mem: location 2201 is 40
9999 mem: storing 1095 in location 2205
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2205 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 2205 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 2206
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2205 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 2205 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 2207
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2189 is 32
9999 mem: location 2206 is 1095
9999 mem: storing 32 in location 1095
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2190 is 7
9999 mem: location 2207 is 1096
9999 mem: storing 7 in location 1096
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2196 is 10
9999 mem: storing 9 in location 2208
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2195 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2208 is 9
9999 mem: storing 0 in location 2209
 104 run: break-if at-right?:boolean, 
9999 mem: location 2209 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2195 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2195 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2188 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2184 is 0
9999 mem: storing 1 in location 2184
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2184 is 1
9999 mem: location 2183 is 4
9999 mem: storing 0 in location 2185
 103 run: break-if done?:boolean, 
9999 mem: location 2185 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2181 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2210
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2212
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2213
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2214
9999 mem: storing 0 in location 2215
 104 run: break-if color-found?:boolean, 
9999 mem: location 2215 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2214
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2216
9999 mem: storing 0 in location 2217
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2217 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2216
 104 run: break-unless x:address:screen, 
9999 mem: location 2212 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2212 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2212 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2218
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2212 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2212 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2219
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2212 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2212 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2220
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2212 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2212 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2221
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2213 is 32
9999 mem: storing 0 in location 2222
 104 run: break-unless newline?:boolean, 
9999 mem: location 2222 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2218 is 1011
9999 mem: location 1011 is 4
9999 mem: location 2220 is 10
9999 mem: storing 40 in location 2225
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2225 is 40
9999 mem: location 2219 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 2225
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2212 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2212 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2226
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2213 is 32
9999 mem: storing 0 in location 2227
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2227 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2226 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 97
9999 mem: location 1056 is 7
9999 mem: location 1057 is 98
9999 mem: location 1058 is 7
9999 mem: location 1059 is 99
9999 mem: location 1060 is 7
9999 mem: location 1061 is 100
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 101
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2225 is 41
9999 mem: location 2226 is 1014
9999 mem: location 2225 is 41
9999 mem: storing 1097 in location 2229
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2229 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 2229 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 2230
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2229 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 2229 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 2231
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2213 is 32
9999 mem: location 2230 is 1097
9999 mem: storing 32 in location 1097
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2214 is 7
9999 mem: location 2231 is 1098
9999 mem: storing 7 in location 1098
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2220 is 10
9999 mem: storing 9 in location 2232
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2219 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2232 is 9
9999 mem: storing 0 in location 2233
 104 run: break-if at-right?:boolean, 
9999 mem: location 2233 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2219 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2219 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2212 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2184 is 1
9999 mem: storing 2 in location 2184
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2184 is 2
9999 mem: location 2183 is 4
9999 mem: storing 0 in location 2185
 103 run: break-if done?:boolean, 
9999 mem: location 2185 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2181 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2234
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2236
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2237
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2238
9999 mem: storing 0 in location 2239
 104 run: break-if color-found?:boolean, 
9999 mem: location 2239 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2238
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2240
9999 mem: storing 0 in location 2241
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2241 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2240
 104 run: break-unless x:address:screen, 
9999 mem: location 2236 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2236 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2236 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2242
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2236 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2236 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2243
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2236 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2236 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2244
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2236 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2236 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2245
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2237 is 32
9999 mem: storing 0 in location 2246
 104 run: break-unless newline?:boolean, 
9999 mem: location 2246 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2242 is 1011
9999 mem: location 1011 is 4
9999 mem: location 2244 is 10
9999 mem: storing 40 in location 2249
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2249 is 40
9999 mem: location 2243 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 2249
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2236 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2236 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2250
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2237 is 32
9999 mem: storing 0 in location 2251
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2251 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2250 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 97
9999 mem: location 1056 is 7
9999 mem: location 1057 is 98
9999 mem: location 1058 is 7
9999 mem: location 1059 is 99
9999 mem: location 1060 is 7
9999 mem: location 1061 is 100
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 101
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2249 is 42
9999 mem: location 2250 is 1014
9999 mem: location 2249 is 42
9999 mem: storing 1099 in location 2253
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2253 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 2253 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 2254
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2253 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 2253 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 2255
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2237 is 32
9999 mem: location 2254 is 1099
9999 mem: storing 32 in location 1099
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2238 is 7
9999 mem: location 2255 is 1100
9999 mem: storing 7 in location 1100
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2244 is 10
9999 mem: storing 9 in location 2256
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2243 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2256 is 9
9999 mem: storing 0 in location 2257
 104 run: break-if at-right?:boolean, 
9999 mem: location 2257 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2243 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2243 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2236 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2184 is 2
9999 mem: storing 3 in location 2184
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2184 is 3
9999 mem: location 2183 is 4
9999 mem: storing 0 in location 2185
 103 run: break-if done?:boolean, 
9999 mem: location 2185 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2181 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2258
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2260
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2261
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2262
9999 mem: storing 0 in location 2263
 104 run: break-if color-found?:boolean, 
9999 mem: location 2263 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2262
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2264
9999 mem: storing 0 in location 2265
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2265 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2264
 104 run: break-unless x:address:screen, 
9999 mem: location 2260 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2260 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2260 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2266
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2260 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2260 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2267
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2260 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2260 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2268
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2260 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2260 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2269
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2261 is 32
9999 mem: storing 0 in location 2270
 104 run: break-unless newline?:boolean, 
9999 mem: location 2270 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2266 is 1011
9999 mem: location 1011 is 4
9999 mem: location 2268 is 10
9999 mem: storing 40 in location 2273
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2273 is 40
9999 mem: location 2267 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 2273
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2260 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2260 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2274
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2261 is 32
9999 mem: storing 0 in location 2275
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2275 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2274 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 97
9999 mem: location 1056 is 7
9999 mem: location 1057 is 98
9999 mem: location 1058 is 7
9999 mem: location 1059 is 99
9999 mem: location 1060 is 7
9999 mem: location 1061 is 100
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 101
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2273 is 43
9999 mem: location 2274 is 1014
9999 mem: location 2273 is 43
9999 mem: storing 1101 in location 2277
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2277 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 2277 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 2278
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2277 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 2277 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 2279
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2261 is 32
9999 mem: location 2278 is 1101
9999 mem: storing 32 in location 1101
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2262 is 7
9999 mem: location 2279 is 1102
9999 mem: storing 7 in location 1102
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2268 is 10
9999 mem: storing 9 in location 2280
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2267 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2280 is 9
9999 mem: storing 0 in location 2281
 104 run: break-if at-right?:boolean, 
9999 mem: location 2281 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2267 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2267 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2260 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2184 is 3
9999 mem: storing 4 in location 2184
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2184 is 4
9999 mem: location 2183 is 4
9999 mem: storing 0 in location 2185
 103 run: break-if done?:boolean, 
9999 mem: location 2185 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2181 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2282
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2284
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2285
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2286
9999 mem: storing 0 in location 2287
 104 run: break-if color-found?:boolean, 
9999 mem: location 2287 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2286
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2288
9999 mem: storing 0 in location 2289
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2289 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2288
 104 run: break-unless x:address:screen, 
9999 mem: location 2284 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2284 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2284 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2290
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2284 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2284 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2291
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2284 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2284 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2292
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2284 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2284 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2293
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2285 is 32
9999 mem: storing 0 in location 2294
 104 run: break-unless newline?:boolean, 
9999 mem: location 2294 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2290 is 1011
9999 mem: location 1011 is 4
9999 mem: location 2292 is 10
9999 mem: storing 40 in location 2297
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2297 is 40
9999 mem: location 2291 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 2297
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2284 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2284 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2298
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2285 is 32
9999 mem: storing 0 in location 2299
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2299 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2298 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 97
9999 mem: location 1056 is 7
9999 mem: location 1057 is 98
9999 mem: location 1058 is 7
9999 mem: location 1059 is 99
9999 mem: location 1060 is 7
9999 mem: location 1061 is 100
9999 mem: location 1062 is 7
9999 mem: location 1063 is 8617
9999 mem: location 1064 is 245
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 101
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2297 is 44
9999 mem: location 2298 is 1014
9999 mem: location 2297 is 44
9999 mem: storing 1103 in location 2301
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2301 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 2301 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 2302
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2301 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 2301 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 2303
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2285 is 32
9999 mem: location 2302 is 1103
9999 mem: storing 32 in location 1103
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2286 is 7
9999 mem: location 2303 is 1104
9999 mem: storing 7 in location 1104
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2292 is 10
9999 mem: storing 9 in location 2304
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2291 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2304 is 9
9999 mem: storing 0 in location 2305
 104 run: break-if at-right?:boolean, 
9999 mem: location 2305 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2291 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2291 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2284 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2184 is 4
9999 mem: storing 5 in location 2184
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2184 is 5
9999 mem: location 2183 is 4
9999 mem: storing 1 in location 2185
 103 run: break-if done?:boolean, 
9999 mem: location 2185 is 1
9999 run: jumping to instruction 11
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 1592 is 1587
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 2306
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1587 in location 2308
 103 run: break-unless x:address:console, 
9999 mem: location 2308 is 1587
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 2308 is 1587
9999 mem: location 1587 is 1
9999 mem: location 1588 is 1582
9999 mem: location 2308 is 1587
9999 run: address to copy is 1587
9999 mem: storing 1587 in location 2309
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 2308 is 1587
9999 mem: location 1587 is 1
9999 mem: location 1588 is 1582
9999 mem: location 2308 is 1587
9999 run: address to copy is 1588
9999 run: its type is address
9999 mem: location 1588 is 1582
9999 mem: storing 1582 in location 2310
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 2310 is 1582
9999 mem: location 1582 is 1
9999 mem: location 1583 is 0
9999 mem: location 1584 is 10
9999 mem: location 1585 is 0
9999 mem: location 1586 is 0
9999 mem: location 2310 is 1582
9999 mem: storing 1 in location 2311
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 2309 is 1587
9999 mem: location 1587 is 1
9999 mem: location 2311 is 1
9999 mem: storing 1 in location 2312
 103 run: break-unless done?:boolean, 
9999 mem: location 2312 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: new alloc: 2319
9999 mem: storing 2319 in location 2313
 103 run: reply dummy:address:event/deref, x:address:console/same-as-ingredient:0, 1:literal/found, 1:literal/quit
9999 mem: location 2313 is 2319
9999 mem: location 2319 is 0
9999 mem: location 2320 is 0
9999 mem: location 2321 is 0
9999 mem: location 2322 is 0
9999 mem: location 2308 is 1587
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1587
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1594
9999 mem: storing 0 in location 1595
9999 mem: storing 0 in location 1596
9999 mem: storing 0 in location 1597
9999 mem: storing 1587 in location 1592
9999 mem: storing 1 in location 1598
9999 mem: storing 1 in location 1599
 102 run: loop-unless found?:boolean, 
9999 mem: location 1598 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 1599 is 1
9999 run: jumping to instruction 25
 100 run: screen-should-contain [
    .          .
    .          .
    .abcd↩     .
    .e         .
    .          .
  ]
