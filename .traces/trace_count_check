9991 load: --- defining main
9993 parse: instruction: run
9993 parse:   ingredient: {"\n    trace 1, [a], [foo]\n  ": "literal-string"}
9992 load: after rewriting: run [
    trace 1, [a], [foo]
  ]
9993 parse: instruction: check-trace-count-for-label
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   ingredient: {"a": "literal-string"}
9992 load: after rewriting: check-trace-count-for-label 1, [a]
9990 transform: === transform_all()
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- transform braces for recipe main
9991 transform: run ...
9991 transform: check-trace-count-for-label ...
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: run [
    trace 1, [a], [foo]
  ]
9991 load: --- defining run1000
9993 parse: instruction: trace
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   ingredient: {"a": "literal-string"}
9993 parse:   ingredient: {"foo": "literal-string"}
9992 load: after rewriting: trace 1, [a], [foo]
9990 transform: === transform_all()
9991 transform: --- collect surrounding spaces for recipe run1000
9991 transform: --- transform names for recipe run1000
9991 transform: --- transform braces for recipe run1000
9991 transform: trace ...
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: trace 1, [a], [foo]
   1 a: foo 
9999 trace: fall-through: exiting run1000; decrementing callstack depth from 2
 102 run: check-trace-count-for-label 1, [a]
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
