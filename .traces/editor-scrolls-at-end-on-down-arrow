  99 run: assume-console [
    left-click 2, 0
    press down-arrow
  ]
parse: instruction: left-click
parse:   ingredient: {name: "2", properties: ["2": "literal"]}
parse:   ingredient: {name: "0", properties: ["0": "literal"]}
parse: instruction: press
parse:   ingredient: {name: "down-arrow", properties: ["down-arrow": ]}
  99 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-row", properties: ["cursor-row": "offset"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-column", properties: ["cursor-column": "offset"]}
parse:   product: {name: "4", properties: ["4": "number"]}
name: element cursor-row of type editor-data is at offset 6
name: element cursor-column of type editor-data is at offset 7
after-brace: recipe run1003
after-brace: editor-event-loop ...
after-brace: get ...
after-brace: get ...
  99 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1528
9999 mem: location 2 is 1115
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
 100 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1296
 100 run: console:address <- next-ingredient 
9999 mem: storing 1528 in location 1297
 100 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1298
 100 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1299
 100 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1300
 100 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1296 is 1009
9999 mem: location 1299 is 1
9999 mem: location 1300 is 3
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1207
 101 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1208
 101 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1209
 101 run: break-unless sc, 
9999 mem: location 1207 is 1009
9999 run: jump-unless fell through
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1207 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1207 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1210
 101 run: *row <- copy new-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1011
9999 mem: storing 1 in location 1011
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1207 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1207 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1211
 101 run: *column <- copy new-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1012
9999 mem: storing 3 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1207 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1296
 100 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1297 is 1528
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 101 run: x:address:console <- next-ingredient 
9999 mem: storing 1528 in location 1257
 101 run: break-unless x, 
9999 mem: location 1257 is 1528
9999 run: jump-unless fell through
 101 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1257 is 1528
9999 mem: location 1528 is 0
9999 mem: location 1529 is 1519
9999 mem: location 1257 is 1528
9999 run: address to copy is 1528
9999 mem: storing 1528 in location 1258
 101 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1257 is 1528
9999 mem: location 1528 is 0
9999 mem: location 1529 is 1519
9999 mem: location 1257 is 1528
9999 run: address to copy is 1529
9999 run: its type is address
9999 mem: location 1529 is 1519
9999 mem: storing 1519 in location 1259
 101 run: max:number <- length *buf
9999 mem: location 1259 is 1519
9999 mem: storing 2 in location 1260
 101 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1258 is 1528
9999 mem: location 1528 is 0
9999 mem: location 1260 is 2
9999 mem: storing 0 in location 1261
 101 run: break-unless done?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 12
 101 run: result:event <- index *buf, *idx
9999 mem: location 1259 is 1519
9999 mem: location 1258 is 1528
9999 mem: location 1528 is 0
9999 run: address to copy is 1520
9999 run: its type is event
9999 mem: location 1520 is 2
9999 mem: location 1521 is 65513
9999 mem: location 1522 is 2
9999 mem: location 1523 is 0
9999 mem: storing 2 in location 1263
9999 mem: storing 65513 in location 1264
9999 mem: storing 2 in location 1265
9999 mem: storing 0 in location 1266
 101 run: *idx <- add *idx, 1
9999 mem: location 1258 is 1528
9999 mem: location 1528 is 0
9999 mem: location 1258 is 1528
9999 mem: storing 1 in location 1528
 101 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1263 is 2
9999 mem: location 1264 is 65513
9999 mem: location 1265 is 2
9999 mem: location 1266 is 0
9999 mem: location 1257 is 1528
9999 run: result 0 is [2, 65513, 2, 0]
9999 run: result 1 is 1528
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 2 in location 1301
9999 mem: storing 65513 in location 1302
9999 mem: storing 2 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 1528 in location 1297
9999 mem: storing 1 in location 1305
9999 mem: storing 0 in location 1306
 100 run: loop-unless found?, 
9999 mem: location 1305 is 1
9999 run: jump-unless fell through
 100 run: break-if quit?, 
9999 mem: location 1306 is 0
9999 run: jump-if fell through
 100 run: trace 10, [app], [next-event]
  10 app: next-event 
 100 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1301 is 2
9999 mem: location 1302 is 65513
9999 mem: location 1303 is 2
9999 mem: location 1304 is 0
9999 mem: storing 1302 in location 1307
 100 run: break-unless t, 
9999 mem: location 1307 is 1302
9999 run: jump-unless fell through
 100 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1296 is 1009
9999 mem: location 1298 is 1115
9999 mem: location 1307 is 1302
9999 mem: location 1302 is 65513
9999 mem: location 1303 is 2
9999 mem: location 1304 is 0
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 27
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1311
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1312
 101 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1313
9999 mem: storing 2 in location 1314
9999 mem: storing 0 in location 1315
 101 run: jump-if editor, 1:offset
9999 mem: location 1312 is 1115
9999 run: jumping to instruction 6
 101 run: click-row:number <- get t, row:offset
9999 mem: location 1313 is 65513
9999 mem: location 1314 is 2
9999 mem: location 1315 is 0
9999 run: address to copy is 1314
9999 run: its type is number
9999 mem: location 1314 is 2
9999 mem: storing 2 in location 1316
 101 run: jump-if click-row, 1:offset
9999 mem: location 1316 is 2
9999 run: jumping to instruction 9
 101 run: click-column:number <- get t, column:offset
9999 mem: location 1313 is 65513
9999 mem: location 1314 is 2
9999 mem: location 1315 is 0
9999 run: address to copy is 1315
9999 run: its type is number
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1317
 101 run: left:number <- get *editor, left:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1318
 101 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1317 is 0
9999 mem: location 1318 is 0
9999 mem: storing 0 in location 1319
 101 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1319 is 0
9999 run: jumping to instruction 14
 101 run: right:number <- get *editor, right:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1320
 101 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1317 is 0
9999 mem: location 1320 is 9
9999 mem: storing 0 in location 1321
 101 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1321 is 0
9999 run: jumping to instruction 18
 101 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1322
 101 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1323
 101 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1169
9999 mem: storing 1169 in location 1324
 101 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1311 is 1009
9999 mem: location 1312 is 1115
9999 mem: location 1316 is 2
9999 mem: location 1317 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1180
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1181
 102 run: target-row:number <- next-ingredient 
9999 mem: storing 2 in location 1182
 102 run: target-column:number <- next-ingredient 
9999 mem: storing 0 in location 1183
 102 run: jump-if editor, 1:offset
9999 mem: location 1181 is 1115
9999 run: jumping to instruction 7
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1181 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1181 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1184
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1181 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1181 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1185
 102 run: screen-height:number <- screen-height screen
9999 mem: location 1180 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1530
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1532
 103 run: break-unless sc, 
9999 mem: location 1532 is 1009
9999 run: jump-unless fell through
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1532 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1532 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1533
 103 run: reply height
9999 mem: location 1533 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1186
 102 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1181 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1181 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1169
9999 mem: storing 1169 in location 1187
 102 run: prev:address:duplex-list <- copy curr
9999 mem: location 1187 is 1169
9999 mem: storing 1169 in location 1188
 102 run: curr <- next-duplex curr
9999 mem: location 1187 is 1169
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1169 in location 1532
 103 run: jump-if in, 1:offset
9999 mem: location 1532 is 1169
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1532 is 1169
9999 mem: location 1169 is 10
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1166
9999 mem: location 1532 is 1169
9999 run: address to copy is 1170
9999 run: its type is address
9999 mem: location 1170 is 1172
9999 mem: storing 1172 in location 1533
 103 run: reply result
9999 mem: location 1533 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1187
 102 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1189
 102 run: column:number <- copy left
9999 mem: location 1184 is 0
9999 mem: storing 0 in location 1190
 102 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1181 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1181 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1191
 102 run: *cursor-row <- copy target-row
9999 mem: location 1182 is 2
9999 mem: location 1191 is 1121
9999 mem: storing 2 in location 1121
 102 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1181 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1181 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1192
 102 run: *cursor-column <- copy target-column
9999 mem: location 1183 is 0
9999 mem: location 1192 is 1122
9999 mem: storing 0 in location 1122
 102 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1181 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1181 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1193
 102 run: break-unless curr, 
9999 mem: location 1187 is 1172
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1189 is 1
9999 mem: location 1186 is 5
9999 mem: storing 0 in location 1194
 102 run: break-if off-screen?, 
9999 mem: location 1194 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1189 is 1
9999 mem: location 1191 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1195
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 31
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1187 is 1172
9999 mem: location 1172 is 100
9999 mem: location 1173 is 1175
9999 mem: location 1174 is 1169
9999 mem: location 1187 is 1172
9999 run: address to copy is 1172
9999 run: its type is character
9999 mem: location 1172 is 100
9999 mem: storing 100 in location 1197
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 100
9999 mem: storing 0 in location 1198
 102 run: break-unless newline?, 
9999 mem: location 1198 is 0
9999 run: jumping to instruction 49
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1190 is 0
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1200
 102 run: break-unless at-right?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 56
 102 run: curr <- next-duplex curr
9999 mem: location 1187 is 1172
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1532
 103 run: jump-if in, 1:offset
9999 mem: location 1532 is 1172
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1532 is 1172
9999 mem: location 1172 is 100
9999 mem: location 1173 is 1175
9999 mem: location 1174 is 1169
9999 mem: location 1532 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1175
9999 mem: storing 1175 in location 1533
 103 run: reply result
9999 mem: location 1533 is 1175
9999 run: result 0 is 1175
9999 mem: storing 1175 in location 1187
 102 run: prev <- next-duplex prev
9999 mem: location 1188 is 1169
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1169 in location 1532
 103 run: jump-if in, 1:offset
9999 mem: location 1532 is 1169
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1532 is 1169
9999 mem: location 1169 is 10
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1166
9999 mem: location 1532 is 1169
9999 run: address to copy is 1170
9999 run: its type is address
9999 mem: location 1170 is 1172
9999 mem: storing 1172 in location 1533
 103 run: reply result
9999 mem: location 1533 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1188
 102 run: column <- add column, 1
9999 mem: location 1190 is 0
9999 mem: storing 1 in location 1190
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: break-unless curr, 
9999 mem: location 1187 is 1175
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1189 is 1
9999 mem: location 1186 is 5
9999 mem: storing 0 in location 1194
 102 run: break-if off-screen?, 
9999 mem: location 1194 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1189 is 1
9999 mem: location 1191 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1195
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 31
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1187 is 1175
9999 mem: location 1175 is 101
9999 mem: location 1176 is 1514
9999 mem: location 1177 is 1172
9999 mem: location 1187 is 1175
9999 run: address to copy is 1175
9999 run: its type is character
9999 mem: location 1175 is 101
9999 mem: storing 101 in location 1197
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 101
9999 mem: storing 0 in location 1198
 102 run: break-unless newline?, 
9999 mem: location 1198 is 0
9999 run: jumping to instruction 49
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1190 is 1
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1200
 102 run: break-unless at-right?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 56
 102 run: curr <- next-duplex curr
9999 mem: location 1187 is 1175
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1175 in location 1532
 103 run: jump-if in, 1:offset
9999 mem: location 1532 is 1175
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1532 is 1175
9999 mem: location 1175 is 101
9999 mem: location 1176 is 1514
9999 mem: location 1177 is 1172
9999 mem: location 1532 is 1175
9999 run: address to copy is 1176
9999 run: its type is address
9999 mem: location 1176 is 1514
9999 mem: storing 1514 in location 1533
 103 run: reply result
9999 mem: location 1533 is 1514
9999 run: result 0 is 1514
9999 mem: storing 1514 in location 1187
 102 run: prev <- next-duplex prev
9999 mem: location 1188 is 1172
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1532
 103 run: jump-if in, 1:offset
9999 mem: location 1532 is 1172
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1532 is 1172
9999 mem: location 1172 is 100
9999 mem: location 1173 is 1175
9999 mem: location 1174 is 1169
9999 mem: location 1532 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1175
9999 mem: storing 1175 in location 1533
 103 run: reply result
9999 mem: location 1533 is 1175
9999 run: result 0 is 1175
9999 mem: storing 1175 in location 1188
 102 run: column <- add column, 1
9999 mem: location 1190 is 1
9999 mem: storing 2 in location 1190
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: break-unless curr, 
9999 mem: location 1187 is 1514
9999 run: jump-unless fell through
 102 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1189 is 1
9999 mem: location 1186 is 5
9999 mem: storing 0 in location 1194
 102 run: break-if off-screen?, 
9999 mem: location 1194 is 0
9999 run: jump-if fell through
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1189 is 1
9999 mem: location 1191 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1195
 102 run: break-unless at-cursor-row?, 
9999 mem: location 1195 is 0
9999 run: jumping to instruction 31
 102 run: c:character <- get *curr, value:offset
9999 mem: location 1187 is 1514
9999 mem: location 1514 is 48
9999 mem: location 1515 is 0
9999 mem: location 1516 is 1175
9999 mem: location 1187 is 1514
9999 run: address to copy is 1514
9999 run: its type is character
9999 mem: location 1514 is 48
9999 mem: storing 48 in location 1197
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1197 is 48
9999 mem: storing 0 in location 1198
 102 run: break-unless newline?, 
9999 mem: location 1198 is 0
9999 run: jumping to instruction 49
 102 run: at-right?:boolean <- equal column, right
9999 mem: location 1190 is 2
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1200
 102 run: break-unless at-right?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 56
 102 run: curr <- next-duplex curr
9999 mem: location 1187 is 1514
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1514 in location 1532
 103 run: jump-if in, 1:offset
9999 mem: location 1532 is 1514
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1532 is 1514
9999 mem: location 1514 is 48
9999 mem: location 1515 is 0
9999 mem: location 1516 is 1175
9999 mem: location 1532 is 1514
9999 run: address to copy is 1515
9999 run: its type is address
9999 mem: location 1515 is 0
9999 mem: storing 0 in location 1533
 103 run: reply result
9999 mem: location 1533 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1187
 102 run: prev <- next-duplex prev
9999 mem: location 1188 is 1175
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1175 in location 1532
 103 run: jump-if in, 1:offset
9999 mem: location 1532 is 1175
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1532 is 1175
9999 mem: location 1175 is 101
9999 mem: location 1176 is 1514
9999 mem: location 1177 is 1172
9999 mem: location 1532 is 1175
9999 run: address to copy is 1176
9999 run: its type is address
9999 mem: location 1176 is 1514
9999 mem: storing 1514 in location 1533
 103 run: reply result
9999 mem: location 1533 is 1514
9999 run: result 0 is 1514
9999 mem: storing 1514 in location 1188
 102 run: column <- add column, 1
9999 mem: location 1190 is 2
9999 mem: storing 3 in location 1190
 102 run: loop 
9999 run: jumping to instruction 21
 102 run: break-unless curr, 
9999 mem: location 1187 is 0
9999 run: jumping to instruction 61
 102 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1189 is 1
9999 mem: location 1191 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1195
 102 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1190 is 3
9999 mem: location 1192 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1201
 102 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1195 is 0
9999 mem: location 1201 is 0
9999 mem: storing 0 in location 1202
 102 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1189 is 1
9999 mem: location 1191 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1203
 102 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1202 is 0
9999 mem: location 1203 is 1
9999 mem: storing 1 in location 1204
 102 run: break-unless before-cursor?, 
9999 mem: location 1204 is 1
9999 run: jump-unless fell through
 102 run: *cursor-row <- copy row
9999 mem: location 1189 is 1
9999 mem: location 1191 is 1121
9999 mem: storing 1 in location 1121
 102 run: *cursor-column <- copy column
9999 mem: location 1190 is 3
9999 mem: location 1192 is 1122
9999 mem: storing 3 in location 1122
 102 run: *before-cursor <- copy prev
9999 mem: location 1188 is 1514
9999 mem: location 1193 is 1118
9999 mem: storing 1514 in location 1118
 102 run: reply editor/same-as-ingredient:1
9999 mem: location 1181 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1312
 101 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1325
 101 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1326
 101 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1327
 101 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1312 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1312 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1169
9999 mem: storing 1169 in location 1328
 101 run: break-unless undo-coalesce-tag, 
9999 mem: location 1325 is 0
9999 run: jumping to instruction 44
 101 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1534
9999 mem: storing 1534 in location 1330
 101 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1322 is 1
9999 mem: location 1323 is 3
9999 mem: location 1324 is 1169
9999 mem: location 1326 is 1
9999 mem: location 1327 is 3
9999 mem: location 1328 is 1169
9999 mem: location 1325 is 0
9999 mem: location 1330 is 1534
9999 mem: location 1330 is 1534
9999 mem: storing 1 in location 1534
9999 mem: storing 1 in location 1535
9999 mem: storing 3 in location 1536
9999 mem: storing 1169 in location 1537
9999 mem: storing 1 in location 1538
9999 mem: storing 3 in location 1539
9999 mem: storing 1169 in location 1540
9999 mem: storing 0 in location 1541
 101 run: editor <- add-operation editor, op
9999 mem: location 1312 is 1115
9999 mem: location 1330 is 1534
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1251
 102 run: op:address:operation <- next-ingredient 
9999 mem: storing 1534 in location 1252
 102 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1251 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1251 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1253
 102 run: *undo/skiptypecheck <- push op, *undo
9999 mem: location 1252 is 1534
9999 mem: location 1253 is 1124
9999 mem: location 1124 is 1517
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: x:location <- next-ingredient 
9999 mem: storing 1534 in location 1207
 103 run: in:address:list <- next-ingredient 
9999 mem: storing 1517 in location 1208
 103 run: result:address:list <- new list:type
9999 mem: new alloc: 1545
9999 mem: storing 1545 in location 1209
 103 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1209 is 1545
9999 mem: location 1545 is 0
9999 mem: location 1546 is 0
9999 mem: location 1209 is 1545
9999 run: address to copy is 1545
9999 mem: storing 1545 in location 1210
 103 run: *val <- copy x
9999 mem: location 1207 is 1534
9999 mem: location 1210 is 1545
9999 mem: storing 1534 in location 1545
 103 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1209 is 1545
9999 mem: location 1545 is 1534
9999 mem: location 1546 is 0
9999 mem: location 1209 is 1545
9999 run: address to copy is 1546
9999 mem: storing 1546 in location 1211
 103 run: *next <- copy in
9999 mem: location 1208 is 1517
9999 mem: location 1211 is 1546
9999 mem: storing 1517 in location 1546
 103 run: reply result
9999 mem: location 1209 is 1545
9999 run: result 0 is 1545
9999 mem: location 1253 is 1124
9999 mem: storing 1545 in location 1124
 102 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1251 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1251 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1254
 102 run: *redo <- copy 0
9999 mem: location 1254 is 1125
9999 mem: storing 0 in location 1125
 102 run: reply editor/same-as-ingredient:0
9999 mem: location 1251 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1312
 101 run: reply 1/true
 100 run: loop +next-event:label
9999 run: jumping to instruction 6
 100 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1299
 100 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1300
 100 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1296 is 1009
9999 mem: location 1299 is 1
9999 mem: location 1300 is 3
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1207
 101 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1208
 101 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1209
 101 run: break-unless sc, 
9999 mem: location 1207 is 1009
9999 run: jump-unless fell through
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1207 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1207 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1210
 101 run: *row <- copy new-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1011
9999 mem: storing 1 in location 1011
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1207 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1207 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1211
 101 run: *column <- copy new-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1012
9999 mem: storing 3 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1207 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1296
 100 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1297 is 1528
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 101 run: x:address:console <- next-ingredient 
9999 mem: storing 1528 in location 1257
 101 run: break-unless x, 
9999 mem: location 1257 is 1528
9999 run: jump-unless fell through
 101 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1257 is 1528
9999 mem: location 1528 is 1
9999 mem: location 1529 is 1519
9999 mem: location 1257 is 1528
9999 run: address to copy is 1528
9999 mem: storing 1528 in location 1258
 101 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1257 is 1528
9999 mem: location 1528 is 1
9999 mem: location 1529 is 1519
9999 mem: location 1257 is 1528
9999 run: address to copy is 1529
9999 run: its type is address
9999 mem: location 1529 is 1519
9999 mem: storing 1519 in location 1259
 101 run: max:number <- length *buf
9999 mem: location 1259 is 1519
9999 mem: storing 2 in location 1260
 101 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1258 is 1528
9999 mem: location 1528 is 1
9999 mem: location 1260 is 2
9999 mem: storing 0 in location 1261
 101 run: break-unless done?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 12
 101 run: result:event <- index *buf, *idx
9999 mem: location 1259 is 1519
9999 mem: location 1258 is 1528
9999 mem: location 1528 is 1
9999 run: address to copy is 1524
9999 run: its type is event
9999 mem: location 1524 is 1
9999 mem: location 1525 is 65516
9999 mem: location 1526 is 0
9999 mem: location 1527 is 0
9999 mem: storing 1 in location 1263
9999 mem: storing 65516 in location 1264
9999 mem: storing 0 in location 1265
9999 mem: storing 0 in location 1266
 101 run: *idx <- add *idx, 1
9999 mem: location 1258 is 1528
9999 mem: location 1528 is 1
9999 mem: location 1258 is 1528
9999 mem: storing 2 in location 1528
 101 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1263 is 1
9999 mem: location 1264 is 65516
9999 mem: location 1265 is 0
9999 mem: location 1266 is 0
9999 mem: location 1257 is 1528
9999 run: result 0 is [1, 65516, 0, 0]
9999 run: result 1 is 1528
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1301
9999 mem: storing 65516 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 1528 in location 1297
9999 mem: storing 1 in location 1305
9999 mem: storing 0 in location 1306
 100 run: loop-unless found?, 
9999 mem: location 1305 is 1
9999 run: jump-unless fell through
 100 run: break-if quit?, 
9999 mem: location 1306 is 0
9999 run: jump-if fell through
 100 run: trace 10, [app], [next-event]
  10 app: next-event 
 100 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1301 is 1
9999 mem: location 1302 is 65516
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: storing 0 in location 1307
 100 run: break-unless t, 
9999 mem: location 1307 is 0
9999 run: jumping to instruction 18
 100 run: break-if t, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 100 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1296 is 1009
9999 mem: location 1298 is 1115
9999 mem: location 1301 is 1
9999 mem: location 1302 is 65516
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1341
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1342
 101 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1343
9999 mem: storing 65516 in location 1344
9999 mem: storing 0 in location 1345
9999 mem: storing 0 in location 1346
 101 run: jump-if editor, 1:offset
9999 mem: location 1342 is 1115
9999 run: jumping to instruction 6
 101 run: screen-width:number <- screen-width screen
9999 mem: location 1341 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1532
 102 run: break-unless sc, 
9999 mem: location 1532 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1532 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1532 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1533
 102 run: reply width
9999 mem: location 1533 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1347
 101 run: screen-height:number <- screen-height screen
9999 mem: location 1341 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1532
 102 run: break-unless sc, 
9999 mem: location 1532 is 1009
9999 run: jump-unless fell through
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1532 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1532 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1533
 102 run: reply height
9999 mem: location 1533 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1348
 101 run: left:number <- get *editor, left:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1349
 101 run: right:number <- get *editor, right:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1350
 101 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1351
 101 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1352
 101 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1353
 101 run: save-row:number <- copy *cursor-row
9999 mem: location 1352 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1354
 101 run: save-column:number <- copy *cursor-column
9999 mem: location 1353 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1355
 101 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1343 is 1
9999 mem: location 1344 is 65516
9999 mem: location 1345 is 0
9999 mem: location 1346 is 0
9999 mem: storing 0 in location 1356
 101 run: break-unless c, 
9999 mem: location 1356 is 0
9999 run: jumping to instruction 432
 101 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1343 is 1
9999 mem: location 1344 is 65516
9999 mem: location 1345 is 0
9999 mem: location 1346 is 0
9999 mem: storing 1344 in location 1411
 101 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1411 is 1344
 101 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1411 is 1344
9999 mem: location 1344 is 65516
9999 mem: storing 0 in location 1373
 101 run: break-unless page-up?, 
9999 mem: location 1373 is 0
9999 run: jumping to instruction 477
 101 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1411 is 1344
9999 mem: location 1344 is 65516
9999 mem: storing 0 in location 1389
 101 run: break-unless page-down?, 
9999 mem: location 1389 is 0
9999 run: jumping to instruction 519
 101 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1411 is 1344
9999 mem: location 1344 is 65516
9999 mem: storing 0 in location 1396
 101 run: break-unless move-to-end-of-line?, 
9999 mem: location 1396 is 0
9999 run: jumping to instruction 556
 101 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1411 is 1344
9999 mem: location 1344 is 65516
9999 mem: storing 0 in location 1397
 101 run: break-unless move-to-start-of-line?, 
9999 mem: location 1397 is 0
9999 run: jumping to instruction 593
 101 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1411 is 1344
9999 mem: location 1344 is 65516
9999 mem: storing 1 in location 1412
 101 run: break-unless move-to-next-line?, 
9999 mem: location 1412 is 1
9999 run: jump-unless fell through
 101 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1376
 101 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1377
 101 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1169
9999 mem: storing 1169 in location 1378
 101 run: editor, go-render? <- move-to-next-line editor, screen-height
9999 mem: location 1342 is 1115
9999 mem: location 1348 is 5
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 22
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1427
 102 run: screen-height:number <- next-ingredient 
9999 mem: storing 5 in location 1428
 102 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1427 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1427 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1429
 102 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1427 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1427 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1430
 102 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1427 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1427 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1431
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1427 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1427 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1432
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1427 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1427 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1433
 102 run: last-line:number <- subtract screen-height, 1
9999 mem: location 1428 is 5
9999 mem: storing 4 in location 1434
 102 run: already-at-bottom?:boolean <- greater-or-equal *cursor-row, last-line
9999 mem: location 1429 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1434 is 4
9999 mem: storing 0 in location 1435
 102 run: break-if already-at-bottom?, 
9999 mem: location 1435 is 0
9999 run: jump-if fell through
 102 run: max:number <- subtract right, left
9999 mem: location 1433 is 9
9999 mem: location 1432 is 0
9999 mem: storing 9 in location 1436
 102 run: next-line:address:duplex-list <- before-start-of-next-line *before-cursor, max
9999 mem: location 1431 is 1118
9999 mem: location 1118 is 1514
9999 mem: location 1436 is 9
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 103 run: original:address:duplex-list <- next-ingredient 
9999 mem: storing 1514 in location 1002
 103 run: max:number <- next-ingredient 
9999 mem: storing 9 in location 1003
 103 run: count:number <- copy 0
9999 mem: storing 0 in location 1004
 103 run: curr:address:duplex-list <- copy original
9999 mem: location 1002 is 1514
9999 mem: storing 1514 in location 1005
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1005 is 1514
9999 mem: location 1514 is 48
9999 mem: location 1515 is 0
9999 mem: location 1516 is 1175
9999 mem: location 1005 is 1514
9999 run: address to copy is 1514
9999 run: its type is character
9999 mem: location 1514 is 48
9999 mem: storing 48 in location 1006
 103 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 48
9999 mem: storing 0 in location 1007
 103 run: break-unless at-newline?, 
9999 mem: location 1007 is 0
9999 run: jumping to instruction 11
 103 run: jump-if curr, 1:offset
9999 mem: location 1005 is 1514
9999 run: jumping to instruction 15
 103 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1004 is 0
9999 mem: location 1003 is 9
9999 mem: storing 0 in location 1008
 103 run: break-if done?, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1005 is 1514
9999 mem: location 1514 is 48
9999 mem: location 1515 is 0
9999 mem: location 1516 is 1175
9999 mem: location 1005 is 1514
9999 run: address to copy is 1514
9999 run: its type is character
9999 mem: location 1514 is 48
9999 mem: storing 48 in location 1006
 103 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 48
9999 mem: storing 0 in location 1007
 103 run: break-if at-newline?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr <- next-duplex curr
9999 mem: location 1005 is 1514
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1514 in location 1532
 104 run: jump-if in, 1:offset
9999 mem: location 1532 is 1514
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1532 is 1514
9999 mem: location 1514 is 48
9999 mem: location 1515 is 0
9999 mem: location 1516 is 1175
9999 mem: location 1532 is 1514
9999 run: address to copy is 1515
9999 run: its type is address
9999 mem: location 1515 is 0
9999 mem: storing 0 in location 1533
 104 run: reply result
9999 mem: location 1533 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1005
 103 run: count <- add count, 1
9999 mem: location 1004 is 0
9999 mem: storing 1 in location 1004
 103 run: loop 
9999 run: jumping to instruction 13
 103 run: jump-if curr, 1:offset
9999 mem: location 1005 is 0
9999 run: jump-if fell through
 103 run: reply original
9999 mem: location 1002 is 1514
9999 run: result 0 is 1514
9999 mem: storing 1514 in location 1437
 102 run: no-motion?:boolean <- equal next-line, *before-cursor
9999 mem: location 1437 is 1514
9999 mem: location 1431 is 1118
9999 mem: location 1118 is 1514
9999 mem: storing 1 in location 1438
 102 run: break-unless no-motion?, 
9999 mem: location 1438 is 1
9999 run: jump-unless fell through
schedule: move-to-next-line/handle-keyboard-event/editor-event-loop/run1003/scenario-editor-scrolls-at-end-on-down-arrow
 102 run: scroll?:boolean <- greater-than *cursor-row, 1
9999 mem: location 1429 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1439
 102 run: break-if scroll?, +try-to-scroll:label
9999 mem: location 1439 is 0
9999 run: jump-if fell through
 102 run: reply editor/same-as-ingredient:0, 0/no-more-render
9999 mem: location 1427 is 1115
9999 run: result 0 is 1115
9999 run: result 1 is 0
9999 mem: storing 1115 in location 1342
9999 mem: storing 0 in location 1399
 101 run: undo-coalesce-tag:number <- copy 4/down-arrow
9999 mem: storing 4 in location 1379
 101 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1380
 101 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1381
 101 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1169
9999 mem: storing 1169 in location 1382
 101 run: break-unless undo-coalesce-tag, 
9999 mem: location 1379 is 4
9999 run: jump-unless fell through
 101 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1360
 101 run: break-unless *undo, 
9999 mem: location 1360 is 1124
9999 mem: location 1124 is 1545
9999 run: jump-unless fell through
 101 run: op:address:operation/skiptypecheck <- first *undo
9999 mem: location 1360 is 1124
9999 mem: location 1124 is 1545
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:list <- next-ingredient 
9999 mem: storing 1545 in location 1532
 102 run: result:location <- get *in, value:offset
9999 mem: location 1532 is 1545
9999 mem: location 1545 is 1534
9999 mem: location 1546 is 1517
9999 mem: location 1532 is 1545
9999 run: address to copy is 1545
9999 run: its type is number
9999 mem: location 1545 is 1534
9999 mem: storing 1534 in location 1533
 102 run: reply result
9999 mem: location 1533 is 1534
9999 run: result 0 is 1534
9999 mem: storing 1534 in location 1359
 101 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1359 is 1534
9999 mem: location 1534 is 1
9999 mem: location 1535 is 1
9999 mem: location 1536 is 3
9999 mem: location 1537 is 1169
9999 mem: location 1538 is 1
9999 mem: location 1539 is 3
9999 mem: location 1540 is 1169
9999 mem: location 1541 is 0
9999 mem: location 1542 is 0
9999 mem: location 1543 is 0
9999 mem: location 1544 is 0
9999 mem: location 1359 is 1534
9999 mem: storing 1535 in location 1365
 101 run: break-unless move, 
9999 mem: location 1365 is 1535
9999 run: jump-unless fell through
 101 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1365 is 1535
9999 mem: location 1535 is 1
9999 mem: location 1536 is 3
9999 mem: location 1537 is 1169
9999 mem: location 1538 is 1
9999 mem: location 1539 is 3
9999 mem: location 1540 is 1169
9999 mem: location 1541 is 0
9999 mem: location 1365 is 1535
9999 run: address to copy is 1541
9999 run: its type is number
9999 mem: location 1541 is 0
9999 mem: storing 0 in location 1383
 101 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1379 is 4
9999 mem: location 1383 is 0
9999 mem: storing 0 in location 1384
 101 run: break-unless coalesce?, 
9999 mem: location 1384 is 0
9999 run: jumping to instruction 623
 101 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1547
9999 mem: storing 1547 in location 1359
 101 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1376 is 1
9999 mem: location 1377 is 3
9999 mem: location 1378 is 1169
9999 mem: location 1380 is 1
9999 mem: location 1381 is 3
9999 mem: location 1382 is 1169
9999 mem: location 1379 is 4
9999 mem: location 1359 is 1547
9999 mem: location 1359 is 1547
9999 mem: storing 1 in location 1547
9999 mem: storing 1 in location 1548
9999 mem: storing 3 in location 1549
9999 mem: storing 1169 in location 1550
9999 mem: storing 1 in location 1551
9999 mem: storing 3 in location 1552
9999 mem: storing 1169 in location 1553
9999 mem: storing 4 in location 1554
 101 run: editor <- add-operation editor, op
9999 mem: location 1342 is 1115
9999 mem: location 1359 is 1547
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1251
 102 run: op:address:operation <- next-ingredient 
9999 mem: storing 1547 in location 1252
 102 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1251 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1545
9999 mem: location 1125 is 0
9999 mem: location 1251 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1253
 102 run: *undo/skiptypecheck <- push op, *undo
9999 mem: location 1252 is 1547
9999 mem: location 1253 is 1124
9999 mem: location 1124 is 1545
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: x:location <- next-ingredient 
9999 mem: storing 1547 in location 1207
 103 run: in:address:list <- next-ingredient 
9999 mem: storing 1545 in location 1208
 103 run: result:address:list <- new list:type
9999 mem: new alloc: 1558
9999 mem: storing 1558 in location 1209
 103 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1209 is 1558
9999 mem: location 1558 is 0
9999 mem: location 1559 is 0
9999 mem: location 1209 is 1558
9999 run: address to copy is 1558
9999 mem: storing 1558 in location 1210
 103 run: *val <- copy x
9999 mem: location 1207 is 1547
9999 mem: location 1210 is 1558
9999 mem: storing 1547 in location 1558
 103 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1209 is 1558
9999 mem: location 1558 is 1547
9999 mem: location 1559 is 0
9999 mem: location 1209 is 1558
9999 run: address to copy is 1559
9999 mem: storing 1559 in location 1211
 103 run: *next <- copy in
9999 mem: location 1208 is 1545
9999 mem: location 1211 is 1559
9999 mem: storing 1545 in location 1559
 103 run: reply result
9999 mem: location 1209 is 1558
9999 run: result 0 is 1558
9999 mem: location 1253 is 1124
9999 mem: storing 1558 in location 1124
 102 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1251 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1251 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1254
 102 run: *redo <- copy 0
9999 mem: location 1254 is 1125
9999 mem: storing 0 in location 1125
 102 run: reply editor/same-as-ingredient:0
9999 mem: location 1251 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1342
 101 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1341 is 1009
9999 mem: location 1342 is 1115
9999 mem: location 1399 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1296
9999 mem: storing 1115 in location 1298
9999 mem: storing 0 in location 1308
 100 run: break-unless go-render?, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 25
 100 run: loop 
9999 run: jumping to instruction 5
 100 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1299
 100 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1300
 100 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1296 is 1009
9999 mem: location 1299 is 1
9999 mem: location 1300 is 3
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1207
 101 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1208
 101 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1209
 101 run: break-unless sc, 
9999 mem: location 1207 is 1009
9999 run: jump-unless fell through
 101 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1207 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1207 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1210
 101 run: *row <- copy new-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1011
9999 mem: storing 1 in location 1011
 101 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1207 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1207 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1211
 101 run: *column <- copy new-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1012
9999 mem: storing 3 in location 1012
 101 run: reply sc/same-as-ingredient:0
9999 mem: location 1207 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1296
 100 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1297 is 1528
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 101 run: x:address:console <- next-ingredient 
9999 mem: storing 1528 in location 1257
 101 run: break-unless x, 
9999 mem: location 1257 is 1528
9999 run: jump-unless fell through
 101 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1257 is 1528
9999 mem: location 1528 is 2
9999 mem: location 1529 is 1519
9999 mem: location 1257 is 1528
9999 run: address to copy is 1528
9999 mem: storing 1528 in location 1258
 101 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1257 is 1528
9999 mem: location 1528 is 2
9999 mem: location 1529 is 1519
9999 mem: location 1257 is 1528
9999 run: address to copy is 1529
9999 run: its type is address
9999 mem: location 1529 is 1519
9999 mem: storing 1519 in location 1259
 101 run: max:number <- length *buf
9999 mem: location 1259 is 1519
9999 mem: storing 2 in location 1260
 101 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1258 is 1528
9999 mem: location 1528 is 2
9999 mem: location 1260 is 2
9999 mem: storing 1 in location 1261
 101 run: break-unless done?, 
9999 mem: location 1261 is 1
9999 run: jump-unless fell through
 101 run: dummy:address:event <- new event:type
9999 mem: storing 1530 in location 1262
 101 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1262 is 1530
9999 mem: location 1530 is 0
9999 mem: location 1531 is 0
9999 mem: location 1532 is 0
9999 mem: location 1533 is 0
9999 mem: location 1257 is 1528
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1528
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 1528 in location 1297
9999 mem: storing 1 in location 1305
9999 mem: storing 1 in location 1306
 100 run: loop-unless found?, 
9999 mem: location 1305 is 1
9999 run: jump-unless fell through
 100 run: break-if quit?, 
9999 mem: location 1306 is 1
9999 run: jumping to instruction 28
  99 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 3
  99 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 4
  98 run: memory-should-contain [
    3 <- 1
    4 <- 3
  ]
9999 run: checking location 3
9999 run: checking location 4
  98 run: check-trace-count-for-label 0, [print-character]
  98 run: assume-console [
    type [1]
  ]
parse: instruction: type
parse:   ingredient: {name: "1", properties: [_: "literal-string"]}
  98 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1004
after-brace: editor-event-loop ...
  98 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1565
9999 mem: location 2 is 1115
  99 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 14
  99 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1296
  99 run: console:address <- next-ingredient 
9999 mem: storing 1565 in location 1297
  99 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1298
  99 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1299
  99 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1300
  99 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1296 is 1009
9999 mem: location 1299 is 1
9999 mem: location 1300 is 3
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 100 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1207
 100 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1208
 100 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1209
 100 run: break-unless sc, 
9999 mem: location 1207 is 1009
9999 run: jump-unless fell through
 100 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1207 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1207 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1210
 100 run: *row <- copy new-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1011
9999 mem: storing 1 in location 1011
 100 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1207 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1207 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1211
 100 run: *column <- copy new-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1012
9999 mem: storing 3 in location 1012
 100 run: reply sc/same-as-ingredient:0
9999 mem: location 1207 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1296
  99 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1297 is 1565
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 100 run: x:address:console <- next-ingredient 
9999 mem: storing 1565 in location 1257
 100 run: break-unless x, 
9999 mem: location 1257 is 1565
9999 run: jump-unless fell through
 100 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1257 is 1565
9999 mem: location 1565 is 0
9999 mem: location 1566 is 1560
9999 mem: location 1257 is 1565
9999 run: address to copy is 1565
9999 mem: storing 1565 in location 1258
 100 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1257 is 1565
9999 mem: location 1565 is 0
9999 mem: location 1566 is 1560
9999 mem: location 1257 is 1565
9999 run: address to copy is 1566
9999 run: its type is address
9999 mem: location 1566 is 1560
9999 mem: storing 1560 in location 1259
 100 run: max:number <- length *buf
9999 mem: location 1259 is 1560
9999 mem: storing 1 in location 1260
 100 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1258 is 1565
9999 mem: location 1565 is 0
9999 mem: location 1260 is 1
9999 mem: storing 0 in location 1261
 100 run: break-unless done?, 
9999 mem: location 1261 is 0
9999 run: jumping to instruction 12
 100 run: result:event <- index *buf, *idx
9999 mem: location 1259 is 1560
9999 mem: location 1258 is 1565
9999 mem: location 1565 is 0
9999 run: address to copy is 1561
9999 run: its type is event
9999 mem: location 1561 is 0
9999 mem: location 1562 is 49
9999 mem: location 1563 is 0
9999 mem: location 1564 is 0
9999 mem: storing 0 in location 1263
9999 mem: storing 49 in location 1264
9999 mem: storing 0 in location 1265
9999 mem: storing 0 in location 1266
 100 run: *idx <- add *idx, 1
9999 mem: location 1258 is 1565
9999 mem: location 1565 is 0
9999 mem: location 1258 is 1565
9999 mem: storing 1 in location 1565
 100 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1263 is 0
9999 mem: location 1264 is 49
9999 mem: location 1265 is 0
9999 mem: location 1266 is 0
9999 mem: location 1257 is 1565
9999 run: result 0 is [0, 49, 0, 0]
9999 run: result 1 is 1565
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1301
9999 mem: storing 49 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 1565 in location 1297
9999 mem: storing 1 in location 1305
9999 mem: storing 0 in location 1306
  99 run: loop-unless found?, 
9999 mem: location 1305 is 1
9999 run: jump-unless fell through
  99 run: break-if quit?, 
9999 mem: location 1306 is 0
9999 run: jump-if fell through
  99 run: trace 10, [app], [next-event]
  10 app: next-event 
  99 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1301 is 0
9999 mem: location 1302 is 49
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: storing 0 in location 1307
  99 run: break-unless t, 
9999 mem: location 1307 is 0
9999 run: jumping to instruction 18
  99 run: break-if t, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
  99 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1296 is 1009
9999 mem: location 1298 is 1115
9999 mem: location 1301 is 0
9999 mem: location 1302 is 49
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 100 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1341
 100 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1342
 100 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1343
9999 mem: storing 49 in location 1344
9999 mem: storing 0 in location 1345
9999 mem: storing 0 in location 1346
 100 run: jump-if editor, 1:offset
9999 mem: location 1342 is 1115
9999 run: jumping to instruction 6
 100 run: screen-width:number <- screen-width screen
9999 mem: location 1341 is 1009
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1567
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1569
 101 run: break-unless sc, 
9999 mem: location 1569 is 1009
9999 run: jump-unless fell through
 101 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1569 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1569 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1570
 101 run: reply width
9999 mem: location 1570 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1347
 100 run: screen-height:number <- screen-height screen
9999 mem: location 1341 is 1009
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1569
 101 run: break-unless sc, 
9999 mem: location 1569 is 1009
9999 run: jump-unless fell through
 101 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1569 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1569 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1570
 101 run: reply height
9999 mem: location 1570 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1348
 100 run: left:number <- get *editor, left:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1349
 100 run: right:number <- get *editor, right:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1350
 100 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1351
 100 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1352
 100 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1353
 100 run: save-row:number <- copy *cursor-row
9999 mem: location 1352 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1354
 100 run: save-column:number <- copy *cursor-column
9999 mem: location 1353 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1355
 100 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1343 is 0
9999 mem: location 1344 is 49
9999 mem: location 1345 is 0
9999 mem: location 1346 is 0
9999 mem: storing 1344 in location 1356
 100 run: break-unless c, 
9999 mem: location 1356 is 1344
9999 run: jump-unless fell through
 100 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 100 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1356 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1357
 100 run: break-unless redo?, 
9999 mem: location 1357 is 0
9999 run: jumping to instruction 60
 100 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1356 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1368
 100 run: break-unless undo?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 107
 100 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1356 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1373
 100 run: break-unless page-up?, 
9999 mem: location 1373 is 0
9999 run: jumping to instruction 149
 100 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1356 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1389
 100 run: break-unless page-down?, 
9999 mem: location 1389 is 0
9999 run: jumping to instruction 191
 100 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1356 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1390
 100 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1390 is 0
9999 run: jumping to instruction 210
 100 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1356 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1395
 100 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1395 is 0
9999 run: jumping to instruction 229
 100 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1356 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1396
 100 run: break-unless move-to-end-of-line?, 
9999 mem: location 1396 is 0
9999 run: jumping to instruction 266
 100 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1356 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1397
 100 run: break-unless move-to-start-of-line?, 
9999 mem: location 1397 is 0
9999 run: jumping to instruction 303
 100 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1356 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1398
 100 run: break-unless delete-previous-character?, 
9999 mem: location 1398 is 0
9999 run: jumping to instruction 343
 100 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1356 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1403
 100 run: break-unless tab?, 
9999 mem: location 1403 is 0
9999 run: jumping to instruction 379
 100 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1356 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1407
 100 run: break-unless newline?, 
9999 mem: location 1407 is 0
9999 run: jumping to instruction 397
 100 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1356 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 1 in location 1410
 100 run: jump-if regular-character?, 1:offset
9999 mem: location 1410 is 1
9999 run: jumping to instruction 401
 100 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1169
9999 mem: storing 1169 in location 1391
 100 run: cursor-before:address:duplex-list <- copy *before-cursor
9999 mem: location 1351 is 1118
9999 mem: location 1118 is 1514
9999 mem: storing 1514 in location 1404
 100 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1342 is 1115
9999 mem: location 1356 is 1344
9999 mem: location 1344 is 49
9999 mem: location 1341 is 1009
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 30
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1485
 101 run: c:character <- next-ingredient 
9999 mem: storing 49 in location 1486
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1487
 101 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1485 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1514
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1485 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1488
 101 run: insert-duplex c, *before-cursor
9999 mem: location 1486 is 49
9999 mem: location 1488 is 1118
9999 mem: location 1118 is 1514
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 102 run: x:character <- next-ingredient 
9999 mem: storing 49 in location 1147
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1514 in location 1148
 102 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1571
9999 mem: storing 1571 in location 1149
 102 run: val:address:character <- get-address *new-node, value:offset
9999 mem: location 1149 is 1571
9999 mem: location 1571 is 0
9999 mem: location 1572 is 0
9999 mem: location 1573 is 0
9999 mem: location 1149 is 1571
9999 run: address to copy is 1571
9999 mem: storing 1571 in location 1150
 102 run: *val <- copy x
9999 mem: location 1147 is 49
9999 mem: location 1150 is 1571
9999 mem: storing 49 in location 1571
 102 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1148 is 1514
9999 mem: location 1514 is 48
9999 mem: location 1515 is 0
9999 mem: location 1516 is 1175
9999 mem: location 1148 is 1514
9999 run: address to copy is 1515
9999 run: its type is address
9999 mem: location 1515 is 0
9999 mem: storing 0 in location 1151
 102 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1148 is 1514
9999 mem: location 1514 is 48
9999 mem: location 1515 is 0
9999 mem: location 1516 is 1175
9999 mem: location 1148 is 1514
9999 run: address to copy is 1515
9999 mem: storing 1515 in location 1152
 102 run: *y <- copy new-node
9999 mem: location 1149 is 1571
9999 mem: location 1152 is 1515
9999 mem: storing 1571 in location 1515
 102 run: y <- get-address *new-node, prev:offset
9999 mem: location 1149 is 1571
9999 mem: location 1571 is 49
9999 mem: location 1572 is 0
9999 mem: location 1573 is 0
9999 mem: location 1149 is 1571
9999 run: address to copy is 1573
9999 mem: storing 1573 in location 1152
 102 run: *y <- copy in
9999 mem: location 1148 is 1514
9999 mem: location 1152 is 1573
9999 mem: storing 1514 in location 1573
 102 run: y <- get-address *new-node, next:offset
9999 mem: location 1149 is 1571
9999 mem: location 1571 is 49
9999 mem: location 1572 is 0
9999 mem: location 1573 is 1514
9999 mem: location 1149 is 1571
9999 run: address to copy is 1572
9999 mem: storing 1572 in location 1152
 102 run: *y <- copy next-node
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1572
9999 mem: storing 0 in location 1572
 102 run: jump-if next-node, 1:offset
9999 mem: location 1151 is 0
9999 run: jump-if fell through
 102 run: reply new-node
9999 mem: location 1149 is 1571
 101 run: *before-cursor <- next-duplex *before-cursor
9999 mem: location 1488 is 1118
9999 mem: location 1118 is 1514
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1514 in location 1569
 102 run: jump-if in, 1:offset
9999 mem: location 1569 is 1514
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1569 is 1514
9999 mem: location 1514 is 48
9999 mem: location 1515 is 1571
9999 mem: location 1516 is 1175
9999 mem: location 1569 is 1514
9999 run: address to copy is 1515
9999 run: its type is address
9999 mem: location 1515 is 1571
9999 mem: storing 1571 in location 1570
 102 run: reply result
9999 mem: location 1570 is 1571
9999 run: result 0 is 1571
9999 mem: location 1488 is 1118
9999 mem: storing 1571 in location 1118
 101 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1485 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1571
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1485 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1489
 101 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1485 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1571
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1485 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1490
 101 run: left:number <- get *editor, left:offset
9999 mem: location 1485 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1571
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1485 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1491
 101 run: right:number <- get *editor, right:offset
9999 mem: location 1485 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1571
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1485 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1492
 101 run: save-row:number <- copy *cursor-row
9999 mem: location 1489 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1493
 101 run: save-column:number <- copy *cursor-column
9999 mem: location 1490 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1494
 101 run: screen-width:number <- screen-width screen
9999 mem: location 1487 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1569
 102 run: break-unless sc, 
9999 mem: location 1569 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1569 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1569 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1570
 102 run: reply width
9999 mem: location 1570 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1495
 101 run: screen-height:number <- screen-height screen
9999 mem: location 1487 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1569
 102 run: break-unless sc, 
9999 mem: location 1569 is 1009
9999 run: jump-unless fell through
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1569 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1569 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1570
 102 run: reply height
9999 mem: location 1570 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1496
 101 run: wrap-column:number <- subtract right, 1
9999 mem: location 1492 is 9
9999 mem: storing 8 in location 1497
 101 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1490 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1497 is 8
9999 mem: storing 0 in location 1498
 101 run: break-unless at-wrap?, 
9999 mem: location 1498 is 0
9999 run: jumping to instruction 39
 101 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1490 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1490 is 1122
9999 mem: storing 4 in location 1122
 101 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1488 is 1118
9999 mem: location 1118 is 1571
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 102 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1571 in location 1569
 102 run: jump-if in, 1:offset
9999 mem: location 1569 is 1571
9999 run: jumping to instruction 4
 102 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1569 is 1571
9999 mem: location 1571 is 49
9999 mem: location 1572 is 0
9999 mem: location 1573 is 1514
9999 mem: location 1569 is 1571
9999 run: address to copy is 1572
9999 run: its type is address
9999 mem: location 1572 is 0
9999 mem: storing 0 in location 1570
 102 run: reply result
9999 mem: location 1570 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1504
 101 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1504 is 0
9999 mem: storing 1 in location 1505
 101 run: break-unless at-end?, 
9999 mem: location 1505 is 1
9999 run: jump-unless fell through
 101 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1496 is 5
9999 mem: storing 4 in location 1506
 101 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1493 is 1
9999 mem: location 1506 is 4
9999 mem: storing 0 in location 1507
 101 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1494 is 3
9999 mem: location 1492 is 9
9999 mem: storing 0 in location 1508
 101 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1507 is 0
9999 mem: location 1508 is 0
9999 mem: storing 0 in location 1509
 101 run: break-if overflow?, 
9999 mem: location 1509 is 0
9999 run: jump-if fell through
 101 run: move-cursor screen, save-row, save-column
9999 mem: location 1487 is 1009
9999 mem: location 1493 is 1
9999 mem: location 1494 is 3
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1207
 102 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1208
 102 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1209
 102 run: break-unless sc, 
9999 mem: location 1207 is 1009
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1207 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1207 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1210
 102 run: *row <- copy new-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1011
9999 mem: storing 1 in location 1011
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1207 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1207 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1211
 102 run: *column <- copy new-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1012
9999 mem: storing 3 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1207 is 1009
 101 run: print-character screen, c
9999 mem: location 1487 is 1009
9999 mem: location 1486 is 49
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 102 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1225
 102 run: c:character <- next-ingredient 
9999 mem: storing 49 in location 1226
 102 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1227
9999 mem: storing 0 in location 1228
 102 run: break-if color-found?, 
9999 mem: location 1228 is 0
9999 run: jump-if fell through
 102 run: color <- copy 7/white
9999 mem: storing 7 in location 1227
 102 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1229
9999 mem: storing 0 in location 1230
 102 run: break-if bg-color-found?, 
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 102 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1229
 102 run: trace 90, [print-character], c
9999 mem: location 1226 is 49
  90 print-character: 49 
 102 run: break-unless sc, 
9999 mem: location 1225 is 1009
9999 run: jump-unless fell through
 102 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1225 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1225 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1231
 102 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1225 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1225 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1232
 102 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1225 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1225 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1233
 102 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1233 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1234
 102 run: jump-if legal?, 1:offset
9999 mem: location 1234 is 1
9999 run: jumping to instruction 22
 102 run: legal? <- lesser-than *row, height
9999 mem: location 1233 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1232 is 5
9999 mem: storing 1 in location 1234
 102 run: jump-if legal?, 1:offset
9999 mem: location 1234 is 1
9999 run: jumping to instruction 25
 102 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1225 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1225 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1235
 102 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1235 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1234
 102 run: jump-if legal?, 1:offset
9999 mem: location 1234 is 1
9999 run: jumping to instruction 29
 102 run: legal? <- lesser-than *column, width
9999 mem: location 1235 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1231 is 10
9999 mem: storing 1 in location 1234
 102 run: jump-if legal?, 1:offset
9999 mem: location 1234 is 1
9999 run: jumping to instruction 32
 102 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1226 is 49
9999 mem: storing 0 in location 1236
 102 run: break-unless newline?, 
9999 mem: location 1236 is 0
9999 run: jumping to instruction 43
 102 run: index:number <- multiply *row, width
9999 mem: location 1233 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1231 is 10
9999 mem: storing 10 in location 1239
 102 run: index <- add index, *column
9999 mem: location 1239 is 10
9999 mem: location 1235 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1239
 102 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1225 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1225 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1240
 102 run: len:number <- length *buf
9999 mem: location 1240 is 1014
9999 mem: storing 50 in location 1241
 102 run: backspace?:boolean <- equal c, 8
9999 mem: location 1226 is 49
9999 mem: storing 0 in location 1242
 102 run: break-unless backspace?, 
9999 mem: location 1242 is 0
9999 run: jumping to instruction 63
 102 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1240 is 1014
9999 mem: location 1239 is 13
9999 mem: storing 1041 in location 1244
 102 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1244 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1244 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1245
 102 run: *cursor-contents <- copy c
9999 mem: location 1226 is 49
9999 mem: location 1245 is 1041
9999 mem: storing 49 in location 1041
 102 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1244 is 1041
9999 mem: location 1041 is 49
9999 mem: location 1042 is 7
9999 mem: location 1244 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1246
 102 run: *cursor-color <- copy color
9999 mem: location 1227 is 7
9999 mem: location 1246 is 1042
9999 mem: storing 7 in location 1042
 102 run: right:number <- subtract width, 1
9999 mem: location 1231 is 10
9999 mem: storing 9 in location 1247
 102 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1235 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1248
 102 run: break-if at-right?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 102 run: *column <- add *column, 1
9999 mem: location 1235 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1235 is 1012
9999 mem: storing 4 in location 1012
 102 run: reply sc/same-as-ingredient:0
9999 mem: location 1225 is 1009
 101 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:2, 0/no-more-render
9999 mem: location 1485 is 1115
9999 mem: location 1487 is 1009
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 mem: storing 1115 in location 1342
9999 mem: storing 1009 in location 1341
9999 mem: storing 0 in location 1399
 100 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1571
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1169
9999 mem: storing 1169 in location 1393
 100 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1342 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1571
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1342 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1360
 100 run: break-unless *undo, 
9999 mem: location 1360 is 1124
9999 mem: location 1124 is 1558
9999 run: jump-unless fell through
 100 run: op:address:operation/skiptypecheck <- first *undo
9999 mem: location 1360 is 1124
9999 mem: location 1124 is 1558
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:list <- next-ingredient 
9999 mem: storing 1558 in location 1569
 101 run: result:location <- get *in, value:offset
9999 mem: location 1569 is 1558
9999 mem: location 1558 is 1547
9999 mem: location 1559 is 1545
9999 mem: location 1569 is 1558
9999 run: address to copy is 1558
9999 run: its type is number
9999 mem: location 1558 is 1547
9999 mem: storing 1547 in location 1570
 101 run: reply result
9999 mem: location 1570 is 1547
9999 run: result 0 is 1547
9999 mem: storing 1547 in location 1359
 100 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1359 is 1547
9999 mem: location 1547 is 1
9999 mem: location 1548 is 1
9999 mem: location 1549 is 3
9999 mem: location 1550 is 1169
9999 mem: location 1551 is 1
9999 mem: location 1552 is 3
9999 mem: location 1553 is 1169
9999 mem: location 1554 is 4
9999 mem: location 1555 is 0
9999 mem: location 1556 is 0
9999 mem: location 1557 is 0
9999 mem: location 1359 is 1547
9999 mem: storing 0 in location 1366
 100 run: break-unless typing, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 423
 100 run: insert-from:address:duplex-list <- next-duplex cursor-before
9999 mem: location 1404 is 1514
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1514 in location 1569
 101 run: jump-if in, 1:offset
9999 mem: location 1569 is 1514
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1569 is 1514
9999 mem: location 1514 is 48
9999 mem: location 1515 is 1571
9999 mem: location 1516 is 1175
9999 mem: location 1569 is 1514
9999 run: address to copy is 1515
9999 run: its type is address
9999 mem: location 1515 is 1571
9999 mem: storing 1571 in location 1570
 101 run: reply result
9999 mem: location 1570 is 1571
9999 run: result 0 is 1571
9999 mem: storing 1571 in location 1367
 100 run: insert-to:address:duplex-list <- next-duplex insert-from
9999 mem: location 1367 is 1571
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 101 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1571 in location 1569
 101 run: jump-if in, 1:offset
9999 mem: location 1569 is 1571
9999 run: jumping to instruction 4
 101 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1569 is 1571
9999 mem: location 1571 is 49
9999 mem: location 1572 is 0
9999 mem: location 1573 is 1514
9999 mem: location 1569 is 1571
9999 run: address to copy is 1572
9999 run: its type is address
9999 mem: location 1572 is 0
9999 mem: storing 0 in location 1570
 101 run: reply result
9999 mem: location 1570 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1406
 100 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1574
9999 mem: storing 1574 in location 1359
 100 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1354 is 1
9999 mem: location 1355 is 3
9999 mem: location 1391 is 1169
9999 mem: location 1352 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1353 is 1122
9999 mem: location 1122 is 4
9999 mem: location 1393 is 1169
9999 mem: location 1367 is 1571
9999 mem: location 1406 is 0
9999 mem: location 1359 is 1574
9999 mem: location 1359 is 1574
9999 mem: storing 0 in location 1574
9999 mem: storing 1 in location 1575
9999 mem: storing 3 in location 1576
9999 mem: storing 1169 in location 1577
9999 mem: storing 1 in location 1578
9999 mem: storing 4 in location 1579
9999 mem: storing 1169 in location 1580
9999 mem: storing 1571 in location 1581
9999 mem: storing 0 in location 1582
9999 mem: storing 1 in location 1583
 100 run: editor <- add-operation editor, op
9999 mem: location 1342 is 1115
9999 mem: location 1359 is 1574
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1251
 101 run: op:address:operation <- next-ingredient 
9999 mem: storing 1574 in location 1252
 101 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1251 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1571
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1558
9999 mem: location 1125 is 0
9999 mem: location 1251 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1253
 101 run: *undo/skiptypecheck <- push op, *undo
9999 mem: location 1252 is 1574
9999 mem: location 1253 is 1124
9999 mem: location 1124 is 1558
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 102 run: x:location <- next-ingredient 
9999 mem: storing 1574 in location 1207
 102 run: in:address:list <- next-ingredient 
9999 mem: storing 1558 in location 1208
 102 run: result:address:list <- new list:type
9999 mem: new alloc: 1585
9999 mem: storing 1585 in location 1209
 102 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1209 is 1585
9999 mem: location 1585 is 0
9999 mem: location 1586 is 0
9999 mem: location 1209 is 1585
9999 run: address to copy is 1585
9999 mem: storing 1585 in location 1210
 102 run: *val <- copy x
9999 mem: location 1207 is 1574
9999 mem: location 1210 is 1585
9999 mem: storing 1574 in location 1585
 102 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1209 is 1585
9999 mem: location 1585 is 1574
9999 mem: location 1586 is 0
9999 mem: location 1209 is 1585
9999 run: address to copy is 1586
9999 mem: storing 1586 in location 1211
 102 run: *next <- copy in
9999 mem: location 1208 is 1558
9999 mem: location 1211 is 1586
9999 mem: storing 1558 in location 1586
 102 run: reply result
9999 mem: location 1209 is 1585
9999 run: result 0 is 1585
9999 mem: location 1253 is 1124
9999 mem: storing 1585 in location 1124
 101 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1251 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1571
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1585
9999 mem: location 1125 is 0
9999 mem: location 1251 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1254
 101 run: *redo <- copy 0
9999 mem: location 1254 is 1125
9999 mem: storing 0 in location 1125
 101 run: reply editor/same-as-ingredient:0
9999 mem: location 1251 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1342
 100 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1341 is 1009
9999 mem: location 1342 is 1115
9999 mem: location 1399 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1296
9999 mem: storing 1115 in location 1298
9999 mem: storing 0 in location 1308
  99 run: break-unless go-render?, 
9999 mem: location 1308 is 0
9999 run: jumping to instruction 25
  99 run: loop 
9999 run: jumping to instruction 5
  99 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1571
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1585
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1299
  99 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1153
9999 mem: location 1116 is 1169
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1571
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1585
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 4
9999 mem: storing 4 in location 1300
  99 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1296 is 1009
9999 mem: location 1299 is 1
9999 mem: location 1300 is 4
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 100 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1207
 100 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1208
 100 run: new-column:number <- next-ingredient 
9999 mem: storing 4 in location 1209
 100 run: break-unless sc, 
9999 mem: location 1207 is 1009
9999 run: jump-unless fell through
 100 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1207 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1207 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1210
 100 run: *row <- copy new-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1011
9999 mem: storing 1 in location 1011
 100 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1207 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1207 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1211
 100 run: *column <- copy new-column
9999 mem: location 1209 is 4
9999 mem: location 1211 is 1012
9999 mem: storing 4 in location 1012
 100 run: reply sc/same-as-ingredient:0
9999 mem: location 1207 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1296
  99 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1297 is 1565
 100 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 100 run: x:address:console <- next-ingredient 
9999 mem: storing 1565 in location 1257
 100 run: break-unless x, 
9999 mem: location 1257 is 1565
9999 run: jump-unless fell through
 100 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1257 is 1565
9999 mem: location 1565 is 1
9999 mem: location 1566 is 1560
9999 mem: location 1257 is 1565
9999 run: address to copy is 1565
9999 mem: storing 1565 in location 1258
 100 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1257 is 1565
9999 mem: location 1565 is 1
9999 mem: location 1566 is 1560
9999 mem: location 1257 is 1565
9999 run: address to copy is 1566
9999 run: its type is address
9999 mem: location 1566 is 1560
9999 mem: storing 1560 in location 1259
 100 run: max:number <- length *buf
9999 mem: location 1259 is 1560
9999 mem: storing 1 in location 1260
 100 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1258 is 1565
9999 mem: location 1565 is 1
9999 mem: location 1260 is 1
9999 mem: storing 1 in location 1261
 100 run: break-unless done?, 
9999 mem: location 1261 is 1
9999 run: jump-unless fell through
 100 run: dummy:address:event <- new event:type
9999 mem: storing 1567 in location 1262
 100 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1262 is 1567
9999 mem: location 1567 is 0
9999 mem: location 1568 is 0
9999 mem: location 1569 is 0
9999 mem: location 1570 is 0
9999 mem: location 1257 is 1565
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1565
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 1565 in location 1297
9999 mem: storing 1 in location 1305
9999 mem: storing 1 in location 1306
  99 run: loop-unless found?, 
9999 mem: location 1305 is 1
9999 run: jump-unless fell through
  99 run: break-if quit?, 
9999 mem: location 1306 is 1
9999 run: jumping to instruction 28
  97 run: screen-should-contain [
    .          .
    .de01      .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
