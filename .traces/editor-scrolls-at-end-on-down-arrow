 102 run: assume-console [
    left-click 2, 0
    press down-arrow
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": "literal"}
9993 parse:   ingredient: {"0": "literal"}
9992 load: after rewriting: left-click 2, 0
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"down-arrow": <>}
9992 load: after rewriting: press down-arrow
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run1003
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run1003 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1003
9991 transform: --- deduce types for recipe run1003
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1003
9991 transform: --- transform names for recipe run1003
9993 name: element cursor-row of type editor-data is at offset 6
9993 name: element cursor-column of type editor-data is at offset 7
9991 transform: --- resolve ambiguous calls for recipe run1003
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1003
9991 transform: --- transform braces for recipe run1003
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1003
9991 transform: --- type-check 'call' instructions inside recipe run1003
9991 transform: --- type-check calls inside recipe run1003
9991 transform: --- convert 'new' to 'allocate' for recipe run1003
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1011
9999 mem: location 901 is 1530
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1291
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1530 in location 1292
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1293
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1293 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1293 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1294
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1293 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1293 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1295
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1291 is 1011
9999 mem: location 1294 is 1
9999 mem: location 1295 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1219
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1220
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1221
 105 run: jump-unless screen, 
9999 mem: location 1219 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1219 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1222
 105 run: *row <- copy new-row
9999 mem: location 1220 is 1
9999 mem: location 1222 is 1013
9999 mem: storing 1 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1219 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1223
 105 run: *column <- copy new-column
9999 mem: location 1221 is 3
9999 mem: location 1223 is 1014
9999 mem: storing 3 in location 1014
 105 run: reply screen:address:shared:screen
9999 mem: location 1219 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1291
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1292 is 1530
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1530 in location 1252
 105 run: jump-unless console, 
9999 mem: location 1252 is 1530
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1252 is 1530
9999 mem: location 1530 is 0
9999 mem: location 1531 is 1521
9999 mem: location 1252 is 1530
9998 run: address to copy is 1530
9999 mem: storing 1530 in location 1253
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1252 is 1530
9999 mem: location 1530 is 0
9999 mem: location 1531 is 1521
9999 mem: location 1252 is 1530
9998 run: address to copy is 1531
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1531 is 1521
9999 mem: storing 1521 in location 1254
 105 run: max:number <- length *buf
9999 mem: location 1254 is 1521
9999 mem: storing 2 in location 1255
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1253 is 1530
9999 mem: location 1530 is 0
9999 mem: location 1255 is 2
9999 mem: storing 0 in location 1256
 105 run: jump-unless done?, 
9999 mem: location 1256 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1254 is 1521
9999 mem: location 1253 is 1530
9999 mem: location 1530 is 0
9998 run: address to copy is 1522
9998 run: its type is event
9999 mem: location 1522 is 2
9999 mem: location 1523 is 65513
9999 mem: location 1524 is 2
9999 mem: location 1525 is 0
9999 mem: storing 2 in location 1258
9999 mem: storing 65513 in location 1259
9999 mem: storing 2 in location 1260
9999 mem: storing 0 in location 1261
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1253 is 1530
9999 mem: location 1530 is 0
9999 mem: location 1253 is 1530
9999 mem: storing 1 in location 1530
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1258 is 2
9999 mem: location 1259 is 65513
9999 mem: location 1260 is 2
9999 mem: location 1261 is 0
9999 mem: location 1252 is 1530
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 0]
9998 run: result 1 is 1530
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1296
9999 mem: storing 65513 in location 1297
9999 mem: storing 2 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: storing 1530 in location 1292
9999 mem: storing 1 in location 1300
9999 mem: storing 0 in location 1301
 104 run: jump-unless found?, 
9999 mem: location 1300 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1301 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1296 is 2
9999 mem: location 1297 is 65513
9999 mem: location 1298 is 2
9999 mem: location 1299 is 0
9999 mem: storing 1297 in location 1302
 104 run: jump-unless t, 
9999 mem: location 1302 is 1297
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1291 is 1011
9999 mem: location 1293 is 1000
9999 mem: location 1302 is 1297
9999 mem: location 1297 is 65513
9999 mem: location 1298 is 2
9999 mem: location 1299 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1191
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1192
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1193
9999 mem: storing 2 in location 1194
9999 mem: storing 0 in location 1195
 105 run: jump-if editor, 1:offset
9999 mem: location 1192 is 1000
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1193 is 65513
9999 mem: location 1194 is 2
9999 mem: location 1195 is 0
9998 run: address to copy is 1194
9998 run: its type is number
9999 mem: location 1194 is 2
9999 mem: storing 2 in location 1196
 105 run: jump-if click-row, 1:offset
9999 mem: location 1196 is 2
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1193 is 65513
9999 mem: location 1194 is 2
9999 mem: location 1195 is 0
9998 run: address to copy is 1195
9998 run: its type is number
9999 mem: location 1195 is 0
9999 mem: storing 0 in location 1197
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1192 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1192 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1198
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: storing 0 in location 1199
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1199 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1192 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1192 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1200
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1197 is 0
9999 mem: location 1200 is 9
9999 mem: storing 0 in location 1201
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1201 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1192 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1192 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1202
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1192 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1192 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1203
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1192 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1192 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1180
9999 mem: storing 1180 in location 1204
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1191 is 1011
9999 mem: location 1192 is 1000
9999 mem: location 1196 is 2
9999 mem: location 1197 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1306
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1307
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1308
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1309
 106 run: jump-if editor, 1:offset
9999 mem: location 1307 is 1000
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1307 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1307 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1310
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1307 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1307 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1311
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1306 is 1011
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1532
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1534
 107 run: jump-unless screen, 
9999 mem: location 1534 is 1011
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1534 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1534 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1535
 107 run: reply height:number
9999 mem: location 1535 is 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1312
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1307 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1307 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1180
9999 mem: storing 1180 in location 1313
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1313 is 1180
9999 mem: storing 1180 in location 1314
 106 run: curr <- next_2 curr
9999 mem: location 1313 is 1180
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1534
 107 run: jump-if in, 1:offset
9999 mem: location 1534 is 1180
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1534 is 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1180 is 10
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1534 is 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1181
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1535
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1535 is 1183
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: storing 1183 in location 1313
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1315
 106 run: column:number <- copy left
9999 mem: location 1310 is 0
9999 mem: storing 0 in location 1316
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1307 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1307 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1317
 106 run: *cursor-row <- copy target-row
9999 mem: location 1308 is 2
9999 mem: location 1317 is 1006
9999 mem: storing 2 in location 1006
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1307 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1307 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1318
 106 run: *cursor-column <- copy target-column
9999 mem: location 1309 is 0
9999 mem: location 1318 is 1007
9999 mem: storing 0 in location 1007
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1307 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1307 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1319
 106 run: jump-unless curr, 
9999 mem: location 1313 is 1183
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1315 is 1
9999 mem: location 1312 is 5
9999 mem: storing 0 in location 1320
 106 run: jump-if off-screen?, 
9999 mem: location 1320 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1315 is 1
9999 mem: location 1317 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1321
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1321 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1313 is 1183
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 100
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1313 is 1183
9998 run: address to copy is 1183
9998 run: its type is character
9999 mem: location 1183 is 100
9999 mem: storing 100 in location 1323
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1323 is 100
9999 mem: storing 0 in location 1324
 106 run: jump-unless newline?, 
9999 mem: location 1324 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1316 is 0
9999 mem: location 1311 is 9
9999 mem: storing 0 in location 1326
 106 run: jump-unless at-right?, 
9999 mem: location 1326 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1313 is 1183
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1534
 107 run: jump-if in, 1:offset
9999 mem: location 1534 is 1183
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1534 is 1183
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 100
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1534 is 1183
9999 type: type deduced to be character$
9998 run: address to copy is 1184
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1535
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1535 is 1186
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1186
9999 mem: storing 1186 in location 1313
 106 run: prev <- next_2 prev
9999 mem: location 1314 is 1180
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1534
 107 run: jump-if in, 1:offset
9999 mem: location 1534 is 1180
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1534 is 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1180 is 10
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1534 is 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1181
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1535
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1535 is 1183
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: storing 1183 in location 1314
 106 run: column <- add column, 1
9999 mem: location 1316 is 0
9999 mem: storing 1 in location 1316
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1313 is 1186
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1315 is 1
9999 mem: location 1312 is 5
9999 mem: storing 0 in location 1320
 106 run: jump-if off-screen?, 
9999 mem: location 1320 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1315 is 1
9999 mem: location 1317 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1321
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1321 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1313 is 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1186 is 101
9999 mem: location 1187 is 1516
9999 mem: location 1188 is 1183
9999 mem: location 1313 is 1186
9998 run: address to copy is 1186
9998 run: its type is character
9999 mem: location 1186 is 101
9999 mem: storing 101 in location 1323
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1323 is 101
9999 mem: storing 0 in location 1324
 106 run: jump-unless newline?, 
9999 mem: location 1324 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1316 is 1
9999 mem: location 1311 is 9
9999 mem: storing 0 in location 1326
 106 run: jump-unless at-right?, 
9999 mem: location 1326 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1313 is 1186
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1534
 107 run: jump-if in, 1:offset
9999 mem: location 1534 is 1186
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1534 is 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1186 is 101
9999 mem: location 1187 is 1516
9999 mem: location 1188 is 1183
9999 mem: location 1534 is 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1187
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1187 is 1516
9999 mem: storing 1516 in location 1535
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1535 is 1516
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1516
9999 mem: storing 1516 in location 1313
 106 run: prev <- next_2 prev
9999 mem: location 1314 is 1183
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1534
 107 run: jump-if in, 1:offset
9999 mem: location 1534 is 1183
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1534 is 1183
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1183 is 100
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1534 is 1183
9999 type: type deduced to be character$
9998 run: address to copy is 1184
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1535
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1535 is 1186
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1186
9999 mem: storing 1186 in location 1314
 106 run: column <- add column, 1
9999 mem: location 1316 is 1
9999 mem: storing 2 in location 1316
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1313 is 1516
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1315 is 1
9999 mem: location 1312 is 5
9999 mem: storing 0 in location 1320
 106 run: jump-if off-screen?, 
9999 mem: location 1320 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1315 is 1
9999 mem: location 1317 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1321
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1321 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1313 is 1516
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1516 is 48
9999 mem: location 1517 is 0
9999 mem: location 1518 is 1186
9999 mem: location 1313 is 1516
9998 run: address to copy is 1516
9998 run: its type is character
9999 mem: location 1516 is 48
9999 mem: storing 48 in location 1323
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1323 is 48
9999 mem: storing 0 in location 1324
 106 run: jump-unless newline?, 
9999 mem: location 1324 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1316 is 2
9999 mem: location 1311 is 9
9999 mem: storing 0 in location 1326
 106 run: jump-unless at-right?, 
9999 mem: location 1326 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1313 is 1516
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1516 in location 1534
 107 run: jump-if in, 1:offset
9999 mem: location 1534 is 1516
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1534 is 1516
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1516 is 48
9999 mem: location 1517 is 0
9999 mem: location 1518 is 1186
9999 mem: location 1534 is 1516
9999 type: type deduced to be character$
9998 run: address to copy is 1517
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1517 is 0
9999 mem: storing 0 in location 1535
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1535 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1313
 106 run: prev <- next_2 prev
9999 mem: location 1314 is 1186
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1534
 107 run: jump-if in, 1:offset
9999 mem: location 1534 is 1186
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1534 is 1186
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1186 is 101
9999 mem: location 1187 is 1516
9999 mem: location 1188 is 1183
9999 mem: location 1534 is 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1187
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1187 is 1516
9999 mem: storing 1516 in location 1535
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1535 is 1516
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1516
9999 mem: storing 1516 in location 1314
 106 run: column <- add column, 1
9999 mem: location 1316 is 2
9999 mem: storing 3 in location 1316
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1313 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1315 is 1
9999 mem: location 1317 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1321
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1316 is 3
9999 mem: location 1318 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1327
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1321 is 0
9999 mem: location 1327 is 0
9999 mem: storing 0 in location 1328
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1315 is 1
9999 mem: location 1317 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1329
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1328 is 0
9999 mem: location 1329 is 1
9999 mem: storing 1 in location 1330
 106 run: jump-unless before-cursor?, 
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: *cursor-row <- copy row
9999 mem: location 1315 is 1
9999 mem: location 1317 is 1006
9999 mem: storing 1 in location 1006
 106 run: *cursor-column <- copy column
9999 mem: location 1316 is 3
9999 mem: location 1318 is 1007
9999 mem: storing 3 in location 1007
 106 run: *before-cursor <- copy prev
9999 mem: location 1314 is 1516
9999 mem: location 1319 is 1003
9999 mem: storing 1516 in location 1003
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1307 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1192
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1205
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1192 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1192 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1206
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1192 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1192 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1207
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1192 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1192 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1180
9999 mem: storing 1180 in location 1208
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: new alloc: 1536
9999 mem: storing 1536 in location 1210
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1202 is 1
9999 mem: location 1203 is 3
9999 mem: location 1204 is 1180
9999 mem: location 1206 is 1
9999 mem: location 1207 is 3
9999 mem: location 1208 is 1180
9999 mem: location 1205 is 0
9999 mem: location 1210 is 1536
9999 mem: location 1210 is 1536
9999 mem: storing 1 in location 1536
9999 mem: storing 1 in location 1537
9999 mem: storing 3 in location 1538
9999 mem: storing 1180 in location 1539
9999 mem: storing 1 in location 1540
9999 mem: storing 3 in location 1541
9999 mem: storing 1180 in location 1542
9999 mem: storing 0 in location 1543
 105 run: editor <- add-operation editor, op
9999 mem: location 1192 is 1000
9999 mem: location 1210 is 1536
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1333
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1536 in location 1334
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1333 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1519
9999 mem: location 1010 is 0
9999 mem: location 1333 is 1000
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1335
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1334 is 1536
9999 mem: location 1335 is 1009
9999 mem: location 1009 is 1519
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1536 in location 1219
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1519 in location 1220
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: new alloc: 1547
9999 mem: storing 1547 in location 1221
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1221 is 1547
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1547 is 0
9999 mem: location 1548 is 0
9999 mem: location 1221 is 1547
9998 run: address to copy is 1547
9999 mem: storing 1547 in location 1222
 107 run: *val <- copy x
9999 mem: location 1219 is 1536
9999 mem: location 1222 is 1547
9999 mem: storing 1536 in location 1547
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1221 is 1547
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1547 is 1536
9999 mem: location 1548 is 0
9999 mem: location 1221 is 1547
9999 type: type deduced to be address$
9998 run: address to copy is 1548
9999 mem: storing 1548 in location 1223
 107 run: *next <- copy in
9999 mem: location 1220 is 1519
9999 mem: location 1223 is 1548
9999 mem: storing 1519 in location 1548
 107 run: reply result
9999 mem: location 1221 is 1547
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1547
9999 mem: location 1335 is 1009
9999 mem: storing 1547 in location 1009
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1333 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1333 is 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1336
 106 run: *redo <- copy 0
9999 mem: location 1336 is 1010
9999 mem: storing 0 in location 1010
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1333 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1192
 105 run: reply 1/true
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1293 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1293 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1294
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1293 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1293 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1295
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1291 is 1011
9999 mem: location 1294 is 1
9999 mem: location 1295 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1219
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1220
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1221
 105 run: jump-unless screen, 
9999 mem: location 1219 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1219 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1222
 105 run: *row <- copy new-row
9999 mem: location 1220 is 1
9999 mem: location 1222 is 1013
9999 mem: storing 1 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1219 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1223
 105 run: *column <- copy new-column
9999 mem: location 1221 is 3
9999 mem: location 1223 is 1014
9999 mem: storing 3 in location 1014
 105 run: reply screen:address:shared:screen
9999 mem: location 1219 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1291
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1292 is 1530
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1530 in location 1252
 105 run: jump-unless console, 
9999 mem: location 1252 is 1530
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1252 is 1530
9999 mem: location 1530 is 1
9999 mem: location 1531 is 1521
9999 mem: location 1252 is 1530
9998 run: address to copy is 1530
9999 mem: storing 1530 in location 1253
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1252 is 1530
9999 mem: location 1530 is 1
9999 mem: location 1531 is 1521
9999 mem: location 1252 is 1530
9998 run: address to copy is 1531
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1531 is 1521
9999 mem: storing 1521 in location 1254
 105 run: max:number <- length *buf
9999 mem: location 1254 is 1521
9999 mem: storing 2 in location 1255
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1253 is 1530
9999 mem: location 1530 is 1
9999 mem: location 1255 is 2
9999 mem: storing 0 in location 1256
 105 run: jump-unless done?, 
9999 mem: location 1256 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1254 is 1521
9999 mem: location 1253 is 1530
9999 mem: location 1530 is 1
9998 run: address to copy is 1526
9998 run: its type is event
9999 mem: location 1526 is 1
9999 mem: location 1527 is 65516
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: storing 1 in location 1258
9999 mem: storing 65516 in location 1259
9999 mem: storing 0 in location 1260
9999 mem: storing 0 in location 1261
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1253 is 1530
9999 mem: location 1530 is 1
9999 mem: location 1253 is 1530
9999 mem: storing 2 in location 1530
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1258 is 1
9999 mem: location 1259 is 65516
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1252 is 1530
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65516, 0, 0]
9998 run: result 1 is 1530
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1296
9999 mem: storing 65516 in location 1297
9999 mem: storing 0 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: storing 1530 in location 1292
9999 mem: storing 1 in location 1300
9999 mem: storing 0 in location 1301
 104 run: jump-unless found?, 
9999 mem: location 1300 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1301 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1296 is 1
9999 mem: location 1297 is 65516
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 mem: storing 0 in location 1302
 104 run: jump-unless t, 
9999 mem: location 1302 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1302 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1291 is 1011
9999 mem: location 1293 is 1000
9999 mem: location 1296 is 1
9999 mem: location 1297 is 65516
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1341
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1342
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1343
9999 mem: storing 65516 in location 1344
9999 mem: storing 0 in location 1345
9999 mem: storing 0 in location 1346
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1347
 105 run: jump-if editor, 1:offset
9999 mem: location 1342 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1341 is 1011
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1534
 106 run: jump-unless screen, 
9999 mem: location 1534 is 1011
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1534 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1534 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1535
 106 run: reply width:number
9999 mem: location 1535 is 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1348
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1341 is 1011
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1534
 106 run: jump-unless screen, 
9999 mem: location 1534 is 1011
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1534 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1534 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1535
 106 run: reply height:number
9999 mem: location 1535 is 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1349
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1350
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1351
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1352
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1353
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1354
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1355
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1354 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1356
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1343 is 1
9999 mem: location 1344 is 65516
9999 mem: location 1345 is 0
9999 mem: location 1346 is 0
9999 mem: storing 0 in location 1357
 105 run: jump-unless c, 
9999 mem: location 1357 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1343 is 1
9999 mem: location 1344 is 65516
9999 mem: location 1345 is 0
9999 mem: location 1346 is 0
9999 mem: storing 1344 in location 1411
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1411 is 1344
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1411 is 1344
9999 mem: location 1344 is 65516
9999 mem: storing 0 in location 1374
 105 run: jump-unless page-up?, 
9999 mem: location 1374 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1411 is 1344
9999 mem: location 1344 is 65516
9999 mem: storing 0 in location 1390
 105 run: jump-unless page-down?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1411 is 1344
9999 mem: location 1344 is 65516
9999 mem: storing 0 in location 1397
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1397 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1411 is 1344
9999 mem: location 1344 is 65516
9999 mem: storing 0 in location 1398
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1398 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1411 is 1344
9999 mem: location 1344 is 65516
9999 mem: storing 1 in location 1412
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1412 is 1
9998 run: jump-unless fell through
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1377
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1378
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1180
9999 mem: storing 1180 in location 1379
 105 run: editor, go-render? <- move-to-next-line editor, screen-height
9999 mem: location 1342 is 1000
9999 mem: location 1349 is 5
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 23
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1427
 106 run: screen-height:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1428
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1427 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1427 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1429
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1427 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1427 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1430
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1427 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1427 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1431
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1427 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1427 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1432
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1427 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1427 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1433
 106 run: last-line:number <- subtract screen-height, 1
9999 mem: location 1428 is 5
9999 mem: storing 4 in location 1434
9990 schedule: move-to-next-line/handle-keyboard-event/editor-event-loop/run1003/scenario-editor-scrolls-at-end-on-down-arrow
 106 run: already-at-bottom?:boolean <- greater-or-equal *cursor-row, last-line
9999 mem: location 1429 is 1006
9999 mem: location 1006 is 1
9999 mem: location 1434 is 4
9999 mem: storing 0 in location 1435
 106 run: jump-if already-at-bottom?, 
9999 mem: location 1435 is 0
9998 run: jump-if fell through
 106 run: max:number <- subtract right, left
9999 mem: location 1433 is 9
9999 mem: location 1432 is 0
9999 mem: storing 9 in location 1436
 106 run: next-line:address:shared:duplex-list:character <- before-start-of-next-line *before-cursor, max
9999 mem: location 1431 is 1003
9999 mem: location 1003 is 1516
9999 mem: location 1436 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
 107 run: original:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1516 in location 1160
 107 run: max:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1161
 107 run: count:number <- copy 0
9999 mem: storing 0 in location 1162
 107 run: curr:address:shared:duplex-list:character <- copy original
9999 mem: location 1160 is 1516
9999 mem: storing 1516 in location 1163
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1163 is 1516
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1516 is 48
9999 mem: location 1517 is 0
9999 mem: location 1518 is 1186
9999 mem: location 1163 is 1516
9998 run: address to copy is 1516
9998 run: its type is character
9999 mem: location 1516 is 48
9999 mem: storing 48 in location 1164
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1164 is 48
9999 mem: storing 0 in location 1165
 107 run: jump-unless at-newline?, 
9999 mem: location 1165 is 0
9998 run: jumping to instruction 11
 107 run: jump-if curr, 1:offset
9999 mem: location 1163 is 1516
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1162 is 0
9999 mem: location 1161 is 9
9999 mem: storing 0 in location 1166
 107 run: jump-if done?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1163 is 1516
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1516 is 48
9999 mem: location 1517 is 0
9999 mem: location 1518 is 1186
9999 mem: location 1163 is 1516
9998 run: address to copy is 1516
9998 run: its type is character
9999 mem: location 1516 is 48
9999 mem: storing 48 in location 1164
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1164 is 48
9999 mem: storing 0 in location 1165
 107 run: jump-if at-newline?, 
9999 mem: location 1165 is 0
9998 run: jump-if fell through
 107 run: curr <- next_2 curr
9999 mem: location 1163 is 1516
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1516 in location 1534
 108 run: jump-if in, 1:offset
9999 mem: location 1534 is 1516
9998 run: jumping to instruction 4
 108 run: result <- get *in, next:offset
9999 mem: location 1534 is 1516
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1516 is 48
9999 mem: location 1517 is 0
9999 mem: location 1518 is 1186
9999 mem: location 1534 is 1516
9999 type: type deduced to be character$
9998 run: address to copy is 1517
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1517 is 0
9999 mem: storing 0 in location 1535
 108 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1535 is 0
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 1163
 107 run: count <- add count, 1
9999 mem: location 1162 is 0
9999 mem: storing 1 in location 1162
 107 run: jump 
9998 run: jumping to instruction 13
 107 run: jump-if curr, 1:offset
9999 mem: location 1163 is 0
9998 run: jump-if fell through
 107 run: reply original
9999 mem: location 1160 is 1516
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1516
9999 mem: storing 1516 in location 1437
 106 run: no-motion?:boolean <- equal next-line, *before-cursor
9999 mem: location 1437 is 1516
9999 mem: location 1431 is 1003
9999 mem: location 1003 is 1516
9999 mem: storing 1 in location 1438
 106 run: jump-unless no-motion?, 
9999 mem: location 1438 is 1
9998 run: jump-unless fell through
 106 run: scroll?:boolean <- greater-than *cursor-row, 1
9999 mem: location 1429 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1439
 106 run: jump-if scroll?, +try-to-scroll:label
9999 mem: location 1439 is 0
9998 run: jump-if fell through
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1440
 106 run: reply editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1427 is 1000
9999 mem: location 1440 is 0
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 0
9999 mem: storing 1000 in location 1342
9999 mem: storing 0 in location 1347
 105 run: undo-coalesce-tag:number <- copy 4/down-arrow
9999 mem: storing 4 in location 1380
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1381
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1382
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1180
9999 mem: storing 1180 in location 1383
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1380 is 4
9998 run: jump-unless fell through
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1361
 105 run: jump-unless *undo, 
9999 mem: location 1361 is 1009
9999 mem: location 1009 is 1547
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1361 is 1009
9999 mem: location 1009 is 1547
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1547 in location 1534
 106 run: result <- get *in, value:offset
9999 mem: location 1534 is 1547
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1547 is 1536
9999 mem: location 1548 is 1519
9999 mem: location 1534 is 1547
9998 run: address to copy is 1547
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1547 is 1536
9999 mem: storing 1536 in location 1535
 106 run: reply result:_elem
9999 mem: location 1535 is 1536
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1536
9999 mem: storing 1536 in location 1360
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1360 is 1536
9999 mem: location 1536 is 1
9999 mem: location 1537 is 1
9999 mem: location 1538 is 3
9999 mem: location 1539 is 1180
9999 mem: location 1540 is 1
9999 mem: location 1541 is 3
9999 mem: location 1542 is 1180
9999 mem: location 1543 is 0
9999 mem: location 1544 is 0
9999 mem: location 1545 is 0
9999 mem: location 1546 is 0
9999 mem: location 1360 is 1536
9999 mem: storing 1537 in location 1366
 105 run: jump-unless move, 
9999 mem: location 1366 is 1537
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1366 is 1537
9999 mem: location 1537 is 1
9999 mem: location 1538 is 3
9999 mem: location 1539 is 1180
9999 mem: location 1540 is 1
9999 mem: location 1541 is 3
9999 mem: location 1542 is 1180
9999 mem: location 1543 is 0
9999 mem: location 1366 is 1537
9998 run: address to copy is 1543
9998 run: its type is number
9999 mem: location 1543 is 0
9999 mem: storing 0 in location 1384
 105 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1380 is 4
9999 mem: location 1384 is 0
9999 mem: storing 0 in location 1385
 105 run: jump-unless coalesce?, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 629
 105 run: op:address:shared:operation <- new operation:type
9999 mem: new alloc: 1549
9999 mem: storing 1549 in location 1360
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1377 is 1
9999 mem: location 1378 is 3
9999 mem: location 1379 is 1180
9999 mem: location 1381 is 1
9999 mem: location 1382 is 3
9999 mem: location 1383 is 1180
9999 mem: location 1380 is 4
9999 mem: location 1360 is 1549
9999 mem: location 1360 is 1549
9999 mem: storing 1 in location 1549
9999 mem: storing 1 in location 1550
9999 mem: storing 3 in location 1551
9999 mem: storing 1180 in location 1552
9999 mem: storing 1 in location 1553
9999 mem: storing 3 in location 1554
9999 mem: storing 1180 in location 1555
9999 mem: storing 4 in location 1556
 105 run: editor <- add-operation editor, op
9999 mem: location 1342 is 1000
9999 mem: location 1360 is 1549
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1333
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1549 in location 1334
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1333 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1547
9999 mem: location 1010 is 0
9999 mem: location 1333 is 1000
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1335
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1334 is 1549
9999 mem: location 1335 is 1009
9999 mem: location 1009 is 1547
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1549 in location 1219
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1547 in location 1220
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: new alloc: 1560
9999 mem: storing 1560 in location 1221
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1221 is 1560
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1560 is 0
9999 mem: location 1561 is 0
9999 mem: location 1221 is 1560
9998 run: address to copy is 1560
9999 mem: storing 1560 in location 1222
 107 run: *val <- copy x
9999 mem: location 1219 is 1549
9999 mem: location 1222 is 1560
9999 mem: storing 1549 in location 1560
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1221 is 1560
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1560 is 1549
9999 mem: location 1561 is 0
9999 mem: location 1221 is 1560
9999 type: type deduced to be address$
9998 run: address to copy is 1561
9999 mem: storing 1561 in location 1223
 107 run: *next <- copy in
9999 mem: location 1220 is 1547
9999 mem: location 1223 is 1561
9999 mem: storing 1547 in location 1561
 107 run: reply result
9999 mem: location 1221 is 1560
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1560
9999 mem: location 1335 is 1009
9999 mem: storing 1560 in location 1009
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1333 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1333 is 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1336
 106 run: *redo <- copy 0
9999 mem: location 1336 is 1010
9999 mem: storing 0 in location 1010
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1333 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1342
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1341 is 1011
9999 mem: location 1342 is 1000
9999 mem: location 1347 is 0
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: storing 1011 in location 1291
9999 mem: storing 1000 in location 1293
9999 mem: storing 0 in location 1303
 104 run: jump-unless go-render?, 
9999 mem: location 1303 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1293 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1293 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1294
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1293 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1293 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1295
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1291 is 1011
9999 mem: location 1294 is 1
9999 mem: location 1295 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1219
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1220
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1221
 105 run: jump-unless screen, 
9999 mem: location 1219 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1219 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1222
 105 run: *row <- copy new-row
9999 mem: location 1220 is 1
9999 mem: location 1222 is 1013
9999 mem: storing 1 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1219 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1223
 105 run: *column <- copy new-column
9999 mem: location 1221 is 3
9999 mem: location 1223 is 1014
9999 mem: storing 3 in location 1014
 105 run: reply screen:address:shared:screen
9999 mem: location 1219 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1291
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1292 is 1530
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1530 in location 1252
 105 run: jump-unless console, 
9999 mem: location 1252 is 1530
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1252 is 1530
9999 mem: location 1530 is 2
9999 mem: location 1531 is 1521
9999 mem: location 1252 is 1530
9998 run: address to copy is 1530
9999 mem: storing 1530 in location 1253
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1252 is 1530
9999 mem: location 1530 is 2
9999 mem: location 1531 is 1521
9999 mem: location 1252 is 1530
9998 run: address to copy is 1531
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1531 is 1521
9999 mem: storing 1521 in location 1254
 105 run: max:number <- length *buf
9999 mem: location 1254 is 1521
9999 mem: storing 2 in location 1255
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1253 is 1530
9999 mem: location 1530 is 2
9999 mem: location 1255 is 2
9999 mem: storing 1 in location 1256
 105 run: jump-unless done?, 
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: storing 1532 in location 1257
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1257 is 1532
9999 mem: location 1532 is 0
9999 mem: location 1533 is 0
9999 mem: location 1534 is 0
9999 mem: location 1535 is 0
9999 mem: location 1252 is 1530
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1530
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1296
9999 mem: storing 0 in location 1297
9999 mem: storing 0 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: storing 1530 in location 1292
9999 mem: storing 1 in location 1300
9999 mem: storing 1 in location 1301
 104 run: jump-unless found?, 
9999 mem: location 1300 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1301 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1291 is 1011
9999 mem: location 1292 is 1530
9999 mem: location 1293 is 1000
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 2 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 2 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 1
    4 <- 3
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label 0, [print-character]
 102 run: assume-console [
    type [1]
  ]
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"1": "literal-string"}
9992 load: after rewriting: type [1]
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1004
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1004 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1004
9991 transform: --- deduce types for recipe run1004
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1004
9991 transform: --- transform names for recipe run1004
9991 transform: --- resolve ambiguous calls for recipe run1004
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1004
9991 transform: --- transform braces for recipe run1004
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1004
9991 transform: --- type-check 'call' instructions inside recipe run1004
9991 transform: --- type-check calls inside recipe run1004
9991 transform: --- convert 'new' to 'allocate' for recipe run1004
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1011
9999 mem: location 901 is 1567
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1291
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1567 in location 1292
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1293
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1293 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1293 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1294
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1293 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1293 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1295
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1291 is 1011
9999 mem: location 1294 is 1
9999 mem: location 1295 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1219
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1220
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1221
 105 run: jump-unless screen, 
9999 mem: location 1219 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1219 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1222
 105 run: *row <- copy new-row
9999 mem: location 1220 is 1
9999 mem: location 1222 is 1013
9999 mem: storing 1 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1219 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1223
 105 run: *column <- copy new-column
9999 mem: location 1221 is 3
9999 mem: location 1223 is 1014
9999 mem: storing 3 in location 1014
 105 run: reply screen:address:shared:screen
9999 mem: location 1219 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1291
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1292 is 1567
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1567 in location 1252
 105 run: jump-unless console, 
9999 mem: location 1252 is 1567
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1252 is 1567
9999 mem: location 1567 is 0
9999 mem: location 1568 is 1562
9999 mem: location 1252 is 1567
9998 run: address to copy is 1567
9999 mem: storing 1567 in location 1253
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1252 is 1567
9999 mem: location 1567 is 0
9999 mem: location 1568 is 1562
9999 mem: location 1252 is 1567
9998 run: address to copy is 1568
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1568 is 1562
9999 mem: storing 1562 in location 1254
 105 run: max:number <- length *buf
9999 mem: location 1254 is 1562
9999 mem: storing 1 in location 1255
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1253 is 1567
9999 mem: location 1567 is 0
9999 mem: location 1255 is 1
9999 mem: storing 0 in location 1256
 105 run: jump-unless done?, 
9999 mem: location 1256 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1254 is 1562
9999 mem: location 1253 is 1567
9999 mem: location 1567 is 0
9998 run: address to copy is 1563
9998 run: its type is event
9999 mem: location 1563 is 0
9999 mem: location 1564 is 49
9999 mem: location 1565 is 0
9999 mem: location 1566 is 0
9999 mem: storing 0 in location 1258
9999 mem: storing 49 in location 1259
9999 mem: storing 0 in location 1260
9999 mem: storing 0 in location 1261
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1253 is 1567
9999 mem: location 1567 is 0
9999 mem: location 1253 is 1567
9999 mem: storing 1 in location 1567
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1258 is 0
9999 mem: location 1259 is 49
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1252 is 1567
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 49, 0, 0]
9998 run: result 1 is 1567
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1296
9999 mem: storing 49 in location 1297
9999 mem: storing 0 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: storing 1567 in location 1292
9999 mem: storing 1 in location 1300
9999 mem: storing 0 in location 1301
 104 run: jump-unless found?, 
9999 mem: location 1300 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1301 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1296 is 0
9999 mem: location 1297 is 49
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 mem: storing 0 in location 1302
 104 run: jump-unless t, 
9999 mem: location 1302 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1302 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1291 is 1011
9999 mem: location 1293 is 1000
9999 mem: location 1296 is 0
9999 mem: location 1297 is 49
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1341
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1342
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1343
9999 mem: storing 49 in location 1344
9999 mem: storing 0 in location 1345
9999 mem: storing 0 in location 1346
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1347
 105 run: jump-if editor, 1:offset
9999 mem: location 1342 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1341 is 1011
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1569
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1571
 106 run: jump-unless screen, 
9999 mem: location 1571 is 1011
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1571 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1571 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1572
 106 run: reply width:number
9999 mem: location 1572 is 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1348
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1341 is 1011
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1571
 106 run: jump-unless screen, 
9999 mem: location 1571 is 1011
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1571 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1571 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1572
 106 run: reply height:number
9999 mem: location 1572 is 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1349
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1350
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1351
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1352
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1353
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1354
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1355
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1354 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1356
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1343 is 0
9999 mem: location 1344 is 49
9999 mem: location 1345 is 0
9999 mem: location 1346 is 0
9999 mem: storing 1344 in location 1357
 105 run: jump-unless c, 
9999 mem: location 1357 is 1344
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1357 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1358
 105 run: jump-unless redo?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1357 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1369
 105 run: jump-unless undo?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1357 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1374
 105 run: jump-unless page-up?, 
9999 mem: location 1374 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1357 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1390
 105 run: jump-unless page-down?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1357 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1391
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1391 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1357 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1396
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1357 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1397
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1397 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1357 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1398
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1398 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1357 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1399
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1399 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1357 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1403
 105 run: jump-unless tab?, 
9999 mem: location 1403 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1357 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 0 in location 1407
 105 run: jump-unless newline?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 402
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1357 is 1344
9999 mem: location 1344 is 49
9999 mem: storing 1 in location 1410
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1347
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1410 is 1
9998 run: jumping to instruction 407
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1180
9999 mem: storing 1180 in location 1392
 105 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1352 is 1003
9999 mem: location 1003 is 1516
9999 mem: storing 1516 in location 1404
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1342 is 1000
9999 mem: location 1357 is 1344
9999 mem: location 1344 is 49
9999 mem: location 1341 is 1011
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1486
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1487
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1488
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1486 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1516
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1486 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1489
 106 run: insert_2 c, *before-cursor
9999 mem: location 1487 is 49
9999 mem: location 1489 is 1003
9999 mem: location 1003 is 1516
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1149
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1516 in location 1150
 107 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1573
9999 mem: storing 1573 in location 1151
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1151 is 1573
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1573 is 0
9999 mem: location 1574 is 0
9999 mem: location 1575 is 0
9999 mem: location 1151 is 1573
9998 run: address to copy is 1573
9999 mem: storing 1573 in location 1152
 107 run: *val <- copy x
9999 mem: location 1149 is 49
9999 mem: location 1152 is 1573
9999 mem: storing 49 in location 1573
 107 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1150 is 1516
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1516 is 48
9999 mem: location 1517 is 0
9999 mem: location 1518 is 1186
9999 mem: location 1150 is 1516
9999 type: type deduced to be character$
9998 run: address to copy is 1517
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1517 is 0
9999 mem: storing 0 in location 1153
 107 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1150 is 1516
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1516 is 48
9999 mem: location 1517 is 0
9999 mem: location 1518 is 1186
9999 mem: location 1150 is 1516
9999 type: type deduced to be character$
9998 run: address to copy is 1517
9999 mem: storing 1517 in location 1154
 107 run: *y <- copy new-node
9999 mem: location 1151 is 1573
9999 mem: location 1154 is 1517
9999 mem: storing 1573 in location 1517
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1151 is 1573
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1573 is 49
9999 mem: location 1574 is 0
9999 mem: location 1575 is 0
9999 mem: location 1151 is 1573
9999 type: type deduced to be character$
9998 run: address to copy is 1575
9999 mem: storing 1575 in location 1154
 107 run: *y <- copy in
9999 mem: location 1150 is 1516
9999 mem: location 1154 is 1575
9999 mem: storing 1516 in location 1575
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1151 is 1573
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1573 is 49
9999 mem: location 1574 is 0
9999 mem: location 1575 is 1516
9999 mem: location 1151 is 1573
9999 type: type deduced to be character$
9998 run: address to copy is 1574
9999 mem: storing 1574 in location 1154
 107 run: *y <- copy next-node
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1574
9999 mem: storing 0 in location 1574
 107 run: jump-if next-node, 1:offset
9999 mem: location 1153 is 0
9998 run: jump-if fell through
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1150 is 1516
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1489 is 1003
9999 mem: location 1003 is 1516
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1516 in location 1571
 107 run: jump-if in, 1:offset
9999 mem: location 1571 is 1516
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1571 is 1516
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1516 is 48
9999 mem: location 1517 is 1573
9999 mem: location 1518 is 1186
9999 mem: location 1571 is 1516
9999 type: type deduced to be character$
9998 run: address to copy is 1517
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1517 is 1573
9999 mem: storing 1573 in location 1572
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1572 is 1573
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1573
9999 mem: location 1489 is 1003
9999 mem: storing 1573 in location 1003
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1486 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1573
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1486 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1490
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1486 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1573
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1486 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1491
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1486 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1573
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1486 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1492
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1486 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1573
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1486 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1493
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1490 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1494
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1491 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1495
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1488 is 1011
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1571
 107 run: jump-unless screen, 
9999 mem: location 1571 is 1011
9998 run: jump-unless fell through
 107 run: width <- get *screen, num-columns:offset
9999 mem: location 1571 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1571 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1572
 107 run: reply width:number
9999 mem: location 1572 is 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1496
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1488 is 1011
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1571
 107 run: jump-unless screen, 
9999 mem: location 1571 is 1011
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1571 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1571 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1572
 107 run: reply height:number
9999 mem: location 1572 is 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1497
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1493 is 9
9999 mem: storing 8 in location 1498
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1491 is 1007
9999 mem: location 1007 is 3
9999 mem: location 1498 is 8
9999 mem: storing 0 in location 1499
 106 run: jump-unless at-wrap?, 
9999 mem: location 1499 is 0
9998 run: jumping to instruction 41
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1491 is 1007
9999 mem: location 1007 is 3
9999 mem: location 1491 is 1007
9999 mem: storing 4 in location 1007
 106 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1489 is 1003
9999 mem: location 1003 is 1573
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1573 in location 1571
 107 run: jump-if in, 1:offset
9999 mem: location 1571 is 1573
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1571 is 1573
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1573 is 49
9999 mem: location 1574 is 0
9999 mem: location 1575 is 1516
9999 mem: location 1571 is 1573
9999 type: type deduced to be character$
9998 run: address to copy is 1574
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1574 is 0
9999 mem: storing 0 in location 1572
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1572 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1506
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1506 is 0
9999 mem: storing 1 in location 1507
 106 run: jump-unless at-end?, 
9999 mem: location 1507 is 1
9998 run: jump-unless fell through
 106 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1497 is 5
9999 mem: storing 4 in location 1508
 106 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1494 is 1
9999 mem: location 1508 is 4
9999 mem: storing 0 in location 1509
 106 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1495 is 3
9999 mem: location 1493 is 9
9999 mem: storing 0 in location 1510
 106 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1509 is 0
9999 mem: location 1510 is 0
9999 mem: storing 0 in location 1511
 106 run: jump-if overflow?, 
9999 mem: location 1511 is 0
9998 run: jump-if fell through
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1488 is 1011
9999 mem: location 1494 is 1
9999 mem: location 1495 is 3
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1219
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1220
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1221
 107 run: jump-unless screen, 
9999 mem: location 1219 is 1011
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1219 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1222
 107 run: *row <- copy new-row
9999 mem: location 1220 is 1
9999 mem: location 1222 is 1013
9999 mem: storing 1 in location 1013
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1219 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1223
 107 run: *column <- copy new-column
9999 mem: location 1221 is 3
9999 mem: location 1223 is 1014
9999 mem: storing 3 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1219 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: print screen, c
9999 mem: location 1488 is 1011
9999 mem: location 1487 is 49
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1226
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1227
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1228
9999 mem: storing 0 in location 1229
 107 run: jump-if color-found?, 
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1228
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
 107 run: jump-if bg-color-found?, 
9999 mem: location 1231 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1230
 107 run: trace 90, [print-character], c
9999 mem: location 1227 is 49
  90 print-character: 49 
 107 run: jump-unless screen, 
9999 mem: location 1226 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1226 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1226 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 1232
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1226 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1226 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1233
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1226 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1226 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1234
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1234 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1235
 107 run: jump-if legal?, 1:offset
9999 mem: location 1235 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1234 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1233 is 5
9999 mem: storing 1 in location 1235
 107 run: jump-if legal?, 1:offset
9999 mem: location 1235 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1226 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1226 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1236
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1236 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 1 in location 1235
 107 run: jump-if legal?, 1:offset
9999 mem: location 1235 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1236 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1232 is 10
9999 mem: storing 1 in location 1235
 107 run: jump-if legal?, 1:offset
9999 mem: location 1235 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1227 is 49
9999 mem: storing 0 in location 1237
 107 run: jump-unless newline?, 
9999 mem: location 1237 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1234 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1232 is 10
9999 mem: storing 10 in location 1240
 107 run: index <- add index, *column
9999 mem: location 1240 is 10
9999 mem: location 1236 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 13 in location 1240
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1226 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1226 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1241
 107 run: len:number <- length *buf
9999 mem: location 1241 is 1016
9999 mem: storing 50 in location 1242
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1227 is 49
9999 mem: storing 0 in location 1243
 107 run: jump-unless backspace?, 
9999 mem: location 1243 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1241 is 1016
9999 mem: location 1240 is 13
9999 mem: storing 1043 in location 1245
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1245 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1245 is 1043
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1246
 107 run: *cursor-contents <- copy c
9999 mem: location 1227 is 49
9999 mem: location 1246 is 1043
9999 mem: storing 49 in location 1043
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1245 is 1043
9999 mem: location 1043 is 49
9999 mem: location 1044 is 7
9999 mem: location 1245 is 1043
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1247
 107 run: *cursor-color <- copy color
9999 mem: location 1228 is 7
9999 mem: location 1247 is 1044
9999 mem: storing 7 in location 1044
 107 run: right:number <- subtract width, 1
9999 mem: location 1232 is 10
9999 mem: storing 9 in location 1248
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1236 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1248 is 9
9999 mem: storing 0 in location 1249
 107 run: jump-if at-right?, 
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1236 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1236 is 1014
9999 mem: storing 4 in location 1014
 107 run: reply screen:address:shared:screen
9999 mem: location 1226 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1505
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1486 is 1000
9999 mem: location 1488 is 1011
9999 mem: location 1505 is 0
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 1011
9998 run: result 2 is 0
9999 mem: storing 1000 in location 1342
9999 mem: storing 1011 in location 1341
9999 mem: storing 0 in location 1347
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1573
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 4
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1180
9999 mem: storing 1180 in location 1394
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1342 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1573
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 4
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1342 is 1000
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1361
 105 run: jump-unless *undo, 
9999 mem: location 1361 is 1009
9999 mem: location 1009 is 1560
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1361 is 1009
9999 mem: location 1009 is 1560
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1560 in location 1571
 106 run: result <- get *in, value:offset
9999 mem: location 1571 is 1560
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1560 is 1549
9999 mem: location 1561 is 1547
9999 mem: location 1571 is 1560
9998 run: address to copy is 1560
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1560 is 1549
9999 mem: storing 1549 in location 1572
 106 run: reply result:_elem
9999 mem: location 1572 is 1549
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1549
9999 mem: storing 1549 in location 1360
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1360 is 1549
9999 mem: location 1549 is 1
9999 mem: location 1550 is 1
9999 mem: location 1551 is 3
9999 mem: location 1552 is 1180
9999 mem: location 1553 is 1
9999 mem: location 1554 is 3
9999 mem: location 1555 is 1180
9999 mem: location 1556 is 4
9999 mem: location 1557 is 0
9999 mem: location 1558 is 0
9999 mem: location 1559 is 0
9999 mem: location 1360 is 1549
9999 mem: storing 0 in location 1367
 105 run: jump-unless typing, 
9999 mem: location 1367 is 0
9998 run: jumping to instruction 429
 105 run: insert-from:address:shared:duplex-list:character <- next_2 cursor-before
9999 mem: location 1404 is 1516
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1516 in location 1571
 106 run: jump-if in, 1:offset
9999 mem: location 1571 is 1516
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1571 is 1516
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1516 is 48
9999 mem: location 1517 is 1573
9999 mem: location 1518 is 1186
9999 mem: location 1571 is 1516
9999 type: type deduced to be character$
9998 run: address to copy is 1517
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1517 is 1573
9999 mem: storing 1573 in location 1572
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1572 is 1573
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1573
9999 mem: storing 1573 in location 1368
 105 run: insert-to:address:shared:duplex-list:character <- next_2 insert-from
9999 mem: location 1368 is 1573
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1573 in location 1571
 106 run: jump-if in, 1:offset
9999 mem: location 1571 is 1573
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1571 is 1573
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1573 is 49
9999 mem: location 1574 is 0
9999 mem: location 1575 is 1516
9999 mem: location 1571 is 1573
9999 type: type deduced to be character$
9998 run: address to copy is 1574
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1574 is 0
9999 mem: storing 0 in location 1572
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1572 is 0
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1406
 105 run: op:address:shared:operation <- new operation:type
9999 mem: new alloc: 1576
9999 mem: storing 1576 in location 1360
 105 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1355 is 1
9999 mem: location 1356 is 3
9999 mem: location 1392 is 1180
9999 mem: location 1353 is 1006
9999 mem: location 1006 is 1
9999 mem: location 1354 is 1007
9999 mem: location 1007 is 4
9999 mem: location 1394 is 1180
9999 mem: location 1368 is 1573
9999 mem: location 1406 is 0
9999 mem: location 1360 is 1576
9999 mem: location 1360 is 1576
9999 mem: storing 0 in location 1576
9999 mem: storing 1 in location 1577
9999 mem: storing 3 in location 1578
9999 mem: storing 1180 in location 1579
9999 mem: storing 1 in location 1580
9999 mem: storing 4 in location 1581
9999 mem: storing 1180 in location 1582
9999 mem: storing 1573 in location 1583
9999 mem: storing 0 in location 1584
9999 mem: storing 1 in location 1585
 105 run: editor <- add-operation editor, op
9999 mem: location 1342 is 1000
9999 mem: location 1360 is 1576
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1333
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1576 in location 1334
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1333 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1573
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 4
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1560
9999 mem: location 1010 is 0
9999 mem: location 1333 is 1000
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1335
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1334 is 1576
9999 mem: location 1335 is 1009
9999 mem: location 1009 is 1560
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1576 in location 1219
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1560 in location 1220
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: new alloc: 1587
9999 mem: storing 1587 in location 1221
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1221 is 1587
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1587 is 0
9999 mem: location 1588 is 0
9999 mem: location 1221 is 1587
9998 run: address to copy is 1587
9999 mem: storing 1587 in location 1222
 107 run: *val <- copy x
9999 mem: location 1219 is 1576
9999 mem: location 1222 is 1587
9999 mem: storing 1576 in location 1587
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1221 is 1587
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1587 is 1576
9999 mem: location 1588 is 0
9999 mem: location 1221 is 1587
9999 type: type deduced to be address$
9998 run: address to copy is 1588
9999 mem: storing 1588 in location 1223
 107 run: *next <- copy in
9999 mem: location 1220 is 1560
9999 mem: location 1223 is 1588
9999 mem: storing 1560 in location 1588
 107 run: reply result
9999 mem: location 1221 is 1587
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1587
9999 mem: location 1335 is 1009
9999 mem: storing 1587 in location 1009
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1333 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1573
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 4
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1587
9999 mem: location 1010 is 0
9999 mem: location 1333 is 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1336
 106 run: *redo <- copy 0
9999 mem: location 1336 is 1010
9999 mem: storing 0 in location 1010
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1333 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1342
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1341 is 1011
9999 mem: location 1342 is 1000
9999 mem: location 1347 is 0
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: storing 1011 in location 1291
9999 mem: storing 1000 in location 1293
9999 mem: storing 0 in location 1303
 104 run: jump-unless go-render?, 
9999 mem: location 1303 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1293 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1573
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 4
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1587
9999 mem: location 1010 is 0
9999 mem: location 1293 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1294
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1293 is 1000
9999 mem: location 1000 is 1155
9999 mem: location 1001 is 1180
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1573
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 4
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1587
9999 mem: location 1010 is 0
9999 mem: location 1293 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 4
9999 mem: storing 4 in location 1295
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1291 is 1011
9999 mem: location 1294 is 1
9999 mem: location 1295 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1219
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1220
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1221
 105 run: jump-unless screen, 
9999 mem: location 1219 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1219 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1222
 105 run: *row <- copy new-row
9999 mem: location 1220 is 1
9999 mem: location 1222 is 1013
9999 mem: storing 1 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1219 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1223
 105 run: *column <- copy new-column
9999 mem: location 1221 is 4
9999 mem: location 1223 is 1014
9999 mem: storing 4 in location 1014
 105 run: reply screen:address:shared:screen
9999 mem: location 1219 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1291
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1292 is 1567
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1567 in location 1252
 105 run: jump-unless console, 
9999 mem: location 1252 is 1567
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1252 is 1567
9999 mem: location 1567 is 1
9999 mem: location 1568 is 1562
9999 mem: location 1252 is 1567
9998 run: address to copy is 1567
9999 mem: storing 1567 in location 1253
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1252 is 1567
9999 mem: location 1567 is 1
9999 mem: location 1568 is 1562
9999 mem: location 1252 is 1567
9998 run: address to copy is 1568
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1568 is 1562
9999 mem: storing 1562 in location 1254
 105 run: max:number <- length *buf
9999 mem: location 1254 is 1562
9999 mem: storing 1 in location 1255
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1253 is 1567
9999 mem: location 1567 is 1
9999 mem: location 1255 is 1
9999 mem: storing 1 in location 1256
 105 run: jump-unless done?, 
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: storing 1569 in location 1257
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1257 is 1569
9999 mem: location 1569 is 0
9999 mem: location 1570 is 0
9999 mem: location 1571 is 0
9999 mem: location 1572 is 0
9999 mem: location 1252 is 1567
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1567
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1296
9999 mem: storing 0 in location 1297
9999 mem: storing 0 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: storing 1567 in location 1292
9999 mem: storing 1 in location 1300
9999 mem: storing 1 in location 1301
 104 run: jump-unless found?, 
9999 mem: location 1300 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1301 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1291 is 1011
9999 mem: location 1292 is 1567
9999 mem: location 1293 is 1000
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .de01      .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
