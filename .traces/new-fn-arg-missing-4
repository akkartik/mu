schedule: main
run: main 0: (((test1)) ((34 literal)))
run: test1/main 0: (((4 integer)) <- ((next-input)))
arg: nil 0 (34)
run: test1/main 0: 34 => ((4 integer))
mem: ((4 integer)): 4 <= 34
run: test1/main 1: (((5 integer)) ((6 boolean)) <- ((next-input)))
arg: nil 1 (34)
run: test1/main 1: nil => ((5 integer))
mem: ((5 integer)): 5 <= nil
run: test1/main 1: nil => ((6 boolean))
mem: ((6 boolean)): 6 <= nil
run: test1/main 2: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: test1/main 3: (((5 integer)) <- ((copy)) ((1 literal)))
run: test1/main 3: 1 => ((5 integer))
mem: ((5 integer)): 5 <= 1
run: test1/main 4: (((7 integer)) <- ((add)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 34
mem: ((5 integer)) => 1
run: test1/main 4: 35 => ((7 integer))
mem: ((7 integer)): 7 <= 35
schedule: done with routine 
