schedule: main
run: -- nil
run: 1 main 0: (((1 integer)) <- ((copy)) ((34 literal)))
run: 34 => ((1 integer))
setm: ((1 integer)) <= 34
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 1 to 34
run: -- ((1 34))
run: 2 main 1: (((2 integer)) <- ((copy)) ((35 literal)))
run: 35 => ((2 integer))
setm: ((2 integer)) <= 35
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 2 to 35
run: -- ((1 34) (2 35))
run: 3 main 2: (((3 integer)) <- ((copy)) ((36 literal)))
run: 36 => ((3 integer))
setm: ((3 integer)) <= 36
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 3 to 36
run: -- ((1 34) (2 35) (3 36))
run: 4 main 3: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 4 to 0
run: -- ((1 34) (2 35) (3 36) (4 0))
run: 5 main 4: (((5 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5 to 0
run: -- ((1 34) (2 35) (3 36) (4 0) (5 0))
run: 6 main 5: (((6 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 6 to 0
run: -- ((1 34) (2 35) (3 36) (4 0) (5 0) (6 0))
run: 7 main 6: (((4 integer-point-pair)) <- ((copy)) ((1 integer-point-pair)))
m: ((1 integer-point-pair))
sizeof: ((1 integer-point-pair))
sizeof: ((_ integer))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: #(tagged record (34 35 36 . nil)) => ((4 integer-point-pair))
setm: ((4 integer-point-pair)) <= #(tagged record (34 35 36 . nil))
setm: size of ((4 integer-point-pair)) is 3
sizeof: ((4 integer-point-pair))
sizeof: ((_ integer))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
setm: ((4 integer-point-pair)): setting 4 to 34
setm: ((4 integer-point-pair)): setting 5 to 35
setm: ((4 integer-point-pair)): setting 6 to 36
schedule: done with routine
