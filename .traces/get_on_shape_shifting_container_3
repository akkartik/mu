9999 parse: container has type ingredients; parsing
9991 parse: --- defining container foo
9999 parse: type number: 1000
9993 parse:   element name: x
9999 parse:   type: 2000
9993 parse:   element name: y
9993 parse:   type: 1
9991 parse: --- defining main
9993 parse: instruction: merge
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"34": "literal"}
9993 parse:   ingredient: {"48": "literal"}
9993 parse:   product: {"1": <"foo" : <"address" : <"point" : <>>>>}
9992 load: after rewriting: 1:foo:address:point <- merge 34, 48
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"1": <"foo" : <"address" : <"point" : <>>>>}
9993 parse:   ingredient: {"x": "offset"}
9993 parse:   product: {"2": <"address" : <"point" : <>>>}
9992 load: after rewriting: 2:address:point <- get 1:foo:address:point, x:offset
9999 parse: recipe main has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9993 name: element x of type foo is at offset 0
9991 transform: --- resolve ambiguous calls for recipe main
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: merge ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: 1:foo:address:point <- merge 34, 48
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: storing 34 in location 1
9999 mem: storing 48 in location 2
 102 run: 2:address:point <- get 1:foo:address:point, x:offset
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1 is 34
9999 mem: location 2 is 48
9998 run: address to copy is 1
9998 run: its type is <address : <point : <>>>
9999 mem: location 1 is 34
9999 mem: storing 34 in location 2
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
