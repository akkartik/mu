9991 parse: --- defining container foo
9999 parse: type number: 1000
9993 parse:   element name: x
9993 parse:   type: 1
9993 parse:   element name: y
9993 parse:   type: 1
9991 parse: --- defining main
9993 parse: instruction: merge
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"3": "literal"}
9993 parse:   ingredient: {"4": "literal"}
9993 parse:   product: {"1": "foo"}
9992 load: after rewriting: 1:foo <- merge 3, 4
9999 parse: recipe main has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: merge ...
9991 transform: --- deduce types for recipe main
9991 transform: --- resolve ambiguous calls for recipe main
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- perform checks for recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: 1:foo <- merge 3, 4
9999 mem: storing 3 in location 1
9999 mem: storing 4 in location 2
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
