9991 load: --- defining f1
9993 parse: instruction: start-running
9993 parse:   ingredient: {"f2": "recipe"}
9992 load: after rewriting: start-running f2:recipe
9993 parse: instruction: copy
9993 parse:   ingredient: {"0": "literal"}
9993 parse:   product: {"1": "number"}
9992 load: after rewriting: 1:number <- copy 0
9993 parse: instruction: copy
9993 parse:   ingredient: {"0": "literal"}
9993 parse:   product: {"2": "number"}
9992 load: after rewriting: 2:number <- copy 0
9991 load: --- defining f2
9993 parse: instruction: copy
9993 parse:   ingredient: {"0": "literal"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- copy 0
9993 parse: instruction: copy
9993 parse:   ingredient: {"0": "literal"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- copy 0
9999 after-brace: recipe f1
9999 after-brace: start-running ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: recipe f2
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: f1
 102 run: start-running f2:recipe
9999 trace: new routine; incrementing callstack depth to 2
9999 new: routine allocated memory from 101000 to 201000
9999 schedule: f2
 103 run: 3:number <- copy 0
9999 mem: storing 0 in location 3
9999 schedule: f1
 103 run: 1:number <- copy 0
9999 mem: storing 0 in location 1
9999 schedule: f2
 103 run: 4:number <- copy 0
9999 mem: storing 0 in location 4
9999 schedule: f1
 103 run: 2:number <- copy 0
9999 mem: storing 0 in location 2
9999 schedule: f2
9999 trace: fall-through: exiting f2; decrementing callstack depth from 2
9999 schedule: f1
9999 trace: fall-through: exiting f1; decrementing callstack depth from 1
